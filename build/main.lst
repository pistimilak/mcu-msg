GAS LISTING /tmp/ccv2Tzkf.s 			page 1


   1              		.file	"main.c"
   2              		.text
   3              	.Ltext0:
   4              		.section	.rodata.main.str1.1,"aMS",@progbits,1
   5              	.LC0:
   6 0000 6F626A31 		.string	"obj1"
   6      00
   7              		.section	.rodata.main.str1.8,"aMS",@progbits,1
   8              		.align 8
   9              	.LC1:
  10 0000 6F626A31 		.string	"obj1.name_len: %d obj1.content_len: %d\n"
  10      2E6E616D 
  10      655F6C65 
  10      6E3A2025 
  10      64206F62 
  11              		.section	.rodata.main.str1.1
  12              	.LC2:
  13 0005 6F626A32 		.string	"obj2"
  13      00
  14              		.section	.rodata.main.str1.8
  15              		.align 8
  16              	.LC3:
  17 0028 6F626A32 		.string	"obj2.name_len: %d obj2.content_len: %d\n"
  17      2E6E616D 
  17      655F6C65 
  17      6E3A2025 
  17      64206F62 
  18              		.section	.rodata.main.str1.1
  19              	.LC5:
  20 000a 6B657931 		.string	"key11"
  20      3100
  21              	.LC6:
  22 0010 72203D20 		.string	"r = %d ival = %d\n"
  22      25642069 
  22      76616C20 
  22      3D202564 
  22      0A00
  23              	.LC7:
  24 0022 6B657932 		.string	"key21"
  24      3100
  25              	.LC8:
  26 0028 72203D20 		.string	"r = %d fval = %.11f\n"
  26      25642066 
  26      76616C20 
  26      3D20252E 
  26      3131660A 
  27              		.section	.text.main,"ax",@progbits
  28              		.globl	main
  30              	main:
  31              	.LFB56:
  32              		.file 1 "src/main.c"
   1:src/main.c    **** /**
   2:src/main.c    ****  * @file main.c
   3:src/main.c    ****  * @author Istvan Milak (istvan.milak@gmail.com)
   4:src/main.c    ****  * @brief 
   5:src/main.c    ****  * @version 0.1
   6:src/main.c    ****  * @date 2019-12-15
GAS LISTING /tmp/ccv2Tzkf.s 			page 2


   7:src/main.c    ****  * 
   8:src/main.c    ****  * @copyright Copyright (c) 2019
   9:src/main.c    ****  * 
  10:src/main.c    ****  */
  11:src/main.c    **** 
  12:src/main.c    **** #include <stdio.h>
  13:src/main.c    **** #include <stdlib.h>
  14:src/main.c    **** #include <string.h>
  15:src/main.c    **** #include "mcu_msg_parser.h"
  16:src/main.c    **** 
  17:src/main.c    **** 
  18:src/main.c    **** const char *test_str1 = "{@obj1($key11 =   -1123334567  ; $key12 = 123) @obj2  ($key21 =   -2.12345
  19:src/main.c    **** 
  20:src/main.c    **** int main()
  21:src/main.c    **** {
  33              		.loc 1 21 0
  34              		.cfi_startproc
  35 0000 4154     		pushq	%r12
  36              	.LCFI0:
  37              		.cfi_def_cfa_offset 16
  38              		.cfi_offset 12, -16
  39 0002 55       		pushq	%rbp
  40              	.LCFI1:
  41              		.cfi_def_cfa_offset 24
  42              		.cfi_offset 6, -24
  43 0003 53       		pushq	%rbx
  44              	.LCFI2:
  45              		.cfi_def_cfa_offset 32
  46              		.cfi_offset 3, -32
  47 0004 4883EC50 		subq	$80, %rsp
  48              	.LCFI3:
  49              		.cfi_def_cfa_offset 112
  50              		.loc 1 21 0
  51 0008 64488B04 		movq	%fs:40, %rax
  51      25280000 
  51      00
  52 0011 48894424 		movq	%rax, 72(%rsp)
  52      48
  53 0016 31C0     		xorl	%eax, %eax
  22:src/main.c    ****     int i;
  23:src/main.c    ****     // char *c = find_keyword(test_str1,strlen(test_str1), "key22", '$', '=');
  24:src/main.c    ****     // if (c != NULL)
  25:src/main.c    ****     //     printf("found: %s\n", c);
  26:src/main.c    ****     
  27:src/main.c    ****     mcu_msg_obj_t obj1, obj2;
  28:src/main.c    ****     obj1 = mcu_msg_parser_get_obj((char *)test_str1, "obj1", strlen(test_str1));
  54              		.loc 1 28 0
  55 0018 488B3500 		movq	test_str1(%rip), %rsi
  55      000000
  56 001f 48C7C1FF 		movq	$-1, %rcx
  56      FFFFFF
  57 0026 4889F7   		movq	%rsi, %rdi
  58 0029 F2AE     		repnz scasb
  59 002b 4889CA   		movq	%rcx, %rdx
  60 002e 48F7D2   		notq	%rdx
  61 0031 4889D1   		movq	%rdx, %rcx
  62 0034 4883E901 		subq	$1, %rcx
GAS LISTING /tmp/ccv2Tzkf.s 			page 3


  63 0038 0FB7C9   		movzwl	%cx, %ecx
  64 003b 488D7C24 		leaq	16(%rsp), %rdi
  64      10
  65 0040 488D1500 		leaq	.LC0(%rip), %rdx
  65      000000
  66 0047 E8000000 		call	mcu_msg_parser_get_obj@PLT
  66      00
  67              	.LVL0:
  29:src/main.c    **** 
  30:src/main.c    ****     printf("obj1.name_len: %d obj1.content_len: %d\n", obj1.name_len, obj1.content_len);
  68              		.loc 1 30 0
  69 004c 0FB76C24 		movzwl	34(%rsp), %ebp
  69      22
  70 0051 440FB764 		movzwl	32(%rsp), %r12d
  70      2420
  71              	.LVL1:
  72              	.LBB26:
  73              	.LBB27:
  74              		.file 2 "/usr/include/x86_64-linux-gnu/bits/stdio2.h"
   1:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** /* Checking macros for stdio functions.
   2:/usr/include/x86_64-linux-gnu/bits/stdio2.h ****    Copyright (C) 2004-2018 Free Software Foundation, Inc.
   3:/usr/include/x86_64-linux-gnu/bits/stdio2.h ****    This file is part of the GNU C Library.
   4:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** 
   5:/usr/include/x86_64-linux-gnu/bits/stdio2.h ****    The GNU C Library is free software; you can redistribute it and/or
   6:/usr/include/x86_64-linux-gnu/bits/stdio2.h ****    modify it under the terms of the GNU Lesser General Public
   7:/usr/include/x86_64-linux-gnu/bits/stdio2.h ****    License as published by the Free Software Foundation; either
   8:/usr/include/x86_64-linux-gnu/bits/stdio2.h ****    version 2.1 of the License, or (at your option) any later version.
   9:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** 
  10:/usr/include/x86_64-linux-gnu/bits/stdio2.h ****    The GNU C Library is distributed in the hope that it will be useful,
  11:/usr/include/x86_64-linux-gnu/bits/stdio2.h ****    but WITHOUT ANY WARRANTY; without even the implied warranty of
  12:/usr/include/x86_64-linux-gnu/bits/stdio2.h ****    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
  13:/usr/include/x86_64-linux-gnu/bits/stdio2.h ****    Lesser General Public License for more details.
  14:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** 
  15:/usr/include/x86_64-linux-gnu/bits/stdio2.h ****    You should have received a copy of the GNU Lesser General Public
  16:/usr/include/x86_64-linux-gnu/bits/stdio2.h ****    License along with the GNU C Library; if not, see
  17:/usr/include/x86_64-linux-gnu/bits/stdio2.h ****    <http://www.gnu.org/licenses/>.  */
  18:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** 
  19:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** #ifndef _STDIO_H
  20:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** # error "Never include <bits/stdio2.h> directly; use <stdio.h> instead."
  21:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** #endif
  22:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** 
  23:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** extern int __sprintf_chk (char *__restrict __s, int __flag, size_t __slen,
  24:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** 			  const char *__restrict __format, ...) __THROW;
  25:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** extern int __vsprintf_chk (char *__restrict __s, int __flag, size_t __slen,
  26:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** 			   const char *__restrict __format,
  27:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** 			   _G_va_list __ap) __THROW;
  28:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** 
  29:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** #ifdef __va_arg_pack
  30:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** __fortify_function int
  31:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** __NTH (sprintf (char *__restrict __s, const char *__restrict __fmt, ...))
  32:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** {
  33:/usr/include/x86_64-linux-gnu/bits/stdio2.h ****   return __builtin___sprintf_chk (__s, __USE_FORTIFY_LEVEL - 1,
  34:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** 				  __bos (__s), __fmt, __va_arg_pack ());
  35:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** }
  36:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** #elif !defined __cplusplus
  37:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** # define sprintf(str, ...) \
  38:/usr/include/x86_64-linux-gnu/bits/stdio2.h ****   __builtin___sprintf_chk (str, __USE_FORTIFY_LEVEL - 1, __bos (str), \
GAS LISTING /tmp/ccv2Tzkf.s 			page 4


  39:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** 			   __VA_ARGS__)
  40:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** #endif
  41:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** 
  42:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** __fortify_function int
  43:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** __NTH (vsprintf (char *__restrict __s, const char *__restrict __fmt,
  44:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** 		 _G_va_list __ap))
  45:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** {
  46:/usr/include/x86_64-linux-gnu/bits/stdio2.h ****   return __builtin___vsprintf_chk (__s, __USE_FORTIFY_LEVEL - 1,
  47:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** 				   __bos (__s), __fmt, __ap);
  48:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** }
  49:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** 
  50:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** #if defined __USE_ISOC99 || defined __USE_UNIX98
  51:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** 
  52:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** extern int __snprintf_chk (char *__restrict __s, size_t __n, int __flag,
  53:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** 			   size_t __slen, const char *__restrict __format,
  54:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** 			   ...) __THROW;
  55:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** extern int __vsnprintf_chk (char *__restrict __s, size_t __n, int __flag,
  56:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** 			    size_t __slen, const char *__restrict __format,
  57:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** 			    _G_va_list __ap) __THROW;
  58:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** 
  59:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** # ifdef __va_arg_pack
  60:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** __fortify_function int
  61:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** __NTH (snprintf (char *__restrict __s, size_t __n,
  62:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** 		 const char *__restrict __fmt, ...))
  63:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** {
  64:/usr/include/x86_64-linux-gnu/bits/stdio2.h ****   return __builtin___snprintf_chk (__s, __n, __USE_FORTIFY_LEVEL - 1,
  65:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** 				   __bos (__s), __fmt, __va_arg_pack ());
  66:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** }
  67:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** # elif !defined __cplusplus
  68:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** #  define snprintf(str, len, ...) \
  69:/usr/include/x86_64-linux-gnu/bits/stdio2.h ****   __builtin___snprintf_chk (str, len, __USE_FORTIFY_LEVEL - 1, __bos (str), \
  70:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** 			    __VA_ARGS__)
  71:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** # endif
  72:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** 
  73:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** __fortify_function int
  74:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** __NTH (vsnprintf (char *__restrict __s, size_t __n,
  75:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** 		  const char *__restrict __fmt, _G_va_list __ap))
  76:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** {
  77:/usr/include/x86_64-linux-gnu/bits/stdio2.h ****   return __builtin___vsnprintf_chk (__s, __n, __USE_FORTIFY_LEVEL - 1,
  78:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** 				    __bos (__s), __fmt, __ap);
  79:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** }
  80:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** 
  81:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** #endif
  82:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** 
  83:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** #if __USE_FORTIFY_LEVEL > 1
  84:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** 
  85:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** extern int __fprintf_chk (FILE *__restrict __stream, int __flag,
  86:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** 			  const char *__restrict __format, ...);
  87:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** extern int __printf_chk (int __flag, const char *__restrict __format, ...);
  88:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** extern int __vfprintf_chk (FILE *__restrict __stream, int __flag,
  89:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** 			   const char *__restrict __format, _G_va_list __ap);
  90:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** extern int __vprintf_chk (int __flag, const char *__restrict __format,
  91:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** 			  _G_va_list __ap);
  92:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** 
  93:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** # ifdef __va_arg_pack
  94:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** __fortify_function int
  95:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** fprintf (FILE *__restrict __stream, const char *__restrict __fmt, ...)
GAS LISTING /tmp/ccv2Tzkf.s 			page 5


  96:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** {
  97:/usr/include/x86_64-linux-gnu/bits/stdio2.h ****   return __fprintf_chk (__stream, __USE_FORTIFY_LEVEL - 1, __fmt,
  98:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** 			__va_arg_pack ());
  99:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** }
 100:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** 
 101:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** __fortify_function int
 102:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** printf (const char *__restrict __fmt, ...)
 103:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** {
 104:/usr/include/x86_64-linux-gnu/bits/stdio2.h ****   return __printf_chk (__USE_FORTIFY_LEVEL - 1, __fmt, __va_arg_pack ());
  75              		.loc 2 104 0
  76 0057 89E9     		movl	%ebp, %ecx
  77 0059 4489E2   		movl	%r12d, %edx
  78 005c 488D3500 		leaq	.LC1(%rip), %rsi
  78      000000
  79 0063 BF010000 		movl	$1, %edi
  79      00
  80 0068 B8000000 		movl	$0, %eax
  80      00
  81 006d E8000000 		call	__printf_chk@PLT
  81      00
  82              	.LVL2:
  83              	.LBE27:
  84              	.LBE26:
  31:src/main.c    ****     for(i = 0; i < obj1.name_len; printf("%c",*(obj1.name + i)), i++);
  85              		.loc 1 31 0
  86 0072 BB000000 		movl	$0, %ebx
  86      00
  87 0077 EB13     		jmp	.L2
  88              	.LVL3:
  89              	.L3:
  90              		.loc 1 31 0 is_stmt 0 discriminator 3
  91 0079 4863C3   		movslq	%ebx, %rax
  92 007c 48034424 		addq	16(%rsp), %rax
  92      10
  93 0081 0FBE38   		movsbl	(%rax), %edi
  94              	.LVL4:
  95              	.LBB28:
  96              	.LBB29:
  97              		.loc 2 104 0 is_stmt 1 discriminator 3
  98 0084 E8000000 		call	putchar@PLT
  98      00
  99              	.LVL5:
 100              	.LBE29:
 101              	.LBE28:
 102              		.loc 1 31 0 discriminator 3
 103 0089 83C301   		addl	$1, %ebx
 104              	.LVL6:
 105              	.L2:
 106              		.loc 1 31 0 is_stmt 0 discriminator 1
 107 008c 4139DC   		cmpl	%ebx, %r12d
 108 008f 7FE8     		jg	.L3
 109              	.LVL7:
 110              	.LBB30:
 111              	.LBB31:
 112              		.loc 2 104 0 is_stmt 1
 113 0091 BF3A0000 		movl	$58, %edi
 113      00
GAS LISTING /tmp/ccv2Tzkf.s 			page 6


 114 0096 E8000000 		call	putchar@PLT
 114      00
 115              	.LVL8:
 116              	.LBE31:
 117              	.LBE30:
  32:src/main.c    ****     printf(":");
  33:src/main.c    ****     for(i = 0; i < obj1.content_len; printf("%c",*(obj1.content + i)), i++);
 118              		.loc 1 33 0
 119 009b BB000000 		movl	$0, %ebx
 119      00
 120 00a0 EB13     		jmp	.L4
 121              	.LVL9:
 122              	.L5:
 123              		.loc 1 33 0 is_stmt 0 discriminator 3
 124 00a2 4863C3   		movslq	%ebx, %rax
 125 00a5 48034424 		addq	24(%rsp), %rax
 125      18
 126 00aa 0FBE38   		movsbl	(%rax), %edi
 127              	.LVL10:
 128              	.LBB32:
 129              	.LBB33:
 130              		.loc 2 104 0 is_stmt 1 discriminator 3
 131 00ad E8000000 		call	putchar@PLT
 131      00
 132              	.LVL11:
 133              	.LBE33:
 134              	.LBE32:
 135              		.loc 1 33 0 discriminator 3
 136 00b2 83C301   		addl	$1, %ebx
 137              	.LVL12:
 138              	.L4:
 139              		.loc 1 33 0 is_stmt 0 discriminator 1
 140 00b5 39DD     		cmpl	%ebx, %ebp
 141 00b7 7FE9     		jg	.L5
 142              	.LVL13:
 143              	.LBB34:
 144              	.LBB35:
 145              		.loc 2 104 0 is_stmt 1
 146 00b9 BF0A0000 		movl	$10, %edi
 146      00
 147 00be E8000000 		call	putchar@PLT
 147      00
 148              	.LVL14:
 149              	.LBE35:
 150              	.LBE34:
  34:src/main.c    ****     printf("\n");
  35:src/main.c    **** 
  36:src/main.c    **** 
  37:src/main.c    **** 
  38:src/main.c    ****     obj2 = mcu_msg_parser_get_obj((char *)test_str1, "obj2", strlen(test_str1));
 151              		.loc 1 38 0
 152 00c3 488B3500 		movq	test_str1(%rip), %rsi
 152      000000
 153 00ca 48C7C1FF 		movq	$-1, %rcx
 153      FFFFFF
 154 00d1 B8000000 		movl	$0, %eax
 154      00
GAS LISTING /tmp/ccv2Tzkf.s 			page 7


 155 00d6 4889F7   		movq	%rsi, %rdi
 156 00d9 F2AE     		repnz scasb
 157 00db 4889CA   		movq	%rcx, %rdx
 158 00de 48F7D2   		notq	%rdx
 159 00e1 4889D1   		movq	%rdx, %rcx
 160 00e4 4883E901 		subq	$1, %rcx
 161 00e8 0FB7C9   		movzwl	%cx, %ecx
 162 00eb 488D7C24 		leaq	48(%rsp), %rdi
 162      30
 163 00f0 488D1500 		leaq	.LC2(%rip), %rdx
 163      000000
 164 00f7 E8000000 		call	mcu_msg_parser_get_obj@PLT
 164      00
 165              	.LVL15:
  39:src/main.c    **** 
  40:src/main.c    ****     printf("obj2.name_len: %d obj2.content_len: %d\n", obj2.name_len, obj2.content_len);
 166              		.loc 1 40 0
 167 00fc 0FB76C24 		movzwl	66(%rsp), %ebp
 167      42
 168 0101 440FB764 		movzwl	64(%rsp), %r12d
 168      2440
 169              	.LVL16:
 170              	.LBB36:
 171              	.LBB37:
 172              		.loc 2 104 0
 173 0107 89E9     		movl	%ebp, %ecx
 174 0109 4489E2   		movl	%r12d, %edx
 175 010c 488D3500 		leaq	.LC3(%rip), %rsi
 175      000000
 176 0113 BF010000 		movl	$1, %edi
 176      00
 177 0118 B8000000 		movl	$0, %eax
 177      00
 178 011d E8000000 		call	__printf_chk@PLT
 178      00
 179              	.LVL17:
 180              	.LBE37:
 181              	.LBE36:
  41:src/main.c    ****     for(i = 0; i < obj2.name_len; printf("%c",*(obj2.name + i)), i++);
 182              		.loc 1 41 0
 183 0122 BB000000 		movl	$0, %ebx
 183      00
 184 0127 EB13     		jmp	.L6
 185              	.LVL18:
 186              	.L7:
 187              		.loc 1 41 0 is_stmt 0 discriminator 3
 188 0129 4863C3   		movslq	%ebx, %rax
 189 012c 48034424 		addq	48(%rsp), %rax
 189      30
 190 0131 0FBE38   		movsbl	(%rax), %edi
 191              	.LVL19:
 192              	.LBB38:
 193              	.LBB39:
 194              		.loc 2 104 0 is_stmt 1 discriminator 3
 195 0134 E8000000 		call	putchar@PLT
 195      00
 196              	.LVL20:
GAS LISTING /tmp/ccv2Tzkf.s 			page 8


 197              	.LBE39:
 198              	.LBE38:
 199              		.loc 1 41 0 discriminator 3
 200 0139 83C301   		addl	$1, %ebx
 201              	.LVL21:
 202              	.L6:
 203              		.loc 1 41 0 is_stmt 0 discriminator 1
 204 013c 4139DC   		cmpl	%ebx, %r12d
 205 013f 7FE8     		jg	.L7
 206              	.LVL22:
 207              	.LBB40:
 208              	.LBB41:
 209              		.loc 2 104 0 is_stmt 1
 210 0141 BF3A0000 		movl	$58, %edi
 210      00
 211 0146 E8000000 		call	putchar@PLT
 211      00
 212              	.LVL23:
 213              	.LBE41:
 214              	.LBE40:
  42:src/main.c    ****     printf(":");
  43:src/main.c    ****     for(i = 0; i < obj2.content_len; printf("%c",*(obj2.content + i)), i++);
 215              		.loc 1 43 0
 216 014b BB000000 		movl	$0, %ebx
 216      00
 217 0150 EB13     		jmp	.L8
 218              	.LVL24:
 219              	.L9:
 220              		.loc 1 43 0 is_stmt 0 discriminator 3
 221 0152 4863C3   		movslq	%ebx, %rax
 222 0155 48034424 		addq	56(%rsp), %rax
 222      38
 223 015a 0FBE38   		movsbl	(%rax), %edi
 224              	.LVL25:
 225              	.LBB42:
 226              	.LBB43:
 227              		.loc 2 104 0 is_stmt 1 discriminator 3
 228 015d E8000000 		call	putchar@PLT
 228      00
 229              	.LVL26:
 230              	.LBE43:
 231              	.LBE42:
 232              		.loc 1 43 0 discriminator 3
 233 0162 83C301   		addl	$1, %ebx
 234              	.LVL27:
 235              	.L8:
 236              		.loc 1 43 0 is_stmt 0 discriminator 1
 237 0165 39DD     		cmpl	%ebx, %ebp
 238 0167 7FE9     		jg	.L9
 239              	.LVL28:
 240              	.LBB44:
 241              	.LBB45:
 242              		.loc 2 104 0 is_stmt 1
 243 0169 BF0A0000 		movl	$10, %edi
 243      00
 244 016e E8000000 		call	putchar@PLT
 244      00
GAS LISTING /tmp/ccv2Tzkf.s 			page 9


 245              	.LVL29:
 246              	.LBE45:
 247              	.LBE44:
  44:src/main.c    ****     printf("\n");
  45:src/main.c    **** 
  46:src/main.c    ****     int ival = 0, res;
 248              		.loc 1 46 0
 249 0173 C7442408 		movl	$0, 8(%rsp)
 249      00000000 
  47:src/main.c    ****     float fval = 0.0;
 250              		.loc 1 47 0
 251 017b C744240C 		movl	$0x00000000, 12(%rsp)
 251      00000000 
  48:src/main.c    ****     res = mcu_msg_parser_get_int(&ival, obj1, "key11");
 252              		.loc 1 48 0
 253 0183 488D7C24 		leaq	8(%rsp), %rdi
 253      08
 254 0188 4883EC08 		subq	$8, %rsp
 255              	.LCFI4:
 256              		.cfi_def_cfa_offset 120
 257 018c FF742428 		pushq	40(%rsp)
 258              	.LCFI5:
 259              		.cfi_def_cfa_offset 128
 260 0190 FF742428 		pushq	40(%rsp)
 261              	.LCFI6:
 262              		.cfi_def_cfa_offset 136
 263 0194 FF742428 		pushq	40(%rsp)
 264              	.LCFI7:
 265              		.cfi_def_cfa_offset 144
 266 0198 488D3500 		leaq	.LC5(%rip), %rsi
 266      000000
 267 019f E8000000 		call	mcu_msg_parser_get_int@PLT
 267      00
 268              	.LVL30:
 269 01a4 0FBED0   		movsbl	%al, %edx
 270              	.LVL31:
 271              	.LBB46:
 272              	.LBB47:
 273              		.loc 2 104 0
 274 01a7 4883C420 		addq	$32, %rsp
 275              	.LCFI8:
 276              		.cfi_def_cfa_offset 112
 277 01ab 8B4C2408 		movl	8(%rsp), %ecx
 278 01af 488D3500 		leaq	.LC6(%rip), %rsi
 278      000000
 279 01b6 BF010000 		movl	$1, %edi
 279      00
 280 01bb B8000000 		movl	$0, %eax
 280      00
 281 01c0 E8000000 		call	__printf_chk@PLT
 281      00
 282              	.LVL32:
 283              	.LBE47:
 284              	.LBE46:
  49:src/main.c    ****     printf("r = %d ival = %d\n", res, ival);
  50:src/main.c    ****     
  51:src/main.c    ****     res = mcu_msg_parser_get_float(&fval, obj2, "key21");
GAS LISTING /tmp/ccv2Tzkf.s 			page 10


 285              		.loc 1 51 0
 286 01c5 488D7C24 		leaq	12(%rsp), %rdi
 286      0C
 287 01ca 4883EC08 		subq	$8, %rsp
 288              	.LCFI9:
 289              		.cfi_def_cfa_offset 120
 290 01ce FF742448 		pushq	72(%rsp)
 291              	.LCFI10:
 292              		.cfi_def_cfa_offset 128
 293 01d2 FF742448 		pushq	72(%rsp)
 294              	.LCFI11:
 295              		.cfi_def_cfa_offset 136
 296 01d6 FF742448 		pushq	72(%rsp)
 297              	.LCFI12:
 298              		.cfi_def_cfa_offset 144
 299 01da 488D3500 		leaq	.LC7(%rip), %rsi
 299      000000
 300 01e1 E8000000 		call	mcu_msg_parser_get_float@PLT
 300      00
 301              	.LVL33:
 302 01e6 0FBED0   		movsbl	%al, %edx
 303              	.LVL34:
  52:src/main.c    ****     printf("r = %d fval = %.11f\n", res, fval);
 304              		.loc 1 52 0
 305 01e9 660FEFC0 		pxor	%xmm0, %xmm0
 306 01ed F30F5A44 		cvtss2sd	44(%rsp), %xmm0
 306      242C
 307              	.LVL35:
 308              	.LBB48:
 309              	.LBB49:
 310              		.loc 2 104 0
 311 01f3 4883C420 		addq	$32, %rsp
 312              	.LCFI13:
 313              		.cfi_def_cfa_offset 112
 314 01f7 488D3500 		leaq	.LC8(%rip), %rsi
 314      000000
 315 01fe BF010000 		movl	$1, %edi
 315      00
 316 0203 B8010000 		movl	$1, %eax
 316      00
 317 0208 E8000000 		call	__printf_chk@PLT
 317      00
 318              	.LVL36:
 319              	.LBE49:
 320              	.LBE48:
  53:src/main.c    ****     return 0;
  54:src/main.c    **** }
 321              		.loc 1 54 0
 322 020d B8000000 		movl	$0, %eax
 322      00
 323 0212 488B5424 		movq	72(%rsp), %rdx
 323      48
 324 0217 64483314 		xorq	%fs:40, %rdx
 324      25280000 
 324      00
 325 0220 7509     		jne	.L12
 326 0222 4883C450 		addq	$80, %rsp
GAS LISTING /tmp/ccv2Tzkf.s 			page 11


 327              	.LCFI14:
 328              		.cfi_remember_state
 329              		.cfi_def_cfa_offset 32
 330 0226 5B       		popq	%rbx
 331              	.LCFI15:
 332              		.cfi_def_cfa_offset 24
 333              	.LVL37:
 334 0227 5D       		popq	%rbp
 335              	.LCFI16:
 336              		.cfi_def_cfa_offset 16
 337 0228 415C     		popq	%r12
 338              	.LCFI17:
 339              		.cfi_def_cfa_offset 8
 340 022a C3       		ret
 341              	.LVL38:
 342              	.L12:
 343              	.LCFI18:
 344              		.cfi_restore_state
 345 022b E8000000 		call	__stack_chk_fail@PLT
 345      00
 346              	.LVL39:
 347              		.cfi_endproc
 348              	.LFE56:
 350              		.globl	test_str1
 351              		.section	.rodata.str1.8,"aMS",@progbits,1
 352              		.align 8
 353              	.LC9:
 354 0000 7B406F62 		.string	"{@obj1($key11 =   -1123334567  ; $key12 = 123) @obj2  ($key21 =   -2.123456789; $key22   
 354      6A312824 
 354      6B657931 
 354      31203D20 
 354      20202D31 
 355              		.section	.data.rel.local.test_str1,"aw",@progbits
 356              		.align 8
 359              	test_str1:
 360 0000 00000000 		.quad	.LC9
 360      00000000 
 361              		.text
 362              	.Letext0:
 363              		.file 3 "/usr/lib/gcc/x86_64-linux-gnu/7/include/stddef.h"
 364              		.file 4 "/usr/include/x86_64-linux-gnu/bits/types.h"
 365              		.file 5 "/usr/include/x86_64-linux-gnu/bits/libio.h"
 366              		.file 6 "/usr/include/stdio.h"
 367              		.file 7 "/usr/include/x86_64-linux-gnu/bits/sys_errlist.h"
 368              		.file 8 "/usr/include/x86_64-linux-gnu/bits/stdint-uintn.h"
 369              		.file 9 "inc/mcu_msg_parser.h"
 370              		.file 10 "<built-in>"
GAS LISTING /tmp/ccv2Tzkf.s 			page 12


DEFINED SYMBOLS
                            *ABS*:0000000000000000 main.c
     /tmp/ccv2Tzkf.s:30     .text.main:0000000000000000 main
     /tmp/ccv2Tzkf.s:359    .data.rel.local.test_str1:0000000000000000 test_str1
     /tmp/ccv2Tzkf.s:5      .rodata.main.str1.1:0000000000000000 .LC0
     /tmp/ccv2Tzkf.s:9      .rodata.main.str1.8:0000000000000000 .LC1
     /tmp/ccv2Tzkf.s:12     .rodata.main.str1.1:0000000000000005 .LC2
     /tmp/ccv2Tzkf.s:16     .rodata.main.str1.8:0000000000000028 .LC3
     /tmp/ccv2Tzkf.s:19     .rodata.main.str1.1:000000000000000a .LC5
     /tmp/ccv2Tzkf.s:21     .rodata.main.str1.1:0000000000000010 .LC6
     /tmp/ccv2Tzkf.s:23     .rodata.main.str1.1:0000000000000022 .LC7
     /tmp/ccv2Tzkf.s:25     .rodata.main.str1.1:0000000000000028 .LC8

UNDEFINED SYMBOLS
_GLOBAL_OFFSET_TABLE_
mcu_msg_parser_get_obj
__printf_chk
putchar
mcu_msg_parser_get_int
mcu_msg_parser_get_float
__stack_chk_fail
