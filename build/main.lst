GAS LISTING /tmp/ccccU30j.s 			page 1


   1              		.file	"main.c"
   2              		.text
   3              	.Ltext0:
   4              		.section	.text.printf_mcu_msg_str,"ax",@progbits
   5              		.globl	printf_mcu_msg_str
   7              	printf_mcu_msg_str:
   8              	.LFB57:
   9              		.file 1 "src/main.c"
   1:src/main.c    **** /**
   2:src/main.c    ****  * @file main.c
   3:src/main.c    ****  * @author Istvan Milak (istvan.milak@gmail.com)
   4:src/main.c    ****  * @brief 
   5:src/main.c    ****  * @version 0.1
   6:src/main.c    ****  * @date 2019-12-15
   7:src/main.c    ****  * 
   8:src/main.c    ****  * @copyright Copyright (c) 2019
   9:src/main.c    ****  * 
  10:src/main.c    ****  */
  11:src/main.c    **** 
  12:src/main.c    **** #include <stdio.h>
  13:src/main.c    **** #include <stdlib.h>
  14:src/main.c    **** #include <string.h>
  15:src/main.c    **** #include "mcu_msg_parser.h"
  16:src/main.c    **** 
  17:src/main.c    **** /*string printer on i386*/
  18:src/main.c    **** void printf_mcu_msg_str(mcu_msg_string_t str);
  19:src/main.c    **** 
  20:src/main.c    **** const char *test_str1 = "#test_msg {!CMD1 @obj1($key11 =   -1123334567  ; $key12 = 'string \"value\
  21:src/main.c    **** 
  22:src/main.c    **** 
  23:src/main.c    **** int main()
  24:src/main.c    **** {
  25:src/main.c    **** 
  26:src/main.c    ****     
  27:src/main.c    ****     mcu_msg_t msg;
  28:src/main.c    ****     mcu_msg_obj_t obj1, obj2;
  29:src/main.c    ****     mcu_msg_string_hnd_t str_hnd = mcu_msg_string_hnd_create(printf_mcu_msg_str);
  30:src/main.c    **** 
  31:src/main.c    ****     printf("TEST mcu-msg-parser\n");
  32:src/main.c    ****     printf("-------------------\n");
  33:src/main.c    **** 
  34:src/main.c    ****     printf("test_str1 = \"%s\"\n\n", test_str1);
  35:src/main.c    **** 
  36:src/main.c    ****     printf(">> getting test_msg...\n");
  37:src/main.c    ****     msg = mcu_msg_get(test_str1, "test_msg", strlen(test_str1));
  38:src/main.c    ****     if(msg.content.s != NULL) {
  39:src/main.c    ****         printf("msg.id_len: %d msg.content_len: %d\n", msg.id.len, msg.content.len);
  40:src/main.c    ****         str_hnd.print(msg.id);
  41:src/main.c    ****         printf(":");
  42:src/main.c    ****         str_hnd.print(msg.content);
  43:src/main.c    ****         printf("\n\n");
  44:src/main.c    ****     } else {
  45:src/main.c    ****         printf("message not found!\n\n");
  46:src/main.c    ****     }
  47:src/main.c    **** 
  48:src/main.c    ****     //#############################################################################################
  49:src/main.c    ****     printf(">> getting obj1...\n");
GAS LISTING /tmp/ccccU30j.s 			page 2


  50:src/main.c    ****     obj1 = mcu_msg_parser_get_obj(msg, "obj1");
  51:src/main.c    ****     printf("obj1.id_len: %d obj1.content_len: %d\n", obj1.id.len, obj1.content.len);
  52:src/main.c    ****     str_hnd.print(obj1.id); printf(":"); str_hnd.print(obj1.content);
  53:src/main.c    ****     printf("\n\n");
  54:src/main.c    **** 
  55:src/main.c    ****     //#############################################################################################
  56:src/main.c    ****     printf(">> getting obj2...\n");
  57:src/main.c    ****     obj2 = mcu_msg_parser_get_obj(msg, "obj2");
  58:src/main.c    ****     printf("obj2.id_len: %d obj2.content_len: %d\n", obj2.id.len, obj2.content.len);
  59:src/main.c    ****     str_hnd.print(obj2.id); printf(":"); str_hnd.print(obj2.content);
  60:src/main.c    ****     printf("\n\n");
  61:src/main.c    ****     
  62:src/main.c    ****     //#############################################################################################
  63:src/main.c    ****     printf(">> getting obj1->key11 intiger...\n");
  64:src/main.c    ****     int ival = 0, res;
  65:src/main.c    ****     float fval = 0.0;
  66:src/main.c    ****     res = mcu_msg_parser_get_int(&ival, obj1, "key11");
  67:src/main.c    ****     printf("r = %d ival = %d\n\n", res, ival);
  68:src/main.c    ****     
  69:src/main.c    ****     //#############################################################################################
  70:src/main.c    ****     printf(">> getting obj2->key21 float...\n");
  71:src/main.c    ****     res = mcu_msg_parser_get_float(&fval, obj2, "key21");
  72:src/main.c    ****     printf("r = %d fval = %.11f\n\n", res, fval);
  73:src/main.c    **** 
  74:src/main.c    ****     //#############################################################################################
  75:src/main.c    ****     printf(">> getting obj1->key12 string...\n");
  76:src/main.c    ****     mcu_msg_string_t str = mcu_msg_parser_get_string(obj1, "key12");
  77:src/main.c    ****     if(str.s != NULL) {
  78:src/main.c    ****         str_hnd.print(str); printf("\n\n");
  79:src/main.c    ****     } else {
  80:src/main.c    ****         printf("error getting string\n\n");
  81:src/main.c    ****     }
  82:src/main.c    ****     
  83:src/main.c    ****     return 0;
  84:src/main.c    **** }
  85:src/main.c    **** 
  86:src/main.c    **** void printf_mcu_msg_str(mcu_msg_string_t str)
  87:src/main.c    **** {
  10              		.loc 1 87 0
  11              		.cfi_startproc
  12              	.LVL0:
  13 0000 4154     		pushq	%r12
  14              	.LCFI0:
  15              		.cfi_def_cfa_offset 16
  16              		.cfi_offset 12, -16
  17 0002 55       		pushq	%rbp
  18              	.LCFI1:
  19              		.cfi_def_cfa_offset 24
  20              		.cfi_offset 6, -24
  21 0003 53       		pushq	%rbx
  22              	.LCFI2:
  23              		.cfi_def_cfa_offset 32
  24              		.cfi_offset 3, -32
  25 0004 4989FC   		movq	%rdi, %r12
  26 0007 4889F5   		movq	%rsi, %rbp
  27              	.LVL1:
  88:src/main.c    ****     mcu_msg_size_t i;
GAS LISTING /tmp/ccccU30j.s 			page 3


  89:src/main.c    ****     for(i = 0; i < str.len; printf("%c", *(str.s + i++)));
  28              		.loc 1 89 0
  29 000a B8000000 		movl	$0, %eax
  29      00
  30 000f EB12     		jmp	.L2
  31              	.LVL2:
  32              	.L3:
  33              		.loc 1 89 0 is_stmt 0 discriminator 3
  34 0011 8D5801   		leal	1(%rax), %ebx
  35              	.LVL3:
  36 0014 0FB7C0   		movzwl	%ax, %eax
  37 0017 410FBE3C 		movsbl	(%r12,%rax), %edi
  37      04
  38              	.LVL4:
  39              	.LBB50:
  40              	.LBB51:
  41              		.file 2 "/usr/include/x86_64-linux-gnu/bits/stdio2.h"
   1:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** /* Checking macros for stdio functions.
   2:/usr/include/x86_64-linux-gnu/bits/stdio2.h ****    Copyright (C) 2004-2018 Free Software Foundation, Inc.
   3:/usr/include/x86_64-linux-gnu/bits/stdio2.h ****    This file is part of the GNU C Library.
   4:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** 
   5:/usr/include/x86_64-linux-gnu/bits/stdio2.h ****    The GNU C Library is free software; you can redistribute it and/or
   6:/usr/include/x86_64-linux-gnu/bits/stdio2.h ****    modify it under the terms of the GNU Lesser General Public
   7:/usr/include/x86_64-linux-gnu/bits/stdio2.h ****    License as published by the Free Software Foundation; either
   8:/usr/include/x86_64-linux-gnu/bits/stdio2.h ****    version 2.1 of the License, or (at your option) any later version.
   9:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** 
  10:/usr/include/x86_64-linux-gnu/bits/stdio2.h ****    The GNU C Library is distributed in the hope that it will be useful,
  11:/usr/include/x86_64-linux-gnu/bits/stdio2.h ****    but WITHOUT ANY WARRANTY; without even the implied warranty of
  12:/usr/include/x86_64-linux-gnu/bits/stdio2.h ****    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
  13:/usr/include/x86_64-linux-gnu/bits/stdio2.h ****    Lesser General Public License for more details.
  14:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** 
  15:/usr/include/x86_64-linux-gnu/bits/stdio2.h ****    You should have received a copy of the GNU Lesser General Public
  16:/usr/include/x86_64-linux-gnu/bits/stdio2.h ****    License along with the GNU C Library; if not, see
  17:/usr/include/x86_64-linux-gnu/bits/stdio2.h ****    <http://www.gnu.org/licenses/>.  */
  18:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** 
  19:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** #ifndef _STDIO_H
  20:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** # error "Never include <bits/stdio2.h> directly; use <stdio.h> instead."
  21:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** #endif
  22:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** 
  23:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** extern int __sprintf_chk (char *__restrict __s, int __flag, size_t __slen,
  24:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** 			  const char *__restrict __format, ...) __THROW;
  25:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** extern int __vsprintf_chk (char *__restrict __s, int __flag, size_t __slen,
  26:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** 			   const char *__restrict __format,
  27:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** 			   _G_va_list __ap) __THROW;
  28:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** 
  29:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** #ifdef __va_arg_pack
  30:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** __fortify_function int
  31:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** __NTH (sprintf (char *__restrict __s, const char *__restrict __fmt, ...))
  32:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** {
  33:/usr/include/x86_64-linux-gnu/bits/stdio2.h ****   return __builtin___sprintf_chk (__s, __USE_FORTIFY_LEVEL - 1,
  34:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** 				  __bos (__s), __fmt, __va_arg_pack ());
  35:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** }
  36:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** #elif !defined __cplusplus
  37:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** # define sprintf(str, ...) \
  38:/usr/include/x86_64-linux-gnu/bits/stdio2.h ****   __builtin___sprintf_chk (str, __USE_FORTIFY_LEVEL - 1, __bos (str), \
  39:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** 			   __VA_ARGS__)
  40:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** #endif
GAS LISTING /tmp/ccccU30j.s 			page 4


  41:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** 
  42:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** __fortify_function int
  43:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** __NTH (vsprintf (char *__restrict __s, const char *__restrict __fmt,
  44:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** 		 _G_va_list __ap))
  45:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** {
  46:/usr/include/x86_64-linux-gnu/bits/stdio2.h ****   return __builtin___vsprintf_chk (__s, __USE_FORTIFY_LEVEL - 1,
  47:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** 				   __bos (__s), __fmt, __ap);
  48:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** }
  49:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** 
  50:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** #if defined __USE_ISOC99 || defined __USE_UNIX98
  51:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** 
  52:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** extern int __snprintf_chk (char *__restrict __s, size_t __n, int __flag,
  53:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** 			   size_t __slen, const char *__restrict __format,
  54:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** 			   ...) __THROW;
  55:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** extern int __vsnprintf_chk (char *__restrict __s, size_t __n, int __flag,
  56:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** 			    size_t __slen, const char *__restrict __format,
  57:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** 			    _G_va_list __ap) __THROW;
  58:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** 
  59:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** # ifdef __va_arg_pack
  60:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** __fortify_function int
  61:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** __NTH (snprintf (char *__restrict __s, size_t __n,
  62:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** 		 const char *__restrict __fmt, ...))
  63:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** {
  64:/usr/include/x86_64-linux-gnu/bits/stdio2.h ****   return __builtin___snprintf_chk (__s, __n, __USE_FORTIFY_LEVEL - 1,
  65:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** 				   __bos (__s), __fmt, __va_arg_pack ());
  66:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** }
  67:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** # elif !defined __cplusplus
  68:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** #  define snprintf(str, len, ...) \
  69:/usr/include/x86_64-linux-gnu/bits/stdio2.h ****   __builtin___snprintf_chk (str, len, __USE_FORTIFY_LEVEL - 1, __bos (str), \
  70:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** 			    __VA_ARGS__)
  71:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** # endif
  72:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** 
  73:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** __fortify_function int
  74:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** __NTH (vsnprintf (char *__restrict __s, size_t __n,
  75:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** 		  const char *__restrict __fmt, _G_va_list __ap))
  76:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** {
  77:/usr/include/x86_64-linux-gnu/bits/stdio2.h ****   return __builtin___vsnprintf_chk (__s, __n, __USE_FORTIFY_LEVEL - 1,
  78:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** 				    __bos (__s), __fmt, __ap);
  79:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** }
  80:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** 
  81:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** #endif
  82:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** 
  83:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** #if __USE_FORTIFY_LEVEL > 1
  84:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** 
  85:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** extern int __fprintf_chk (FILE *__restrict __stream, int __flag,
  86:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** 			  const char *__restrict __format, ...);
  87:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** extern int __printf_chk (int __flag, const char *__restrict __format, ...);
  88:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** extern int __vfprintf_chk (FILE *__restrict __stream, int __flag,
  89:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** 			   const char *__restrict __format, _G_va_list __ap);
  90:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** extern int __vprintf_chk (int __flag, const char *__restrict __format,
  91:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** 			  _G_va_list __ap);
  92:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** 
  93:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** # ifdef __va_arg_pack
  94:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** __fortify_function int
  95:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** fprintf (FILE *__restrict __stream, const char *__restrict __fmt, ...)
  96:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** {
  97:/usr/include/x86_64-linux-gnu/bits/stdio2.h ****   return __fprintf_chk (__stream, __USE_FORTIFY_LEVEL - 1, __fmt,
GAS LISTING /tmp/ccccU30j.s 			page 5


  98:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** 			__va_arg_pack ());
  99:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** }
 100:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** 
 101:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** __fortify_function int
 102:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** printf (const char *__restrict __fmt, ...)
 103:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** {
 104:/usr/include/x86_64-linux-gnu/bits/stdio2.h ****   return __printf_chk (__USE_FORTIFY_LEVEL - 1, __fmt, __va_arg_pack ());
  42              		.loc 2 104 0 is_stmt 1 discriminator 3
  43 001c E8000000 		call	putchar@PLT
  43      00
  44              	.LVL5:
  45              	.LBE51:
  46              	.LBE50:
  47              		.loc 1 89 0 discriminator 3
  48 0021 89D8     		movl	%ebx, %eax
  49              	.LVL6:
  50              	.L2:
  51              		.loc 1 89 0 is_stmt 0 discriminator 1
  52 0023 6639C5   		cmpw	%ax, %bp
  53 0026 77E9     		ja	.L3
  90:src/main.c    **** }
  54              		.loc 1 90 0 is_stmt 1
  55 0028 5B       		popq	%rbx
  56              	.LCFI3:
  57              		.cfi_def_cfa_offset 24
  58 0029 5D       		popq	%rbp
  59              	.LCFI4:
  60              		.cfi_def_cfa_offset 16
  61 002a 415C     		popq	%r12
  62              	.LCFI5:
  63              		.cfi_def_cfa_offset 8
  64 002c C3       		ret
  65              		.cfi_endproc
  66              	.LFE57:
  68              		.section	.rodata.main.str1.1,"aMS",@progbits,1
  69              	.LC0:
  70 0000 54455354 		.string	"TEST mcu-msg-parser"
  70      206D6375 
  70      2D6D7367 
  70      2D706172 
  70      73657200 
  71              	.LC1:
  72 0014 2D2D2D2D 		.string	"-------------------"
  72      2D2D2D2D 
  72      2D2D2D2D 
  72      2D2D2D2D 
  72      2D2D2D00 
  73              	.LC2:
  74 0028 74657374 		.string	"test_str1 = \"%s\"\n\n"
  74      5F737472 
  74      31203D20 
  74      22257322 
  74      0A0A00
  75              	.LC3:
  76 003b 3E3E2067 		.string	">> getting test_msg..."
  76      65747469 
  76      6E672074 
GAS LISTING /tmp/ccccU30j.s 			page 6


  76      6573745F 
  76      6D73672E 
  77              	.LC4:
  78 0052 74657374 		.string	"test_msg"
  78      5F6D7367 
  78      00
  79              		.section	.rodata.main.str1.8,"aMS",@progbits,1
  80              		.align 8
  81              	.LC5:
  82 0000 6D73672E 		.string	"msg.id_len: %d msg.content_len: %d\n"
  82      69645F6C 
  82      656E3A20 
  82      2564206D 
  82      73672E63 
  83              		.section	.rodata.main.str1.1
  84              	.LC6:
  85 005b 0A00     		.string	"\n"
  86              	.LC7:
  87 005d 6D657373 		.string	"message not found!\n"
  87      61676520 
  87      6E6F7420 
  87      666F756E 
  87      64210A00 
  88              	.LC8:
  89 0071 3E3E2067 		.string	">> getting obj1..."
  89      65747469 
  89      6E67206F 
  89      626A312E 
  89      2E2E00
  90              	.LC9:
  91 0084 6F626A31 		.string	"obj1"
  91      00
  92              		.section	.rodata.main.str1.8
  93 0024 00000000 		.align 8
  94              	.LC10:
  95 0028 6F626A31 		.string	"obj1.id_len: %d obj1.content_len: %d\n"
  95      2E69645F 
  95      6C656E3A 
  95      20256420 
  95      6F626A31 
  96              		.section	.rodata.main.str1.1
  97              	.LC11:
  98 0089 3E3E2067 		.string	">> getting obj2..."
  98      65747469 
  98      6E67206F 
  98      626A322E 
  98      2E2E00
  99              	.LC12:
 100 009c 6F626A32 		.string	"obj2"
 100      00
 101              		.section	.rodata.main.str1.8
 102 004e 0000     		.align 8
 103              	.LC13:
 104 0050 6F626A32 		.string	"obj2.id_len: %d obj2.content_len: %d\n"
 104      2E69645F 
 104      6C656E3A 
 104      20256420 
GAS LISTING /tmp/ccccU30j.s 			page 7


 104      6F626A32 
 105 0076 0000     		.align 8
 106              	.LC14:
 107 0078 3E3E2067 		.string	">> getting obj1->key11 intiger..."
 107      65747469 
 107      6E67206F 
 107      626A312D 
 107      3E6B6579 
 108              		.section	.rodata.main.str1.1
 109              	.LC16:
 110 00a1 6B657931 		.string	"key11"
 110      3100
 111              	.LC17:
 112 00a7 72203D20 		.string	"r = %d ival = %d\n\n"
 112      25642069 
 112      76616C20 
 112      3D202564 
 112      0A0A00
 113              		.section	.rodata.main.str1.8
 114 009a 00000000 		.align 8
 114      0000
 115              	.LC18:
 116 00a0 3E3E2067 		.string	">> getting obj2->key21 float..."
 116      65747469 
 116      6E67206F 
 116      626A322D 
 116      3E6B6579 
 117              		.section	.rodata.main.str1.1
 118              	.LC19:
 119 00ba 6B657932 		.string	"key21"
 119      3100
 120              	.LC20:
 121 00c0 72203D20 		.string	"r = %d fval = %.11f\n\n"
 121      25642066 
 121      76616C20 
 121      3D20252E 
 121      3131660A 
 122              		.section	.rodata.main.str1.8
 123              		.align 8
 124              	.LC21:
 125 00c0 3E3E2067 		.string	">> getting obj1->key12 string..."
 125      65747469 
 125      6E67206F 
 125      626A312D 
 125      3E6B6579 
 126              		.section	.rodata.main.str1.1
 127              	.LC22:
 128 00d6 6B657931 		.string	"key12"
 128      3200
 129              	.LC23:
 130 00dc 6572726F 		.string	"error getting string\n"
 130      72206765 
 130      7474696E 
 130      67207374 
 130      72696E67 
 131              		.section	.text.main,"ax",@progbits
 132              		.globl	main
GAS LISTING /tmp/ccccU30j.s 			page 8


 134              	main:
 135              	.LFB56:
  24:src/main.c    **** 
 136              		.loc 1 24 0
 137              		.cfi_startproc
 138 0000 53       		pushq	%rbx
 139              	.LCFI6:
 140              		.cfi_def_cfa_offset 16
 141              		.cfi_offset 3, -16
 142 0001 4883C480 		addq	$-128, %rsp
 143              	.LCFI7:
 144              		.cfi_def_cfa_offset 144
  24:src/main.c    **** 
 145              		.loc 1 24 0
 146 0005 64488B04 		movq	%fs:40, %rax
 146      25280000 
 146      00
 147 000e 48894424 		movq	%rax, 120(%rsp)
 147      78
 148 0013 31C0     		xorl	%eax, %eax
  29:src/main.c    **** 
 149              		.loc 1 29 0
 150 0015 488D3D00 		leaq	printf_mcu_msg_str(%rip), %rdi
 150      000000
 151 001c E8000000 		call	mcu_msg_string_hnd_create@PLT
 151      00
 152              	.LVL7:
 153 0021 4889D3   		movq	%rdx, %rbx
 154              	.LVL8:
 155              	.LBB52:
 156              	.LBB53:
 157              		.loc 2 104 0
 158 0024 488D3D00 		leaq	.LC0(%rip), %rdi
 158      000000
 159 002b E8000000 		call	puts@PLT
 159      00
 160              	.LVL9:
 161              	.LBE53:
 162              	.LBE52:
 163              	.LBB54:
 164              	.LBB55:
 165 0030 488D3D00 		leaq	.LC1(%rip), %rdi
 165      000000
 166 0037 E8000000 		call	puts@PLT
 166      00
 167              	.LVL10:
 168              	.LBE55:
 169              	.LBE54:
 170              	.LBB56:
 171              	.LBB57:
 172 003c 488B1500 		movq	test_str1(%rip), %rdx
 172      000000
 173 0043 488D3500 		leaq	.LC2(%rip), %rsi
 173      000000
 174 004a BF010000 		movl	$1, %edi
 174      00
 175 004f B8000000 		movl	$0, %eax
GAS LISTING /tmp/ccccU30j.s 			page 9


 175      00
 176 0054 E8000000 		call	__printf_chk@PLT
 176      00
 177              	.LVL11:
 178              	.LBE57:
 179              	.LBE56:
 180              	.LBB58:
 181              	.LBB59:
 182 0059 488D3D00 		leaq	.LC3(%rip), %rdi
 182      000000
 183 0060 E8000000 		call	puts@PLT
 183      00
 184              	.LVL12:
 185              	.LBE59:
 186              	.LBE58:
  37:src/main.c    ****     if(msg.content.s != NULL) {
 187              		.loc 1 37 0
 188 0065 488B3500 		movq	test_str1(%rip), %rsi
 188      000000
 189 006c 48C7C1FF 		movq	$-1, %rcx
 189      FFFFFF
 190 0073 B8000000 		movl	$0, %eax
 190      00
 191 0078 4889F7   		movq	%rsi, %rdi
 192 007b F2AE     		repnz scasb
 193 007d 48F7D1   		notq	%rcx
 194 0080 4883E901 		subq	$1, %rcx
 195 0084 0FB7C9   		movzwl	%cx, %ecx
 196 0087 488D7C24 		leaq	16(%rsp), %rdi
 196      10
 197 008c 488D1500 		leaq	.LC4(%rip), %rdx
 197      000000
 198 0093 E8000000 		call	mcu_msg_get@PLT
 198      00
 199              	.LVL13:
  38:src/main.c    ****         printf("msg.id_len: %d msg.content_len: %d\n", msg.id.len, msg.content.len);
 200              		.loc 1 38 0
 201 0098 48837C24 		cmpq	$0, 32(%rsp)
 201      2000
 202 009e 0F846102 		je	.L6
 202      0000
  39:src/main.c    ****         str_hnd.print(msg.id);
 203              		.loc 1 39 0
 204 00a4 0FB74C24 		movzwl	40(%rsp), %ecx
 204      28
 205 00a9 0FB75424 		movzwl	24(%rsp), %edx
 205      18
 206              	.LVL14:
 207              	.LBB60:
 208              	.LBB61:
 209              		.loc 2 104 0
 210 00ae 488D3500 		leaq	.LC5(%rip), %rsi
 210      000000
 211 00b5 BF010000 		movl	$1, %edi
 211      00
 212 00ba B8000000 		movl	$0, %eax
 212      00
GAS LISTING /tmp/ccccU30j.s 			page 10


 213 00bf E8000000 		call	__printf_chk@PLT
 213      00
 214              	.LVL15:
 215              	.LBE61:
 216              	.LBE60:
  40:src/main.c    ****         printf(":");
 217              		.loc 1 40 0
 218 00c4 488B7C24 		movq	16(%rsp), %rdi
 218      10
 219 00c9 488B7424 		movq	24(%rsp), %rsi
 219      18
 220 00ce FFD3     		call	*%rbx
 221              	.LVL16:
 222              	.LBB62:
 223              	.LBB63:
 224              		.loc 2 104 0
 225 00d0 BF3A0000 		movl	$58, %edi
 225      00
 226 00d5 E8000000 		call	putchar@PLT
 226      00
 227              	.LVL17:
 228              	.LBE63:
 229              	.LBE62:
  42:src/main.c    ****         printf("\n\n");
 230              		.loc 1 42 0
 231 00da 488B7C24 		movq	32(%rsp), %rdi
 231      20
 232 00df 488B7424 		movq	40(%rsp), %rsi
 232      28
 233 00e4 FFD3     		call	*%rbx
 234              	.LVL18:
 235              	.LBB64:
 236              	.LBB65:
 237              		.loc 2 104 0
 238 00e6 488D3D00 		leaq	.LC6(%rip), %rdi
 238      000000
 239 00ed E8000000 		call	puts@PLT
 239      00
 240              	.LVL19:
 241              	.L7:
 242              	.LBE65:
 243              	.LBE64:
 244              	.LBB66:
 245              	.LBB67:
 246 00f2 488D3D00 		leaq	.LC8(%rip), %rdi
 246      000000
 247 00f9 E8000000 		call	puts@PLT
 247      00
 248              	.LVL20:
 249              	.LBE67:
 250              	.LBE66:
  50:src/main.c    ****     printf("obj1.id_len: %d obj1.content_len: %d\n", obj1.id.len, obj1.content.len);
 251              		.loc 1 50 0
 252 00fe 488D7C24 		leaq	48(%rsp), %rdi
 252      30
 253 0103 FF742428 		pushq	40(%rsp)
 254              	.LCFI8:
GAS LISTING /tmp/ccccU30j.s 			page 11


 255              		.cfi_def_cfa_offset 152
 256 0107 FF742428 		pushq	40(%rsp)
 257              	.LCFI9:
 258              		.cfi_def_cfa_offset 160
 259 010b FF742428 		pushq	40(%rsp)
 260              	.LCFI10:
 261              		.cfi_def_cfa_offset 168
 262 010f FF742428 		pushq	40(%rsp)
 263              	.LCFI11:
 264              		.cfi_def_cfa_offset 176
 265 0113 488D3500 		leaq	.LC9(%rip), %rsi
 265      000000
 266 011a E8000000 		call	mcu_msg_parser_get_obj@PLT
 266      00
 267              	.LVL21:
  51:src/main.c    ****     str_hnd.print(obj1.id); printf(":"); str_hnd.print(obj1.content);
 268              		.loc 1 51 0
 269 011f 0FB74C24 		movzwl	104(%rsp), %ecx
 269      68
 270 0124 0FB75424 		movzwl	88(%rsp), %edx
 270      58
 271              	.LVL22:
 272              	.LBB68:
 273              	.LBB69:
 274              		.loc 2 104 0
 275 0129 4883C420 		addq	$32, %rsp
 276              	.LCFI12:
 277              		.cfi_def_cfa_offset 144
 278 012d 488D3500 		leaq	.LC10(%rip), %rsi
 278      000000
 279 0134 BF010000 		movl	$1, %edi
 279      00
 280 0139 B8000000 		movl	$0, %eax
 280      00
 281 013e E8000000 		call	__printf_chk@PLT
 281      00
 282              	.LVL23:
 283              	.LBE69:
 284              	.LBE68:
  52:src/main.c    ****     printf("\n\n");
 285              		.loc 1 52 0
 286 0143 488B7C24 		movq	48(%rsp), %rdi
 286      30
 287 0148 488B7424 		movq	56(%rsp), %rsi
 287      38
 288 014d FFD3     		call	*%rbx
 289              	.LVL24:
 290              	.LBB70:
 291              	.LBB71:
 292              		.loc 2 104 0
 293 014f BF3A0000 		movl	$58, %edi
 293      00
 294 0154 E8000000 		call	putchar@PLT
 294      00
 295              	.LVL25:
 296              	.LBE71:
 297              	.LBE70:
GAS LISTING /tmp/ccccU30j.s 			page 12


  52:src/main.c    ****     printf("\n\n");
 298              		.loc 1 52 0
 299 0159 488B7C24 		movq	64(%rsp), %rdi
 299      40
 300 015e 488B7424 		movq	72(%rsp), %rsi
 300      48
 301 0163 FFD3     		call	*%rbx
 302              	.LVL26:
 303              	.LBB72:
 304              	.LBB73:
 305              		.loc 2 104 0
 306 0165 488D3D00 		leaq	.LC6(%rip), %rdi
 306      000000
 307 016c E8000000 		call	puts@PLT
 307      00
 308              	.LVL27:
 309              	.LBE73:
 310              	.LBE72:
 311              	.LBB74:
 312              	.LBB75:
 313 0171 488D3D00 		leaq	.LC11(%rip), %rdi
 313      000000
 314 0178 E8000000 		call	puts@PLT
 314      00
 315              	.LVL28:
 316              	.LBE75:
 317              	.LBE74:
  57:src/main.c    ****     printf("obj2.id_len: %d obj2.content_len: %d\n", obj2.id.len, obj2.content.len);
 318              		.loc 1 57 0
 319 017d 488D7C24 		leaq	80(%rsp), %rdi
 319      50
 320 0182 FF742428 		pushq	40(%rsp)
 321              	.LCFI13:
 322              		.cfi_def_cfa_offset 152
 323 0186 FF742428 		pushq	40(%rsp)
 324              	.LCFI14:
 325              		.cfi_def_cfa_offset 160
 326 018a FF742428 		pushq	40(%rsp)
 327              	.LCFI15:
 328              		.cfi_def_cfa_offset 168
 329 018e FF742428 		pushq	40(%rsp)
 330              	.LCFI16:
 331              		.cfi_def_cfa_offset 176
 332 0192 488D3500 		leaq	.LC12(%rip), %rsi
 332      000000
 333 0199 E8000000 		call	mcu_msg_parser_get_obj@PLT
 333      00
 334              	.LVL29:
  58:src/main.c    ****     str_hnd.print(obj2.id); printf(":"); str_hnd.print(obj2.content);
 335              		.loc 1 58 0
 336 019e 0FB78C24 		movzwl	136(%rsp), %ecx
 336      88000000 
 337 01a6 0FB75424 		movzwl	120(%rsp), %edx
 337      78
 338              	.LVL30:
 339              	.LBB76:
 340              	.LBB77:
GAS LISTING /tmp/ccccU30j.s 			page 13


 341              		.loc 2 104 0
 342 01ab 4883C420 		addq	$32, %rsp
 343              	.LCFI17:
 344              		.cfi_def_cfa_offset 144
 345 01af 488D3500 		leaq	.LC13(%rip), %rsi
 345      000000
 346 01b6 BF010000 		movl	$1, %edi
 346      00
 347 01bb B8000000 		movl	$0, %eax
 347      00
 348 01c0 E8000000 		call	__printf_chk@PLT
 348      00
 349              	.LVL31:
 350              	.LBE77:
 351              	.LBE76:
  59:src/main.c    ****     printf("\n\n");
 352              		.loc 1 59 0
 353 01c5 488B7C24 		movq	80(%rsp), %rdi
 353      50
 354 01ca 488B7424 		movq	88(%rsp), %rsi
 354      58
 355 01cf FFD3     		call	*%rbx
 356              	.LVL32:
 357              	.LBB78:
 358              	.LBB79:
 359              		.loc 2 104 0
 360 01d1 BF3A0000 		movl	$58, %edi
 360      00
 361 01d6 E8000000 		call	putchar@PLT
 361      00
 362              	.LVL33:
 363              	.LBE79:
 364              	.LBE78:
  59:src/main.c    ****     printf("\n\n");
 365              		.loc 1 59 0
 366 01db 488B7C24 		movq	96(%rsp), %rdi
 366      60
 367 01e0 488B7424 		movq	104(%rsp), %rsi
 367      68
 368 01e5 FFD3     		call	*%rbx
 369              	.LVL34:
 370              	.LBB80:
 371              	.LBB81:
 372              		.loc 2 104 0
 373 01e7 488D3D00 		leaq	.LC6(%rip), %rdi
 373      000000
 374 01ee E8000000 		call	puts@PLT
 374      00
 375              	.LVL35:
 376              	.LBE81:
 377              	.LBE80:
 378              	.LBB82:
 379              	.LBB83:
 380 01f3 488D3D00 		leaq	.LC14(%rip), %rdi
 380      000000
 381 01fa E8000000 		call	puts@PLT
 381      00
GAS LISTING /tmp/ccccU30j.s 			page 14


 382              	.LVL36:
 383              	.LBE83:
 384              	.LBE82:
  64:src/main.c    ****     float fval = 0.0;
 385              		.loc 1 64 0
 386 01ff C7442408 		movl	$0, 8(%rsp)
 386      00000000 
  65:src/main.c    ****     res = mcu_msg_parser_get_int(&ival, obj1, "key11");
 387              		.loc 1 65 0
 388 0207 C744240C 		movl	$0x00000000, 12(%rsp)
 388      00000000 
  66:src/main.c    ****     printf("r = %d ival = %d\n\n", res, ival);
 389              		.loc 1 66 0
 390 020f 488D7C24 		leaq	8(%rsp), %rdi
 390      08
 391 0214 FF742448 		pushq	72(%rsp)
 392              	.LCFI18:
 393              		.cfi_def_cfa_offset 152
 394 0218 FF742448 		pushq	72(%rsp)
 395              	.LCFI19:
 396              		.cfi_def_cfa_offset 160
 397 021c FF742448 		pushq	72(%rsp)
 398              	.LCFI20:
 399              		.cfi_def_cfa_offset 168
 400 0220 FF742448 		pushq	72(%rsp)
 401              	.LCFI21:
 402              		.cfi_def_cfa_offset 176
 403 0224 488D3500 		leaq	.LC16(%rip), %rsi
 403      000000
 404 022b E8000000 		call	mcu_msg_parser_get_int@PLT
 404      00
 405              	.LVL37:
 406 0230 0FBED0   		movsbl	%al, %edx
 407              	.LVL38:
 408              	.LBB84:
 409              	.LBB85:
 410              		.loc 2 104 0
 411 0233 4883C420 		addq	$32, %rsp
 412              	.LCFI22:
 413              		.cfi_def_cfa_offset 144
 414 0237 8B4C2408 		movl	8(%rsp), %ecx
 415 023b 488D3500 		leaq	.LC17(%rip), %rsi
 415      000000
 416 0242 BF010000 		movl	$1, %edi
 416      00
 417 0247 B8000000 		movl	$0, %eax
 417      00
 418 024c E8000000 		call	__printf_chk@PLT
 418      00
 419              	.LVL39:
 420              	.LBE85:
 421              	.LBE84:
 422              	.LBB86:
 423              	.LBB87:
 424 0251 488D3D00 		leaq	.LC18(%rip), %rdi
 424      000000
 425 0258 E8000000 		call	puts@PLT
GAS LISTING /tmp/ccccU30j.s 			page 15


 425      00
 426              	.LVL40:
 427              	.LBE87:
 428              	.LBE86:
  71:src/main.c    ****     printf("r = %d fval = %.11f\n\n", res, fval);
 429              		.loc 1 71 0
 430 025d 488D7C24 		leaq	12(%rsp), %rdi
 430      0C
 431 0262 FF742468 		pushq	104(%rsp)
 432              	.LCFI23:
 433              		.cfi_def_cfa_offset 152
 434 0266 FF742468 		pushq	104(%rsp)
 435              	.LCFI24:
 436              		.cfi_def_cfa_offset 160
 437 026a FF742468 		pushq	104(%rsp)
 438              	.LCFI25:
 439              		.cfi_def_cfa_offset 168
 440 026e FF742468 		pushq	104(%rsp)
 441              	.LCFI26:
 442              		.cfi_def_cfa_offset 176
 443 0272 488D3500 		leaq	.LC19(%rip), %rsi
 443      000000
 444 0279 E8000000 		call	mcu_msg_parser_get_float@PLT
 444      00
 445              	.LVL41:
 446 027e 0FBED0   		movsbl	%al, %edx
 447              	.LVL42:
  72:src/main.c    **** 
 448              		.loc 1 72 0
 449 0281 660FEFC0 		pxor	%xmm0, %xmm0
 450 0285 F30F5A44 		cvtss2sd	44(%rsp), %xmm0
 450      242C
 451              	.LVL43:
 452              	.LBB88:
 453              	.LBB89:
 454              		.loc 2 104 0
 455 028b 4883C420 		addq	$32, %rsp
 456              	.LCFI27:
 457              		.cfi_def_cfa_offset 144
 458 028f 488D3500 		leaq	.LC20(%rip), %rsi
 458      000000
 459 0296 BF010000 		movl	$1, %edi
 459      00
 460 029b B8010000 		movl	$1, %eax
 460      00
 461 02a0 E8000000 		call	__printf_chk@PLT
 461      00
 462              	.LVL44:
 463              	.LBE89:
 464              	.LBE88:
 465              	.LBB90:
 466              	.LBB91:
 467 02a5 488D3D00 		leaq	.LC21(%rip), %rdi
 467      000000
 468 02ac E8000000 		call	puts@PLT
 468      00
 469              	.LVL45:
GAS LISTING /tmp/ccccU30j.s 			page 16


 470              	.LBE91:
 471              	.LBE90:
  76:src/main.c    ****     if(str.s != NULL) {
 472              		.loc 1 76 0
 473 02b1 FF742448 		pushq	72(%rsp)
 474              	.LCFI28:
 475              		.cfi_def_cfa_offset 152
 476 02b5 FF742448 		pushq	72(%rsp)
 477              	.LCFI29:
 478              		.cfi_def_cfa_offset 160
 479 02b9 FF742448 		pushq	72(%rsp)
 480              	.LCFI30:
 481              		.cfi_def_cfa_offset 168
 482 02bd FF742448 		pushq	72(%rsp)
 483              	.LCFI31:
 484              		.cfi_def_cfa_offset 176
 485 02c1 488D3D00 		leaq	.LC22(%rip), %rdi
 485      000000
 486 02c8 E8000000 		call	mcu_msg_parser_get_string@PLT
 486      00
 487              	.LVL46:
  77:src/main.c    ****         str_hnd.print(str); printf("\n\n");
 488              		.loc 1 77 0
 489 02cd 4883C420 		addq	$32, %rsp
 490              	.LCFI32:
 491              		.cfi_def_cfa_offset 144
 492              	.LVL47:
 493 02d1 4885C0   		testq	%rax, %rax
 494 02d4 7440     		je	.L8
  78:src/main.c    ****     } else {
 495              		.loc 1 78 0
 496 02d6 4889C7   		movq	%rax, %rdi
 497              	.LVL48:
 498 02d9 4889D6   		movq	%rdx, %rsi
 499 02dc FFD3     		call	*%rbx
 500              	.LVL49:
 501              	.LBB92:
 502              	.LBB93:
 503              		.loc 2 104 0
 504 02de 488D3D00 		leaq	.LC6(%rip), %rdi
 504      000000
 505 02e5 E8000000 		call	puts@PLT
 505      00
 506              	.LVL50:
 507              	.L9:
 508              	.LBE93:
 509              	.LBE92:
  84:src/main.c    **** 
 510              		.loc 1 84 0
 511 02ea B8000000 		movl	$0, %eax
 511      00
 512 02ef 488B5C24 		movq	120(%rsp), %rbx
 512      78
 513 02f4 6448331C 		xorq	%fs:40, %rbx
 513      25280000 
 513      00
 514 02fd 7525     		jne	.L12
GAS LISTING /tmp/ccccU30j.s 			page 17


 515 02ff 4883EC80 		subq	$-128, %rsp
 516              	.LCFI33:
 517              		.cfi_remember_state
 518              		.cfi_def_cfa_offset 16
 519 0303 5B       		popq	%rbx
 520              	.LCFI34:
 521              		.cfi_def_cfa_offset 8
 522 0304 C3       		ret
 523              	.L6:
 524              	.LCFI35:
 525              		.cfi_restore_state
 526              	.LVL51:
 527              	.LBB94:
 528              	.LBB95:
 529              		.loc 2 104 0
 530 0305 488D3D00 		leaq	.LC7(%rip), %rdi
 530      000000
 531 030c E8000000 		call	puts@PLT
 531      00
 532              	.LVL52:
 533 0311 E9DCFDFF 		jmp	.L7
 533      FF
 534              	.LVL53:
 535              	.L8:
 536              	.LBE95:
 537              	.LBE94:
 538              	.LBB96:
 539              	.LBB97:
 540 0316 488D3D00 		leaq	.LC23(%rip), %rdi
 540      000000
 541 031d E8000000 		call	puts@PLT
 541      00
 542              	.LVL54:
 543 0322 EBC6     		jmp	.L9
 544              	.LVL55:
 545              	.L12:
 546              	.LBE97:
 547              	.LBE96:
  84:src/main.c    **** 
 548              		.loc 1 84 0
 549 0324 E8000000 		call	__stack_chk_fail@PLT
 549      00
 550              	.LVL56:
 551              		.cfi_endproc
 552              	.LFE56:
 554              		.globl	test_str1
 555              		.section	.rodata.str1.8,"aMS",@progbits,1
 556              		.align 8
 557              	.LC24:
 558 0000 23746573 		.string	"#test_msg {!CMD1 @obj1($key11 =   -1123334567  ; $key12 = 'string \"value\"') @obj2  ($ke
 558      745F6D73 
 558      67207B21 
 558      434D4431 
 558      20406F62 
 559              		.section	.data.rel.local.test_str1,"aw",@progbits
 560              		.align 8
 563              	test_str1:
GAS LISTING /tmp/ccccU30j.s 			page 18


 564 0000 00000000 		.quad	.LC24
 564      00000000 
 565              		.text
 566              	.Letext0:
 567              		.file 3 "/usr/lib/gcc/x86_64-linux-gnu/7/include/stddef.h"
 568              		.file 4 "/usr/include/x86_64-linux-gnu/bits/types.h"
 569              		.file 5 "/usr/include/x86_64-linux-gnu/bits/libio.h"
 570              		.file 6 "/usr/include/stdio.h"
 571              		.file 7 "/usr/include/x86_64-linux-gnu/bits/sys_errlist.h"
 572              		.file 8 "/usr/include/x86_64-linux-gnu/bits/stdint-uintn.h"
 573              		.file 9 "inc/mcu_msg_parser.h"
 574              		.file 10 "<built-in>"
GAS LISTING /tmp/ccccU30j.s 			page 19


DEFINED SYMBOLS
                            *ABS*:0000000000000000 main.c
     /tmp/ccccU30j.s:7      .text.printf_mcu_msg_str:0000000000000000 printf_mcu_msg_str
     /tmp/ccccU30j.s:134    .text.main:0000000000000000 main
     /tmp/ccccU30j.s:563    .data.rel.local.test_str1:0000000000000000 test_str1
     /tmp/ccccU30j.s:69     .rodata.main.str1.1:0000000000000000 .LC0
     /tmp/ccccU30j.s:71     .rodata.main.str1.1:0000000000000014 .LC1
     /tmp/ccccU30j.s:73     .rodata.main.str1.1:0000000000000028 .LC2
     /tmp/ccccU30j.s:75     .rodata.main.str1.1:000000000000003b .LC3
     /tmp/ccccU30j.s:77     .rodata.main.str1.1:0000000000000052 .LC4
     /tmp/ccccU30j.s:81     .rodata.main.str1.8:0000000000000000 .LC5
     /tmp/ccccU30j.s:84     .rodata.main.str1.1:000000000000005b .LC6
     /tmp/ccccU30j.s:88     .rodata.main.str1.1:0000000000000071 .LC8
     /tmp/ccccU30j.s:90     .rodata.main.str1.1:0000000000000084 .LC9
     /tmp/ccccU30j.s:94     .rodata.main.str1.8:0000000000000028 .LC10
     /tmp/ccccU30j.s:97     .rodata.main.str1.1:0000000000000089 .LC11
     /tmp/ccccU30j.s:99     .rodata.main.str1.1:000000000000009c .LC12
     /tmp/ccccU30j.s:103    .rodata.main.str1.8:0000000000000050 .LC13
     /tmp/ccccU30j.s:106    .rodata.main.str1.8:0000000000000078 .LC14
     /tmp/ccccU30j.s:109    .rodata.main.str1.1:00000000000000a1 .LC16
     /tmp/ccccU30j.s:111    .rodata.main.str1.1:00000000000000a7 .LC17
     /tmp/ccccU30j.s:115    .rodata.main.str1.8:00000000000000a0 .LC18
     /tmp/ccccU30j.s:118    .rodata.main.str1.1:00000000000000ba .LC19
     /tmp/ccccU30j.s:120    .rodata.main.str1.1:00000000000000c0 .LC20
     /tmp/ccccU30j.s:124    .rodata.main.str1.8:00000000000000c0 .LC21
     /tmp/ccccU30j.s:127    .rodata.main.str1.1:00000000000000d6 .LC22
     /tmp/ccccU30j.s:86     .rodata.main.str1.1:000000000000005d .LC7
     /tmp/ccccU30j.s:129    .rodata.main.str1.1:00000000000000dc .LC23

UNDEFINED SYMBOLS
_GLOBAL_OFFSET_TABLE_
putchar
mcu_msg_string_hnd_create
puts
__printf_chk
mcu_msg_get
mcu_msg_parser_get_obj
mcu_msg_parser_get_int
mcu_msg_parser_get_float
mcu_msg_parser_get_string
__stack_chk_fail
