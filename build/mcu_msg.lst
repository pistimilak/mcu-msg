GAS LISTING /tmp/cc8zL7Df.s 			page 1


   1              		.file	"mcu_msg.c"
   2              		.text
   3              	.Ltext0:
   4              		.section	.text.str_len,"ax",@progbits
   6              	str_len:
   7              	.LFB33:
   8              		.file 1 "src/mcu_msg.c"
   1:src/mcu_msg.c **** /**
   2:src/mcu_msg.c ****  * @file mcu_msg_parser.c
   3:src/mcu_msg.c ****  * @author Istvan Milak (istvan.milak@gmail.com)
   4:src/mcu_msg.c ****  * @brief Simple message parser for embedded applications, eg serial comm
   5:src/mcu_msg.c ****  * @version 0.1
   6:src/mcu_msg.c ****  * @date 2019-12-15
   7:src/mcu_msg.c ****  * 
   8:src/mcu_msg.c ****  * @copyright Copyright (c) 2019
   9:src/mcu_msg.c ****  * 
  10:src/mcu_msg.c ****  */
  11:src/mcu_msg.c **** #include <stdio.h>
  12:src/mcu_msg.c **** #include "mcu_msg.h"
  13:src/mcu_msg.c **** 
  14:src/mcu_msg.c **** /*Control chars*/
  15:src/mcu_msg.c **** #define CTRL_MSG_FLAG           '#'
  16:src/mcu_msg.c **** #define CTRL_START_MSG          '{'
  17:src/mcu_msg.c **** #define CTRL_STOP_MSG           '}'
  18:src/mcu_msg.c **** #define CTRL_START_OBJ          '('
  19:src/mcu_msg.c **** #define CTRL_STOP_OBJ           ')'
  20:src/mcu_msg.c **** #define CTRL_OBJ_FLAG           '@'
  21:src/mcu_msg.c **** #define CTRL_KEY_FLAG           '$'
  22:src/mcu_msg.c **** #define CTRL_KEY_SEP            ';'
  23:src/mcu_msg.c **** #define CTRL_KEY_EQU            '='
  24:src/mcu_msg.c **** #define CTRL_CMD_START_FLAG     '<'
  25:src/mcu_msg.c **** #define CTRL_CMD_STOP_FLAG      '>'
  26:src/mcu_msg.c **** 
  27:src/mcu_msg.c **** void mcu_msg_destroy_string(mcu_msg_string_t *str)
  28:src/mcu_msg.c **** {
  29:src/mcu_msg.c ****     str->s = NULL;
  30:src/mcu_msg.c ****     str->len = 0;
  31:src/mcu_msg.c **** }
  32:src/mcu_msg.c **** 
  33:src/mcu_msg.c **** void mcu_msg_destroy(mcu_msg_t *msg)
  34:src/mcu_msg.c **** {
  35:src/mcu_msg.c ****     mcu_msg_destroy_string(&msg->id);
  36:src/mcu_msg.c ****     mcu_msg_destroy_string(&msg->content);
  37:src/mcu_msg.c **** }
  38:src/mcu_msg.c **** 
  39:src/mcu_msg.c **** void mcu_msg_destroy_obj(mcu_msg_obj_t *obj)
  40:src/mcu_msg.c **** {
  41:src/mcu_msg.c ****     mcu_msg_destroy_string(&obj->id);
  42:src/mcu_msg.c ****     mcu_msg_destroy_string(&obj->content);
  43:src/mcu_msg.c **** }
  44:src/mcu_msg.c **** 
  45:src/mcu_msg.c **** 
  46:src/mcu_msg.c **** 
  47:src/mcu_msg.c **** /**
  48:src/mcu_msg.c ****  * @brief Argument char is control char or not
  49:src/mcu_msg.c ****  * 
  50:src/mcu_msg.c ****  * @param c char
GAS LISTING /tmp/cc8zL7Df.s 			page 2


  51:src/mcu_msg.c ****  * @return uint8_t comparison result
  52:src/mcu_msg.c ****  */
  53:src/mcu_msg.c **** static inline uint8_t is_ctrl_char(char c)
  54:src/mcu_msg.c **** {
  55:src/mcu_msg.c ****     switch(c) {
  56:src/mcu_msg.c ****         case CTRL_MSG_FLAG:
  57:src/mcu_msg.c ****         case CTRL_START_MSG:
  58:src/mcu_msg.c ****         case CTRL_STOP_MSG:
  59:src/mcu_msg.c ****         case CTRL_START_OBJ:
  60:src/mcu_msg.c ****         case CTRL_STOP_OBJ:
  61:src/mcu_msg.c ****         case CTRL_OBJ_FLAG:
  62:src/mcu_msg.c ****         case CTRL_KEY_FLAG:
  63:src/mcu_msg.c ****         case CTRL_KEY_SEP:
  64:src/mcu_msg.c ****         case CTRL_KEY_EQU:
  65:src/mcu_msg.c ****         case CTRL_CMD_START_FLAG:
  66:src/mcu_msg.c ****         case CTRL_CMD_STOP_FLAG:
  67:src/mcu_msg.c ****             return 1;
  68:src/mcu_msg.c ****         default:
  69:src/mcu_msg.c ****             return 0;
  70:src/mcu_msg.c ****     }
  71:src/mcu_msg.c **** }
  72:src/mcu_msg.c **** 
  73:src/mcu_msg.c **** 
  74:src/mcu_msg.c **** static inline uint8_t is_whitespace(char c)
  75:src/mcu_msg.c **** {
  76:src/mcu_msg.c ****     switch(c) {
  77:src/mcu_msg.c ****         case  ' ':
  78:src/mcu_msg.c ****         case '\t':
  79:src/mcu_msg.c ****         case '\n':
  80:src/mcu_msg.c ****         case '\v':
  81:src/mcu_msg.c ****         case '\f':
  82:src/mcu_msg.c ****         case '\r':
  83:src/mcu_msg.c ****             return 1;
  84:src/mcu_msg.c ****         default:
  85:src/mcu_msg.c ****             return 0;
  86:src/mcu_msg.c ****     }
  87:src/mcu_msg.c **** }
  88:src/mcu_msg.c **** 
  89:src/mcu_msg.c **** /**
  90:src/mcu_msg.c ****  * @brief Argument char is valid keyword char or not
  91:src/mcu_msg.c ****  * 
  92:src/mcu_msg.c ****  * @param c char
  93:src/mcu_msg.c ****  * @return uint8_t comparison result
  94:src/mcu_msg.c ****  */
  95:src/mcu_msg.c **** static inline uint8_t is_valid_keyword_char(char c)
  96:src/mcu_msg.c **** {
  97:src/mcu_msg.c ****     return (c == '_') || (c >= 'a' && c <= 'z') || 
  98:src/mcu_msg.c ****                     (c >= 'A' && c <= 'Z') || 
  99:src/mcu_msg.c ****                     (c >= '0' && c <= '9') ? 1 : 0;
 100:src/mcu_msg.c **** }
 101:src/mcu_msg.c **** 
 102:src/mcu_msg.c **** 
 103:src/mcu_msg.c **** /**
 104:src/mcu_msg.c ****  * @brief strlen implementation for internal usage
 105:src/mcu_msg.c ****  * 
 106:src/mcu_msg.c ****  * @param str string 
 107:src/mcu_msg.c ****  * @return mcu_msg_size_t length of string 
GAS LISTING /tmp/cc8zL7Df.s 			page 3


 108:src/mcu_msg.c ****  */
 109:src/mcu_msg.c **** static mcu_msg_size_t str_len(char *str)
 110:src/mcu_msg.c **** {
   9              		.loc 1 110 0
  10              		.cfi_startproc
  11              	.LVL0:
 111:src/mcu_msg.c ****     // mcu_msg_size_t res = 0;
 112:src/mcu_msg.c ****     char *p = str;
  12              		.loc 1 112 0
  13 0000 4889F8   		movq	%rdi, %rax
 113:src/mcu_msg.c ****     while(*p)
  14              		.loc 1 113 0
  15 0003 EB04     		jmp	.L2
  16              	.LVL1:
  17              	.L3:
 114:src/mcu_msg.c ****         p++;
  18              		.loc 1 114 0
  19 0005 4883C001 		addq	$1, %rax
  20              	.LVL2:
  21              	.L2:
 113:src/mcu_msg.c ****     while(*p)
  22              		.loc 1 113 0
  23 0009 803800   		cmpb	$0, (%rax)
  24 000c 75F7     		jne	.L3
 115:src/mcu_msg.c ****     return (p - str);
  25              		.loc 1 115 0
  26 000e 4829F8   		subq	%rdi, %rax
  27              	.LVL3:
 116:src/mcu_msg.c **** }
  28              		.loc 1 116 0
  29 0011 C3       		ret
  30              		.cfi_endproc
  31              	.LFE33:
  33              		.section	.text.skip_internal_str,"ax",@progbits
  35              	skip_internal_str:
  36              	.LFB35:
 117:src/mcu_msg.c **** 
 118:src/mcu_msg.c **** 
 119:src/mcu_msg.c **** static inline uint8_t is_in_str_buff(mcu_msg_string_t str, char *p)
 120:src/mcu_msg.c **** {
 121:src/mcu_msg.c ****     return ((p - str.s) < str.len);
 122:src/mcu_msg.c **** }
 123:src/mcu_msg.c **** 
 124:src/mcu_msg.c **** /**
 125:src/mcu_msg.c ****  * @brief 
 126:src/mcu_msg.c ****  * 
 127:src/mcu_msg.c ****  * @param start 
 128:src/mcu_msg.c ****  * @return char* 
 129:src/mcu_msg.c ****  */
 130:src/mcu_msg.c **** static char *skip_internal_str(char *start)
 131:src/mcu_msg.c **** {
  37              		.loc 1 131 0
  38              		.cfi_startproc
  39              	.LVL4:
 132:src/mcu_msg.c ****     char *p = start;
 133:src/mcu_msg.c ****     char qmark = *start;
  40              		.loc 1 133 0
GAS LISTING /tmp/cc8zL7Df.s 			page 4


  41 0000 0FB60F   		movzbl	(%rdi), %ecx
  42              	.LVL5:
 134:src/mcu_msg.c ****     if((qmark != '\'' && qmark != '"')) return NULL;
  43              		.loc 1 134 0
  44 0003 80F927   		cmpb	$39, %cl
  45 0006 0F95C2   		setne	%dl
  46 0009 80F922   		cmpb	$34, %cl
  47 000c 0F95C0   		setne	%al
  48 000f 84C2     		testb	%al, %dl
  49 0011 751E     		jne	.L9
 135:src/mcu_msg.c ****     ++p;
  50              		.loc 1 135 0
  51 0013 488D4701 		leaq	1(%rdi), %rax
  52              	.LVL6:
 136:src/mcu_msg.c ****     while(*p && (*p != qmark)) {
  53              		.loc 1 136 0
  54 0017 EB04     		jmp	.L6
  55              	.L8:
 137:src/mcu_msg.c ****         p++;
  56              		.loc 1 137 0
  57 0019 4883C001 		addq	$1, %rax
  58              	.LVL7:
  59              	.L6:
 136:src/mcu_msg.c ****     while(*p && (*p != qmark)) {
  60              		.loc 1 136 0
  61 001d 0FB610   		movzbl	(%rax), %edx
  62 0020 84D2     		testb	%dl, %dl
  63 0022 7404     		je	.L7
 136:src/mcu_msg.c ****     while(*p && (*p != qmark)) {
  64              		.loc 1 136 0 is_stmt 0 discriminator 1
  65 0024 38CA     		cmpb	%cl, %dl
  66 0026 75F1     		jne	.L8
  67              	.L7:
 138:src/mcu_msg.c ****     }
 139:src/mcu_msg.c ****     
 140:src/mcu_msg.c ****     return *p ? ++p : NULL;
  68              		.loc 1 140 0 is_stmt 1
  69 0028 84D2     		testb	%dl, %dl
  70 002a 740B     		je	.L10
  71              		.loc 1 140 0 is_stmt 0 discriminator 1
  72 002c 4883C001 		addq	$1, %rax
  73              	.LVL8:
  74 0030 C3       		ret
  75              	.LVL9:
  76              	.L9:
 134:src/mcu_msg.c ****     ++p;
  77              		.loc 1 134 0 is_stmt 1
  78 0031 B8000000 		movl	$0, %eax
  78      00
  79 0036 C3       		ret
  80              	.LVL10:
  81              	.L10:
  82              		.loc 1 140 0
  83 0037 B8000000 		movl	$0, %eax
  83      00
  84              	.LVL11:
 141:src/mcu_msg.c **** }
GAS LISTING /tmp/cc8zL7Df.s 			page 5


  85              		.loc 1 141 0
  86 003c C3       		ret
  87              		.cfi_endproc
  88              	.LFE35:
  90              		.section	.text.mcu_msg_str_copy_to_chr_arr,"ax",@progbits
  92              	mcu_msg_str_copy_to_chr_arr:
  93              	.LFB44:
 142:src/mcu_msg.c **** 
 143:src/mcu_msg.c **** /**
 144:src/mcu_msg.c ****  * @brief find the position of the keyword int message string (first occurance)
 145:src/mcu_msg.c ****  * if the keyword found in the message string, the next (none space) char must be stopc
 146:src/mcu_msg.c ****  * @param str source string
 147:src/mcu_msg.c ****  * @param keyword keword has to be found
 148:src/mcu_msg.c ****  * @param flagc flag, eg. '@', '$'
 149:src/mcu_msg.c ****  * @param stopc stop character eg. '(', '='
 150:src/mcu_msg.c ****  * @return mcu_msg_string_t location and size of the keyword (whitout flag) or NULL if keyword not 
 151:src/mcu_msg.c ****  */
 152:src/mcu_msg.c **** static mcu_msg_string_t find_keyword(mcu_msg_string_t str, char *keyword, char flagc, char stopc)
 153:src/mcu_msg.c **** {
 154:src/mcu_msg.c **** 
 155:src/mcu_msg.c ****     mcu_msg_string_t res;
 156:src/mcu_msg.c ****     char *p = str.s;
 157:src/mcu_msg.c ****     uint8_t equal;
 158:src/mcu_msg.c ****     mcu_msg_size_t i;
 159:src/mcu_msg.c ****     res.len = str_len(keyword);
 160:src/mcu_msg.c ****     while(is_in_str_buff(str, p) && *p) {
 161:src/mcu_msg.c ****         if(*p == '\'' || *p == '"') { //skip internal strings
 162:src/mcu_msg.c ****             p = skip_internal_str(p);
 163:src/mcu_msg.c ****         }
 164:src/mcu_msg.c ****         if(is_in_str_buff(str, p)  && *p == flagc) {
 165:src/mcu_msg.c ****             res.s = p + 1;
 166:src/mcu_msg.c ****             equal = 1;
 167:src/mcu_msg.c ****             for(i = 0; is_in_str_buff(str, res.s + i) && i < res.len; i++) {
 168:src/mcu_msg.c ****                 if((*(res.s + i) != *(keyword + i)) || is_ctrl_char(*(res.s + i)) || 
 169:src/mcu_msg.c ****                                     !is_valid_keyword_char(*(res.s + i))) {
 170:src/mcu_msg.c ****                     equal = 0;
 171:src/mcu_msg.c ****                     break;
 172:src/mcu_msg.c ****                 }
 173:src/mcu_msg.c ****             }
 174:src/mcu_msg.c ****             while(is_in_str_buff(str, res.s + i) && is_whitespace(*(res.s + i))) i++; //skip spaces
 175:src/mcu_msg.c ****             if(equal && *(res.s + i) == stopc) {
 176:src/mcu_msg.c ****                 return res;
 177:src/mcu_msg.c ****             } else {
 178:src/mcu_msg.c ****                 p = res.s + i;
 179:src/mcu_msg.c ****             }
 180:src/mcu_msg.c ****         }
 181:src/mcu_msg.c ****         p++;
 182:src/mcu_msg.c ****     }
 183:src/mcu_msg.c ****     // if not found
 184:src/mcu_msg.c ****     mcu_msg_destroy_string(&res);
 185:src/mcu_msg.c ****     return res;
 186:src/mcu_msg.c **** }
 187:src/mcu_msg.c **** 
 188:src/mcu_msg.c **** 
 189:src/mcu_msg.c **** /**
 190:src/mcu_msg.c ****  * @brief Getting the value start position for particular key in message object
 191:src/mcu_msg.c ****  * 
GAS LISTING /tmp/cc8zL7Df.s 			page 6


 192:src/mcu_msg.c ****  * @param obj message object
 193:src/mcu_msg.c ****  * @param key key for search
 194:src/mcu_msg.c ****  * @return char* location of the value start point or NULL if the key was not found
 195:src/mcu_msg.c ****  */
 196:src/mcu_msg.c **** 
 197:src/mcu_msg.c **** static mcu_msg_string_t find_val(mcu_msg_obj_t obj, char *key)
 198:src/mcu_msg.c **** {
 199:src/mcu_msg.c ****     mcu_msg_string_t res  = find_keyword(obj.content, key, CTRL_KEY_FLAG, CTRL_KEY_EQU); //object s
 200:src/mcu_msg.c ****     char *p;
 201:src/mcu_msg.c ****     if(res.s == NULL) { //if keyword not found, return with NULLs and 0 lengths
 202:src/mcu_msg.c ****         mcu_msg_destroy_string(&res);
 203:src/mcu_msg.c ****         return res;
 204:src/mcu_msg.c ****     }
 205:src/mcu_msg.c ****     if(*res.s != CTRL_KEY_EQU) {
 206:src/mcu_msg.c ****         while(is_in_str_buff(obj.content, res.s) && *res.s != CTRL_KEY_EQU) res.s++;
 207:src/mcu_msg.c ****     }
 208:src/mcu_msg.c ****     res.s++;
 209:src/mcu_msg.c ****     while(is_in_str_buff(obj.content, res.s) && is_whitespace(*res.s)) res.s++; //skip spaces after
 210:src/mcu_msg.c ****     
 211:src/mcu_msg.c ****     res.len = 0;
 212:src/mcu_msg.c ****     p = res.s;
 213:src/mcu_msg.c ****     while(is_in_str_buff(obj.content, p) && !is_whitespace(*p) && !is_ctrl_char(*p)) p++; //calc le
 214:src/mcu_msg.c ****     res.len = p - res.s;
 215:src/mcu_msg.c **** 
 216:src/mcu_msg.c ****     return res;
 217:src/mcu_msg.c **** }
 218:src/mcu_msg.c **** 
 219:src/mcu_msg.c **** 
 220:src/mcu_msg.c **** 
 221:src/mcu_msg.c **** mcu_msg_t mcu_msg_get(char *raw_str, char *id, mcu_msg_size_t len)
 222:src/mcu_msg.c **** {
 223:src/mcu_msg.c ****     mcu_msg_t res;
 224:src/mcu_msg.c ****     res.content.s = raw_str;
 225:src/mcu_msg.c ****     res.content.len = len;
 226:src/mcu_msg.c ****     res.id = find_keyword(res.content, id, CTRL_MSG_FLAG, CTRL_START_MSG); //object start with @ an
 227:src/mcu_msg.c ****     char *p;
 228:src/mcu_msg.c ****     if(res.id.s == NULL) { //if keyword not found, return with NULLs and 0 lengths
 229:src/mcu_msg.c ****         mcu_msg_destroy(&res);
 230:src/mcu_msg.c ****         return res;
 231:src/mcu_msg.c ****     }
 232:src/mcu_msg.c ****     p = res.id.s + res.id.len;
 233:src/mcu_msg.c ****     if (*p != CTRL_START_MSG) {
 234:src/mcu_msg.c ****         while(is_in_str_buff(res.content, p) && *p != CTRL_START_MSG) p++;
 235:src/mcu_msg.c ****     }
 236:src/mcu_msg.c ****     ++p;
 237:src/mcu_msg.c ****     while(is_in_str_buff(res.content, p) && *p != CTRL_STOP_MSG) {
 238:src/mcu_msg.c ****         p++;
 239:src/mcu_msg.c ****     }
 240:src/mcu_msg.c ****     res.content.len = p - res.content.s;
 241:src/mcu_msg.c ****     return res;
 242:src/mcu_msg.c **** }
 243:src/mcu_msg.c **** 
 244:src/mcu_msg.c **** 
 245:src/mcu_msg.c **** 
 246:src/mcu_msg.c **** mcu_msg_obj_t mcu_msg_parser_get_obj(mcu_msg_t msg, char *id)
 247:src/mcu_msg.c **** {
 248:src/mcu_msg.c ****     mcu_msg_obj_t res;
GAS LISTING /tmp/cc8zL7Df.s 			page 7


 249:src/mcu_msg.c ****     res.id = find_keyword(msg.content, id, CTRL_OBJ_FLAG, CTRL_START_OBJ); //object start with @ an
 250:src/mcu_msg.c ****     char *p;
 251:src/mcu_msg.c ****     if(res.id.s == NULL) { //if keyword not found, return with NULLs and 0 lengths
 252:src/mcu_msg.c ****         mcu_msg_destroy_obj(&res);
 253:src/mcu_msg.c ****         return res;
 254:src/mcu_msg.c ****     }
 255:src/mcu_msg.c **** 
 256:src/mcu_msg.c ****     p = res.id.s;
 257:src/mcu_msg.c ****     if (*p != CTRL_START_OBJ) {
 258:src/mcu_msg.c ****         while(is_in_str_buff(msg.content, p + 1) && *p != CTRL_START_OBJ) p++;
 259:src/mcu_msg.c ****     }
 260:src/mcu_msg.c ****     res.content.s = ++p;
 261:src/mcu_msg.c ****     // res.content.len = 0;
 262:src/mcu_msg.c ****     while(is_in_str_buff(msg.content, p) && *p != CTRL_STOP_OBJ) {
 263:src/mcu_msg.c ****         p++;
 264:src/mcu_msg.c ****         // res.content.len++;
 265:src/mcu_msg.c ****     }
 266:src/mcu_msg.c ****     res.content.len = p - res.content.s;
 267:src/mcu_msg.c ****     return res;
 268:src/mcu_msg.c **** }
 269:src/mcu_msg.c **** 
 270:src/mcu_msg.c **** uint8_t mcu_msg_is_cmd_att(mcu_msg_t msg, char *cmd_id)
 271:src/mcu_msg.c **** {
 272:src/mcu_msg.c ****     mcu_msg_string_t res = find_keyword(msg.content, cmd_id, CTRL_CMD_START_FLAG, CTRL_CMD_STOP_FLA
 273:src/mcu_msg.c ****     if(res.s == NULL) { //if cmd not found, return 0
 274:src/mcu_msg.c ****         return 0;
 275:src/mcu_msg.c ****     } else {
 276:src/mcu_msg.c ****         return 1;
 277:src/mcu_msg.c ****     }
 278:src/mcu_msg.c **** }
 279:src/mcu_msg.c **** 
 280:src/mcu_msg.c **** int8_t mcu_msg_parser_get_int(int *res_val, mcu_msg_obj_t obj, char *key)
 281:src/mcu_msg.c **** {
 282:src/mcu_msg.c ****     mcu_msg_string_t sval = find_val(obj, key);
 283:src/mcu_msg.c ****     mcu_msg_size_t i;
 284:src/mcu_msg.c ****     unsigned m = 1;
 285:src/mcu_msg.c ****     int sign = 1;
 286:src/mcu_msg.c ****     int8_t res = 0; // result of function
 287:src/mcu_msg.c **** 
 288:src/mcu_msg.c ****     if(sval.s == NULL)  //key nout found
 289:src/mcu_msg.c ****         return -1;
 290:src/mcu_msg.c **** 
 291:src/mcu_msg.c **** 
 292:src/mcu_msg.c ****     switch(*sval.s) { //if the sign is defined, set the sign variable and increment the pointer
 293:src/mcu_msg.c ****         case '+':
 294:src/mcu_msg.c ****             sign = 1;
 295:src/mcu_msg.c ****             sval.s++;
 296:src/mcu_msg.c ****         break;
 297:src/mcu_msg.c ****         
 298:src/mcu_msg.c ****         case '-':
 299:src/mcu_msg.c ****             sign = -1;
 300:src/mcu_msg.c ****             sval.s++;
 301:src/mcu_msg.c ****         break;
 302:src/mcu_msg.c ****         
 303:src/mcu_msg.c ****         default:
 304:src/mcu_msg.c ****         break;
 305:src/mcu_msg.c ****     }
GAS LISTING /tmp/cc8zL7Df.s 			page 8


 306:src/mcu_msg.c **** 
 307:src/mcu_msg.c ****     for(i = 0; is_in_str_buff(obj.content, sval.s) && !is_whitespace(*sval.s) && *sval.s != CTRL_KE
 308:src/mcu_msg.c ****         if(*sval.s < '0' || *sval.s > '9') {    // if non valid number, return with error
 309:src/mcu_msg.c ****             return -1;
 310:src/mcu_msg.c ****         }
 311:src/mcu_msg.c ****     }
 312:src/mcu_msg.c **** 
 313:src/mcu_msg.c ****     *res_val = 0;
 314:src/mcu_msg.c ****     --sval.s;
 315:src/mcu_msg.c ****     while(i--) {
 316:src/mcu_msg.c ****         *res_val += (*sval.s-- - '0') * m;
 317:src/mcu_msg.c ****         m *= 10;
 318:src/mcu_msg.c ****         res++;
 319:src/mcu_msg.c ****     }
 320:src/mcu_msg.c ****     
 321:src/mcu_msg.c ****     *res_val *= sign; //corrigate with the sign
 322:src/mcu_msg.c **** 
 323:src/mcu_msg.c ****     return res; // return with the digit count, if correct
 324:src/mcu_msg.c **** }
 325:src/mcu_msg.c **** 
 326:src/mcu_msg.c **** 
 327:src/mcu_msg.c **** int8_t mcu_msg_parser_get_float(float *res_val, mcu_msg_obj_t obj, char *key)
 328:src/mcu_msg.c **** {
 329:src/mcu_msg.c ****     mcu_msg_string_t sval = find_val(obj, key);
 330:src/mcu_msg.c ****     char *pf;
 331:src/mcu_msg.c ****     mcu_msg_size_t i;
 332:src/mcu_msg.c ****     unsigned m = 1;
 333:src/mcu_msg.c ****     float mf = 0.1;
 334:src/mcu_msg.c ****     int sign = 1;
 335:src/mcu_msg.c ****     int8_t res = 0; // result of function
 336:src/mcu_msg.c **** 
 337:src/mcu_msg.c ****     if(sval.s == NULL)  //key nout found
 338:src/mcu_msg.c ****         return -1;
 339:src/mcu_msg.c **** 
 340:src/mcu_msg.c **** 
 341:src/mcu_msg.c ****     switch(*sval.s) { //if the sign is defined, set the sign variable and increment the pointer
 342:src/mcu_msg.c ****         case '+':
 343:src/mcu_msg.c ****             sign = 1;
 344:src/mcu_msg.c ****             sval.s++;
 345:src/mcu_msg.c ****         break;
 346:src/mcu_msg.c ****         
 347:src/mcu_msg.c ****         case '-':
 348:src/mcu_msg.c ****             sign = -1;
 349:src/mcu_msg.c ****             sval.s++;
 350:src/mcu_msg.c ****         break;
 351:src/mcu_msg.c ****         
 352:src/mcu_msg.c ****         default:
 353:src/mcu_msg.c ****         break;
 354:src/mcu_msg.c ****     }
 355:src/mcu_msg.c **** 
 356:src/mcu_msg.c ****     //move p to dec separator or end of the value
 357:src/mcu_msg.c ****     for(i = 0; is_in_str_buff(obj.content, sval.s) && !is_whitespace(*sval.s) && *sval.s != CTRL_KE
 358:src/mcu_msg.c ****         if((*sval.s < '0' || *sval.s > '9')) {    // if non valid number, return with error
 359:src/mcu_msg.c ****             return -1;
 360:src/mcu_msg.c ****         }
 361:src/mcu_msg.c ****     }
 362:src/mcu_msg.c **** 
GAS LISTING /tmp/cc8zL7Df.s 			page 9


 363:src/mcu_msg.c ****     *res_val = 0.0;
 364:src/mcu_msg.c ****     
 365:src/mcu_msg.c ****     if(*sval.s == '.') {
 366:src/mcu_msg.c ****         pf = sval.s + 1;
 367:src/mcu_msg.c ****         res++;
 368:src/mcu_msg.c ****     } else {
 369:src/mcu_msg.c ****         pf = NULL;
 370:src/mcu_msg.c ****     }
 371:src/mcu_msg.c **** 
 372:src/mcu_msg.c ****     --sval.s;
 373:src/mcu_msg.c ****     while(i--) {
 374:src/mcu_msg.c ****         *res_val += (*sval.s-- - '0') * m;
 375:src/mcu_msg.c ****         m *= 10;
 376:src/mcu_msg.c ****         res++;
 377:src/mcu_msg.c ****     }
 378:src/mcu_msg.c ****     
 379:src/mcu_msg.c ****     // calculate floating point section after '.' (if there is)
 380:src/mcu_msg.c ****     for(; pf != NULL && is_in_str_buff(obj.content, pf) && !is_whitespace(*pf) && *pf != CTRL_KEY_S
 381:src/mcu_msg.c ****         if(*pf < '0' || *pf > '9') {    // if non valid number, return with error
 382:src/mcu_msg.c ****             return -1;
 383:src/mcu_msg.c ****         }
 384:src/mcu_msg.c ****         *res_val += (*pf - '0') * mf;
 385:src/mcu_msg.c ****         mf /= 10;
 386:src/mcu_msg.c ****         res++; 
 387:src/mcu_msg.c ****     }
 388:src/mcu_msg.c **** 
 389:src/mcu_msg.c ****     *res_val *= sign; //corrigate with the sign
 390:src/mcu_msg.c **** 
 391:src/mcu_msg.c ****     return res; // return with the digit count + '.' separator, if correct
 392:src/mcu_msg.c **** }
 393:src/mcu_msg.c **** 
 394:src/mcu_msg.c **** 
 395:src/mcu_msg.c **** 
 396:src/mcu_msg.c **** mcu_msg_string_t mcu_msg_parser_get_string(mcu_msg_obj_t obj, char *key)
 397:src/mcu_msg.c **** {
 398:src/mcu_msg.c ****     mcu_msg_string_t res = find_val(obj, key);
 399:src/mcu_msg.c ****     char qmark;
 400:src/mcu_msg.c ****     char *p;
 401:src/mcu_msg.c **** 
 402:src/mcu_msg.c ****     if(res.s == NULL) {
 403:src/mcu_msg.c ****         mcu_msg_destroy_string(&res);
 404:src/mcu_msg.c ****         return res;
 405:src/mcu_msg.c ****     }
 406:src/mcu_msg.c ****         
 407:src/mcu_msg.c ****     qmark = *res.s;
 408:src/mcu_msg.c **** 
 409:src/mcu_msg.c ****     if(qmark != '\'' && qmark != '"') { // qmark not found, this is not a string
 410:src/mcu_msg.c ****         mcu_msg_destroy_string(&res);
 411:src/mcu_msg.c ****         return res;
 412:src/mcu_msg.c ****     }
 413:src/mcu_msg.c **** 
 414:src/mcu_msg.c ****     p = ++res.s;
 415:src/mcu_msg.c ****     res.len = 0;
 416:src/mcu_msg.c ****     while(is_in_str_buff(obj.content, p) && *p != qmark) {
 417:src/mcu_msg.c ****         res.len++;
 418:src/mcu_msg.c ****         p++;
 419:src/mcu_msg.c ****     }
GAS LISTING /tmp/cc8zL7Df.s 			page 10


 420:src/mcu_msg.c ****     return res;
 421:src/mcu_msg.c **** }
 422:src/mcu_msg.c **** 
 423:src/mcu_msg.c **** /**
 424:src/mcu_msg.c ****  * @brief Default string copy to char array
 425:src/mcu_msg.c ****  * 
 426:src/mcu_msg.c ****  * @param dest destination char array
 427:src/mcu_msg.c ****  * @param source source string type
 428:src/mcu_msg.c ****  */
 429:src/mcu_msg.c **** static void mcu_msg_str_copy_to_chr_arr(char *dest, mcu_msg_string_t source)
 430:src/mcu_msg.c **** {
  94              		.loc 1 430 0
  95              		.cfi_startproc
  96              	.LVL12:
 431:src/mcu_msg.c ****     mcu_msg_size_t i;
 432:src/mcu_msg.c ****     for(i = 0; i < source.len; *(dest + i) = *(source.s + i), i++);
  97              		.loc 1 432 0
  98 0000 B8000000 		movl	$0, %eax
  98      00
  99 0005 EB0F     		jmp	.L12
 100              	.LVL13:
 101              	.L13:
 102              		.loc 1 432 0 is_stmt 0 discriminator 3
 103 0007 0FB7C8   		movzwl	%ax, %ecx
 104 000a 440FB604 		movzbl	(%rsi,%rcx), %r8d
 104      0E
 105 000f 4488040F 		movb	%r8b, (%rdi,%rcx)
 106 0013 83C001   		addl	$1, %eax
 107              	.LVL14:
 108              	.L12:
 109              		.loc 1 432 0 discriminator 1
 110 0016 6639C2   		cmpw	%ax, %dx
 111 0019 77EC     		ja	.L13
 433:src/mcu_msg.c **** }
 112              		.loc 1 433 0 is_stmt 1
 113 001b F3C3     		rep ret
 114              		.cfi_endproc
 115              	.LFE44:
 117              		.section	.text.mcu_msg_str_copy,"ax",@progbits
 119              	mcu_msg_str_copy:
 120              	.LFB45:
 434:src/mcu_msg.c **** 
 435:src/mcu_msg.c **** /**
 436:src/mcu_msg.c ****  * @brief Default string copy to string type
 437:src/mcu_msg.c ****  * 
 438:src/mcu_msg.c ****  * @param dest destination string type
 439:src/mcu_msg.c ****  * @param source source string type
 440:src/mcu_msg.c ****  */
 441:src/mcu_msg.c **** static void mcu_msg_str_copy(mcu_msg_string_t dest, mcu_msg_string_t source)
 442:src/mcu_msg.c **** {
 121              		.loc 1 442 0
 122              		.cfi_startproc
 123              	.LVL15:
 443:src/mcu_msg.c ****     mcu_msg_size_t i;
 444:src/mcu_msg.c ****     for(i = 0, dest.len = source.len; i < source.len; *(dest.s + i) = *(source.s + i), i++);
 124              		.loc 1 444 0
 125 0000 B8000000 		movl	$0, %eax
GAS LISTING /tmp/cc8zL7Df.s 			page 11


 125      00
 126 0005 EB0F     		jmp	.L15
 127              	.LVL16:
 128              	.L16:
 129              		.loc 1 444 0 is_stmt 0 discriminator 3
 130 0007 0FB7F0   		movzwl	%ax, %esi
 131              	.LVL17:
 132 000a 440FB604 		movzbl	(%rdx,%rsi), %r8d
 132      32
 133 000f 44880437 		movb	%r8b, (%rdi,%rsi)
 134 0013 83C001   		addl	$1, %eax
 135              	.LVL18:
 136              	.L15:
 137              		.loc 1 444 0 discriminator 1
 138 0016 6639C1   		cmpw	%ax, %cx
 139 0019 77EC     		ja	.L16
 445:src/mcu_msg.c **** }
 140              		.loc 1 445 0 is_stmt 1
 141 001b F3C3     		rep ret
 142              		.cfi_endproc
 143              	.LFE45:
 145              		.section	.text.mcu_msg_destroy_string,"ax",@progbits
 146              		.globl	mcu_msg_destroy_string
 148              	mcu_msg_destroy_string:
 149              	.LFB27:
  28:src/mcu_msg.c ****     str->s = NULL;
 150              		.loc 1 28 0
 151              		.cfi_startproc
 152              	.LVL19:
  29:src/mcu_msg.c ****     str->len = 0;
 153              		.loc 1 29 0
 154 0000 48C70700 		movq	$0, (%rdi)
 154      000000
  30:src/mcu_msg.c **** }
 155              		.loc 1 30 0
 156 0007 66C74708 		movw	$0, 8(%rdi)
 156      0000
  31:src/mcu_msg.c **** 
 157              		.loc 1 31 0
 158 000d C3       		ret
 159              		.cfi_endproc
 160              	.LFE27:
 162              		.section	.text.find_keyword,"ax",@progbits
 164              	find_keyword:
 165              	.LFB36:
 153:src/mcu_msg.c **** 
 166              		.loc 1 153 0
 167              		.cfi_startproc
 168              	.LVL20:
 169 0000 4157     		pushq	%r15
 170              	.LCFI0:
 171              		.cfi_def_cfa_offset 16
 172              		.cfi_offset 15, -16
 173 0002 4156     		pushq	%r14
 174              	.LCFI1:
 175              		.cfi_def_cfa_offset 24
 176              		.cfi_offset 14, -24
GAS LISTING /tmp/cc8zL7Df.s 			page 12


 177 0004 4155     		pushq	%r13
 178              	.LCFI2:
 179              		.cfi_def_cfa_offset 32
 180              		.cfi_offset 13, -32
 181 0006 4154     		pushq	%r12
 182              	.LCFI3:
 183              		.cfi_def_cfa_offset 40
 184              		.cfi_offset 12, -40
 185 0008 55       		pushq	%rbp
 186              	.LCFI4:
 187              		.cfi_def_cfa_offset 48
 188              		.cfi_offset 6, -48
 189 0009 53       		pushq	%rbx
 190              	.LCFI5:
 191              		.cfi_def_cfa_offset 56
 192              		.cfi_offset 3, -56
 193 000a 4883EC38 		subq	$56, %rsp
 194              	.LCFI6:
 195              		.cfi_def_cfa_offset 112
 196 000e 4989FC   		movq	%rdi, %r12
 197 0011 4889F5   		movq	%rsi, %rbp
 198 0014 4989D6   		movq	%rdx, %r14
 199 0017 4189CF   		movl	%ecx, %r15d
 200 001a 44884424 		movb	%r8b, 15(%rsp)
 200      0F
 153:src/mcu_msg.c **** 
 201              		.loc 1 153 0
 202 001f 64488B04 		movq	%fs:40, %rax
 202      25280000 
 202      00
 203 0028 48894424 		movq	%rax, 40(%rsp)
 203      28
 204 002d 31C0     		xorl	%eax, %eax
 156:src/mcu_msg.c ****     uint8_t equal;
 205              		.loc 1 156 0
 206 002f 4889FB   		movq	%rdi, %rbx
 207              	.LVL21:
 159:src/mcu_msg.c ****     while(is_in_str_buff(str, p) && *p) {
 208              		.loc 1 159 0
 209 0032 4889D7   		movq	%rdx, %rdi
 210              	.LVL22:
 211 0035 E8000000 		call	str_len
 211      00
 212              	.LVL23:
 213 003a 4189C5   		movl	%eax, %r13d
 214 003d 66894424 		movw	%ax, 24(%rsp)
 214      18
 160:src/mcu_msg.c ****         if(*p == '\'' || *p == '"') { //skip internal strings
 215              		.loc 1 160 0
 216 0042 E9EE0000 		jmp	.L19
 216      00
 217              	.L44:
 162:src/mcu_msg.c ****         }
 218              		.loc 1 162 0
 219 0047 4889DF   		movq	%rbx, %rdi
 220 004a E8000000 		call	skip_internal_str
 220      00
GAS LISTING /tmp/cc8zL7Df.s 			page 13


 221              	.LVL24:
 222 004f 4889C3   		movq	%rax, %rbx
 223              	.LVL25:
 224 0052 E9050100 		jmp	.L20
 224      00
 225              	.LVL26:
 226              	.L24:
 227              	.LBB50:
 228              	.LBB51:
  97:src/mcu_msg.c ****                     (c >= 'A' && c <= 'Z') || 
 229              		.loc 1 97 0
 230 0057 80FA5F   		cmpb	$95, %dl
 231 005a 400F94C7 		sete	%dil
 232 005e 8D4A9F   		leal	-97(%rdx), %ecx
 233 0061 80F919   		cmpb	$25, %cl
 234 0064 0F96C1   		setbe	%cl
  99:src/mcu_msg.c **** }
 235              		.loc 1 99 0
 236 0067 4008CF   		orb	%cl, %dil
 237 006a 7517     		jne	.L37
  98:src/mcu_msg.c ****                     (c >= '0' && c <= '9') ? 1 : 0;
 238              		.loc 1 98 0
 239 006c 8D4ABF   		leal	-65(%rdx), %ecx
  97:src/mcu_msg.c ****                     (c >= 'A' && c <= 'Z') || 
 240              		.loc 1 97 0
 241 006f 80F919   		cmpb	$25, %cl
 242 0072 765C     		jbe	.L38
  99:src/mcu_msg.c **** }
 243              		.loc 1 99 0
 244 0074 83EA30   		subl	$48, %edx
 245              	.LVL27:
 246 0077 80FA09   		cmpb	$9, %dl
 247 007a 775B     		ja	.L39
 248 007c BA010000 		movl	$1, %edx
 248      00
 249 0081 EB05     		jmp	.L26
 250              	.LVL28:
 251              	.L37:
 252 0083 BA010000 		movl	$1, %edx
 252      00
 253              	.LVL29:
 254              	.L26:
 255 0088 89D7     		movl	%edx, %edi
 256              	.LVL30:
 257              	.LBE51:
 258              	.LBE50:
 168:src/mcu_msg.c ****                                     !is_valid_keyword_char(*(res.s + i))) {
 259              		.loc 1 168 0
 260 008a 84D2     		testb	%dl, %dl
 261 008c 746F     		je	.L30
 167:src/mcu_msg.c ****                 if((*(res.s + i) != *(keyword + i)) || is_ctrl_char(*(res.s + i)) || 
 262              		.loc 1 167 0 discriminator 2
 263 008e 83C001   		addl	$1, %eax
 264              	.LVL31:
 265              	.L22:
 167:src/mcu_msg.c ****                 if((*(res.s + i) != *(keyword + i)) || is_ctrl_char(*(res.s + i)) || 
 266              		.loc 1 167 0 is_stmt 0 discriminator 1
GAS LISTING /tmp/cc8zL7Df.s 			page 14


 267 0091 0FB7C8   		movzwl	%ax, %ecx
 268 0094 488D140E 		leaq	(%rsi,%rcx), %rdx
 269              	.LVL32:
 270              	.LBB53:
 271              	.LBB54:
 121:src/mcu_msg.c **** }
 272              		.loc 1 121 0 is_stmt 1 discriminator 1
 273 0098 4989D0   		movq	%rdx, %r8
 274 009b 4D29E0   		subq	%r12, %r8
 275 009e 0FB7FD   		movzwl	%bp, %edi
 276              	.LVL33:
 277              	.LBE54:
 278              	.LBE53:
 167:src/mcu_msg.c ****                 if((*(res.s + i) != *(keyword + i)) || is_ctrl_char(*(res.s + i)) || 
 279              		.loc 1 167 0 discriminator 1
 280 00a1 4939F8   		cmpq	%rdi, %r8
 281 00a4 7D4D     		jge	.L40
 167:src/mcu_msg.c ****                 if((*(res.s + i) != *(keyword + i)) || is_ctrl_char(*(res.s + i)) || 
 282              		.loc 1 167 0 is_stmt 0 discriminator 3
 283 00a6 664139C5 		cmpw	%ax, %r13w
 284 00aa 7632     		jbe	.L42
 168:src/mcu_msg.c ****                                     !is_valid_keyword_char(*(res.s + i))) {
 285              		.loc 1 168 0 is_stmt 1
 286 00ac 0FB612   		movzbl	(%rdx), %edx
 287 00af 413A140E 		cmpb	(%r14,%rcx), %dl
 288 00b3 7530     		jne	.L35
 289              	.LVL34:
 290              	.LBB55:
 291              	.LBB56:
  55:src/mcu_msg.c ****         case CTRL_MSG_FLAG:
 292              		.loc 1 55 0 discriminator 1
 293 00b5 8D4ADD   		leal	-35(%rdx), %ecx
 294 00b8 80F95A   		cmpb	$90, %cl
 295 00bb 779A     		ja	.L24
 296 00bd 0FB6C9   		movzbl	%cl, %ecx
 297 00c0 488D3D00 		leaq	.L25(%rip), %rdi
 297      000000
 298 00c7 48630C8F 		movslq	(%rdi,%rcx,4), %rcx
 299 00cb 4801F9   		addq	%rdi, %rcx
 300 00ce FFE1     		jmp	*%rcx
 301              		.section	.rodata.find_keyword,"a",@progbits
 302              		.align 4
 303              		.align 4
 304              	.L25:
 305 0000 00000000 		.long	.L36-.L25
 306 0004 00000000 		.long	.L36-.L25
 307 0008 00000000 		.long	.L24-.L25
 308 000c 00000000 		.long	.L24-.L25
 309 0010 00000000 		.long	.L24-.L25
 310 0014 00000000 		.long	.L36-.L25
 311 0018 00000000 		.long	.L36-.L25
 312 001c 00000000 		.long	.L24-.L25
 313 0020 00000000 		.long	.L24-.L25
 314 0024 00000000 		.long	.L24-.L25
 315 0028 00000000 		.long	.L24-.L25
 316 002c 00000000 		.long	.L24-.L25
 317 0030 00000000 		.long	.L24-.L25
GAS LISTING /tmp/cc8zL7Df.s 			page 15


 318 0034 00000000 		.long	.L24-.L25
 319 0038 00000000 		.long	.L24-.L25
 320 003c 00000000 		.long	.L24-.L25
 321 0040 00000000 		.long	.L24-.L25
 322 0044 00000000 		.long	.L24-.L25
 323 0048 00000000 		.long	.L24-.L25
 324 004c 00000000 		.long	.L24-.L25
 325 0050 00000000 		.long	.L24-.L25
 326 0054 00000000 		.long	.L24-.L25
 327 0058 00000000 		.long	.L24-.L25
 328 005c 00000000 		.long	.L24-.L25
 329 0060 00000000 		.long	.L36-.L25
 330 0064 00000000 		.long	.L36-.L25
 331 0068 00000000 		.long	.L36-.L25
 332 006c 00000000 		.long	.L36-.L25
 333 0070 00000000 		.long	.L24-.L25
 334 0074 00000000 		.long	.L36-.L25
 335 0078 00000000 		.long	.L24-.L25
 336 007c 00000000 		.long	.L24-.L25
 337 0080 00000000 		.long	.L24-.L25
 338 0084 00000000 		.long	.L24-.L25
 339 0088 00000000 		.long	.L24-.L25
 340 008c 00000000 		.long	.L24-.L25
 341 0090 00000000 		.long	.L24-.L25
 342 0094 00000000 		.long	.L24-.L25
 343 0098 00000000 		.long	.L24-.L25
 344 009c 00000000 		.long	.L24-.L25
 345 00a0 00000000 		.long	.L24-.L25
 346 00a4 00000000 		.long	.L24-.L25
 347 00a8 00000000 		.long	.L24-.L25
 348 00ac 00000000 		.long	.L24-.L25
 349 00b0 00000000 		.long	.L24-.L25
 350 00b4 00000000 		.long	.L24-.L25
 351 00b8 00000000 		.long	.L24-.L25
 352 00bc 00000000 		.long	.L24-.L25
 353 00c0 00000000 		.long	.L24-.L25
 354 00c4 00000000 		.long	.L24-.L25
 355 00c8 00000000 		.long	.L24-.L25
 356 00cc 00000000 		.long	.L24-.L25
 357 00d0 00000000 		.long	.L24-.L25
 358 00d4 00000000 		.long	.L24-.L25
 359 00d8 00000000 		.long	.L24-.L25
 360 00dc 00000000 		.long	.L24-.L25
 361 00e0 00000000 		.long	.L24-.L25
 362 00e4 00000000 		.long	.L24-.L25
 363 00e8 00000000 		.long	.L24-.L25
 364 00ec 00000000 		.long	.L24-.L25
 365 00f0 00000000 		.long	.L24-.L25
 366 00f4 00000000 		.long	.L24-.L25
 367 00f8 00000000 		.long	.L24-.L25
 368 00fc 00000000 		.long	.L24-.L25
 369 0100 00000000 		.long	.L24-.L25
 370 0104 00000000 		.long	.L24-.L25
 371 0108 00000000 		.long	.L24-.L25
 372 010c 00000000 		.long	.L24-.L25
 373 0110 00000000 		.long	.L24-.L25
 374 0114 00000000 		.long	.L24-.L25
GAS LISTING /tmp/cc8zL7Df.s 			page 16


 375 0118 00000000 		.long	.L24-.L25
 376 011c 00000000 		.long	.L24-.L25
 377 0120 00000000 		.long	.L24-.L25
 378 0124 00000000 		.long	.L24-.L25
 379 0128 00000000 		.long	.L24-.L25
 380 012c 00000000 		.long	.L24-.L25
 381 0130 00000000 		.long	.L24-.L25
 382 0134 00000000 		.long	.L24-.L25
 383 0138 00000000 		.long	.L24-.L25
 384 013c 00000000 		.long	.L24-.L25
 385 0140 00000000 		.long	.L24-.L25
 386 0144 00000000 		.long	.L24-.L25
 387 0148 00000000 		.long	.L24-.L25
 388 014c 00000000 		.long	.L24-.L25
 389 0150 00000000 		.long	.L24-.L25
 390 0154 00000000 		.long	.L24-.L25
 391 0158 00000000 		.long	.L24-.L25
 392 015c 00000000 		.long	.L24-.L25
 393 0160 00000000 		.long	.L36-.L25
 394 0164 00000000 		.long	.L24-.L25
 395 0168 00000000 		.long	.L36-.L25
 396              		.section	.text.find_keyword
 397              	.LVL35:
 398              	.L38:
 399              	.LBE56:
 400              	.LBE55:
 401              	.LBB57:
 402              	.LBB52:
  99:src/mcu_msg.c **** }
 403              		.loc 1 99 0
 404 00d0 BA010000 		movl	$1, %edx
 404      00
 405              	.LVL36:
 406 00d5 EBB1     		jmp	.L26
 407              	.L39:
 408 00d7 BA000000 		movl	$0, %edx
 408      00
 409 00dc EBAA     		jmp	.L26
 410              	.LVL37:
 411              	.L42:
 412              	.LBE52:
 413              	.LBE57:
 166:src/mcu_msg.c ****             for(i = 0; is_in_str_buff(str, res.s + i) && i < res.len; i++) {
 414              		.loc 1 166 0
 415 00de BF010000 		movl	$1, %edi
 415      00
 416 00e3 EB18     		jmp	.L30
 417              	.L35:
 170:src/mcu_msg.c ****                     break;
 418              		.loc 1 170 0
 419 00e5 BF000000 		movl	$0, %edi
 419      00
 420 00ea EB11     		jmp	.L30
 421              	.LVL38:
 422              	.L36:
 423 00ec BF000000 		movl	$0, %edi
 423      00
GAS LISTING /tmp/cc8zL7Df.s 			page 17


 424 00f1 EB0A     		jmp	.L30
 425              	.LVL39:
 426              	.L40:
 166:src/mcu_msg.c ****             for(i = 0; is_in_str_buff(str, res.s + i) && i < res.len; i++) {
 427              		.loc 1 166 0
 428 00f3 BF010000 		movl	$1, %edi
 428      00
 429 00f8 EB03     		jmp	.L30
 430              	.LVL40:
 431              	.L29:
 174:src/mcu_msg.c ****             if(equal && *(res.s + i) == stopc) {
 432              		.loc 1 174 0
 433 00fa 83C001   		addl	$1, %eax
 434              	.LVL41:
 435              	.L30:
 174:src/mcu_msg.c ****             if(equal && *(res.s + i) == stopc) {
 436              		.loc 1 174 0 is_stmt 0 discriminator 1
 437 00fd 0FB7D8   		movzwl	%ax, %ebx
 438 0100 4801F3   		addq	%rsi, %rbx
 439              	.LVL42:
 440              	.LBB58:
 441              	.LBB59:
 121:src/mcu_msg.c **** }
 442              		.loc 1 121 0 is_stmt 1 discriminator 1
 443 0103 4889D9   		movq	%rbx, %rcx
 444 0106 4C29E1   		subq	%r12, %rcx
 445 0109 0FB7D5   		movzwl	%bp, %edx
 446              	.LVL43:
 447              	.LBE59:
 448              	.LBE58:
 174:src/mcu_msg.c ****             if(equal && *(res.s + i) == stopc) {
 449              		.loc 1 174 0 discriminator 1
 450 010c 4839D1   		cmpq	%rdx, %rcx
 451 010f 7D12     		jge	.L28
 174:src/mcu_msg.c ****             if(equal && *(res.s + i) == stopc) {
 452              		.loc 1 174 0 is_stmt 0 discriminator 2
 453 0111 0FB613   		movzbl	(%rbx), %edx
 454              	.LVL44:
 455              	.LBB60:
 456              	.LBB61:
  76:src/mcu_msg.c ****         case  ' ':
 457              		.loc 1 76 0 is_stmt 1 discriminator 2
 458 0114 80FA09   		cmpb	$9, %dl
 459 0117 7C0A     		jl	.L28
 460 0119 80FA0D   		cmpb	$13, %dl
 461 011c 7EDC     		jle	.L29
 462 011e 80FA20   		cmpb	$32, %dl
 463 0121 74D7     		je	.L29
 464              	.LVL45:
 465              	.L28:
 466              	.LBE61:
 467              	.LBE60:
 175:src/mcu_msg.c ****                 return res;
 468              		.loc 1 175 0
 469 0123 4084FF   		testb	%dil, %dil
 470 0126 7409     		je	.L21
 175:src/mcu_msg.c ****                 return res;
GAS LISTING /tmp/cc8zL7Df.s 			page 18


 471              		.loc 1 175 0 is_stmt 0 discriminator 1
 472 0128 0FB64424 		movzbl	15(%rsp), %eax
 472      0F
 473              	.LVL46:
 474 012d 3803     		cmpb	%al, (%rbx)
 475 012f 7451     		je	.L43
 476              	.LVL47:
 477              	.L21:
 181:src/mcu_msg.c ****     }
 478              		.loc 1 181 0 is_stmt 1
 479 0131 4883C301 		addq	$1, %rbx
 480              	.LVL48:
 481              	.L19:
 482              	.LBB62:
 483              	.LBB63:
 121:src/mcu_msg.c **** }
 484              		.loc 1 121 0
 485 0135 4889DA   		movq	%rbx, %rdx
 486 0138 4C29E2   		subq	%r12, %rdx
 487 013b 0FB7C5   		movzwl	%bp, %eax
 488              	.LVL49:
 489              	.LBE63:
 490              	.LBE62:
 160:src/mcu_msg.c ****         if(*p == '\'' || *p == '"') { //skip internal strings
 491              		.loc 1 160 0
 492 013e 4839C2   		cmpq	%rax, %rdx
 493 0141 7D4B     		jge	.L32
 160:src/mcu_msg.c ****         if(*p == '\'' || *p == '"') { //skip internal strings
 494              		.loc 1 160 0 is_stmt 0 discriminator 1
 495 0143 0FB603   		movzbl	(%rbx), %eax
 496 0146 84C0     		testb	%al, %al
 497 0148 7444     		je	.L32
 161:src/mcu_msg.c ****             p = skip_internal_str(p);
 498              		.loc 1 161 0 is_stmt 1
 499 014a 3C27     		cmpb	$39, %al
 500 014c 0F94C2   		sete	%dl
 501 014f 3C22     		cmpb	$34, %al
 502 0151 0F94C0   		sete	%al
 503 0154 08C2     		orb	%al, %dl
 504 0156 0F85EBFE 		jne	.L44
 504      FFFF
 505              	.L20:
 506              	.LVL50:
 507              	.LBB64:
 508              	.LBB65:
 121:src/mcu_msg.c **** }
 509              		.loc 1 121 0
 510 015c 4889DA   		movq	%rbx, %rdx
 511 015f 4C29E2   		subq	%r12, %rdx
 512 0162 0FB7C5   		movzwl	%bp, %eax
 513              	.LVL51:
 514              	.LBE65:
 515              	.LBE64:
 164:src/mcu_msg.c ****             res.s = p + 1;
 516              		.loc 1 164 0
 517 0165 4839C2   		cmpq	%rax, %rdx
 518 0168 7DC7     		jge	.L21
GAS LISTING /tmp/cc8zL7Df.s 			page 19


 164:src/mcu_msg.c ****             res.s = p + 1;
 519              		.loc 1 164 0 is_stmt 0 discriminator 1
 520 016a 44383B   		cmpb	%r15b, (%rbx)
 521 016d 75C2     		jne	.L21
 165:src/mcu_msg.c ****             equal = 1;
 522              		.loc 1 165 0 is_stmt 1
 523 016f 488D7301 		leaq	1(%rbx), %rsi
 524 0173 48897424 		movq	%rsi, 16(%rsp)
 524      10
 525              	.LVL52:
 167:src/mcu_msg.c ****                 if((*(res.s + i) != *(keyword + i)) || is_ctrl_char(*(res.s + i)) || 
 526              		.loc 1 167 0
 527 0178 B8000000 		movl	$0, %eax
 527      00
 528 017d E90FFFFF 		jmp	.L22
 528      FF
 529              	.LVL53:
 530              	.L43:
 176:src/mcu_msg.c ****             } else {
 531              		.loc 1 176 0
 532 0182 488B4424 		movq	16(%rsp), %rax
 532      10
 533 0187 488B5424 		movq	24(%rsp), %rdx
 533      18
 534 018c EB14     		jmp	.L31
 535              	.LVL54:
 536              	.L32:
 184:src/mcu_msg.c ****     return res;
 537              		.loc 1 184 0
 538 018e 488D7C24 		leaq	16(%rsp), %rdi
 538      10
 539 0193 E8000000 		call	mcu_msg_destroy_string
 539      00
 540              	.LVL55:
 185:src/mcu_msg.c **** }
 541              		.loc 1 185 0
 542 0198 488B4424 		movq	16(%rsp), %rax
 542      10
 543 019d 488B5424 		movq	24(%rsp), %rdx
 543      18
 544              	.LVL56:
 545              	.L31:
 186:src/mcu_msg.c **** 
 546              		.loc 1 186 0
 547 01a2 488B7424 		movq	40(%rsp), %rsi
 547      28
 548 01a7 64483334 		xorq	%fs:40, %rsi
 548      25280000 
 548      00
 549 01b0 750F     		jne	.L45
 550 01b2 4883C438 		addq	$56, %rsp
 551              	.LCFI7:
 552              		.cfi_remember_state
 553              		.cfi_def_cfa_offset 56
 554 01b6 5B       		popq	%rbx
 555              	.LCFI8:
 556              		.cfi_def_cfa_offset 48
GAS LISTING /tmp/cc8zL7Df.s 			page 20


 557 01b7 5D       		popq	%rbp
 558              	.LCFI9:
 559              		.cfi_def_cfa_offset 40
 560              	.LVL57:
 561 01b8 415C     		popq	%r12
 562              	.LCFI10:
 563              		.cfi_def_cfa_offset 32
 564 01ba 415D     		popq	%r13
 565              	.LCFI11:
 566              		.cfi_def_cfa_offset 24
 567 01bc 415E     		popq	%r14
 568              	.LCFI12:
 569              		.cfi_def_cfa_offset 16
 570              	.LVL58:
 571 01be 415F     		popq	%r15
 572              	.LCFI13:
 573              		.cfi_def_cfa_offset 8
 574              	.LVL59:
 575 01c0 C3       		ret
 576              	.LVL60:
 577              	.L45:
 578              	.LCFI14:
 579              		.cfi_restore_state
 580 01c1 E8000000 		call	__stack_chk_fail@PLT
 580      00
 581              	.LVL61:
 582              		.cfi_endproc
 583              	.LFE36:
 585              		.section	.text.find_val,"ax",@progbits
 587              	find_val:
 588              	.LFB37:
 198:src/mcu_msg.c ****     mcu_msg_string_t res  = find_keyword(obj.content, key, CTRL_KEY_FLAG, CTRL_KEY_EQU); //object s
 589              		.loc 1 198 0
 590              		.cfi_startproc
 591              	.LVL62:
 592 0000 4883EC28 		subq	$40, %rsp
 593              	.LCFI15:
 594              		.cfi_def_cfa_offset 48
 595 0004 4889FA   		movq	%rdi, %rdx
 198:src/mcu_msg.c ****     mcu_msg_string_t res  = find_keyword(obj.content, key, CTRL_KEY_FLAG, CTRL_KEY_EQU); //object s
 596              		.loc 1 198 0
 597 0007 64488B04 		movq	%fs:40, %rax
 597      25280000 
 597      00
 598 0010 48894424 		movq	%rax, 24(%rsp)
 598      18
 599 0015 31C0     		xorl	%eax, %eax
 199:src/mcu_msg.c ****     char *p;
 600              		.loc 1 199 0
 601 0017 41B83D00 		movl	$61, %r8d
 601      0000
 602 001d B9240000 		movl	$36, %ecx
 602      00
 603 0022 488B7C24 		movq	64(%rsp), %rdi
 603      40
 604              	.LVL63:
 605 0027 488B7424 		movq	72(%rsp), %rsi
GAS LISTING /tmp/cc8zL7Df.s 			page 21


 605      48
 606 002c E8000000 		call	find_keyword
 606      00
 607              	.LVL64:
 608 0031 48890424 		movq	%rax, (%rsp)
 609 0035 48895424 		movq	%rdx, 8(%rsp)
 609      08
 201:src/mcu_msg.c ****         mcu_msg_destroy_string(&res);
 610              		.loc 1 201 0
 611 003a 4885C0   		testq	%rax, %rax
 612 003d 7413     		je	.L62
 205:src/mcu_msg.c ****         while(is_in_str_buff(obj.content, res.s) && *res.s != CTRL_KEY_EQU) res.s++;
 613              		.loc 1 205 0
 614 003f 80383D   		cmpb	$61, (%rax)
 615 0042 752C     		jne	.L49
 616              	.L50:
 208:src/mcu_msg.c ****     while(is_in_str_buff(obj.content, res.s) && is_whitespace(*res.s)) res.s++; //skip spaces after
 617              		.loc 1 208 0
 618 0044 488B0424 		movq	(%rsp), %rax
 619 0048 4883C001 		addq	$1, %rax
 620 004c 48890424 		movq	%rax, (%rsp)
 209:src/mcu_msg.c ****     
 621              		.loc 1 209 0
 622 0050 EB43     		jmp	.L54
 623              	.L62:
 202:src/mcu_msg.c ****         return res;
 624              		.loc 1 202 0
 625 0052 4889E7   		movq	%rsp, %rdi
 626 0055 E8000000 		call	mcu_msg_destroy_string
 626      00
 627              	.LVL65:
 203:src/mcu_msg.c ****     }
 628              		.loc 1 203 0
 629 005a 488B0424 		movq	(%rsp), %rax
 630 005e 488B5424 		movq	8(%rsp), %rdx
 630      08
 631 0063 E9B80000 		jmp	.L48
 631      00
 632              	.L51:
 206:src/mcu_msg.c ****     }
 633              		.loc 1 206 0 discriminator 3
 634 0068 4883C001 		addq	$1, %rax
 635 006c 48890424 		movq	%rax, (%rsp)
 636              	.L49:
 206:src/mcu_msg.c ****     }
 637              		.loc 1 206 0 is_stmt 0 discriminator 1
 638 0070 488B0424 		movq	(%rsp), %rax
 639              	.LVL66:
 640              	.LBB66:
 641              	.LBB67:
 121:src/mcu_msg.c **** }
 642              		.loc 1 121 0 is_stmt 1 discriminator 1
 643 0074 4889C2   		movq	%rax, %rdx
 644 0077 482B5424 		subq	64(%rsp), %rdx
 644      40
 645 007c 0FB74C24 		movzwl	72(%rsp), %ecx
 645      48
GAS LISTING /tmp/cc8zL7Df.s 			page 22


 646              	.LVL67:
 647              	.LBE67:
 648              	.LBE66:
 206:src/mcu_msg.c ****     }
 649              		.loc 1 206 0 discriminator 1
 650 0081 4839D1   		cmpq	%rdx, %rcx
 651 0084 7EBE     		jle	.L50
 206:src/mcu_msg.c ****     }
 652              		.loc 1 206 0 is_stmt 0 discriminator 2
 653 0086 80383D   		cmpb	$61, (%rax)
 654 0089 75DD     		jne	.L51
 655 008b EBB7     		jmp	.L50
 656              	.LVL68:
 657              	.L53:
 209:src/mcu_msg.c ****     
 658              		.loc 1 209 0 is_stmt 1
 659 008d 4883C001 		addq	$1, %rax
 660 0091 48890424 		movq	%rax, (%rsp)
 661              	.L54:
 209:src/mcu_msg.c ****     
 662              		.loc 1 209 0 is_stmt 0 discriminator 1
 663 0095 488B0424 		movq	(%rsp), %rax
 664              	.LVL69:
 665              	.LBB68:
 666              	.LBB69:
 121:src/mcu_msg.c **** }
 667              		.loc 1 121 0 is_stmt 1 discriminator 1
 668 0099 4889C7   		movq	%rax, %rdi
 669 009c 4889C1   		movq	%rax, %rcx
 670 009f 482B4C24 		subq	64(%rsp), %rcx
 670      40
 671 00a4 0FB75424 		movzwl	72(%rsp), %edx
 671      48
 672              	.LVL70:
 673              	.LBE69:
 674              	.LBE68:
 209:src/mcu_msg.c ****     
 675              		.loc 1 209 0 discriminator 1
 676 00a9 4839D1   		cmpq	%rdx, %rcx
 677 00ac 7D12     		jge	.L52
 209:src/mcu_msg.c ****     
 678              		.loc 1 209 0 is_stmt 0 discriminator 2
 679 00ae 0FB610   		movzbl	(%rax), %edx
 680              	.LVL71:
 681              	.LBB70:
 682              	.LBB71:
  76:src/mcu_msg.c ****         case  ' ':
 683              		.loc 1 76 0 is_stmt 1 discriminator 2
 684 00b1 80FA09   		cmpb	$9, %dl
 685 00b4 7C0A     		jl	.L52
 686 00b6 80FA0D   		cmpb	$13, %dl
 687 00b9 7ED2     		jle	.L53
 688 00bb 80FA20   		cmpb	$32, %dl
 689 00be 74CD     		je	.L53
 690              	.LVL72:
 691              	.L52:
 692              	.LBE71:
GAS LISTING /tmp/cc8zL7Df.s 			page 23


 693              	.LBE70:
 211:src/mcu_msg.c ****     p = res.s;
 694              		.loc 1 211 0
 695 00c0 66C74424 		movw	$0, 8(%rsp)
 695      080000
 696              	.LVL73:
 213:src/mcu_msg.c ****     res.len = p - res.s;
 697              		.loc 1 213 0
 698 00c7 EB04     		jmp	.L59
 699              	.LVL74:
 700              	.L57:
 701 00c9 4883C001 		addq	$1, %rax
 702              	.LVL75:
 703              	.L59:
 704              	.LBB72:
 705              	.LBB73:
 121:src/mcu_msg.c **** }
 706              		.loc 1 121 0 discriminator 1
 707 00cd 4889C6   		movq	%rax, %rsi
 708 00d0 4889C1   		movq	%rax, %rcx
 709 00d3 482B4C24 		subq	64(%rsp), %rcx
 709      40
 710 00d8 0FB75424 		movzwl	72(%rsp), %edx
 710      48
 711              	.LVL76:
 712              	.LBE73:
 713              	.LBE72:
 213:src/mcu_msg.c ****     res.len = p - res.s;
 714              		.loc 1 213 0 discriminator 1
 715 00dd 4839D1   		cmpq	%rdx, %rcx
 716 00e0 7D2D     		jge	.L55
 213:src/mcu_msg.c ****     res.len = p - res.s;
 717              		.loc 1 213 0 is_stmt 0 discriminator 2
 718 00e2 0FB610   		movzbl	(%rax), %edx
 719              	.LVL77:
 720              	.LBB74:
 721              	.LBB75:
  76:src/mcu_msg.c ****         case  ' ':
 722              		.loc 1 76 0 is_stmt 1 discriminator 2
 723 00e5 80FA09   		cmpb	$9, %dl
 724 00e8 7C0A     		jl	.L56
 725 00ea 80FA0D   		cmpb	$13, %dl
 726 00ed 7E20     		jle	.L55
 727 00ef 80FA20   		cmpb	$32, %dl
 728 00f2 741B     		je	.L55
 729              	.L56:
 730              	.LVL78:
 731              	.LBE75:
 732              	.LBE74:
 733              	.LBB76:
 734              	.LBB77:
  55:src/mcu_msg.c ****         case CTRL_MSG_FLAG:
 735              		.loc 1 55 0
 736 00f4 83EA23   		subl	$35, %edx
 737              	.LVL79:
 738 00f7 80FA5A   		cmpb	$90, %dl
 739 00fa 77CD     		ja	.L57
GAS LISTING /tmp/cc8zL7Df.s 			page 24


 740 00fc 0FB6D2   		movzbl	%dl, %edx
 741 00ff 488D0D00 		leaq	.L58(%rip), %rcx
 741      000000
 742 0106 48631491 		movslq	(%rcx,%rdx,4), %rdx
 743 010a 4801CA   		addq	%rcx, %rdx
 744 010d FFE2     		jmp	*%rdx
 745              		.section	.rodata.find_val,"a",@progbits
 746              		.align 4
 747              		.align 4
 748              	.L58:
 749 0000 00000000 		.long	.L55-.L58
 750 0004 00000000 		.long	.L55-.L58
 751 0008 00000000 		.long	.L57-.L58
 752 000c 00000000 		.long	.L57-.L58
 753 0010 00000000 		.long	.L57-.L58
 754 0014 00000000 		.long	.L55-.L58
 755 0018 00000000 		.long	.L55-.L58
 756 001c 00000000 		.long	.L57-.L58
 757 0020 00000000 		.long	.L57-.L58
 758 0024 00000000 		.long	.L57-.L58
 759 0028 00000000 		.long	.L57-.L58
 760 002c 00000000 		.long	.L57-.L58
 761 0030 00000000 		.long	.L57-.L58
 762 0034 00000000 		.long	.L57-.L58
 763 0038 00000000 		.long	.L57-.L58
 764 003c 00000000 		.long	.L57-.L58
 765 0040 00000000 		.long	.L57-.L58
 766 0044 00000000 		.long	.L57-.L58
 767 0048 00000000 		.long	.L57-.L58
 768 004c 00000000 		.long	.L57-.L58
 769 0050 00000000 		.long	.L57-.L58
 770 0054 00000000 		.long	.L57-.L58
 771 0058 00000000 		.long	.L57-.L58
 772 005c 00000000 		.long	.L57-.L58
 773 0060 00000000 		.long	.L55-.L58
 774 0064 00000000 		.long	.L55-.L58
 775 0068 00000000 		.long	.L55-.L58
 776 006c 00000000 		.long	.L55-.L58
 777 0070 00000000 		.long	.L57-.L58
 778 0074 00000000 		.long	.L55-.L58
 779 0078 00000000 		.long	.L57-.L58
 780 007c 00000000 		.long	.L57-.L58
 781 0080 00000000 		.long	.L57-.L58
 782 0084 00000000 		.long	.L57-.L58
 783 0088 00000000 		.long	.L57-.L58
 784 008c 00000000 		.long	.L57-.L58
 785 0090 00000000 		.long	.L57-.L58
 786 0094 00000000 		.long	.L57-.L58
 787 0098 00000000 		.long	.L57-.L58
 788 009c 00000000 		.long	.L57-.L58
 789 00a0 00000000 		.long	.L57-.L58
 790 00a4 00000000 		.long	.L57-.L58
 791 00a8 00000000 		.long	.L57-.L58
 792 00ac 00000000 		.long	.L57-.L58
 793 00b0 00000000 		.long	.L57-.L58
 794 00b4 00000000 		.long	.L57-.L58
 795 00b8 00000000 		.long	.L57-.L58
GAS LISTING /tmp/cc8zL7Df.s 			page 25


 796 00bc 00000000 		.long	.L57-.L58
 797 00c0 00000000 		.long	.L57-.L58
 798 00c4 00000000 		.long	.L57-.L58
 799 00c8 00000000 		.long	.L57-.L58
 800 00cc 00000000 		.long	.L57-.L58
 801 00d0 00000000 		.long	.L57-.L58
 802 00d4 00000000 		.long	.L57-.L58
 803 00d8 00000000 		.long	.L57-.L58
 804 00dc 00000000 		.long	.L57-.L58
 805 00e0 00000000 		.long	.L57-.L58
 806 00e4 00000000 		.long	.L57-.L58
 807 00e8 00000000 		.long	.L57-.L58
 808 00ec 00000000 		.long	.L57-.L58
 809 00f0 00000000 		.long	.L57-.L58
 810 00f4 00000000 		.long	.L57-.L58
 811 00f8 00000000 		.long	.L57-.L58
 812 00fc 00000000 		.long	.L57-.L58
 813 0100 00000000 		.long	.L57-.L58
 814 0104 00000000 		.long	.L57-.L58
 815 0108 00000000 		.long	.L57-.L58
 816 010c 00000000 		.long	.L57-.L58
 817 0110 00000000 		.long	.L57-.L58
 818 0114 00000000 		.long	.L57-.L58
 819 0118 00000000 		.long	.L57-.L58
 820 011c 00000000 		.long	.L57-.L58
 821 0120 00000000 		.long	.L57-.L58
 822 0124 00000000 		.long	.L57-.L58
 823 0128 00000000 		.long	.L57-.L58
 824 012c 00000000 		.long	.L57-.L58
 825 0130 00000000 		.long	.L57-.L58
 826 0134 00000000 		.long	.L57-.L58
 827 0138 00000000 		.long	.L57-.L58
 828 013c 00000000 		.long	.L57-.L58
 829 0140 00000000 		.long	.L57-.L58
 830 0144 00000000 		.long	.L57-.L58
 831 0148 00000000 		.long	.L57-.L58
 832 014c 00000000 		.long	.L57-.L58
 833 0150 00000000 		.long	.L57-.L58
 834 0154 00000000 		.long	.L57-.L58
 835 0158 00000000 		.long	.L57-.L58
 836 015c 00000000 		.long	.L57-.L58
 837 0160 00000000 		.long	.L55-.L58
 838 0164 00000000 		.long	.L57-.L58
 839 0168 00000000 		.long	.L55-.L58
 840              		.section	.text.find_val
 841              	.LVL80:
 842              	.L55:
 843              	.LBE77:
 844              	.LBE76:
 214:src/mcu_msg.c **** 
 845              		.loc 1 214 0
 846 010f 4829FE   		subq	%rdi, %rsi
 847 0112 66897424 		movw	%si, 8(%rsp)
 847      08
 216:src/mcu_msg.c **** }
 848              		.loc 1 216 0
 849 0117 488B0424 		movq	(%rsp), %rax
GAS LISTING /tmp/cc8zL7Df.s 			page 26


 850              	.LVL81:
 851 011b 488B5424 		movq	8(%rsp), %rdx
 851      08
 852              	.L48:
 217:src/mcu_msg.c **** 
 853              		.loc 1 217 0
 854 0120 488B7C24 		movq	24(%rsp), %rdi
 854      18
 855 0125 6448333C 		xorq	%fs:40, %rdi
 855      25280000 
 855      00
 856 012e 7505     		jne	.L63
 857 0130 4883C428 		addq	$40, %rsp
 858              	.LCFI16:
 859              		.cfi_remember_state
 860              		.cfi_def_cfa_offset 8
 861 0134 C3       		ret
 862              	.L63:
 863              	.LCFI17:
 864              		.cfi_restore_state
 865 0135 E8000000 		call	__stack_chk_fail@PLT
 865      00
 866              	.LVL82:
 867              		.cfi_endproc
 868              	.LFE37:
 870              		.section	.text.mcu_msg_destroy,"ax",@progbits
 871              		.globl	mcu_msg_destroy
 873              	mcu_msg_destroy:
 874              	.LFB28:
  34:src/mcu_msg.c ****     mcu_msg_destroy_string(&msg->id);
 875              		.loc 1 34 0
 876              		.cfi_startproc
 877              	.LVL83:
 878 0000 53       		pushq	%rbx
 879              	.LCFI18:
 880              		.cfi_def_cfa_offset 16
 881              		.cfi_offset 3, -16
 882 0001 4889FB   		movq	%rdi, %rbx
  35:src/mcu_msg.c ****     mcu_msg_destroy_string(&msg->content);
 883              		.loc 1 35 0
 884 0004 E8000000 		call	mcu_msg_destroy_string
 884      00
 885              	.LVL84:
  36:src/mcu_msg.c **** }
 886              		.loc 1 36 0
 887 0009 488D7B10 		leaq	16(%rbx), %rdi
 888 000d E8000000 		call	mcu_msg_destroy_string
 888      00
 889              	.LVL85:
  37:src/mcu_msg.c **** 
 890              		.loc 1 37 0
 891 0012 5B       		popq	%rbx
 892              	.LCFI19:
 893              		.cfi_def_cfa_offset 8
 894              	.LVL86:
 895 0013 C3       		ret
 896              		.cfi_endproc
GAS LISTING /tmp/cc8zL7Df.s 			page 27


 897              	.LFE28:
 899              		.section	.text.mcu_msg_destroy_obj,"ax",@progbits
 900              		.globl	mcu_msg_destroy_obj
 902              	mcu_msg_destroy_obj:
 903              	.LFB29:
  40:src/mcu_msg.c ****     mcu_msg_destroy_string(&obj->id);
 904              		.loc 1 40 0
 905              		.cfi_startproc
 906              	.LVL87:
 907 0000 53       		pushq	%rbx
 908              	.LCFI20:
 909              		.cfi_def_cfa_offset 16
 910              		.cfi_offset 3, -16
 911 0001 4889FB   		movq	%rdi, %rbx
  41:src/mcu_msg.c ****     mcu_msg_destroy_string(&obj->content);
 912              		.loc 1 41 0
 913 0004 E8000000 		call	mcu_msg_destroy_string
 913      00
 914              	.LVL88:
  42:src/mcu_msg.c **** }
 915              		.loc 1 42 0
 916 0009 488D7B10 		leaq	16(%rbx), %rdi
 917 000d E8000000 		call	mcu_msg_destroy_string
 917      00
 918              	.LVL89:
  43:src/mcu_msg.c **** 
 919              		.loc 1 43 0
 920 0012 5B       		popq	%rbx
 921              	.LCFI21:
 922              		.cfi_def_cfa_offset 8
 923              	.LVL90:
 924 0013 C3       		ret
 925              		.cfi_endproc
 926              	.LFE29:
 928              		.section	.text.mcu_msg_get,"ax",@progbits
 929              		.globl	mcu_msg_get
 931              	mcu_msg_get:
 932              	.LFB38:
 222:src/mcu_msg.c ****     mcu_msg_t res;
 933              		.loc 1 222 0
 934              		.cfi_startproc
 935              	.LVL91:
 936 0000 53       		pushq	%rbx
 937              	.LCFI22:
 938              		.cfi_def_cfa_offset 16
 939              		.cfi_offset 3, -16
 940 0001 4883EC30 		subq	$48, %rsp
 941              	.LCFI23:
 942              		.cfi_def_cfa_offset 64
 943 0005 4889FB   		movq	%rdi, %rbx
 222:src/mcu_msg.c ****     mcu_msg_t res;
 944              		.loc 1 222 0
 945 0008 64488B04 		movq	%fs:40, %rax
 945      25280000 
 945      00
 946 0011 48894424 		movq	%rax, 40(%rsp)
 946      28
GAS LISTING /tmp/cc8zL7Df.s 			page 28


 947 0016 31C0     		xorl	%eax, %eax
 224:src/mcu_msg.c ****     res.content.len = len;
 948              		.loc 1 224 0
 949 0018 48897424 		movq	%rsi, 16(%rsp)
 949      10
 225:src/mcu_msg.c ****     res.id = find_keyword(res.content, id, CTRL_MSG_FLAG, CTRL_START_MSG); //object start with @ an
 950              		.loc 1 225 0
 951 001d 66894C24 		movw	%cx, 24(%rsp)
 951      18
 226:src/mcu_msg.c ****     char *p;
 952              		.loc 1 226 0
 953 0022 41B87B00 		movl	$123, %r8d
 953      0000
 954 0028 B9230000 		movl	$35, %ecx
 954      00
 955              	.LVL92:
 956 002d 4889F7   		movq	%rsi, %rdi
 957              	.LVL93:
 958 0030 488B7424 		movq	24(%rsp), %rsi
 958      18
 959              	.LVL94:
 960 0035 E8000000 		call	find_keyword
 960      00
 961              	.LVL95:
 962 003a 48890424 		movq	%rax, (%rsp)
 963 003e 48895424 		movq	%rdx, 8(%rsp)
 963      08
 228:src/mcu_msg.c ****         mcu_msg_destroy(&res);
 964              		.loc 1 228 0
 965 0043 4885C0   		testq	%rax, %rax
 966 0046 7413     		je	.L79
 232:src/mcu_msg.c ****     if (*p != CTRL_START_MSG) {
 967              		.loc 1 232 0
 968 0048 0FB75424 		movzwl	8(%rsp), %edx
 968      08
 969 004d 4801D0   		addq	%rdx, %rax
 970              	.LVL96:
 233:src/mcu_msg.c ****         while(is_in_str_buff(res.content, p) && *p != CTRL_START_MSG) p++;
 971              		.loc 1 233 0
 972 0050 80387B   		cmpb	$123, (%rax)
 973 0053 7536     		jne	.L71
 974              	.L72:
 236:src/mcu_msg.c ****     while(is_in_str_buff(res.content, p) && *p != CTRL_STOP_MSG) {
 975              		.loc 1 236 0
 976 0055 4883C001 		addq	$1, %rax
 977              	.LVL97:
 237:src/mcu_msg.c ****         p++;
 978              		.loc 1 237 0
 979 0059 EB4D     		jmp	.L74
 980              	.LVL98:
 981              	.L79:
 229:src/mcu_msg.c ****         return res;
 982              		.loc 1 229 0
 983 005b 4889E7   		movq	%rsp, %rdi
 984 005e E8000000 		call	mcu_msg_destroy
 984      00
 985              	.LVL99:
GAS LISTING /tmp/cc8zL7Df.s 			page 29


 230:src/mcu_msg.c ****     }
 986              		.loc 1 230 0
 987 0063 488B0424 		movq	(%rsp), %rax
 988 0067 488B5424 		movq	8(%rsp), %rdx
 988      08
 989 006c 488903   		movq	%rax, (%rbx)
 990 006f 48895308 		movq	%rdx, 8(%rbx)
 991 0073 488B4424 		movq	16(%rsp), %rax
 991      10
 992 0078 488B5424 		movq	24(%rsp), %rdx
 992      18
 993 007d 48894310 		movq	%rax, 16(%rbx)
 994 0081 48895318 		movq	%rdx, 24(%rbx)
 995 0085 EB67     		jmp	.L68
 996              	.LVL100:
 997              	.L73:
 234:src/mcu_msg.c ****     }
 998              		.loc 1 234 0 discriminator 3
 999 0087 4883C001 		addq	$1, %rax
 1000              	.LVL101:
 1001              	.L71:
 1002              	.LBB78:
 1003              	.LBB79:
 121:src/mcu_msg.c **** }
 1004              		.loc 1 121 0 discriminator 1
 1005 008b 4889C1   		movq	%rax, %rcx
 1006 008e 482B4C24 		subq	16(%rsp), %rcx
 1006      10
 1007 0093 0FB75424 		movzwl	24(%rsp), %edx
 1007      18
 1008              	.LVL102:
 1009              	.LBE79:
 1010              	.LBE78:
 234:src/mcu_msg.c ****     }
 1011              		.loc 1 234 0 discriminator 1
 1012 0098 4839D1   		cmpq	%rdx, %rcx
 1013 009b 7DB8     		jge	.L72
 234:src/mcu_msg.c ****     }
 1014              		.loc 1 234 0 is_stmt 0 discriminator 2
 1015 009d 80387B   		cmpb	$123, (%rax)
 1016 00a0 75E5     		jne	.L73
 1017 00a2 EBB1     		jmp	.L72
 1018              	.L76:
 238:src/mcu_msg.c ****     }
 1019              		.loc 1 238 0 is_stmt 1
 1020 00a4 4883C001 		addq	$1, %rax
 1021              	.LVL103:
 1022              	.L74:
 1023              	.LBB80:
 1024              	.LBB81:
 121:src/mcu_msg.c **** }
 1025              		.loc 1 121 0
 1026 00a8 4889C6   		movq	%rax, %rsi
 1027 00ab 4889C1   		movq	%rax, %rcx
 1028 00ae 482B4C24 		subq	16(%rsp), %rcx
 1028      10
 1029 00b3 0FB75424 		movzwl	24(%rsp), %edx
GAS LISTING /tmp/cc8zL7Df.s 			page 30


 1029      18
 1030              	.LVL104:
 1031              	.LBE81:
 1032              	.LBE80:
 237:src/mcu_msg.c ****         p++;
 1033              		.loc 1 237 0
 1034 00b8 4839D1   		cmpq	%rdx, %rcx
 1035 00bb 7D05     		jge	.L75
 237:src/mcu_msg.c ****         p++;
 1036              		.loc 1 237 0 is_stmt 0 discriminator 1
 1037 00bd 80387D   		cmpb	$125, (%rax)
 1038 00c0 75E2     		jne	.L76
 1039              	.L75:
 240:src/mcu_msg.c ****     return res;
 1040              		.loc 1 240 0 is_stmt 1
 1041 00c2 482B7424 		subq	16(%rsp), %rsi
 1041      10
 1042 00c7 66897424 		movw	%si, 24(%rsp)
 1042      18
 241:src/mcu_msg.c **** }
 1043              		.loc 1 241 0
 1044 00cc 488B0424 		movq	(%rsp), %rax
 1045              	.LVL105:
 1046 00d0 488B5424 		movq	8(%rsp), %rdx
 1046      08
 1047 00d5 488903   		movq	%rax, (%rbx)
 1048 00d8 48895308 		movq	%rdx, 8(%rbx)
 1049 00dc 488B4424 		movq	16(%rsp), %rax
 1049      10
 1050 00e1 488B5424 		movq	24(%rsp), %rdx
 1050      18
 1051 00e6 48894310 		movq	%rax, 16(%rbx)
 1052 00ea 48895318 		movq	%rdx, 24(%rbx)
 1053              	.L68:
 242:src/mcu_msg.c **** 
 1054              		.loc 1 242 0
 1055 00ee 4889D8   		movq	%rbx, %rax
 1056 00f1 488B7C24 		movq	40(%rsp), %rdi
 1056      28
 1057 00f6 6448333C 		xorq	%fs:40, %rdi
 1057      25280000 
 1057      00
 1058 00ff 7506     		jne	.L80
 1059              	.LVL106:
 1060 0101 4883C430 		addq	$48, %rsp
 1061              	.LCFI24:
 1062              		.cfi_remember_state
 1063              		.cfi_def_cfa_offset 16
 1064 0105 5B       		popq	%rbx
 1065              	.LCFI25:
 1066              		.cfi_def_cfa_offset 8
 1067 0106 C3       		ret
 1068              	.L80:
 1069              	.LCFI26:
 1070              		.cfi_restore_state
 1071 0107 E8000000 		call	__stack_chk_fail@PLT
 1071      00
GAS LISTING /tmp/cc8zL7Df.s 			page 31


 1072              	.LVL107:
 1073              		.cfi_endproc
 1074              	.LFE38:
 1076              		.section	.text.mcu_msg_parser_get_obj,"ax",@progbits
 1077              		.globl	mcu_msg_parser_get_obj
 1079              	mcu_msg_parser_get_obj:
 1080              	.LFB39:
 247:src/mcu_msg.c ****     mcu_msg_obj_t res;
 1081              		.loc 1 247 0
 1082              		.cfi_startproc
 1083              	.LVL108:
 1084 0000 53       		pushq	%rbx
 1085              	.LCFI27:
 1086              		.cfi_def_cfa_offset 16
 1087              		.cfi_offset 3, -16
 1088 0001 4883EC30 		subq	$48, %rsp
 1089              	.LCFI28:
 1090              		.cfi_def_cfa_offset 64
 1091 0005 4889FB   		movq	%rdi, %rbx
 1092 0008 4889F2   		movq	%rsi, %rdx
 247:src/mcu_msg.c ****     mcu_msg_obj_t res;
 1093              		.loc 1 247 0
 1094 000b 64488B04 		movq	%fs:40, %rax
 1094      25280000 
 1094      00
 1095 0014 48894424 		movq	%rax, 40(%rsp)
 1095      28
 1096 0019 31C0     		xorl	%eax, %eax
 249:src/mcu_msg.c ****     char *p;
 1097              		.loc 1 249 0
 1098 001b 41B82800 		movl	$40, %r8d
 1098      0000
 1099 0021 B9400000 		movl	$64, %ecx
 1099      00
 1100 0026 488B7C24 		movq	80(%rsp), %rdi
 1100      50
 1101              	.LVL109:
 1102 002b 488B7424 		movq	88(%rsp), %rsi
 1102      58
 1103              	.LVL110:
 1104 0030 E8000000 		call	find_keyword
 1104      00
 1105              	.LVL111:
 1106 0035 48890424 		movq	%rax, (%rsp)
 1107 0039 48895424 		movq	%rdx, 8(%rsp)
 1107      08
 251:src/mcu_msg.c ****         mcu_msg_destroy_obj(&res);
 1108              		.loc 1 251 0
 1109 003e 4885C0   		testq	%rax, %rax
 1110 0041 7413     		je	.L92
 1111              	.LVL112:
 257:src/mcu_msg.c ****         while(is_in_str_buff(msg.content, p + 1) && *p != CTRL_START_OBJ) p++;
 1112              		.loc 1 257 0
 1113 0043 803828   		cmpb	$40, (%rax)
 1114 0046 753D     		jne	.L85
 1115              	.L84:
 260:src/mcu_msg.c ****     // res.content.len = 0;
GAS LISTING /tmp/cc8zL7Df.s 			page 32


 1116              		.loc 1 260 0
 1117 0048 488D5001 		leaq	1(%rax), %rdx
 1118              	.LVL113:
 1119 004c 48895424 		movq	%rdx, 16(%rsp)
 1119      10
 1120 0051 4889D0   		movq	%rdx, %rax
 262:src/mcu_msg.c ****         p++;
 1121              		.loc 1 262 0
 1122 0054 EB50     		jmp	.L86
 1123              	.LVL114:
 1124              	.L92:
 252:src/mcu_msg.c ****         return res;
 1125              		.loc 1 252 0
 1126 0056 4889E7   		movq	%rsp, %rdi
 1127 0059 E8000000 		call	mcu_msg_destroy_obj
 1127      00
 1128              	.LVL115:
 253:src/mcu_msg.c ****     }
 1129              		.loc 1 253 0
 1130 005e 488B0424 		movq	(%rsp), %rax
 1131 0062 488B5424 		movq	8(%rsp), %rdx
 1131      08
 1132 0067 488903   		movq	%rax, (%rbx)
 1133 006a 48895308 		movq	%rdx, 8(%rbx)
 1134 006e 488B4424 		movq	16(%rsp), %rax
 1134      10
 1135 0073 488B5424 		movq	24(%rsp), %rdx
 1135      18
 1136 0078 48894310 		movq	%rax, 16(%rbx)
 1137 007c 48895318 		movq	%rdx, 24(%rbx)
 1138 0080 EB68     		jmp	.L81
 1139              	.LVL116:
 1140              	.L90:
 258:src/mcu_msg.c ****     }
 1141              		.loc 1 258 0
 1142 0082 4889D0   		movq	%rdx, %rax
 1143              	.LVL117:
 1144              	.L85:
 258:src/mcu_msg.c ****     }
 1145              		.loc 1 258 0 is_stmt 0 discriminator 1
 1146 0085 488D5001 		leaq	1(%rax), %rdx
 1147              	.LVL118:
 1148              	.LBB82:
 1149              	.LBB83:
 121:src/mcu_msg.c **** }
 1150              		.loc 1 121 0 is_stmt 1 discriminator 1
 1151 0089 4889D6   		movq	%rdx, %rsi
 1152 008c 482B7424 		subq	80(%rsp), %rsi
 1152      50
 1153 0091 0FB74C24 		movzwl	88(%rsp), %ecx
 1153      58
 1154              	.LVL119:
 1155              	.LBE83:
 1156              	.LBE82:
 258:src/mcu_msg.c ****     }
 1157              		.loc 1 258 0 discriminator 1
 1158 0096 4839CE   		cmpq	%rcx, %rsi
GAS LISTING /tmp/cc8zL7Df.s 			page 33


 1159 0099 7DAD     		jge	.L84
 258:src/mcu_msg.c ****     }
 1160              		.loc 1 258 0 is_stmt 0 discriminator 2
 1161 009b 803828   		cmpb	$40, (%rax)
 1162 009e 75E2     		jne	.L90
 1163 00a0 EBA6     		jmp	.L84
 1164              	.L88:
 263:src/mcu_msg.c ****         // res.content.len++;
 1165              		.loc 1 263 0 is_stmt 1
 1166 00a2 4883C001 		addq	$1, %rax
 1167              	.LVL120:
 1168              	.L86:
 1169              	.LBB84:
 1170              	.LBB85:
 121:src/mcu_msg.c **** }
 1171              		.loc 1 121 0
 1172 00a6 4889C7   		movq	%rax, %rdi
 1173 00a9 4889C6   		movq	%rax, %rsi
 1174 00ac 482B7424 		subq	80(%rsp), %rsi
 1174      50
 1175 00b1 0FB74C24 		movzwl	88(%rsp), %ecx
 1175      58
 1176              	.LVL121:
 1177              	.LBE85:
 1178              	.LBE84:
 262:src/mcu_msg.c ****         p++;
 1179              		.loc 1 262 0
 1180 00b6 4839CE   		cmpq	%rcx, %rsi
 1181 00b9 7D05     		jge	.L87
 262:src/mcu_msg.c ****         p++;
 1182              		.loc 1 262 0 is_stmt 0 discriminator 1
 1183 00bb 803829   		cmpb	$41, (%rax)
 1184 00be 75E2     		jne	.L88
 1185              	.L87:
 266:src/mcu_msg.c ****     return res;
 1186              		.loc 1 266 0 is_stmt 1
 1187 00c0 4829D7   		subq	%rdx, %rdi
 1188 00c3 66897C24 		movw	%di, 24(%rsp)
 1188      18
 267:src/mcu_msg.c **** }
 1189              		.loc 1 267 0
 1190 00c8 488B0424 		movq	(%rsp), %rax
 1191              	.LVL122:
 1192 00cc 488B5424 		movq	8(%rsp), %rdx
 1192      08
 1193 00d1 488903   		movq	%rax, (%rbx)
 1194 00d4 48895308 		movq	%rdx, 8(%rbx)
 1195 00d8 488B4424 		movq	16(%rsp), %rax
 1195      10
 1196 00dd 488B5424 		movq	24(%rsp), %rdx
 1196      18
 1197 00e2 48894310 		movq	%rax, 16(%rbx)
 1198 00e6 48895318 		movq	%rdx, 24(%rbx)
 1199              	.L81:
 268:src/mcu_msg.c **** 
 1200              		.loc 1 268 0
 1201 00ea 4889D8   		movq	%rbx, %rax
GAS LISTING /tmp/cc8zL7Df.s 			page 34


 1202 00ed 488B5C24 		movq	40(%rsp), %rbx
 1202      28
 1203 00f2 6448331C 		xorq	%fs:40, %rbx
 1203      25280000 
 1203      00
 1204              	.LVL123:
 1205 00fb 7506     		jne	.L93
 1206 00fd 4883C430 		addq	$48, %rsp
 1207              	.LCFI29:
 1208              		.cfi_remember_state
 1209              		.cfi_def_cfa_offset 16
 1210 0101 5B       		popq	%rbx
 1211              	.LCFI30:
 1212              		.cfi_def_cfa_offset 8
 1213 0102 C3       		ret
 1214              	.L93:
 1215              	.LCFI31:
 1216              		.cfi_restore_state
 1217 0103 E8000000 		call	__stack_chk_fail@PLT
 1217      00
 1218              	.LVL124:
 1219              		.cfi_endproc
 1220              	.LFE39:
 1222              		.section	.text.mcu_msg_is_cmd_att,"ax",@progbits
 1223              		.globl	mcu_msg_is_cmd_att
 1225              	mcu_msg_is_cmd_att:
 1226              	.LFB40:
 271:src/mcu_msg.c ****     mcu_msg_string_t res = find_keyword(msg.content, cmd_id, CTRL_CMD_START_FLAG, CTRL_CMD_STOP_FLA
 1227              		.loc 1 271 0
 1228              		.cfi_startproc
 1229              	.LVL125:
 1230 0000 4883EC08 		subq	$8, %rsp
 1231              	.LCFI32:
 1232              		.cfi_def_cfa_offset 16
 1233 0004 4889FA   		movq	%rdi, %rdx
 272:src/mcu_msg.c ****     if(res.s == NULL) { //if cmd not found, return 0
 1234              		.loc 1 272 0
 1235 0007 41B83E00 		movl	$62, %r8d
 1235      0000
 1236 000d B93C0000 		movl	$60, %ecx
 1236      00
 1237 0012 488B7C24 		movq	32(%rsp), %rdi
 1237      20
 1238              	.LVL126:
 1239 0017 488B7424 		movq	40(%rsp), %rsi
 1239      28
 1240 001c E8000000 		call	find_keyword
 1240      00
 1241              	.LVL127:
 273:src/mcu_msg.c ****         return 0;
 1242              		.loc 1 273 0
 1243 0021 4885C0   		testq	%rax, %rax
 1244 0024 7405     		je	.L94
 276:src/mcu_msg.c ****     }
 1245              		.loc 1 276 0
 1246 0026 B8010000 		movl	$1, %eax
 1246      00
GAS LISTING /tmp/cc8zL7Df.s 			page 35


 1247              	.L94:
 278:src/mcu_msg.c **** 
 1248              		.loc 1 278 0
 1249 002b 4883C408 		addq	$8, %rsp
 1250              	.LCFI33:
 1251              		.cfi_def_cfa_offset 8
 1252 002f C3       		ret
 1253              		.cfi_endproc
 1254              	.LFE40:
 1256              		.section	.text.mcu_msg_parser_get_int,"ax",@progbits
 1257              		.globl	mcu_msg_parser_get_int
 1259              	mcu_msg_parser_get_int:
 1260              	.LFB41:
 281:src/mcu_msg.c ****     mcu_msg_string_t sval = find_val(obj, key);
 1261              		.loc 1 281 0
 1262              		.cfi_startproc
 1263              	.LVL128:
 1264 0000 53       		pushq	%rbx
 1265              	.LCFI34:
 1266              		.cfi_def_cfa_offset 16
 1267              		.cfi_offset 3, -16
 1268 0001 4889FB   		movq	%rdi, %rbx
 282:src/mcu_msg.c ****     mcu_msg_size_t i;
 1269              		.loc 1 282 0
 1270 0004 FF742428 		pushq	40(%rsp)
 1271              	.LCFI35:
 1272              		.cfi_def_cfa_offset 24
 1273 0008 FF742428 		pushq	40(%rsp)
 1274              	.LCFI36:
 1275              		.cfi_def_cfa_offset 32
 1276 000c FF742428 		pushq	40(%rsp)
 1277              	.LCFI37:
 1278              		.cfi_def_cfa_offset 40
 1279 0010 FF742428 		pushq	40(%rsp)
 1280              	.LCFI38:
 1281              		.cfi_def_cfa_offset 48
 1282 0014 4889F7   		movq	%rsi, %rdi
 1283              	.LVL129:
 1284 0017 E8000000 		call	find_val
 1284      00
 1285              	.LVL130:
 288:src/mcu_msg.c ****         return -1;
 1286              		.loc 1 288 0
 1287 001c 4883C420 		addq	$32, %rsp
 1288              	.LCFI39:
 1289              		.cfi_def_cfa_offset 16
 1290              	.LVL131:
 1291 0020 4885C0   		testq	%rax, %rax
 1292 0023 0F84AD00 		je	.L109
 1292      0000
 1293 0029 4889C2   		movq	%rax, %rdx
 292:src/mcu_msg.c ****         case '+':
 1294              		.loc 1 292 0
 1295 002c 0FB600   		movzbl	(%rax), %eax
 1296 002f 3C2B     		cmpb	$43, %al
 1297 0031 740C     		je	.L101
 1298 0033 3C2D     		cmpb	$45, %al
GAS LISTING /tmp/cc8zL7Df.s 			page 36


 1299 0035 7419     		je	.L102
 285:src/mcu_msg.c ****     int8_t res = 0; // result of function
 1300              		.loc 1 285 0
 1301 0037 41B80100 		movl	$1, %r8d
 1301      0000
 1302 003d EB0A     		jmp	.L100
 1303              	.L101:
 295:src/mcu_msg.c ****         break;
 1304              		.loc 1 295 0
 1305 003f 488D5201 		leaq	1(%rdx), %rdx
 294:src/mcu_msg.c ****             sval.s++;
 1306              		.loc 1 294 0
 1307 0043 41B80100 		movl	$1, %r8d
 1307      0000
 1308              	.LVL132:
 1309              	.L100:
 307:src/mcu_msg.c ****         if(*sval.s < '0' || *sval.s > '9') {    // if non valid number, return with error
 1310              		.loc 1 307 0
 1311 0049 BE000000 		movl	$0, %esi
 1311      00
 1312 004e EB1E     		jmp	.L103
 1313              	.LVL133:
 1314              	.L102:
 300:src/mcu_msg.c ****         break;
 1315              		.loc 1 300 0
 1316 0050 488D5201 		leaq	1(%rdx), %rdx
 299:src/mcu_msg.c ****             sval.s++;
 1317              		.loc 1 299 0
 1318 0054 41B8FFFF 		movl	$-1, %r8d
 1318      FFFF
 301:src/mcu_msg.c ****         
 1319              		.loc 1 301 0
 1320 005a EBED     		jmp	.L100
 1321              	.LVL134:
 1322              	.L105:
 307:src/mcu_msg.c ****         if(*sval.s < '0' || *sval.s > '9') {    // if non valid number, return with error
 1323              		.loc 1 307 0
 1324 005c 3C3B     		cmpb	$59, %al
 1325 005e 7432     		je	.L104
 308:src/mcu_msg.c ****             return -1;
 1326              		.loc 1 308 0
 1327 0060 83E830   		subl	$48, %eax
 1328 0063 3C09     		cmpb	$9, %al
 1329 0065 7776     		ja	.L111
 307:src/mcu_msg.c ****         if(*sval.s < '0' || *sval.s > '9') {    // if non valid number, return with error
 1330              		.loc 1 307 0 discriminator 2
 1331 0067 83C601   		addl	$1, %esi
 1332              	.LVL135:
 1333 006a 488D5701 		leaq	1(%rdi), %rdx
 1334              	.LVL136:
 1335              	.L103:
 307:src/mcu_msg.c ****         if(*sval.s < '0' || *sval.s > '9') {    // if non valid number, return with error
 1336              		.loc 1 307 0 is_stmt 0 discriminator 1
 1337 006e 4889D7   		movq	%rdx, %rdi
 1338              	.LVL137:
 1339              	.LBB86:
 1340              	.LBB87:
GAS LISTING /tmp/cc8zL7Df.s 			page 37


 121:src/mcu_msg.c **** }
 1341              		.loc 1 121 0 is_stmt 1 discriminator 1
 1342 0071 4889D1   		movq	%rdx, %rcx
 1343 0074 482B4C24 		subq	32(%rsp), %rcx
 1343      20
 1344 0079 0FB74424 		movzwl	40(%rsp), %eax
 1344      28
 1345              	.LVL138:
 1346              	.LBE87:
 1347              	.LBE86:
 307:src/mcu_msg.c ****         if(*sval.s < '0' || *sval.s > '9') {    // if non valid number, return with error
 1348              		.loc 1 307 0 discriminator 1
 1349 007e 4839C1   		cmpq	%rax, %rcx
 1350 0081 7D0F     		jge	.L104
 307:src/mcu_msg.c ****         if(*sval.s < '0' || *sval.s > '9') {    // if non valid number, return with error
 1351              		.loc 1 307 0 is_stmt 0 discriminator 3
 1352 0083 0FB602   		movzbl	(%rdx), %eax
 1353              	.LVL139:
 1354              	.LBB88:
 1355              	.LBB89:
  76:src/mcu_msg.c ****         case  ' ':
 1356              		.loc 1 76 0 is_stmt 1 discriminator 3
 1357 0086 3C09     		cmpb	$9, %al
 1358 0088 7CD2     		jl	.L105
 1359 008a 3C0D     		cmpb	$13, %al
 1360 008c 7E04     		jle	.L104
 1361 008e 3C20     		cmpb	$32, %al
 1362 0090 75CA     		jne	.L105
 1363              	.LVL140:
 1364              	.L104:
 1365              	.LBE89:
 1366              	.LBE88:
 313:src/mcu_msg.c ****     --sval.s;
 1367              		.loc 1 313 0
 1368 0092 C7030000 		movl	$0, (%rbx)
 1368      0000
 314:src/mcu_msg.c ****     while(i--) {
 1369              		.loc 1 314 0
 1370 0098 488D57FF 		leaq	-1(%rdi), %rdx
 286:src/mcu_msg.c **** 
 1371              		.loc 1 286 0
 1372 009c B8000000 		movl	$0, %eax
 1372      00
 284:src/mcu_msg.c ****     int sign = 1;
 1373              		.loc 1 284 0
 1374 00a1 B9010000 		movl	$1, %ecx
 1374      00
 315:src/mcu_msg.c ****         *res_val += (*sval.s-- - '0') * m;
 1375              		.loc 1 315 0
 1376 00a6 EB1D     		jmp	.L107
 1377              	.LVL141:
 1378              	.L108:
 316:src/mcu_msg.c ****         m *= 10;
 1379              		.loc 1 316 0
 1380 00a8 4889D6   		movq	%rdx, %rsi
 1381 00ab 4883EA01 		subq	$1, %rdx
 1382 00af 0FBE36   		movsbl	(%rsi), %esi
GAS LISTING /tmp/cc8zL7Df.s 			page 38


 1383 00b2 83EE30   		subl	$48, %esi
 1384 00b5 0FAFF1   		imull	%ecx, %esi
 1385 00b8 0133     		addl	%esi, (%rbx)
 317:src/mcu_msg.c ****         res++;
 1386              		.loc 1 317 0
 1387 00ba 8D3489   		leal	(%rcx,%rcx,4), %esi
 1388 00bd 8D0C36   		leal	(%rsi,%rsi), %ecx
 1389              	.LVL142:
 318:src/mcu_msg.c ****     }
 1390              		.loc 1 318 0
 1391 00c0 83C001   		addl	$1, %eax
 1392              	.LVL143:
 315:src/mcu_msg.c ****         *res_val += (*sval.s-- - '0') * m;
 1393              		.loc 1 315 0
 1394 00c3 89FE     		movl	%edi, %esi
 1395              	.LVL144:
 1396              	.L107:
 1397 00c5 8D7EFF   		leal	-1(%rsi), %edi
 1398              	.LVL145:
 1399 00c8 6685F6   		testw	%si, %si
 1400 00cb 75DB     		jne	.L108
 321:src/mcu_msg.c **** 
 1401              		.loc 1 321 0
 1402 00cd 440FAF03 		imull	(%rbx), %r8d
 1403              	.LVL146:
 1404 00d1 448903   		movl	%r8d, (%rbx)
 1405              	.LVL147:
 1406              	.L98:
 324:src/mcu_msg.c **** 
 1407              		.loc 1 324 0
 1408 00d4 5B       		popq	%rbx
 1409              	.LCFI40:
 1410              		.cfi_remember_state
 1411              		.cfi_def_cfa_offset 8
 1412              	.LVL148:
 1413 00d5 C3       		ret
 1414              	.LVL149:
 1415              	.L109:
 1416              	.LCFI41:
 1417              		.cfi_restore_state
 289:src/mcu_msg.c **** 
 1418              		.loc 1 289 0
 1419 00d6 B8FFFFFF 		movl	$-1, %eax
 1419      FF
 1420 00db EBF7     		jmp	.L98
 1421              	.LVL150:
 1422              	.L111:
 309:src/mcu_msg.c ****         }
 1423              		.loc 1 309 0
 1424 00dd B8FFFFFF 		movl	$-1, %eax
 1424      FF
 1425 00e2 EBF0     		jmp	.L98
 1426              		.cfi_endproc
 1427              	.LFE41:
 1429              		.section	.text.mcu_msg_parser_get_float,"ax",@progbits
 1430              		.globl	mcu_msg_parser_get_float
 1432              	mcu_msg_parser_get_float:
GAS LISTING /tmp/cc8zL7Df.s 			page 39


 1433              	.LFB42:
 328:src/mcu_msg.c ****     mcu_msg_string_t sval = find_val(obj, key);
 1434              		.loc 1 328 0
 1435              		.cfi_startproc
 1436              	.LVL151:
 1437 0000 53       		pushq	%rbx
 1438              	.LCFI42:
 1439              		.cfi_def_cfa_offset 16
 1440              		.cfi_offset 3, -16
 1441 0001 4889FB   		movq	%rdi, %rbx
 329:src/mcu_msg.c ****     char *pf;
 1442              		.loc 1 329 0
 1443 0004 FF742428 		pushq	40(%rsp)
 1444              	.LCFI43:
 1445              		.cfi_def_cfa_offset 24
 1446 0008 FF742428 		pushq	40(%rsp)
 1447              	.LCFI44:
 1448              		.cfi_def_cfa_offset 32
 1449 000c FF742428 		pushq	40(%rsp)
 1450              	.LCFI45:
 1451              		.cfi_def_cfa_offset 40
 1452 0010 FF742428 		pushq	40(%rsp)
 1453              	.LCFI46:
 1454              		.cfi_def_cfa_offset 48
 1455 0014 4889F7   		movq	%rsi, %rdi
 1456              	.LVL152:
 1457 0017 E8000000 		call	find_val
 1457      00
 1458              	.LVL153:
 1459 001c 4889C1   		movq	%rax, %rcx
 1460              	.LVL154:
 337:src/mcu_msg.c ****         return -1;
 1461              		.loc 1 337 0
 1462 001f 4883C420 		addq	$32, %rsp
 1463              	.LCFI47:
 1464              		.cfi_def_cfa_offset 16
 1465 0023 4885C0   		testq	%rax, %rax
 1466 0026 0F844C01 		je	.L132
 1466      0000
 1467 002c 4889C2   		movq	%rax, %rdx
 341:src/mcu_msg.c ****         case '+':
 1468              		.loc 1 341 0
 1469 002f 0FB601   		movzbl	(%rcx), %eax
 1470 0032 3C2B     		cmpb	$43, %al
 1471 0034 740B     		je	.L117
 1472 0036 3C2D     		cmpb	$45, %al
 1473 0038 7417     		je	.L118
 334:src/mcu_msg.c ****     int8_t res = 0; // result of function
 1474              		.loc 1 334 0
 1475 003a BF010000 		movl	$1, %edi
 1475      00
 1476 003f EB09     		jmp	.L116
 1477              	.L117:
 344:src/mcu_msg.c ****         break;
 1478              		.loc 1 344 0
 1479 0041 488D4A01 		leaq	1(%rdx), %rcx
 343:src/mcu_msg.c ****             sval.s++;
GAS LISTING /tmp/cc8zL7Df.s 			page 40


 1480              		.loc 1 343 0
 1481 0045 BF010000 		movl	$1, %edi
 1481      00
 1482              	.LVL155:
 1483              	.L116:
 357:src/mcu_msg.c ****         if((*sval.s < '0' || *sval.s > '9')) {    // if non valid number, return with error
 1484              		.loc 1 357 0
 1485 004a BA000000 		movl	$0, %edx
 1485      00
 1486 004f EB25     		jmp	.L119
 1487              	.LVL156:
 1488              	.L118:
 349:src/mcu_msg.c ****         break;
 1489              		.loc 1 349 0
 1490 0051 488D4A01 		leaq	1(%rdx), %rcx
 348:src/mcu_msg.c ****             sval.s++;
 1491              		.loc 1 348 0
 1492 0055 BFFFFFFF 		movl	$-1, %edi
 1492      FF
 350:src/mcu_msg.c ****         
 1493              		.loc 1 350 0
 1494 005a EBEE     		jmp	.L116
 1495              	.LVL157:
 1496              	.L121:
 357:src/mcu_msg.c ****         if((*sval.s < '0' || *sval.s > '9')) {    // if non valid number, return with error
 1497              		.loc 1 357 0
 1498 005c 3C3B     		cmpb	$59, %al
 1499 005e 743A     		je	.L120
 357:src/mcu_msg.c ****         if((*sval.s < '0' || *sval.s > '9')) {    // if non valid number, return with error
 1500              		.loc 1 357 0 is_stmt 0 discriminator 5
 1501 0060 3C2E     		cmpb	$46, %al
 1502 0062 7436     		je	.L120
 358:src/mcu_msg.c ****             return -1;
 1503              		.loc 1 358 0 is_stmt 1
 1504 0064 83E830   		subl	$48, %eax
 1505 0067 3C09     		cmpb	$9, %al
 1506 0069 0F871001 		ja	.L134
 1506      0000
 357:src/mcu_msg.c ****         if((*sval.s < '0' || *sval.s > '9')) {    // if non valid number, return with error
 1507              		.loc 1 357 0 discriminator 2
 1508 006f 83C201   		addl	$1, %edx
 1509              	.LVL158:
 1510 0072 488D4E01 		leaq	1(%rsi), %rcx
 1511              	.LVL159:
 1512              	.L119:
 357:src/mcu_msg.c ****         if((*sval.s < '0' || *sval.s > '9')) {    // if non valid number, return with error
 1513              		.loc 1 357 0 is_stmt 0 discriminator 1
 1514 0076 4889CE   		movq	%rcx, %rsi
 1515              	.LVL160:
 1516              	.LBB90:
 1517              	.LBB91:
 121:src/mcu_msg.c **** }
 1518              		.loc 1 121 0 is_stmt 1 discriminator 1
 1519 0079 4989C8   		movq	%rcx, %r8
 1520 007c 4C2B4424 		subq	32(%rsp), %r8
 1520      20
 1521 0081 0FB74424 		movzwl	40(%rsp), %eax
GAS LISTING /tmp/cc8zL7Df.s 			page 41


 1521      28
 1522              	.LVL161:
 1523              	.LBE91:
 1524              	.LBE90:
 357:src/mcu_msg.c ****         if((*sval.s < '0' || *sval.s > '9')) {    // if non valid number, return with error
 1525              		.loc 1 357 0 discriminator 1
 1526 0086 4939C0   		cmpq	%rax, %r8
 1527 0089 7D0F     		jge	.L120
 357:src/mcu_msg.c ****         if((*sval.s < '0' || *sval.s > '9')) {    // if non valid number, return with error
 1528              		.loc 1 357 0 is_stmt 0 discriminator 3
 1529 008b 0FB601   		movzbl	(%rcx), %eax
 1530              	.LVL162:
 1531              	.LBB92:
 1532              	.LBB93:
  76:src/mcu_msg.c ****         case  ' ':
 1533              		.loc 1 76 0 is_stmt 1 discriminator 3
 1534 008e 3C09     		cmpb	$9, %al
 1535 0090 7CCA     		jl	.L121
 1536 0092 3C0D     		cmpb	$13, %al
 1537 0094 7E04     		jle	.L120
 1538 0096 3C20     		cmpb	$32, %al
 1539 0098 75C2     		jne	.L121
 1540              	.LVL163:
 1541              	.L120:
 1542              	.LBE93:
 1543              	.LBE92:
 363:src/mcu_msg.c ****     
 1544              		.loc 1 363 0
 1545 009a C7030000 		movl	$0x00000000, (%rbx)
 1545      0000
 365:src/mcu_msg.c ****         pf = sval.s + 1;
 1546              		.loc 1 365 0
 1547 00a0 803E2E   		cmpb	$46, (%rsi)
 1548 00a3 7416     		je	.L139
 335:src/mcu_msg.c **** 
 1549              		.loc 1 335 0
 1550 00a5 B8000000 		movl	$0, %eax
 1550      00
 369:src/mcu_msg.c ****     }
 1551              		.loc 1 369 0
 1552 00aa 41B80000 		movl	$0, %r8d
 1552      0000
 1553              	.LVL164:
 1554              	.L123:
 372:src/mcu_msg.c ****     while(i--) {
 1555              		.loc 1 372 0
 1556 00b0 488D4EFF 		leaq	-1(%rsi), %rcx
 332:src/mcu_msg.c ****     float mf = 0.1;
 1557              		.loc 1 332 0
 1558 00b4 BE010000 		movl	$1, %esi
 1558      00
 373:src/mcu_msg.c ****         *res_val += (*sval.s-- - '0') * m;
 1559              		.loc 1 373 0
 1560 00b9 EB38     		jmp	.L124
 1561              	.LVL165:
 1562              	.L139:
 366:src/mcu_msg.c ****         res++;
GAS LISTING /tmp/cc8zL7Df.s 			page 42


 1563              		.loc 1 366 0
 1564 00bb 4C8D4601 		leaq	1(%rsi), %r8
 1565              	.LVL166:
 367:src/mcu_msg.c ****     } else {
 1566              		.loc 1 367 0
 1567 00bf B8010000 		movl	$1, %eax
 1567      00
 1568 00c4 EBEA     		jmp	.L123
 1569              	.LVL167:
 1570              	.L127:
 374:src/mcu_msg.c ****         m *= 10;
 1571              		.loc 1 374 0
 1572 00c6 4889CA   		movq	%rcx, %rdx
 1573 00c9 4883E901 		subq	$1, %rcx
 1574 00cd 0FBE12   		movsbl	(%rdx), %edx
 1575 00d0 83EA30   		subl	$48, %edx
 1576 00d3 0FAFD6   		imull	%esi, %edx
 1577 00d6 660FEFC0 		pxor	%xmm0, %xmm0
 1578 00da F3480F2A 		cvtsi2ssq	%rdx, %xmm0
 1578      C2
 1579 00df F30F5803 		addss	(%rbx), %xmm0
 1580 00e3 F30F1103 		movss	%xmm0, (%rbx)
 375:src/mcu_msg.c ****         res++;
 1581              		.loc 1 375 0
 1582 00e7 8D14B6   		leal	(%rsi,%rsi,4), %edx
 1583 00ea 8D3412   		leal	(%rdx,%rdx), %esi
 1584              	.LVL168:
 376:src/mcu_msg.c ****     }
 1585              		.loc 1 376 0
 1586 00ed 83C001   		addl	$1, %eax
 1587              	.LVL169:
 373:src/mcu_msg.c ****         *res_val += (*sval.s-- - '0') * m;
 1588              		.loc 1 373 0
 1589 00f0 4489CA   		movl	%r9d, %edx
 1590              	.LVL170:
 1591              	.L124:
 1592 00f3 448D4AFF 		leal	-1(%rdx), %r9d
 1593              	.LVL171:
 1594 00f7 6685D2   		testw	%dx, %dx
 1595 00fa 75CA     		jne	.L127
 333:src/mcu_msg.c ****     int sign = 1;
 1596              		.loc 1 333 0
 1597 00fc F30F100D 		movss	.LC0(%rip), %xmm1
 1597      00000000 
 1598 0104 EB33     		jmp	.L128
 1599              	.LVL172:
 1600              	.L130:
 380:src/mcu_msg.c ****         if(*pf < '0' || *pf > '9') {    // if non valid number, return with error
 1601              		.loc 1 380 0
 1602 0106 80F93B   		cmpb	$59, %cl
 1603 0109 745B     		je	.L129
 381:src/mcu_msg.c ****             return -1;
 1604              		.loc 1 381 0
 1605 010b 83E930   		subl	$48, %ecx
 1606 010e 80F909   		cmpb	$9, %cl
 1607 0111 7773     		ja	.L136
 384:src/mcu_msg.c ****         mf /= 10;
GAS LISTING /tmp/cc8zL7Df.s 			page 43


 1608              		.loc 1 384 0
 1609 0113 83EA30   		subl	$48, %edx
 1610 0116 660FEFC0 		pxor	%xmm0, %xmm0
 1611 011a F30F2AC2 		cvtsi2ss	%edx, %xmm0
 1612 011e F30F59C1 		mulss	%xmm1, %xmm0
 1613 0122 F30F5803 		addss	(%rbx), %xmm0
 1614 0126 F30F1103 		movss	%xmm0, (%rbx)
 385:src/mcu_msg.c ****         res++; 
 1615              		.loc 1 385 0
 1616 012a F30F5E0D 		divss	.LC2(%rip), %xmm1
 1616      00000000 
 1617              	.LVL173:
 386:src/mcu_msg.c ****     }
 1618              		.loc 1 386 0
 1619 0132 83C001   		addl	$1, %eax
 1620              	.LVL174:
 380:src/mcu_msg.c ****         if(*pf < '0' || *pf > '9') {    // if non valid number, return with error
 1621              		.loc 1 380 0
 1622 0135 4983C001 		addq	$1, %r8
 1623              	.LVL175:
 1624              	.L128:
 380:src/mcu_msg.c ****         if(*pf < '0' || *pf > '9') {    // if non valid number, return with error
 1625              		.loc 1 380 0 is_stmt 0 discriminator 1
 1626 0139 4D85C0   		testq	%r8, %r8
 1627 013c 7428     		je	.L129
 1628              	.LVL176:
 1629              	.LBB94:
 1630              	.LBB95:
 121:src/mcu_msg.c **** }
 1631              		.loc 1 121 0 is_stmt 1 discriminator 2
 1632 013e 4C89C1   		movq	%r8, %rcx
 1633 0141 482B4C24 		subq	32(%rsp), %rcx
 1633      20
 1634 0146 0FB75424 		movzwl	40(%rsp), %edx
 1634      28
 1635              	.LVL177:
 1636              	.LBE95:
 1637              	.LBE94:
 380:src/mcu_msg.c ****         if(*pf < '0' || *pf > '9') {    // if non valid number, return with error
 1638              		.loc 1 380 0 discriminator 2
 1639 014b 4839D1   		cmpq	%rdx, %rcx
 1640 014e 7D16     		jge	.L129
 380:src/mcu_msg.c ****         if(*pf < '0' || *pf > '9') {    // if non valid number, return with error
 1641              		.loc 1 380 0 is_stmt 0 discriminator 3
 1642 0150 410FB608 		movzbl	(%r8), %ecx
 1643 0154 0FBED1   		movsbl	%cl, %edx
 1644              	.LVL178:
 1645              	.LBB96:
 1646              	.LBB97:
  76:src/mcu_msg.c ****         case  ' ':
 1647              		.loc 1 76 0 is_stmt 1 discriminator 3
 1648 0157 80F909   		cmpb	$9, %cl
 1649 015a 7CAA     		jl	.L130
 1650 015c 80F90D   		cmpb	$13, %cl
 1651 015f 7E05     		jle	.L129
 1652 0161 80F920   		cmpb	$32, %cl
 1653 0164 75A0     		jne	.L130
GAS LISTING /tmp/cc8zL7Df.s 			page 44


 1654              	.LVL179:
 1655              	.L129:
 1656              	.LBE97:
 1657              	.LBE96:
 389:src/mcu_msg.c **** 
 1658              		.loc 1 389 0
 1659 0166 660FEFC0 		pxor	%xmm0, %xmm0
 1660 016a F30F2AC7 		cvtsi2ss	%edi, %xmm0
 1661 016e F30F5903 		mulss	(%rbx), %xmm0
 1662 0172 F30F1103 		movss	%xmm0, (%rbx)
 1663              	.LVL180:
 1664              	.L114:
 392:src/mcu_msg.c **** 
 1665              		.loc 1 392 0
 1666 0176 5B       		popq	%rbx
 1667              	.LCFI48:
 1668              		.cfi_remember_state
 1669              		.cfi_def_cfa_offset 8
 1670              	.LVL181:
 1671 0177 C3       		ret
 1672              	.LVL182:
 1673              	.L132:
 1674              	.LCFI49:
 1675              		.cfi_restore_state
 338:src/mcu_msg.c **** 
 1676              		.loc 1 338 0
 1677 0178 B8FFFFFF 		movl	$-1, %eax
 1677      FF
 1678 017d EBF7     		jmp	.L114
 1679              	.LVL183:
 1680              	.L134:
 359:src/mcu_msg.c ****         }
 1681              		.loc 1 359 0
 1682 017f B8FFFFFF 		movl	$-1, %eax
 1682      FF
 1683 0184 EBF0     		jmp	.L114
 1684              	.LVL184:
 1685              	.L136:
 382:src/mcu_msg.c ****         }
 1686              		.loc 1 382 0
 1687 0186 B8FFFFFF 		movl	$-1, %eax
 1687      FF
 1688              	.LVL185:
 1689 018b EBE9     		jmp	.L114
 1690              		.cfi_endproc
 1691              	.LFE42:
 1693              		.section	.text.mcu_msg_parser_get_string,"ax",@progbits
 1694              		.globl	mcu_msg_parser_get_string
 1696              	mcu_msg_parser_get_string:
 1697              	.LFB43:
 397:src/mcu_msg.c ****     mcu_msg_string_t res = find_val(obj, key);
 1698              		.loc 1 397 0
 1699              		.cfi_startproc
 1700              	.LVL186:
 1701 0000 4883EC28 		subq	$40, %rsp
 1702              	.LCFI50:
 1703              		.cfi_def_cfa_offset 48
GAS LISTING /tmp/cc8zL7Df.s 			page 45


 397:src/mcu_msg.c ****     mcu_msg_string_t res = find_val(obj, key);
 1704              		.loc 1 397 0
 1705 0004 64488B04 		movq	%fs:40, %rax
 1705      25280000 
 1705      00
 1706 000d 48894424 		movq	%rax, 24(%rsp)
 1706      18
 1707 0012 31C0     		xorl	%eax, %eax
 398:src/mcu_msg.c ****     char qmark;
 1708              		.loc 1 398 0
 1709 0014 FF742448 		pushq	72(%rsp)
 1710              	.LCFI51:
 1711              		.cfi_def_cfa_offset 56
 1712 0018 FF742448 		pushq	72(%rsp)
 1713              	.LCFI52:
 1714              		.cfi_def_cfa_offset 64
 1715 001c FF742448 		pushq	72(%rsp)
 1716              	.LCFI53:
 1717              		.cfi_def_cfa_offset 72
 1718 0020 FF742448 		pushq	72(%rsp)
 1719              	.LCFI54:
 1720              		.cfi_def_cfa_offset 80
 1721 0024 E8000000 		call	find_val
 1721      00
 1722              	.LVL187:
 1723 0029 48894424 		movq	%rax, 32(%rsp)
 1723      20
 1724 002e 48895424 		movq	%rdx, 40(%rsp)
 1724      28
 402:src/mcu_msg.c ****         mcu_msg_destroy_string(&res);
 1725              		.loc 1 402 0
 1726 0033 4883C420 		addq	$32, %rsp
 1727              	.LCFI55:
 1728              		.cfi_def_cfa_offset 48
 1729 0037 4885C0   		testq	%rax, %rax
 1730 003a 7426     		je	.L149
 407:src/mcu_msg.c **** 
 1731              		.loc 1 407 0
 1732 003c 0FB630   		movzbl	(%rax), %esi
 1733              	.LVL188:
 409:src/mcu_msg.c ****         mcu_msg_destroy_string(&res);
 1734              		.loc 1 409 0
 1735 003f 4080FE27 		cmpb	$39, %sil
 1736 0043 0F95C1   		setne	%cl
 1737 0046 4080FE22 		cmpb	$34, %sil
 1738 004a 0F95C2   		setne	%dl
 1739 004d 84D1     		testb	%dl, %cl
 1740 004f 7524     		jne	.L150
 414:src/mcu_msg.c ****     res.len = 0;
 1741              		.loc 1 414 0
 1742 0051 4883C001 		addq	$1, %rax
 1743 0055 48890424 		movq	%rax, (%rsp)
 1744              	.LVL189:
 415:src/mcu_msg.c ****     while(is_in_str_buff(obj.content, p) && *p != qmark) {
 1745              		.loc 1 415 0
 1746 0059 66C74424 		movw	$0, 8(%rsp)
 1746      080000
GAS LISTING /tmp/cc8zL7Df.s 			page 46


 416:src/mcu_msg.c ****         res.len++;
 1747              		.loc 1 416 0
 1748 0060 EB37     		jmp	.L144
 1749              	.LVL190:
 1750              	.L149:
 403:src/mcu_msg.c ****         return res;
 1751              		.loc 1 403 0
 1752 0062 4889E7   		movq	%rsp, %rdi
 1753 0065 E8000000 		call	mcu_msg_destroy_string
 1753      00
 1754              	.LVL191:
 404:src/mcu_msg.c ****     }
 1755              		.loc 1 404 0
 1756 006a 488B0424 		movq	(%rsp), %rax
 1757 006e 488B5424 		movq	8(%rsp), %rdx
 1757      08
 1758 0073 EB44     		jmp	.L142
 1759              	.LVL192:
 1760              	.L150:
 410:src/mcu_msg.c ****         return res;
 1761              		.loc 1 410 0
 1762 0075 4889E7   		movq	%rsp, %rdi
 1763 0078 E8000000 		call	mcu_msg_destroy_string
 1763      00
 1764              	.LVL193:
 411:src/mcu_msg.c ****     }
 1765              		.loc 1 411 0
 1766 007d 488B0424 		movq	(%rsp), %rax
 1767 0081 488B5424 		movq	8(%rsp), %rdx
 1767      08
 1768 0086 EB31     		jmp	.L142
 1769              	.LVL194:
 1770              	.L146:
 417:src/mcu_msg.c ****         p++;
 1771              		.loc 1 417 0
 1772 0088 0FB77C24 		movzwl	8(%rsp), %edi
 1772      08
 1773 008d 8D5701   		leal	1(%rdi), %edx
 1774 0090 66895424 		movw	%dx, 8(%rsp)
 1774      08
 418:src/mcu_msg.c ****     }
 1775              		.loc 1 418 0
 1776 0095 4883C001 		addq	$1, %rax
 1777              	.LVL195:
 1778              	.L144:
 1779              	.LBB98:
 1780              	.LBB99:
 121:src/mcu_msg.c **** }
 1781              		.loc 1 121 0
 1782 0099 4889C1   		movq	%rax, %rcx
 1783 009c 482B4C24 		subq	64(%rsp), %rcx
 1783      40
 1784 00a1 0FB75424 		movzwl	72(%rsp), %edx
 1784      48
 1785              	.LVL196:
 1786              	.LBE99:
 1787              	.LBE98:
GAS LISTING /tmp/cc8zL7Df.s 			page 47


 416:src/mcu_msg.c ****         res.len++;
 1788              		.loc 1 416 0
 1789 00a6 4839D1   		cmpq	%rdx, %rcx
 1790 00a9 7D05     		jge	.L145
 416:src/mcu_msg.c ****         res.len++;
 1791              		.loc 1 416 0 is_stmt 0 discriminator 1
 1792 00ab 403830   		cmpb	%sil, (%rax)
 1793 00ae 75D8     		jne	.L146
 1794              	.L145:
 420:src/mcu_msg.c **** }
 1795              		.loc 1 420 0 is_stmt 1
 1796 00b0 488B0424 		movq	(%rsp), %rax
 1797              	.LVL197:
 1798 00b4 488B5424 		movq	8(%rsp), %rdx
 1798      08
 1799              	.LVL198:
 1800              	.L142:
 421:src/mcu_msg.c **** 
 1801              		.loc 1 421 0
 1802 00b9 488B7424 		movq	24(%rsp), %rsi
 1802      18
 1803 00be 64483334 		xorq	%fs:40, %rsi
 1803      25280000 
 1803      00
 1804 00c7 7505     		jne	.L151
 1805 00c9 4883C428 		addq	$40, %rsp
 1806              	.LCFI56:
 1807              		.cfi_remember_state
 1808              		.cfi_def_cfa_offset 8
 1809 00cd C3       		ret
 1810              	.L151:
 1811              	.LCFI57:
 1812              		.cfi_restore_state
 1813 00ce E8000000 		call	__stack_chk_fail@PLT
 1813      00
 1814              	.LVL199:
 1815              		.cfi_endproc
 1816              	.LFE43:
 1818              		.section	.text.mcu_msg_string_hnd_create,"ax",@progbits
 1819              		.globl	mcu_msg_string_hnd_create
 1821              	mcu_msg_string_hnd_create:
 1822              	.LFB46:
 446:src/mcu_msg.c **** 
 447:src/mcu_msg.c **** 
 448:src/mcu_msg.c **** mcu_msg_string_hnd_t mcu_msg_string_hnd_create(void (*print)(mcu_msg_string_t))
 449:src/mcu_msg.c **** {
 1823              		.loc 1 449 0
 1824              		.cfi_startproc
 1825              	.LVL200:
 1826 0000 4889F8   		movq	%rdi, %rax
 450:src/mcu_msg.c ****     mcu_msg_string_hnd_t hnd;
 451:src/mcu_msg.c ****     hnd.copy_to_chr_arr = mcu_msg_str_copy_to_chr_arr;
 1827              		.loc 1 451 0
 1828 0003 488D1500 		leaq	mcu_msg_str_copy_to_chr_arr(%rip), %rdx
 1828      000000
 1829 000a 48895424 		movq	%rdx, -40(%rsp)
 1829      D8
GAS LISTING /tmp/cc8zL7Df.s 			page 48


 452:src/mcu_msg.c ****     hnd.copy = mcu_msg_str_copy;
 1830              		.loc 1 452 0
 1831 000f 488D0D00 		leaq	mcu_msg_str_copy(%rip), %rcx
 1831      000000
 1832 0016 48894C24 		movq	%rcx, -32(%rsp)
 1832      E0
 453:src/mcu_msg.c ****     hnd.print = print;
 454:src/mcu_msg.c ****     return hnd;
 1833              		.loc 1 454 0
 1834 001b 4C8B4C24 		movq	-40(%rsp), %r9
 1834      D8
 1835 0020 4C8B5424 		movq	-32(%rsp), %r10
 1835      E0
 1836 0025 4C890F   		movq	%r9, (%rdi)
 1837 0028 4C895708 		movq	%r10, 8(%rdi)
 1838 002c 48897710 		movq	%rsi, 16(%rdi)
 455:src/mcu_msg.c **** }...
 1839              		.loc 1 455 0
 1840 0030 C3       		ret
 1841              		.cfi_endproc
 1842              	.LFE46:
 1844              		.section	.rodata.cst4,"aM",@progbits,4
 1845              		.align 4
 1846              	.LC0:
 1847 0000 CDCCCC3D 		.long	1036831949
 1848              		.align 4
 1849              	.LC2:
 1850 0004 00002041 		.long	1092616192
 1851              		.text
 1852              	.Letext0:
 1853              		.file 2 "/usr/lib/gcc/x86_64-linux-gnu/7/include/stddef.h"
 1854              		.file 3 "/usr/include/x86_64-linux-gnu/bits/types.h"
 1855              		.file 4 "/usr/include/x86_64-linux-gnu/bits/libio.h"
 1856              		.file 5 "/usr/include/stdio.h"
 1857              		.file 6 "/usr/include/x86_64-linux-gnu/bits/sys_errlist.h"
 1858              		.file 7 "/usr/include/x86_64-linux-gnu/bits/stdint-intn.h"
 1859              		.file 8 "/usr/include/x86_64-linux-gnu/bits/stdint-uintn.h"
 1860              		.file 9 "inc/mcu_msg_cfg.h"
 1861              		.file 10 "inc/mcu_msg.h"
GAS LISTING /tmp/cc8zL7Df.s 			page 49


DEFINED SYMBOLS
                            *ABS*:0000000000000000 mcu_msg.c
     /tmp/cc8zL7Df.s:6      .text.str_len:0000000000000000 str_len
     /tmp/cc8zL7Df.s:35     .text.skip_internal_str:0000000000000000 skip_internal_str
     /tmp/cc8zL7Df.s:92     .text.mcu_msg_str_copy_to_chr_arr:0000000000000000 mcu_msg_str_copy_to_chr_arr
     /tmp/cc8zL7Df.s:119    .text.mcu_msg_str_copy:0000000000000000 mcu_msg_str_copy
     /tmp/cc8zL7Df.s:148    .text.mcu_msg_destroy_string:0000000000000000 mcu_msg_destroy_string
     /tmp/cc8zL7Df.s:164    .text.find_keyword:0000000000000000 find_keyword
     /tmp/cc8zL7Df.s:587    .text.find_val:0000000000000000 find_val
     /tmp/cc8zL7Df.s:873    .text.mcu_msg_destroy:0000000000000000 mcu_msg_destroy
     /tmp/cc8zL7Df.s:902    .text.mcu_msg_destroy_obj:0000000000000000 mcu_msg_destroy_obj
     /tmp/cc8zL7Df.s:931    .text.mcu_msg_get:0000000000000000 mcu_msg_get
     /tmp/cc8zL7Df.s:1079   .text.mcu_msg_parser_get_obj:0000000000000000 mcu_msg_parser_get_obj
     /tmp/cc8zL7Df.s:1225   .text.mcu_msg_is_cmd_att:0000000000000000 mcu_msg_is_cmd_att
     /tmp/cc8zL7Df.s:1259   .text.mcu_msg_parser_get_int:0000000000000000 mcu_msg_parser_get_int
     /tmp/cc8zL7Df.s:1432   .text.mcu_msg_parser_get_float:0000000000000000 mcu_msg_parser_get_float
     /tmp/cc8zL7Df.s:1696   .text.mcu_msg_parser_get_string:0000000000000000 mcu_msg_parser_get_string
     /tmp/cc8zL7Df.s:1821   .text.mcu_msg_string_hnd_create:0000000000000000 mcu_msg_string_hnd_create
     /tmp/cc8zL7Df.s:1846   .rodata.cst4:0000000000000000 .LC0
     /tmp/cc8zL7Df.s:1849   .rodata.cst4:0000000000000004 .LC2

UNDEFINED SYMBOLS
_GLOBAL_OFFSET_TABLE_
__stack_chk_fail
