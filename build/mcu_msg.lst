GAS LISTING /tmp/ccYvOZGU.s 			page 1


   1              		.file	"mcu_msg.c"
   2              		.text
   3              	.Ltext0:
   4              		.section	.text.str_len,"ax",@progbits
   6              	str_len:
   7              	.LFB33:
   8              		.file 1 "src/mcu_msg.c"
   1:src/mcu_msg.c **** /**
   2:src/mcu_msg.c ****  * @file mmsg_parser.c
   3:src/mcu_msg.c ****  * @author Istvan Milak (istvan.milak@gmail.com)
   4:src/mcu_msg.c ****  * @brief Simple message parser for embedded applications, eg serial comm
   5:src/mcu_msg.c ****  * @version 0.1
   6:src/mcu_msg.c ****  * @date 2019-12-15
   7:src/mcu_msg.c ****  * 
   8:src/mcu_msg.c ****  * @copyright Copyright (c) 2019
   9:src/mcu_msg.c ****  * 
  10:src/mcu_msg.c ****  */
  11:src/mcu_msg.c **** #include <stdio.h>
  12:src/mcu_msg.c **** #include "mcu_msg.h"
  13:src/mcu_msg.c **** 
  14:src/mcu_msg.c **** /*Control chars*/
  15:src/mcu_msg.c **** #define CTRL_MSG_FLAG           '#'
  16:src/mcu_msg.c **** #define CTRL_START_MSG          '{'
  17:src/mcu_msg.c **** #define CTRL_STOP_MSG           '}'
  18:src/mcu_msg.c **** #define CTRL_START_OBJ          '('
  19:src/mcu_msg.c **** #define CTRL_STOP_OBJ           ')'
  20:src/mcu_msg.c **** #define CTRL_OBJ_FLAG           '@'
  21:src/mcu_msg.c **** #define CTRL_KEY_FLAG           '$'
  22:src/mcu_msg.c **** #define CTRL_KEY_SEP            ';'
  23:src/mcu_msg.c **** #define CTRL_KEY_EQU            '='
  24:src/mcu_msg.c **** #define CTRL_CMD_START_FLAG     '<'
  25:src/mcu_msg.c **** #define CTRL_CMD_STOP_FLAG      '>'
  26:src/mcu_msg.c **** 
  27:src/mcu_msg.c **** 
  28:src/mcu_msg.c **** /*putchar implementation: must be implemented for printing to UART or other output*/
  29:src/mcu_msg.c **** static int (*mmsg_putc)(char) = NULL; 
  30:src/mcu_msg.c **** 
  31:src/mcu_msg.c **** /*Static function declarations*/
  32:src/mcu_msg.c **** static inline uint8_t is_ctrl_char(char c);
  33:src/mcu_msg.c **** static inline uint8_t is_whitespace(char c);
  34:src/mcu_msg.c **** static mmsg_size_t str_len(char *str);
  35:src/mcu_msg.c **** static inline uint8_t is_in_str_buff(mmsg_string_t str, char *p);
  36:src/mcu_msg.c **** static char *skip_internal_str(char *start);
  37:src/mcu_msg.c **** static mmsg_string_t find_keyword(mmsg_string_t str, char *keyword, char flagc, char stopc);
  38:src/mcu_msg.c **** static mmsg_string_t find_val(mmsg_obj_t obj, char *key);
  39:src/mcu_msg.c **** static void mmsg_str_copy_to_chr_arr(char *dest, mmsg_string_t source);
  40:src/mcu_msg.c **** static void mmsg_str_copy(mmsg_string_t dest, mmsg_string_t source);
  41:src/mcu_msg.c **** static void mmsg_print_int(int i);
  42:src/mcu_msg.c **** static void mmsg_print_float(float f, uint8_t prec);
  43:src/mcu_msg.c **** static void mmsg_print_str(mmsg_string_t str);
  44:src/mcu_msg.c **** static inline char define_qmark(mmsg_string_t str);
  45:src/mcu_msg.c **** 
  46:src/mcu_msg.c **** #if MCU_MSG_USE_WRAPPER
  47:src/mcu_msg.c **** static inline void mmsg_wrapper_print_obj(mmsg_obj_wrap_t obj);
  48:src/mcu_msg.c **** static inline void mmsg_wrapper_print_cmd(mmsg_cmd_wrap_t cmd);
  49:src/mcu_msg.c **** static void mmsg_wrapper_print_msg(mmsg_wrap_t msg);
  50:src/mcu_msg.c **** static char* mmsg_wrapper_print_msg_to_buff(mmsg_wrap_t msg);
GAS LISTING /tmp/ccYvOZGU.s 			page 2


  51:src/mcu_msg.c **** 
  52:src/mcu_msg.c **** #endif
  53:src/mcu_msg.c **** 
  54:src/mcu_msg.c **** 
  55:src/mcu_msg.c **** /////////////////////////////////////////////////////////////////////////////////////////////
  56:src/mcu_msg.c **** //                                      Parser functions                                   //
  57:src/mcu_msg.c **** /////////////////////////////////////////////////////////////////////////////////////////////
  58:src/mcu_msg.c **** 
  59:src/mcu_msg.c **** /*destroy string*/
  60:src/mcu_msg.c **** void mmsg_destroy_string(mmsg_string_t *str)
  61:src/mcu_msg.c **** {
  62:src/mcu_msg.c ****     str->s = NULL;
  63:src/mcu_msg.c ****     str->len = 0;
  64:src/mcu_msg.c **** }
  65:src/mcu_msg.c **** 
  66:src/mcu_msg.c **** /*destroy message*/
  67:src/mcu_msg.c **** void mmsg_destroy(mmsg_t *msg)
  68:src/mcu_msg.c **** {
  69:src/mcu_msg.c ****     mmsg_destroy_string(&msg->id);
  70:src/mcu_msg.c ****     mmsg_destroy_string(&msg->content);
  71:src/mcu_msg.c **** }
  72:src/mcu_msg.c **** 
  73:src/mcu_msg.c **** 
  74:src/mcu_msg.c **** /*destroy object*/
  75:src/mcu_msg.c **** void mmsg_destroy_obj(mmsg_obj_t *obj)
  76:src/mcu_msg.c **** {
  77:src/mcu_msg.c ****     mmsg_destroy_string(&obj->id);
  78:src/mcu_msg.c ****     mmsg_destroy_string(&obj->content);
  79:src/mcu_msg.c **** }
  80:src/mcu_msg.c **** 
  81:src/mcu_msg.c **** mmsg_string_t mmsg_init_string(char *str)
  82:src/mcu_msg.c **** {
  83:src/mcu_msg.c ****     mmsg_string_t res;
  84:src/mcu_msg.c ****     res.s = str;
  85:src/mcu_msg.c ****     res.len = str_len(res.s);
  86:src/mcu_msg.c ****     return res;
  87:src/mcu_msg.c **** }
  88:src/mcu_msg.c **** 
  89:src/mcu_msg.c **** /**
  90:src/mcu_msg.c ****  * @brief Argument char is control char or not
  91:src/mcu_msg.c ****  * 
  92:src/mcu_msg.c ****  * @param c char
  93:src/mcu_msg.c ****  * @return uint8_t comparison result
  94:src/mcu_msg.c ****  */
  95:src/mcu_msg.c **** static inline uint8_t is_ctrl_char(char c)
  96:src/mcu_msg.c **** {
  97:src/mcu_msg.c ****     switch(c) {
  98:src/mcu_msg.c ****         case CTRL_MSG_FLAG:
  99:src/mcu_msg.c ****         case CTRL_START_MSG:
 100:src/mcu_msg.c ****         case CTRL_STOP_MSG:
 101:src/mcu_msg.c ****         case CTRL_START_OBJ:
 102:src/mcu_msg.c ****         case CTRL_STOP_OBJ:
 103:src/mcu_msg.c ****         case CTRL_OBJ_FLAG:
 104:src/mcu_msg.c ****         case CTRL_KEY_FLAG:
 105:src/mcu_msg.c ****         case CTRL_KEY_SEP:
 106:src/mcu_msg.c ****         case CTRL_KEY_EQU:
 107:src/mcu_msg.c ****         case CTRL_CMD_START_FLAG:
GAS LISTING /tmp/ccYvOZGU.s 			page 3


 108:src/mcu_msg.c ****         case CTRL_CMD_STOP_FLAG:
 109:src/mcu_msg.c ****             return 1;
 110:src/mcu_msg.c ****         default:
 111:src/mcu_msg.c ****             return 0;
 112:src/mcu_msg.c ****     }
 113:src/mcu_msg.c **** }
 114:src/mcu_msg.c **** 
 115:src/mcu_msg.c **** /**
 116:src/mcu_msg.c ****  * @brief Char is a whitespace
 117:src/mcu_msg.c ****  * 
 118:src/mcu_msg.c ****  * @param c char
 119:src/mcu_msg.c ****  * @return uint8_t comparison result
 120:src/mcu_msg.c ****  */
 121:src/mcu_msg.c **** static inline uint8_t is_whitespace(char c)
 122:src/mcu_msg.c **** {
 123:src/mcu_msg.c ****     switch(c) {
 124:src/mcu_msg.c ****         case  ' ':
 125:src/mcu_msg.c ****         case '\t':
 126:src/mcu_msg.c ****         case '\n':
 127:src/mcu_msg.c ****         case '\v':
 128:src/mcu_msg.c ****         case '\f':
 129:src/mcu_msg.c ****         case '\r':
 130:src/mcu_msg.c ****             return 1;
 131:src/mcu_msg.c ****         default:
 132:src/mcu_msg.c ****             return 0;
 133:src/mcu_msg.c ****     }
 134:src/mcu_msg.c **** }
 135:src/mcu_msg.c **** 
 136:src/mcu_msg.c **** /**
 137:src/mcu_msg.c ****  * @brief Argument char is valid keyword char or not
 138:src/mcu_msg.c ****  * 
 139:src/mcu_msg.c ****  * @param c char
 140:src/mcu_msg.c ****  * @return uint8_t comparison result
 141:src/mcu_msg.c ****  */
 142:src/mcu_msg.c **** // static inline uint8_t is_valid_keyword_char(char c)
 143:src/mcu_msg.c **** // {
 144:src/mcu_msg.c **** //     return (c == '_') || (c >= 'a' && c <= 'z') || 
 145:src/mcu_msg.c **** //                     (c >= 'A' && c <= 'Z') || 
 146:src/mcu_msg.c **** //                     (c >= '0' && c <= '9') ? 1 : 0;
 147:src/mcu_msg.c **** // }
 148:src/mcu_msg.c **** #define is_valid_keyword_char(c)        ((c == '_') || \
 149:src/mcu_msg.c ****                                         (c >= 'a' && c <= 'z') || \ 
 150:src/mcu_msg.c ****                                         (c >= 'A' && c <= 'Z') || \
 151:src/mcu_msg.c ****                                         (c >= '0' && c <= '9'))
 152:src/mcu_msg.c **** 
 153:src/mcu_msg.c **** /**
 154:src/mcu_msg.c ****  * @brief strlen implementation for internal usage
 155:src/mcu_msg.c ****  * 
 156:src/mcu_msg.c ****  * @param str string 
 157:src/mcu_msg.c ****  * @return mmsg_size_t length of string 
 158:src/mcu_msg.c ****  */
 159:src/mcu_msg.c **** static mmsg_size_t str_len(char *str)
 160:src/mcu_msg.c **** {
   9              		.loc 1 160 0
  10              		.cfi_startproc
  11              	.LVL0:
 161:src/mcu_msg.c ****     char *p = str;
GAS LISTING /tmp/ccYvOZGU.s 			page 4


  12              		.loc 1 161 0
  13 0000 4889F8   		movq	%rdi, %rax
 162:src/mcu_msg.c ****     while(*p)
  14              		.loc 1 162 0
  15 0003 EB04     		jmp	.L2
  16              	.LVL1:
  17              	.L3:
 163:src/mcu_msg.c ****         p++;
  18              		.loc 1 163 0
  19 0005 4883C001 		addq	$1, %rax
  20              	.LVL2:
  21              	.L2:
 162:src/mcu_msg.c ****     while(*p)
  22              		.loc 1 162 0
  23 0009 803800   		cmpb	$0, (%rax)
  24 000c 75F7     		jne	.L3
 164:src/mcu_msg.c ****     return (p - str);
  25              		.loc 1 164 0
  26 000e 4829F8   		subq	%rdi, %rax
  27              	.LVL3:
 165:src/mcu_msg.c **** }
  28              		.loc 1 165 0
  29 0011 C3       		ret
  30              		.cfi_endproc
  31              	.LFE33:
  33              		.section	.text.skip_internal_str,"ax",@progbits
  35              	skip_internal_str:
  36              	.LFB35:
 166:src/mcu_msg.c **** 
 167:src/mcu_msg.c **** /**
 168:src/mcu_msg.c ****  * @brief Deciding char pointer is in the string buffer or not
 169:src/mcu_msg.c ****  * 
 170:src/mcu_msg.c ****  * @param str string buffer with start pointer and length
 171:src/mcu_msg.c ****  * @param p current pointer
 172:src/mcu_msg.c ****  * @return uint8_t return boole result
 173:src/mcu_msg.c ****  */
 174:src/mcu_msg.c **** static inline uint8_t is_in_str_buff(mmsg_string_t str, char *p)
 175:src/mcu_msg.c **** {
 176:src/mcu_msg.c ****     return ((p - str.s) < str.len);
 177:src/mcu_msg.c **** }
 178:src/mcu_msg.c **** 
 179:src/mcu_msg.c **** /**
 180:src/mcu_msg.c ****  * @brief Skiping internal string from start qoution mark to end qmark
 181:src/mcu_msg.c ****  * 
 182:src/mcu_msg.c ****  * @param start start pointer
 183:src/mcu_msg.c ****  * @return char* return end pointer
 184:src/mcu_msg.c ****  */
 185:src/mcu_msg.c **** static char *skip_internal_str(char *start)
 186:src/mcu_msg.c **** {
  37              		.loc 1 186 0
  38              		.cfi_startproc
  39              	.LVL4:
 187:src/mcu_msg.c ****     char *p = start;
 188:src/mcu_msg.c ****     char qmark = *start;
  40              		.loc 1 188 0
  41 0000 0FB60F   		movzbl	(%rdi), %ecx
  42              	.LVL5:
GAS LISTING /tmp/ccYvOZGU.s 			page 5


 189:src/mcu_msg.c ****     if((qmark != '\'' && qmark != '"')) return NULL;
  43              		.loc 1 189 0
  44 0003 80F927   		cmpb	$39, %cl
  45 0006 0F95C2   		setne	%dl
  46 0009 80F922   		cmpb	$34, %cl
  47 000c 0F95C0   		setne	%al
  48 000f 84C2     		testb	%al, %dl
  49 0011 751E     		jne	.L9
 190:src/mcu_msg.c ****     ++p;
  50              		.loc 1 190 0
  51 0013 488D4701 		leaq	1(%rdi), %rax
  52              	.LVL6:
 191:src/mcu_msg.c ****     while(*p && (*p != qmark)) {
  53              		.loc 1 191 0
  54 0017 EB04     		jmp	.L6
  55              	.L8:
 192:src/mcu_msg.c ****         p++;
  56              		.loc 1 192 0
  57 0019 4883C001 		addq	$1, %rax
  58              	.LVL7:
  59              	.L6:
 191:src/mcu_msg.c ****     while(*p && (*p != qmark)) {
  60              		.loc 1 191 0
  61 001d 0FB610   		movzbl	(%rax), %edx
  62 0020 84D2     		testb	%dl, %dl
  63 0022 7404     		je	.L7
 191:src/mcu_msg.c ****     while(*p && (*p != qmark)) {
  64              		.loc 1 191 0 is_stmt 0 discriminator 1
  65 0024 38CA     		cmpb	%cl, %dl
  66 0026 75F1     		jne	.L8
  67              	.L7:
 193:src/mcu_msg.c ****     }
 194:src/mcu_msg.c ****     
 195:src/mcu_msg.c ****     return *p ? ++p : NULL;
  68              		.loc 1 195 0 is_stmt 1
  69 0028 84D2     		testb	%dl, %dl
  70 002a 740B     		je	.L10
  71              		.loc 1 195 0 is_stmt 0 discriminator 1
  72 002c 4883C001 		addq	$1, %rax
  73              	.LVL8:
  74 0030 C3       		ret
  75              	.LVL9:
  76              	.L9:
 189:src/mcu_msg.c ****     ++p;
  77              		.loc 1 189 0 is_stmt 1
  78 0031 B8000000 		movl	$0, %eax
  78      00
  79 0036 C3       		ret
  80              	.LVL10:
  81              	.L10:
  82              		.loc 1 195 0
  83 0037 B8000000 		movl	$0, %eax
  83      00
  84              	.LVL11:
 196:src/mcu_msg.c **** }
  85              		.loc 1 196 0
  86 003c C3       		ret
GAS LISTING /tmp/ccYvOZGU.s 			page 6


  87              		.cfi_endproc
  88              	.LFE35:
  90              		.section	.text.mmsg_str_copy_to_chr_arr,"ax",@progbits
  92              	mmsg_str_copy_to_chr_arr:
  93              	.LFB44:
 197:src/mcu_msg.c **** 
 198:src/mcu_msg.c **** /**
 199:src/mcu_msg.c ****  * @brief find the position of the keyword int message string (first occurance)
 200:src/mcu_msg.c ****  * if the keyword found in the message string, the next (none space) char must be stopc
 201:src/mcu_msg.c ****  * @param str source string
 202:src/mcu_msg.c ****  * @param keyword keword has to be found
 203:src/mcu_msg.c ****  * @param flagc flag, eg. '@', '$'
 204:src/mcu_msg.c ****  * @param stopc stop character eg. '(', '='
 205:src/mcu_msg.c ****  * @return mmsg_string_t location and size of the keyword (whitout flag) or NULL if keyword not fou
 206:src/mcu_msg.c ****  */
 207:src/mcu_msg.c **** static mmsg_string_t find_keyword(mmsg_string_t str, char *keyword, char flagc, char stopc)
 208:src/mcu_msg.c **** {
 209:src/mcu_msg.c **** 
 210:src/mcu_msg.c ****     mmsg_string_t res;
 211:src/mcu_msg.c ****     char *p = str.s;
 212:src/mcu_msg.c ****     uint8_t equal;
 213:src/mcu_msg.c ****     mmsg_size_t i;
 214:src/mcu_msg.c ****     res.len = str_len(keyword);
 215:src/mcu_msg.c ****     while(is_in_str_buff(str, p) && *p) {
 216:src/mcu_msg.c ****         if(*p == '\'' || *p == '"') { //skip internal strings
 217:src/mcu_msg.c ****             p = skip_internal_str(p);
 218:src/mcu_msg.c ****         }
 219:src/mcu_msg.c ****         if(is_in_str_buff(str, p)  && *p == flagc) { // if flag char detected start the analization
 220:src/mcu_msg.c ****             res.s = p + 1;
 221:src/mcu_msg.c ****             equal = 1;
 222:src/mcu_msg.c ****             for(i = 0; is_in_str_buff(str, res.s + i) && i < res.len; i++) { // if not equal during
 223:src/mcu_msg.c ****                 if((*(res.s + i) != *(keyword + i)) || is_ctrl_char(*(res.s + i)) || 
 224:src/mcu_msg.c ****                                     !is_valid_keyword_char(*(res.s + i))) {
 225:src/mcu_msg.c ****                     equal = 0;
 226:src/mcu_msg.c ****                     break;
 227:src/mcu_msg.c ****                 }
 228:src/mcu_msg.c ****             }
 229:src/mcu_msg.c ****             while(is_in_str_buff(str, res.s + i) && is_whitespace(*(res.s + i))) i++; //skip spaces
 230:src/mcu_msg.c ****             if(equal && *(res.s + i) == stopc) { //if the stop char is the next, whitout spaces, re
 231:src/mcu_msg.c ****                 return res;
 232:src/mcu_msg.c ****             } else {
 233:src/mcu_msg.c ****                 p = res.s + i; // if not matched, return continue the iteration from last checked c
 234:src/mcu_msg.c ****             }
 235:src/mcu_msg.c ****         }
 236:src/mcu_msg.c ****         p++;
 237:src/mcu_msg.c ****     }
 238:src/mcu_msg.c ****     // if not found (loop finished whitout match) return with a destroyed string
 239:src/mcu_msg.c ****     mmsg_destroy_string(&res);
 240:src/mcu_msg.c ****     return res;
 241:src/mcu_msg.c **** }
 242:src/mcu_msg.c **** 
 243:src/mcu_msg.c **** 
 244:src/mcu_msg.c **** /**
 245:src/mcu_msg.c ****  * @brief Getting the value start position for particular key in message object
 246:src/mcu_msg.c ****  * 
 247:src/mcu_msg.c ****  * @param obj message object
 248:src/mcu_msg.c ****  * @param key key for search
GAS LISTING /tmp/ccYvOZGU.s 			page 7


 249:src/mcu_msg.c ****  * @return char* location of the value start point or NULL if the key was not found
 250:src/mcu_msg.c ****  */
 251:src/mcu_msg.c **** 
 252:src/mcu_msg.c **** static mmsg_string_t find_val(mmsg_obj_t obj, char *key)
 253:src/mcu_msg.c **** {
 254:src/mcu_msg.c ****     mmsg_string_t res  = find_keyword(obj.content, key, CTRL_KEY_FLAG, CTRL_KEY_EQU); //object star
 255:src/mcu_msg.c ****     char *p;
 256:src/mcu_msg.c ****     if(res.s == NULL) { //if keyword not found, return with NULLs and 0 lengths
 257:src/mcu_msg.c ****         mmsg_destroy_string(&res);
 258:src/mcu_msg.c ****         return res;
 259:src/mcu_msg.c ****     }
 260:src/mcu_msg.c ****     if(*res.s != CTRL_KEY_EQU) { // move pointer to 'equal'
 261:src/mcu_msg.c ****         while(is_in_str_buff(obj.content, res.s + 1) && *res.s != CTRL_KEY_EQU) res.s++;
 262:src/mcu_msg.c ****     }
 263:src/mcu_msg.c ****     res.s++;
 264:src/mcu_msg.c ****     while(is_in_str_buff(obj.content, res.s) && is_whitespace(*res.s)) res.s++; //skip spaces after
 265:src/mcu_msg.c **** 
 266:src/mcu_msg.c ****     p = res.s;
 267:src/mcu_msg.c ****     while(is_in_str_buff(obj.content, p) && !is_whitespace(*p) && !is_ctrl_char(*p)) p++; //calc le
 268:src/mcu_msg.c ****     res.len = p - res.s;
 269:src/mcu_msg.c **** 
 270:src/mcu_msg.c ****     return res;
 271:src/mcu_msg.c **** }
 272:src/mcu_msg.c **** 
 273:src/mcu_msg.c **** 
 274:src/mcu_msg.c **** /*get message*/
 275:src/mcu_msg.c **** mmsg_t mmsg_get(char *raw_str, char *id, mmsg_size_t len)
 276:src/mcu_msg.c **** {
 277:src/mcu_msg.c ****     mmsg_t res;
 278:src/mcu_msg.c ****     res.content.s = raw_str;
 279:src/mcu_msg.c ****     res.content.len = len;
 280:src/mcu_msg.c ****     res.id = find_keyword(res.content, id, CTRL_MSG_FLAG, CTRL_START_MSG); //object start with @ an
 281:src/mcu_msg.c ****     char *p;
 282:src/mcu_msg.c ****     if(res.id.s == NULL) { //if keyword not found, return with NULLs and 0 lengths
 283:src/mcu_msg.c ****         mmsg_destroy(&res);
 284:src/mcu_msg.c ****         return res;
 285:src/mcu_msg.c ****     }
 286:src/mcu_msg.c ****     p = res.id.s + res.id.len; //init pointer to end of the id
 287:src/mcu_msg.c ****     if (*p != CTRL_START_MSG) { // if the next char is not START_MSG, move to the start flag
 288:src/mcu_msg.c ****         while(is_in_str_buff(res.content, p + 1) && *p != CTRL_START_MSG) p++;
 289:src/mcu_msg.c ****     }
 290:src/mcu_msg.c ****     res.content.s = ++p; // set content string pointer to the current pos
 291:src/mcu_msg.c ****     while(is_in_str_buff(res.content, p) && *p != CTRL_STOP_MSG) { //calc length
 292:src/mcu_msg.c ****         p++;
 293:src/mcu_msg.c ****     }
 294:src/mcu_msg.c ****     res.content.len = p - res.content.s;
 295:src/mcu_msg.c ****     return res;
 296:src/mcu_msg.c **** }
 297:src/mcu_msg.c **** 
 298:src/mcu_msg.c **** 
 299:src/mcu_msg.c **** 
 300:src/mcu_msg.c **** mmsg_obj_t mmsg_parser_get_obj(mmsg_t msg, char *id)
 301:src/mcu_msg.c **** {
 302:src/mcu_msg.c ****     mmsg_obj_t res;
 303:src/mcu_msg.c ****     res.id = find_keyword(msg.content, id, CTRL_OBJ_FLAG, CTRL_START_OBJ); //object start with @ an
 304:src/mcu_msg.c ****     char *p;
 305:src/mcu_msg.c ****     if(res.id.s == NULL) { //if keyword not found, return with NULLs and 0 lengths
GAS LISTING /tmp/ccYvOZGU.s 			page 8


 306:src/mcu_msg.c ****         mmsg_destroy_obj(&res);
 307:src/mcu_msg.c ****         return res;
 308:src/mcu_msg.c ****     }
 309:src/mcu_msg.c **** 
 310:src/mcu_msg.c ****     p = res.id.s + res.id.len;
 311:src/mcu_msg.c ****     if (*p != CTRL_START_OBJ) {
 312:src/mcu_msg.c ****         while(is_in_str_buff(msg.content, p + 1) && *p != CTRL_START_OBJ) p++;
 313:src/mcu_msg.c ****     }
 314:src/mcu_msg.c ****     res.content.s = ++p;
 315:src/mcu_msg.c ****     while(is_in_str_buff(msg.content, p) && *p != CTRL_STOP_OBJ) {
 316:src/mcu_msg.c ****         p++;
 317:src/mcu_msg.c ****     }
 318:src/mcu_msg.c ****     res.content.len = p - res.content.s;
 319:src/mcu_msg.c ****     return res;
 320:src/mcu_msg.c **** }
 321:src/mcu_msg.c **** 
 322:src/mcu_msg.c **** mmsg_cmd_t mmsg_parser_get_cmd(mmsg_t msg, char *cmd_id)
 323:src/mcu_msg.c **** {
 324:src/mcu_msg.c ****     mmsg_cmd_t res;
 325:src/mcu_msg.c ****     // return with the find result
 326:src/mcu_msg.c ****     res.cmd = find_keyword(msg.content, cmd_id, CTRL_CMD_START_FLAG, CTRL_CMD_STOP_FLAG);
 327:src/mcu_msg.c ****     return res;
 328:src/mcu_msg.c **** }
 329:src/mcu_msg.c **** 
 330:src/mcu_msg.c **** int8_t mmsg_parser_get_int(int *res_val, mmsg_obj_t obj, char *key)
 331:src/mcu_msg.c **** {
 332:src/mcu_msg.c ****     mmsg_string_t sval = find_val(obj, key);
 333:src/mcu_msg.c ****     mmsg_size_t i;
 334:src/mcu_msg.c ****     unsigned m = 1;
 335:src/mcu_msg.c ****     int sign = 1;
 336:src/mcu_msg.c ****     int8_t res = 0; // result of function
 337:src/mcu_msg.c **** 
 338:src/mcu_msg.c ****     if(sval.s == NULL)  //key nout found
 339:src/mcu_msg.c ****         return -1;
 340:src/mcu_msg.c **** 
 341:src/mcu_msg.c **** 
 342:src/mcu_msg.c ****     switch(*sval.s) { //if the sign is defined, set the sign variable and increment the pointer
 343:src/mcu_msg.c ****         case '+':
 344:src/mcu_msg.c ****             sign = 1;
 345:src/mcu_msg.c ****             sval.s++;
 346:src/mcu_msg.c ****         break;
 347:src/mcu_msg.c ****         
 348:src/mcu_msg.c ****         case '-':
 349:src/mcu_msg.c ****             sign = -1;
 350:src/mcu_msg.c ****             sval.s++;
 351:src/mcu_msg.c ****         break;
 352:src/mcu_msg.c ****         
 353:src/mcu_msg.c ****         default:
 354:src/mcu_msg.c ****         break;
 355:src/mcu_msg.c ****     }
 356:src/mcu_msg.c **** 
 357:src/mcu_msg.c ****     for(i = 0; is_in_str_buff(obj.content, sval.s) && !is_whitespace(*sval.s) && *sval.s != CTRL_KE
 358:src/mcu_msg.c ****         if(*sval.s < '0' || *sval.s > '9') {    // if non valid number, return with error
 359:src/mcu_msg.c ****             return -1;
 360:src/mcu_msg.c ****         }
 361:src/mcu_msg.c ****     }
 362:src/mcu_msg.c **** 
GAS LISTING /tmp/ccYvOZGU.s 			page 9


 363:src/mcu_msg.c ****     *res_val = 0;
 364:src/mcu_msg.c ****     --sval.s;
 365:src/mcu_msg.c ****     while(i--) { //convert value to integer
 366:src/mcu_msg.c ****         *res_val += (*sval.s-- - '0') * m;
 367:src/mcu_msg.c ****         m *= 10;
 368:src/mcu_msg.c ****         res++;
 369:src/mcu_msg.c ****     }
 370:src/mcu_msg.c ****     
 371:src/mcu_msg.c ****     *res_val *= sign; //corrigate with the sign
 372:src/mcu_msg.c **** 
 373:src/mcu_msg.c ****     return res; // return with the digit count, if correct
 374:src/mcu_msg.c **** }
 375:src/mcu_msg.c **** 
 376:src/mcu_msg.c **** 
 377:src/mcu_msg.c **** int8_t mmsg_parser_get_float(float *res_val, mmsg_obj_t obj, char *key)
 378:src/mcu_msg.c **** {
 379:src/mcu_msg.c ****     mmsg_string_t sval = find_val(obj, key);
 380:src/mcu_msg.c ****     char *pf;
 381:src/mcu_msg.c ****     mmsg_size_t i;
 382:src/mcu_msg.c ****     unsigned m = 1;
 383:src/mcu_msg.c ****     float mf = 0.1;
 384:src/mcu_msg.c ****     int sign = 1;
 385:src/mcu_msg.c ****     int8_t res = 0; // result of function
 386:src/mcu_msg.c **** 
 387:src/mcu_msg.c ****     if(sval.s == NULL)  //key nout found
 388:src/mcu_msg.c ****         return -1;
 389:src/mcu_msg.c **** 
 390:src/mcu_msg.c **** 
 391:src/mcu_msg.c ****     switch(*sval.s) { //if the sign is defined, set the sign variable and increment the pointer
 392:src/mcu_msg.c ****         case '+':
 393:src/mcu_msg.c ****             sign = 1;
 394:src/mcu_msg.c ****             sval.s++;
 395:src/mcu_msg.c ****         break;
 396:src/mcu_msg.c ****         
 397:src/mcu_msg.c ****         case '-':
 398:src/mcu_msg.c ****             sign = -1;
 399:src/mcu_msg.c ****             sval.s++;
 400:src/mcu_msg.c ****         break;
 401:src/mcu_msg.c ****         
 402:src/mcu_msg.c ****         default:
 403:src/mcu_msg.c ****         break;
 404:src/mcu_msg.c ****     }
 405:src/mcu_msg.c **** 
 406:src/mcu_msg.c ****     //move p to dec separator or end of the value
 407:src/mcu_msg.c ****     for(i = 0; is_in_str_buff(obj.content, sval.s) && !is_whitespace(*sval.s) && *sval.s != CTRL_KE
 408:src/mcu_msg.c ****         if((*sval.s < '0' || *sval.s > '9')) {    // if non valid number, return with error
 409:src/mcu_msg.c ****             return -1;
 410:src/mcu_msg.c ****         }
 411:src/mcu_msg.c ****     }
 412:src/mcu_msg.c **** 
 413:src/mcu_msg.c ****     *res_val = 0.0;
 414:src/mcu_msg.c ****     
 415:src/mcu_msg.c ****     if(*sval.s == '.') {
 416:src/mcu_msg.c ****         pf = sval.s + 1;
 417:src/mcu_msg.c ****         res++;
 418:src/mcu_msg.c ****     } else {
 419:src/mcu_msg.c ****         pf = NULL;
GAS LISTING /tmp/ccYvOZGU.s 			page 10


 420:src/mcu_msg.c ****     }
 421:src/mcu_msg.c **** 
 422:src/mcu_msg.c ****     --sval.s;
 423:src/mcu_msg.c ****     while(i--) { // convert integer part
 424:src/mcu_msg.c ****         *res_val += (*sval.s-- - '0') * m;
 425:src/mcu_msg.c ****         m *= 10;
 426:src/mcu_msg.c ****         res++;
 427:src/mcu_msg.c ****     }
 428:src/mcu_msg.c ****     
 429:src/mcu_msg.c ****     // calculate floating point section after '.' (if there is)
 430:src/mcu_msg.c ****     for(; pf != NULL && is_in_str_buff(obj.content, pf) && !is_whitespace(*pf) && *pf != CTRL_KEY_S
 431:src/mcu_msg.c ****         if(*pf < '0' || *pf > '9') {    // if non valid number, return with error
 432:src/mcu_msg.c ****             return -1;
 433:src/mcu_msg.c ****         }
 434:src/mcu_msg.c ****         *res_val += (*pf - '0') * mf;
 435:src/mcu_msg.c ****         mf /= 10;
 436:src/mcu_msg.c ****         res++; 
 437:src/mcu_msg.c ****     }
 438:src/mcu_msg.c **** 
 439:src/mcu_msg.c ****     *res_val *= sign; //corrigate with the sign
 440:src/mcu_msg.c **** 
 441:src/mcu_msg.c ****     return res; // return with the digit count + '.' separator, if correct
 442:src/mcu_msg.c **** }
 443:src/mcu_msg.c **** 
 444:src/mcu_msg.c **** 
 445:src/mcu_msg.c **** 
 446:src/mcu_msg.c **** mmsg_string_t mmsg_parser_get_string(mmsg_obj_t obj, char *key)
 447:src/mcu_msg.c **** {
 448:src/mcu_msg.c ****     mmsg_string_t res = find_val(obj, key);
 449:src/mcu_msg.c ****     char qmark;
 450:src/mcu_msg.c ****     char *p;
 451:src/mcu_msg.c **** 
 452:src/mcu_msg.c ****     if(res.s == NULL) {
 453:src/mcu_msg.c ****         mmsg_destroy_string(&res);
 454:src/mcu_msg.c ****         return res;
 455:src/mcu_msg.c ****     }
 456:src/mcu_msg.c ****         
 457:src/mcu_msg.c ****     qmark = *res.s;
 458:src/mcu_msg.c **** 
 459:src/mcu_msg.c ****     if(qmark != '\'' && qmark != '"') { // qmark not found, this is not a string
 460:src/mcu_msg.c ****         mmsg_destroy_string(&res);
 461:src/mcu_msg.c ****         return res;
 462:src/mcu_msg.c ****     }
 463:src/mcu_msg.c **** 
 464:src/mcu_msg.c ****     p = ++res.s;
 465:src/mcu_msg.c ****     while(is_in_str_buff(obj.content, p) && *p != qmark) { // calc len
 466:src/mcu_msg.c ****         p++;
 467:src/mcu_msg.c ****     }
 468:src/mcu_msg.c ****     res.len = p - res.s;
 469:src/mcu_msg.c ****     return res;
 470:src/mcu_msg.c **** }
 471:src/mcu_msg.c **** 
 472:src/mcu_msg.c **** /**
 473:src/mcu_msg.c ****  * @brief Default string copy to char array
 474:src/mcu_msg.c ****  * 
 475:src/mcu_msg.c ****  * @param dest destination char array
 476:src/mcu_msg.c ****  * @param source source string type
GAS LISTING /tmp/ccYvOZGU.s 			page 11


 477:src/mcu_msg.c ****  */
 478:src/mcu_msg.c **** static void mmsg_str_copy_to_chr_arr(char *dest, mmsg_string_t source)
 479:src/mcu_msg.c **** {
  94              		.loc 1 479 0
  95              		.cfi_startproc
  96              	.LVL12:
 480:src/mcu_msg.c ****     mmsg_size_t i;
 481:src/mcu_msg.c ****     for(i = 0; i < source.len; *(dest + i) = *(source.s + i), i++);
  97              		.loc 1 481 0
  98 0000 B8000000 		movl	$0, %eax
  98      00
  99 0005 EB0F     		jmp	.L12
 100              	.LVL13:
 101              	.L13:
 102              		.loc 1 481 0 is_stmt 0 discriminator 3
 103 0007 0FB7C8   		movzwl	%ax, %ecx
 104 000a 440FB604 		movzbl	(%rsi,%rcx), %r8d
 104      0E
 105 000f 4488040F 		movb	%r8b, (%rdi,%rcx)
 106 0013 83C001   		addl	$1, %eax
 107              	.LVL14:
 108              	.L12:
 109              		.loc 1 481 0 discriminator 1
 110 0016 6639C2   		cmpw	%ax, %dx
 111 0019 77EC     		ja	.L13
 482:src/mcu_msg.c **** }
 112              		.loc 1 482 0 is_stmt 1
 113 001b F3C3     		rep ret
 114              		.cfi_endproc
 115              	.LFE44:
 117              		.section	.text.mmsg_str_copy,"ax",@progbits
 119              	mmsg_str_copy:
 120              	.LFB45:
 483:src/mcu_msg.c **** 
 484:src/mcu_msg.c **** /**
 485:src/mcu_msg.c ****  * @brief Default string copy to string type
 486:src/mcu_msg.c ****  * 
 487:src/mcu_msg.c ****  * @param dest destination string type
 488:src/mcu_msg.c ****  * @param source source string type
 489:src/mcu_msg.c ****  */
 490:src/mcu_msg.c **** static void mmsg_str_copy(mmsg_string_t dest, mmsg_string_t source)
 491:src/mcu_msg.c **** {
 121              		.loc 1 491 0
 122              		.cfi_startproc
 123              	.LVL15:
 492:src/mcu_msg.c ****     mmsg_size_t i;
 493:src/mcu_msg.c ****     for(i = 0, dest.len = source.len; i < source.len; *(dest.s + i) = *(source.s + i), i++);
 124              		.loc 1 493 0
 125 0000 B8000000 		movl	$0, %eax
 125      00
 126 0005 EB0F     		jmp	.L15
 127              	.LVL16:
 128              	.L16:
 129              		.loc 1 493 0 is_stmt 0 discriminator 3
 130 0007 0FB7F0   		movzwl	%ax, %esi
 131              	.LVL17:
 132 000a 440FB604 		movzbl	(%rdx,%rsi), %r8d
GAS LISTING /tmp/ccYvOZGU.s 			page 12


 132      32
 133 000f 44880437 		movb	%r8b, (%rdi,%rsi)
 134 0013 83C001   		addl	$1, %eax
 135              	.LVL18:
 136              	.L15:
 137              		.loc 1 493 0 discriminator 1
 138 0016 6639C1   		cmpw	%ax, %cx
 139 0019 77EC     		ja	.L16
 494:src/mcu_msg.c **** }
 140              		.loc 1 494 0 is_stmt 1
 141 001b F3C3     		rep ret
 142              		.cfi_endproc
 143              	.LFE45:
 145              		.section	.text.mmsg_print_int,"ax",@progbits
 147              	mmsg_print_int:
 148              	.LFB46:
 495:src/mcu_msg.c **** 
 496:src/mcu_msg.c **** static void mmsg_print_int(int i)
 497:src/mcu_msg.c **** {
 149              		.loc 1 497 0
 150              		.cfi_startproc
 151              	.LVL19:
 152 0000 4155     		pushq	%r13
 153              	.LCFI0:
 154              		.cfi_def_cfa_offset 16
 155              		.cfi_offset 13, -16
 156 0002 4154     		pushq	%r12
 157              	.LCFI1:
 158              		.cfi_def_cfa_offset 24
 159              		.cfi_offset 12, -24
 160 0004 55       		pushq	%rbp
 161              	.LCFI2:
 162              		.cfi_def_cfa_offset 32
 163              		.cfi_offset 6, -32
 164 0005 53       		pushq	%rbx
 165              	.LCFI3:
 166              		.cfi_def_cfa_offset 40
 167              		.cfi_offset 3, -40
 168 0006 4883EC08 		subq	$8, %rsp
 169              	.LCFI4:
 170              		.cfi_def_cfa_offset 48
 498:src/mcu_msg.c ****     int8_t sign = i < 0 ? -1 : 1;
 171              		.loc 1 498 0
 172 000a 85FF     		testl	%edi, %edi
 173 000c 782A     		js	.L33
 174 000e 41BD0100 		movl	$1, %r13d
 174      0000
 175              	.L18:
 176              	.LVL20:
 499:src/mcu_msg.c ****     //                     int32->2147483647  int16:32767
 500:src/mcu_msg.c ****     long div;
 501:src/mcu_msg.c ****     char dig;
 502:src/mcu_msg.c **** 
 503:src/mcu_msg.c ****     if(!mmsg_putc) //if function pointer is NULL, return
 177              		.loc 1 503 0 discriminator 4
 178 0014 488B0500 		movq	mmsg_putc(%rip), %rax
 178      000000
GAS LISTING /tmp/ccYvOZGU.s 			page 13


 179 001b 4885C0   		testq	%rax, %rax
 180 001e 740D     		je	.L17
 181 0020 89FD     		movl	%edi, %ebp
 504:src/mcu_msg.c ****         return;
 505:src/mcu_msg.c ****     if(!i) {
 182              		.loc 1 505 0
 183 0022 85FF     		testl	%edi, %edi
 184 0024 751A     		jne	.L20
 506:src/mcu_msg.c ****         mmsg_putc('0');
 185              		.loc 1 506 0
 186 0026 BF300000 		movl	$48, %edi
 186      00
 187              	.LVL21:
 188 002b FFD0     		call	*%rax
 189              	.LVL22:
 190              	.L17:
 507:src/mcu_msg.c ****         return;
 508:src/mcu_msg.c ****     }
 509:src/mcu_msg.c **** 
 510:src/mcu_msg.c ****     switch(sign) {
 511:src/mcu_msg.c ****         case -1: div = sizeof(int) >= 4 ? -1000000000L : -10000L; mmsg_putc('-'); break;
 512:src/mcu_msg.c ****         default: div = sizeof(int) >= 4 ?  1000000000L :  10000L; break;
 513:src/mcu_msg.c ****     }
 514:src/mcu_msg.c ****     while(div) {
 515:src/mcu_msg.c ****         if(sign == -1 ? (i > div) : (i < div)) {
 516:src/mcu_msg.c ****             div /= 10;
 517:src/mcu_msg.c ****             continue;
 518:src/mcu_msg.c ****         }
 519:src/mcu_msg.c ****         dig = '0' + ((i / div) % 10);
 520:src/mcu_msg.c ****         mmsg_putc(dig);
 521:src/mcu_msg.c ****         div /= 10;
 522:src/mcu_msg.c ****     }
 523:src/mcu_msg.c ****     
 524:src/mcu_msg.c **** }
 191              		.loc 1 524 0
 192 002d 4883C408 		addq	$8, %rsp
 193              	.LCFI5:
 194              		.cfi_remember_state
 195              		.cfi_def_cfa_offset 40
 196 0031 5B       		popq	%rbx
 197              	.LCFI6:
 198              		.cfi_def_cfa_offset 32
 199 0032 5D       		popq	%rbp
 200              	.LCFI7:
 201              		.cfi_def_cfa_offset 24
 202 0033 415C     		popq	%r12
 203              	.LCFI8:
 204              		.cfi_def_cfa_offset 16
 205 0035 415D     		popq	%r13
 206              	.LCFI9:
 207              		.cfi_def_cfa_offset 8
 208              	.LVL23:
 209 0037 C3       		ret
 210              	.LVL24:
 211              	.L33:
 212              	.LCFI10:
 213              		.cfi_restore_state
GAS LISTING /tmp/ccYvOZGU.s 			page 14


 498:src/mcu_msg.c ****     //                     int32->2147483647  int16:32767
 214              		.loc 1 498 0
 215 0038 41BDFFFF 		movl	$-1, %r13d
 215      FFFF
 216 003e EBD4     		jmp	.L18
 217              	.LVL25:
 218              	.L20:
 510:src/mcu_msg.c ****         case -1: div = sizeof(int) >= 4 ? -1000000000L : -10000L; mmsg_putc('-'); break;
 219              		.loc 1 510 0
 220 0040 4180FDFF 		cmpb	$-1, %r13b
 221 0044 0F85AB00 		jne	.L31
 221      0000
 222              	.LVL26:
 511:src/mcu_msg.c ****         default: div = sizeof(int) >= 4 ?  1000000000L :  10000L; break;
 223              		.loc 1 511 0
 224 004a BF2D0000 		movl	$45, %edi
 224      00
 225              	.LVL27:
 226 004f FFD0     		call	*%rax
 227              	.LVL28:
 228 0051 48C7C300 		movq	$-1000000000, %rbx
 228      3665C4
 229 0058 EB61     		jmp	.L27
 230              	.LVL29:
 231              	.L35:
 515:src/mcu_msg.c ****             div /= 10;
 232              		.loc 1 515 0 discriminator 1
 233 005a 4863C5   		movslq	%ebp, %rax
 234 005d 4839D8   		cmpq	%rbx, %rax
 235 0060 0F9FC0   		setg	%al
 236              	.L24:
 515:src/mcu_msg.c ****             div /= 10;
 237              		.loc 1 515 0 is_stmt 0 discriminator 4
 238 0063 84C0     		testb	%al, %al
 239 0065 756E     		jne	.L34
 519:src/mcu_msg.c ****         mmsg_putc(dig);
 240              		.loc 1 519 0 is_stmt 1
 241 0067 4863C5   		movslq	%ebp, %rax
 242 006a 4899     		cqto
 243 006c 48F7FB   		idivq	%rbx
 244 006f 4889C1   		movq	%rax, %rcx
 245 0072 49BC6766 		movabsq	$7378697629483820647, %r12
 245      66666666 
 245      6666
 246 007c 49F7EC   		imulq	%r12
 247 007f 48C1FA02 		sarq	$2, %rdx
 248 0083 4889C8   		movq	%rcx, %rax
 249 0086 48C1F83F 		sarq	$63, %rax
 250 008a 4829C2   		subq	%rax, %rdx
 251 008d 488D1492 		leaq	(%rdx,%rdx,4), %rdx
 252 0091 488D0412 		leaq	(%rdx,%rdx), %rax
 253 0095 4829C1   		subq	%rax, %rcx
 254 0098 4889CA   		movq	%rcx, %rdx
 255 009b 83C230   		addl	$48, %edx
 256              	.LVL30:
 520:src/mcu_msg.c ****         div /= 10;
 257              		.loc 1 520 0
GAS LISTING /tmp/ccYvOZGU.s 			page 15


 258 009e 0FBEFA   		movsbl	%dl, %edi
 259 00a1 FF150000 		call	*mmsg_putc(%rip)
 259      0000
 260              	.LVL31:
 521:src/mcu_msg.c ****     }
 261              		.loc 1 521 0
 262 00a7 4889D8   		movq	%rbx, %rax
 263 00aa 49F7EC   		imulq	%r12
 264 00ad 48C1FA02 		sarq	$2, %rdx
 265 00b1 48C1FB3F 		sarq	$63, %rbx
 266              	.LVL32:
 267 00b5 4829DA   		subq	%rbx, %rdx
 268 00b8 4889D3   		movq	%rdx, %rbx
 269              	.LVL33:
 270              	.L27:
 514:src/mcu_msg.c ****         if(sign == -1 ? (i > div) : (i < div)) {
 271              		.loc 1 514 0 discriminator 1
 272 00bb 4885DB   		testq	%rbx, %rbx
 273 00be 0F8469FF 		je	.L17
 273      FFFF
 515:src/mcu_msg.c ****             div /= 10;
 274              		.loc 1 515 0
 275 00c4 4180FDFF 		cmpb	$-1, %r13b
 276 00c8 7490     		je	.L35
 515:src/mcu_msg.c ****             div /= 10;
 277              		.loc 1 515 0 is_stmt 0 discriminator 2
 278 00ca 4863C5   		movslq	%ebp, %rax
 279 00cd 4839D8   		cmpq	%rbx, %rax
 280 00d0 0F9CC0   		setl	%al
 281 00d3 EB8E     		jmp	.L24
 282              	.L34:
 516:src/mcu_msg.c ****             continue;
 283              		.loc 1 516 0 is_stmt 1
 284 00d5 48BA6766 		movabsq	$7378697629483820647, %rdx
 284      66666666 
 284      6666
 285 00df 4889D8   		movq	%rbx, %rax
 286 00e2 48F7EA   		imulq	%rdx
 287 00e5 48C1FA02 		sarq	$2, %rdx
 288 00e9 48C1FB3F 		sarq	$63, %rbx
 289              	.LVL34:
 290 00ed 4829DA   		subq	%rbx, %rdx
 291 00f0 4889D3   		movq	%rdx, %rbx
 292              	.LVL35:
 517:src/mcu_msg.c ****         }
 293              		.loc 1 517 0
 294 00f3 EBC6     		jmp	.L27
 295              	.LVL36:
 296              	.L31:
 512:src/mcu_msg.c ****     }
 297              		.loc 1 512 0
 298 00f5 BB00CA9A 		movl	$1000000000, %ebx
 298      3B
 299 00fa EBBF     		jmp	.L27
 300              		.cfi_endproc
 301              	.LFE46:
 303              		.section	.text.mmsg_print_float,"ax",@progbits
GAS LISTING /tmp/ccYvOZGU.s 			page 16


 305              	mmsg_print_float:
 306              	.LFB47:
 525:src/mcu_msg.c **** 
 526:src/mcu_msg.c **** static void mmsg_print_float(float f, uint8_t prec)
 527:src/mcu_msg.c **** {
 307              		.loc 1 527 0
 308              		.cfi_startproc
 309              	.LVL37:
 310 0000 4154     		pushq	%r12
 311              	.LCFI11:
 312              		.cfi_def_cfa_offset 16
 313              		.cfi_offset 12, -16
 314 0002 55       		pushq	%rbp
 315              	.LCFI12:
 316              		.cfi_def_cfa_offset 24
 317              		.cfi_offset 6, -24
 318 0003 53       		pushq	%rbx
 319              	.LCFI13:
 320              		.cfi_def_cfa_offset 32
 321              		.cfi_offset 3, -32
 322 0004 4883EC10 		subq	$16, %rsp
 323              	.LCFI14:
 324              		.cfi_def_cfa_offset 48
 325 0008 4189FC   		movl	%edi, %r12d
 528:src/mcu_msg.c ****     int i_part = f;
 326              		.loc 1 528 0
 327 000b F30F2CF8 		cvttss2si	%xmm0, %edi
 328              	.LVL38:
 529:src/mcu_msg.c ****     float f_part = f - i_part;
 329              		.loc 1 529 0
 330 000f 660FEFC9 		pxor	%xmm1, %xmm1
 331 0013 F30F2ACF 		cvtsi2ss	%edi, %xmm1
 332 0017 0F28D8   		movaps	%xmm0, %xmm3
 333 001a F30F5CD9 		subss	%xmm1, %xmm3
 334 001e F30F115C 		movss	%xmm3, 12(%rsp)
 334      240C
 335              	.LVL39:
 530:src/mcu_msg.c ****     long mul = f < 0.0 ? -10 : 10;
 336              		.loc 1 530 0
 337 0024 660FEFC9 		pxor	%xmm1, %xmm1
 338 0028 0F2EC8   		ucomiss	%xmm0, %xmm1
 339 002b 7742     		ja	.L49
 340 002d BB0A0000 		movl	$10, %ebx
 340      00
 341              	.L37:
 342              	.LVL40:
 531:src/mcu_msg.c ****     uint8_t j;
 532:src/mcu_msg.c ****     char dig;
 533:src/mcu_msg.c ****     if(!mmsg_putc) //if function pointer is NULL, return
 343              		.loc 1 533 0 discriminator 4
 344 0032 488B0500 		movq	mmsg_putc(%rip), %rax
 344      000000
 345 0039 4885C0   		testq	%rax, %rax
 346 003c 0F849900 		je	.L36
 346      0000
 534:src/mcu_msg.c ****         return;
 535:src/mcu_msg.c **** 
GAS LISTING /tmp/ccYvOZGU.s 			page 17


 536:src/mcu_msg.c ****     if(!i_part) {
 347              		.loc 1 536 0
 348 0042 85FF     		testl	%edi, %edi
 349 0044 7532     		jne	.L40
 537:src/mcu_msg.c ****         if(mul < 0) mmsg_putc('-');
 350              		.loc 1 537 0
 351 0046 4885DB   		testq	%rbx, %rbx
 352 0049 7907     		jns	.L41
 353              		.loc 1 537 0 is_stmt 0 discriminator 1
 354 004b BF2D0000 		movl	$45, %edi
 354      00
 355              	.LVL41:
 356 0050 FFD0     		call	*%rax
 357              	.LVL42:
 358              	.L41:
 538:src/mcu_msg.c ****         mmsg_putc('0');
 359              		.loc 1 538 0 is_stmt 1
 360 0052 BF300000 		movl	$48, %edi
 360      00
 361 0057 FF150000 		call	*mmsg_putc(%rip)
 361      0000
 362              	.LVL43:
 363              	.L42:
 539:src/mcu_msg.c ****     } else {
 540:src/mcu_msg.c ****         mmsg_print_int(i_part);  
 541:src/mcu_msg.c ****     }
 542:src/mcu_msg.c ****       
 543:src/mcu_msg.c ****     mmsg_putc('.');
 364              		.loc 1 543 0
 365 005d BF2E0000 		movl	$46, %edi
 365      00
 366 0062 FF150000 		call	*mmsg_putc(%rip)
 366      0000
 367              	.LVL44:
 544:src/mcu_msg.c ****     for(j = 0; j < prec; mul *= 10, j++) {
 368              		.loc 1 544 0
 369 0068 BD000000 		movl	$0, %ebp
 369      00
 370 006d EB67     		jmp	.L43
 371              	.LVL45:
 372              	.L49:
 530:src/mcu_msg.c ****     uint8_t j;
 373              		.loc 1 530 0
 374 006f 48C7C3F6 		movq	$-10, %rbx
 374      FFFFFF
 375 0076 EBBA     		jmp	.L37
 376              	.LVL46:
 377              	.L40:
 540:src/mcu_msg.c ****     }
 378              		.loc 1 540 0
 379 0078 E8000000 		call	mmsg_print_int
 379      00
 380              	.LVL47:
 381 007d EBDE     		jmp	.L42
 382              	.LVL48:
 383              	.L44:
 545:src/mcu_msg.c ****         dig = '0' + ((long)(f_part * mul) % 10);
GAS LISTING /tmp/ccYvOZGU.s 			page 18


 384              		.loc 1 545 0 discriminator 3
 385 007f 660FEFC0 		pxor	%xmm0, %xmm0
 386 0083 F3480F2A 		cvtsi2ssq	%rbx, %xmm0
 386      C3
 387 0088 F30F5944 		mulss	12(%rsp), %xmm0
 387      240C
 388 008e F3480F2C 		cvttss2siq	%xmm0, %rcx
 388      C8
 389 0093 48BA6766 		movabsq	$7378697629483820647, %rdx
 389      66666666 
 389      6666
 390 009d 4889C8   		movq	%rcx, %rax
 391 00a0 48F7EA   		imulq	%rdx
 392 00a3 48C1FA02 		sarq	$2, %rdx
 393 00a7 4889C8   		movq	%rcx, %rax
 394 00aa 48C1F83F 		sarq	$63, %rax
 395 00ae 4829C2   		subq	%rax, %rdx
 396 00b1 488D1492 		leaq	(%rdx,%rdx,4), %rdx
 397 00b5 488D0412 		leaq	(%rdx,%rdx), %rax
 398 00b9 4829C1   		subq	%rax, %rcx
 399 00bc 4889CA   		movq	%rcx, %rdx
 400 00bf 83C230   		addl	$48, %edx
 401              	.LVL49:
 546:src/mcu_msg.c ****         mmsg_putc(dig);
 402              		.loc 1 546 0 discriminator 3
 403 00c2 0FBEFA   		movsbl	%dl, %edi
 404 00c5 FF150000 		call	*mmsg_putc(%rip)
 404      0000
 405              	.LVL50:
 544:src/mcu_msg.c ****         dig = '0' + ((long)(f_part * mul) % 10);
 406              		.loc 1 544 0 discriminator 3
 407 00cb 488D049B 		leaq	(%rbx,%rbx,4), %rax
 408 00cf 488D1C00 		leaq	(%rax,%rax), %rbx
 409              	.LVL51:
 410 00d3 83C501   		addl	$1, %ebp
 411              	.LVL52:
 412              	.L43:
 544:src/mcu_msg.c ****         dig = '0' + ((long)(f_part * mul) % 10);
 413              		.loc 1 544 0 is_stmt 0 discriminator 1
 414 00d6 4438E5   		cmpb	%r12b, %bpl
 415 00d9 72A4     		jb	.L44
 416              	.LVL53:
 417              	.L36:
 547:src/mcu_msg.c ****     }
 548:src/mcu_msg.c **** }
 418              		.loc 1 548 0 is_stmt 1
 419 00db 4883C410 		addq	$16, %rsp
 420              	.LCFI15:
 421              		.cfi_def_cfa_offset 32
 422 00df 5B       		popq	%rbx
 423              	.LCFI16:
 424              		.cfi_def_cfa_offset 24
 425              	.LVL54:
 426 00e0 5D       		popq	%rbp
 427              	.LCFI17:
 428              		.cfi_def_cfa_offset 16
 429 00e1 415C     		popq	%r12
GAS LISTING /tmp/ccYvOZGU.s 			page 19


 430              	.LCFI18:
 431              		.cfi_def_cfa_offset 8
 432              	.LVL55:
 433 00e3 C3       		ret
 434              		.cfi_endproc
 435              	.LFE47:
 437              		.section	.text.mmsg_print_str,"ax",@progbits
 439              	mmsg_print_str:
 440              	.LFB48:
 549:src/mcu_msg.c **** 
 550:src/mcu_msg.c **** static void mmsg_print_str(mmsg_string_t str)
 551:src/mcu_msg.c **** {
 441              		.loc 1 551 0
 442              		.cfi_startproc
 443              	.LVL56:
 552:src/mcu_msg.c ****     mmsg_size_t i;
 553:src/mcu_msg.c ****     if(!mmsg_putc) { //if function pointer is NULL, return
 444              		.loc 1 553 0
 445 0000 48833D00 		cmpq	$0, mmsg_putc(%rip)
 445      00000000 
 446 0008 742E     		je	.L55
 551:src/mcu_msg.c ****     mmsg_size_t i;
 447              		.loc 1 551 0
 448 000a 4154     		pushq	%r12
 449              	.LCFI19:
 450              		.cfi_def_cfa_offset 16
 451              		.cfi_offset 12, -16
 452 000c 55       		pushq	%rbp
 453              	.LCFI20:
 454              		.cfi_def_cfa_offset 24
 455              		.cfi_offset 6, -24
 456 000d 53       		pushq	%rbx
 457              	.LCFI21:
 458              		.cfi_def_cfa_offset 32
 459              		.cfi_offset 3, -32
 460 000e 4989FC   		movq	%rdi, %r12
 461 0011 4889F5   		movq	%rsi, %rbp
 554:src/mcu_msg.c ****         return;
 555:src/mcu_msg.c ****     }
 556:src/mcu_msg.c ****     for(i = 0; i < str.len; mmsg_putc(*(str.s + i++)));
 462              		.loc 1 556 0
 463 0014 B8000000 		movl	$0, %eax
 463      00
 464 0019 EB13     		jmp	.L52
 465              	.LVL57:
 466              	.L53:
 467              		.loc 1 556 0 is_stmt 0 discriminator 3
 468 001b 8D5801   		leal	1(%rax), %ebx
 469              	.LVL58:
 470 001e 0FB7C0   		movzwl	%ax, %eax
 471 0021 410FBE3C 		movsbl	(%r12,%rax), %edi
 471      04
 472 0026 FF150000 		call	*mmsg_putc(%rip)
 472      0000
 473              	.LVL59:
 474 002c 89D8     		movl	%ebx, %eax
 475              	.LVL60:
GAS LISTING /tmp/ccYvOZGU.s 			page 20


 476              	.L52:
 477              		.loc 1 556 0 discriminator 1
 478 002e 6639C5   		cmpw	%ax, %bp
 479 0031 77E8     		ja	.L53
 557:src/mcu_msg.c **** }
 480              		.loc 1 557 0 is_stmt 1
 481 0033 5B       		popq	%rbx
 482              	.LCFI22:
 483              		.cfi_def_cfa_offset 24
 484 0034 5D       		popq	%rbp
 485              	.LCFI23:
 486              		.cfi_def_cfa_offset 16
 487 0035 415C     		popq	%r12
 488              	.LCFI24:
 489              		.cfi_def_cfa_offset 8
 490 0037 C3       		ret
 491              	.LVL61:
 492              	.L55:
 493              		.cfi_restore 3
 494              		.cfi_restore 6
 495              		.cfi_restore 12
 496 0038 F3C3     		rep ret
 497              		.cfi_endproc
 498              	.LFE48:
 500              		.section	.text.mmsg_wrapper_print_obj,"ax",@progbits
 502              	mmsg_wrapper_print_obj:
 503              	.LFB52:
 558:src/mcu_msg.c **** 
 559:src/mcu_msg.c **** /**
 560:src/mcu_msg.c ****  * @brief Create string handler and set the basic functions
 561:src/mcu_msg.c ****  * 
 562:src/mcu_msg.c ****  * @param putc expected print function, set to NULL if you don't need the print feature
 563:src/mcu_msg.c ****  * @return mmsg_string_hnd_t handler
 564:src/mcu_msg.c ****  */
 565:src/mcu_msg.c **** mmsg_string_hnd_t mmsg_string_hnd_create(int (*putc)(char))
 566:src/mcu_msg.c **** {
 567:src/mcu_msg.c ****     mmsg_string_hnd_t hnd;
 568:src/mcu_msg.c ****     mmsg_putc = putc;            // init putchar
 569:src/mcu_msg.c ****     hnd.copy_to_chr_arr = mmsg_str_copy_to_chr_arr;
 570:src/mcu_msg.c ****     hnd.copy = mmsg_str_copy;
 571:src/mcu_msg.c ****     hnd.print = mmsg_print_str;
 572:src/mcu_msg.c ****     return hnd;
 573:src/mcu_msg.c **** }
 574:src/mcu_msg.c **** 
 575:src/mcu_msg.c **** static inline char define_qmark(mmsg_string_t str)
 576:src/mcu_msg.c **** {
 577:src/mcu_msg.c ****     char *p = str.s;
 578:src/mcu_msg.c ****     while(is_in_str_buff(str, p) && *p) {
 579:src/mcu_msg.c ****         switch(*p) {
 580:src/mcu_msg.c ****             case '"' :  return '\'';
 581:src/mcu_msg.c ****             case '\'' : return '"';
 582:src/mcu_msg.c ****             default: break;
 583:src/mcu_msg.c ****         }
 584:src/mcu_msg.c ****         p++;
 585:src/mcu_msg.c ****     }
 586:src/mcu_msg.c ****     return '"'; // default
 587:src/mcu_msg.c **** }
GAS LISTING /tmp/ccYvOZGU.s 			page 21


 588:src/mcu_msg.c **** 
 589:src/mcu_msg.c **** /////////////////////////////////////////////////////////////////////////////////////////////
 590:src/mcu_msg.c **** //                                     Wrapper functions                                   //
 591:src/mcu_msg.c **** /////////////////////////////////////////////////////////////////////////////////////////////
 592:src/mcu_msg.c **** #if MCU_MSG_USE_WRAPPER
 593:src/mcu_msg.c **** 
 594:src/mcu_msg.c **** mmsg_wrap_hnd_t mmsg_wrapper_hnd_create(int (*putc)(char))
 595:src/mcu_msg.c **** {
 596:src/mcu_msg.c ****     mmsg_wrap_hnd_t hnd;
 597:src/mcu_msg.c ****     mmsg_putc = putc; // init putchar
 598:src/mcu_msg.c ****     hnd.print = mmsg_wrapper_print_msg;
 599:src/mcu_msg.c ****     hnd.print_to_buff = mmsg_wrapper_print_msg_to_buff;
 600:src/mcu_msg.c ****     hnd.print_obj = mmsg_wrapper_print_obj;
 601:src/mcu_msg.c ****     hnd.print_cmd = mmsg_wrapper_print_cmd;
 602:src/mcu_msg.c ****     return hnd;
 603:src/mcu_msg.c **** }
 604:src/mcu_msg.c **** 
 605:src/mcu_msg.c **** #define __print_key_equ(key_str)        mmsg_putc(CTRL_KEY_FLAG); \
 606:src/mcu_msg.c ****                                         mmsg_print_str(key_str);   \
 607:src/mcu_msg.c ****                                         mmsg_putc(CTRL_KEY_EQU)
 608:src/mcu_msg.c **** 
 609:src/mcu_msg.c **** 
 610:src/mcu_msg.c **** static inline void mmsg_wrapper_print_obj(mmsg_obj_wrap_t obj)
 611:src/mcu_msg.c **** {
 504              		.loc 1 611 0
 505              		.cfi_startproc
 506 0000 4154     		pushq	%r12
 507              	.LCFI25:
 508              		.cfi_def_cfa_offset 16
 509              		.cfi_offset 12, -16
 510 0002 55       		pushq	%rbp
 511              	.LCFI26:
 512              		.cfi_def_cfa_offset 24
 513              		.cfi_offset 6, -24
 514 0003 53       		pushq	%rbx
 515              	.LCFI27:
 516              		.cfi_def_cfa_offset 32
 517              		.cfi_offset 3, -32
 612:src/mcu_msg.c ****     mmsg_string_wrap_t *sp;
 613:src/mcu_msg.c ****     mmsg_int_wrap_t *ip;
 614:src/mcu_msg.c ****     mmsg_float_wrap_t *fp;
 615:src/mcu_msg.c ****     
 616:src/mcu_msg.c ****     mmsg_putc(CTRL_OBJ_FLAG);
 518              		.loc 1 616 0
 519 0004 BF400000 		movl	$64, %edi
 519      00
 520 0009 FF150000 		call	*mmsg_putc(%rip)
 520      0000
 521              	.LVL62:
 617:src/mcu_msg.c ****     mmsg_print_str(obj.id);
 522              		.loc 1 617 0
 523 000f 488B7C24 		movq	32(%rsp), %rdi
 523      20
 524 0014 488B7424 		movq	40(%rsp), %rsi
 524      28
 525 0019 E8000000 		call	mmsg_print_str
 525      00
GAS LISTING /tmp/ccYvOZGU.s 			page 22


 526              	.LVL63:
 618:src/mcu_msg.c ****     mmsg_putc(CTRL_START_OBJ);
 527              		.loc 1 618 0
 528 001e BF280000 		movl	$40, %edi
 528      00
 529 0023 FF150000 		call	*mmsg_putc(%rip)
 529      0000
 530              	.LVL64:
 619:src/mcu_msg.c ****     char qmark;
 620:src/mcu_msg.c ****     // print integers
 621:src/mcu_msg.c ****     for(ip = obj.int_queue; ip != NULL; ip = ip->next, ip != NULL ? mmsg_putc(CTRL_KEY_SEP) : NULL)
 531              		.loc 1 621 0
 532 0029 4C8B6424 		movq	48(%rsp), %r12
 532      30
 533              	.LVL65:
 534 002e 4C89E3   		movq	%r12, %rbx
 535              	.LVL66:
 536              	.L59:
 537              		.loc 1 621 0 is_stmt 0 discriminator 5
 538 0031 4885DB   		testq	%rbx, %rbx
 539 0034 7440     		je	.L79
 622:src/mcu_msg.c ****         __print_key_equ(ip->id);
 540              		.loc 1 622 0 is_stmt 1 discriminator 6
 541 0036 BF240000 		movl	$36, %edi
 541      00
 542 003b FF150000 		call	*mmsg_putc(%rip)
 542      0000
 543              	.LVL67:
 544 0041 488B3B   		movq	(%rbx), %rdi
 545 0044 488B7308 		movq	8(%rbx), %rsi
 546 0048 E8000000 		call	mmsg_print_str
 546      00
 547              	.LVL68:
 548 004d BF3D0000 		movl	$61, %edi
 548      00
 549 0052 FF150000 		call	*mmsg_putc(%rip)
 549      0000
 550              	.LVL69:
 623:src/mcu_msg.c ****         mmsg_print_int(ip->val);
 551              		.loc 1 623 0 discriminator 6
 552 0058 8B7B10   		movl	16(%rbx), %edi
 553 005b E8000000 		call	mmsg_print_int
 553      00
 554              	.LVL70:
 621:src/mcu_msg.c ****         __print_key_equ(ip->id);
 555              		.loc 1 621 0 discriminator 6
 556 0060 488B5B18 		movq	24(%rbx), %rbx
 557              	.LVL71:
 558 0064 4885DB   		testq	%rbx, %rbx
 559 0067 74C8     		je	.L59
 621:src/mcu_msg.c ****         __print_key_equ(ip->id);
 560              		.loc 1 621 0 is_stmt 0 discriminator 2
 561 0069 BF3B0000 		movl	$59, %edi
 561      00
 562 006e FF150000 		call	*mmsg_putc(%rip)
 562      0000
 563              	.LVL72:
GAS LISTING /tmp/ccYvOZGU.s 			page 23


 564 0074 EBBB     		jmp	.L59
 565              	.L79:
 624:src/mcu_msg.c ****     }
 625:src/mcu_msg.c **** 
 626:src/mcu_msg.c ****     // print floats
 627:src/mcu_msg.c ****     for(fp = obj.float_queue, obj.int_queue != NULL ? mmsg_putc(CTRL_KEY_SEP) : NULL; 
 566              		.loc 1 627 0 is_stmt 1
 567 0076 488B6C24 		movq	56(%rsp), %rbp
 567      38
 568              	.LVL73:
 569 007b 4D85E4   		testq	%r12, %r12
 570 007e 740B     		je	.L62
 571              		.loc 1 627 0 is_stmt 0 discriminator 1
 572 0080 BF3B0000 		movl	$59, %edi
 572      00
 573 0085 FF150000 		call	*mmsg_putc(%rip)
 573      0000
 574              	.LVL74:
 575              	.L62:
 621:src/mcu_msg.c ****         __print_key_equ(ip->id);
 576              		.loc 1 621 0 is_stmt 1
 577 008b 4889EB   		movq	%rbp, %rbx
 578              	.LVL75:
 579              	.L64:
 580              		.loc 1 627 0
 581 008e 4885DB   		testq	%rbx, %rbx
 582 0091 7446     		je	.L80
 628:src/mcu_msg.c ****                 fp != NULL; fp = fp->next, fp != NULL ? mmsg_putc(CTRL_KEY_SEP) : NULL) {
 629:src/mcu_msg.c ****         __print_key_equ(fp->id);
 583              		.loc 1 629 0
 584 0093 BF240000 		movl	$36, %edi
 584      00
 585 0098 FF150000 		call	*mmsg_putc(%rip)
 585      0000
 586              	.LVL76:
 587 009e 488B3B   		movq	(%rbx), %rdi
 588 00a1 488B7308 		movq	8(%rbx), %rsi
 589 00a5 E8000000 		call	mmsg_print_str
 589      00
 590              	.LVL77:
 591 00aa BF3D0000 		movl	$61, %edi
 591      00
 592 00af FF150000 		call	*mmsg_putc(%rip)
 592      0000
 593              	.LVL78:
 630:src/mcu_msg.c ****         mmsg_print_float(fp->val, fp->prec);
 594              		.loc 1 630 0
 595 00b5 0FB67B14 		movzbl	20(%rbx), %edi
 596 00b9 F30F1043 		movss	16(%rbx), %xmm0
 596      10
 597 00be E8000000 		call	mmsg_print_float
 597      00
 598              	.LVL79:
 628:src/mcu_msg.c ****                 fp != NULL; fp = fp->next, fp != NULL ? mmsg_putc(CTRL_KEY_SEP) : NULL) {
 599              		.loc 1 628 0
 600 00c3 488B5B18 		movq	24(%rbx), %rbx
 601              	.LVL80:
GAS LISTING /tmp/ccYvOZGU.s 			page 24


 602 00c7 4885DB   		testq	%rbx, %rbx
 603 00ca 74C2     		je	.L64
 628:src/mcu_msg.c ****                 fp != NULL; fp = fp->next, fp != NULL ? mmsg_putc(CTRL_KEY_SEP) : NULL) {
 604              		.loc 1 628 0 is_stmt 0 discriminator 1
 605 00cc BF3B0000 		movl	$59, %edi
 605      00
 606 00d1 FF150000 		call	*mmsg_putc(%rip)
 606      0000
 607              	.LVL81:
 608 00d7 EBB5     		jmp	.L64
 609              	.L80:
 631:src/mcu_msg.c ****     }
 632:src/mcu_msg.c **** 
 633:src/mcu_msg.c ****     // print strings
 634:src/mcu_msg.c ****     for(sp = obj.string_queue, obj.float_queue != NULL ? mmsg_putc(CTRL_KEY_SEP) : NULL; 
 610              		.loc 1 634 0 is_stmt 1
 611 00d9 488B5C24 		movq	64(%rsp), %rbx
 611      40
 612              	.LVL82:
 613 00de 4885ED   		testq	%rbp, %rbp
 614 00e1 7447     		je	.L73
 615              		.loc 1 634 0 is_stmt 0 discriminator 1
 616 00e3 BF3B0000 		movl	$59, %edi
 616      00
 617 00e8 FF150000 		call	*mmsg_putc(%rip)
 617      0000
 618              	.LVL83:
 619 00ee EB3A     		jmp	.L73
 620              	.LVL84:
 621              	.L69:
 622              	.LBB58:
 623              	.LBB59:
 580:src/mcu_msg.c ****             case '\'' : return '"';
 624              		.loc 1 580 0 is_stmt 1
 625 00f0 BD270000 		movl	$39, %ebp
 625      00
 626              	.L70:
 627              	.LVL85:
 628              	.LBE59:
 629              	.LBE58:
 635:src/mcu_msg.c ****                 sp != NULL; sp = sp->next, sp != NULL ? mmsg_putc(CTRL_KEY_SEP) : NULL) {
 636:src/mcu_msg.c ****         __print_key_equ(sp->id);
 637:src/mcu_msg.c ****         qmark = define_qmark(sp->content);
 638:src/mcu_msg.c ****         mmsg_putc(qmark);
 630              		.loc 1 638 0
 631 00f5 400FBEED 		movsbl	%bpl, %ebp
 632 00f9 89EF     		movl	%ebp, %edi
 633 00fb FF150000 		call	*mmsg_putc(%rip)
 633      0000
 634              	.LVL86:
 639:src/mcu_msg.c ****         mmsg_print_str(sp->content);
 635              		.loc 1 639 0
 636 0101 488B7B10 		movq	16(%rbx), %rdi
 637 0105 488B7318 		movq	24(%rbx), %rsi
 638 0109 E8000000 		call	mmsg_print_str
 638      00
 639              	.LVL87:
GAS LISTING /tmp/ccYvOZGU.s 			page 25


 640:src/mcu_msg.c ****         mmsg_putc(qmark);
 640              		.loc 1 640 0
 641 010e 89EF     		movl	%ebp, %edi
 642 0110 FF150000 		call	*mmsg_putc(%rip)
 642      0000
 643              	.LVL88:
 635:src/mcu_msg.c ****                 sp != NULL; sp = sp->next, sp != NULL ? mmsg_putc(CTRL_KEY_SEP) : NULL) {
 644              		.loc 1 635 0
 645 0116 488B5B20 		movq	32(%rbx), %rbx
 646              	.LVL89:
 647 011a 4885DB   		testq	%rbx, %rbx
 648 011d 740B     		je	.L73
 635:src/mcu_msg.c ****                 sp != NULL; sp = sp->next, sp != NULL ? mmsg_putc(CTRL_KEY_SEP) : NULL) {
 649              		.loc 1 635 0 is_stmt 0 discriminator 1
 650 011f BF3B0000 		movl	$59, %edi
 650      00
 651 0124 FF150000 		call	*mmsg_putc(%rip)
 651      0000
 652              	.LVL90:
 653              	.L73:
 634:src/mcu_msg.c ****                 sp != NULL; sp = sp->next, sp != NULL ? mmsg_putc(CTRL_KEY_SEP) : NULL) {
 654              		.loc 1 634 0 is_stmt 1
 655 012a 4885DB   		testq	%rbx, %rbx
 656 012d 7472     		je	.L81
 636:src/mcu_msg.c ****         qmark = define_qmark(sp->content);
 657              		.loc 1 636 0
 658 012f BF240000 		movl	$36, %edi
 658      00
 659 0134 FF150000 		call	*mmsg_putc(%rip)
 659      0000
 660              	.LVL91:
 661 013a 488B3B   		movq	(%rbx), %rdi
 662 013d 488B7308 		movq	8(%rbx), %rsi
 663 0141 E8000000 		call	mmsg_print_str
 663      00
 664              	.LVL92:
 665 0146 BF3D0000 		movl	$61, %edi
 665      00
 666 014b FF150000 		call	*mmsg_putc(%rip)
 666      0000
 667              	.LVL93:
 668 0151 488B4B10 		movq	16(%rbx), %rcx
 669 0155 488B7B18 		movq	24(%rbx), %rdi
 670              	.LBB63:
 671              	.LBB62:
 577:src/mcu_msg.c ****     while(is_in_str_buff(str, p) && *p) {
 672              		.loc 1 577 0
 673 0159 4889CA   		movq	%rcx, %rdx
 674              	.LVL94:
 675              	.L67:
 676              	.LBB60:
 677              	.LBB61:
 176:src/mcu_msg.c **** }
 678              		.loc 1 176 0
 679 015c 4889D6   		movq	%rdx, %rsi
 680 015f 4829CE   		subq	%rcx, %rsi
 681 0162 0FB7C7   		movzwl	%di, %eax
GAS LISTING /tmp/ccYvOZGU.s 			page 26


 682              	.LVL95:
 683              	.LBE61:
 684              	.LBE60:
 578:src/mcu_msg.c ****         switch(*p) {
 685              		.loc 1 578 0
 686 0165 4839C6   		cmpq	%rax, %rsi
 687 0168 7D2D     		jge	.L76
 688 016a 0FB602   		movzbl	(%rdx), %eax
 689 016d 84C0     		testb	%al, %al
 690 016f 7412     		je	.L82
 579:src/mcu_msg.c ****             case '"' :  return '\'';
 691              		.loc 1 579 0
 692 0171 3C22     		cmpb	$34, %al
 693 0173 0F8477FF 		je	.L69
 693      FFFF
 694 0179 3C27     		cmpb	$39, %al
 695 017b 7410     		je	.L75
 584:src/mcu_msg.c ****     }
 696              		.loc 1 584 0
 697 017d 4883C201 		addq	$1, %rdx
 698              	.LVL96:
 699 0181 EBD9     		jmp	.L67
 700              	.L82:
 586:src/mcu_msg.c **** }
 701              		.loc 1 586 0
 702 0183 BD220000 		movl	$34, %ebp
 702      00
 703 0188 E968FFFF 		jmp	.L70
 703      FF
 704              	.L75:
 581:src/mcu_msg.c ****             default: break;
 705              		.loc 1 581 0
 706 018d BD220000 		movl	$34, %ebp
 706      00
 707 0192 E95EFFFF 		jmp	.L70
 707      FF
 708              	.L76:
 586:src/mcu_msg.c **** }
 709              		.loc 1 586 0
 710 0197 BD220000 		movl	$34, %ebp
 710      00
 711 019c E954FFFF 		jmp	.L70
 711      FF
 712              	.LVL97:
 713              	.L81:
 714              	.LBE62:
 715              	.LBE63:
 641:src/mcu_msg.c ****     }
 642:src/mcu_msg.c **** 
 643:src/mcu_msg.c ****     mmsg_putc(CTRL_STOP_OBJ);
 716              		.loc 1 643 0
 717 01a1 BF290000 		movl	$41, %edi
 717      00
 718 01a6 FF150000 		call	*mmsg_putc(%rip)
 718      0000
 719              	.LVL98:
 644:src/mcu_msg.c **** }
GAS LISTING /tmp/ccYvOZGU.s 			page 27


 720              		.loc 1 644 0
 721 01ac 5B       		popq	%rbx
 722              	.LCFI28:
 723              		.cfi_def_cfa_offset 24
 724              	.LVL99:
 725 01ad 5D       		popq	%rbp
 726              	.LCFI29:
 727              		.cfi_def_cfa_offset 16
 728 01ae 415C     		popq	%r12
 729              	.LCFI30:
 730              		.cfi_def_cfa_offset 8
 731 01b0 C3       		ret
 732              		.cfi_endproc
 733              	.LFE52:
 735              		.section	.text.mmsg_wrapper_print_cmd,"ax",@progbits
 737              	mmsg_wrapper_print_cmd:
 738              	.LFB53:
 645:src/mcu_msg.c **** 
 646:src/mcu_msg.c **** static inline void mmsg_wrapper_print_cmd(mmsg_cmd_wrap_t cmd)
 647:src/mcu_msg.c **** {
 739              		.loc 1 647 0
 740              		.cfi_startproc
 741 0000 4883EC08 		subq	$8, %rsp
 742              	.LCFI31:
 743              		.cfi_def_cfa_offset 16
 648:src/mcu_msg.c ****     if(cmd.cmd.s != NULL) {
 744              		.loc 1 648 0
 745 0004 48837C24 		cmpq	$0, 16(%rsp)
 745      1000
 746 000a 7425     		je	.L83
 649:src/mcu_msg.c ****         mmsg_putc(CTRL_CMD_START_FLAG);
 747              		.loc 1 649 0
 748 000c BF3C0000 		movl	$60, %edi
 748      00
 749 0011 FF150000 		call	*mmsg_putc(%rip)
 749      0000
 750              	.LVL100:
 650:src/mcu_msg.c ****         mmsg_print_str(cmd.cmd);
 751              		.loc 1 650 0
 752 0017 488B7C24 		movq	16(%rsp), %rdi
 752      10
 753 001c 488B7424 		movq	24(%rsp), %rsi
 753      18
 754 0021 E8000000 		call	mmsg_print_str
 754      00
 755              	.LVL101:
 651:src/mcu_msg.c ****         mmsg_putc(CTRL_CMD_STOP_FLAG);
 756              		.loc 1 651 0
 757 0026 BF3E0000 		movl	$62, %edi
 757      00
 758 002b FF150000 		call	*mmsg_putc(%rip)
 758      0000
 759              	.LVL102:
 760              	.L83:
 652:src/mcu_msg.c ****     }
 653:src/mcu_msg.c **** }
 761              		.loc 1 653 0
GAS LISTING /tmp/ccYvOZGU.s 			page 28


 762 0031 4883C408 		addq	$8, %rsp
 763              	.LCFI32:
 764              		.cfi_def_cfa_offset 8
 765 0035 C3       		ret
 766              		.cfi_endproc
 767              	.LFE53:
 769              		.section	.text.mmsg_wrapper_print_msg_to_buff,"ax",@progbits
 771              	mmsg_wrapper_print_msg_to_buff:
 772              	.LFB55:
 654:src/mcu_msg.c **** 
 655:src/mcu_msg.c **** 
 656:src/mcu_msg.c **** static void mmsg_wrapper_print_msg(mmsg_wrap_t msg)
 657:src/mcu_msg.c **** {
 658:src/mcu_msg.c ****     mmsg_obj_wrap_t *pobj;
 659:src/mcu_msg.c ****     mmsg_cmd_wrap_t *pcmd;
 660:src/mcu_msg.c **** 
 661:src/mcu_msg.c ****     if(!mmsg_putc || msg.id.s == NULL) // return if putchar not implemented
 662:src/mcu_msg.c ****         return;
 663:src/mcu_msg.c ****     mmsg_putc(CTRL_MSG_FLAG);
 664:src/mcu_msg.c ****     mmsg_print_str(msg.id);
 665:src/mcu_msg.c ****     mmsg_putc(CTRL_START_MSG);
 666:src/mcu_msg.c ****     
 667:src/mcu_msg.c ****     pcmd = msg.cmd_queue;
 668:src/mcu_msg.c ****     while(pcmd != NULL) {
 669:src/mcu_msg.c ****         mmsg_wrapper_print_cmd(*pcmd);
 670:src/mcu_msg.c ****         pcmd = pcmd->next;   
 671:src/mcu_msg.c ****     }
 672:src/mcu_msg.c ****     pobj = msg.obj_queue;
 673:src/mcu_msg.c ****     while(pobj != NULL) {
 674:src/mcu_msg.c ****         mmsg_wrapper_print_obj(*pobj);
 675:src/mcu_msg.c ****         pobj = pobj->next;   
 676:src/mcu_msg.c ****     }
 677:src/mcu_msg.c ****     mmsg_putc(CTRL_STOP_MSG);
 678:src/mcu_msg.c **** }
 679:src/mcu_msg.c **** 
 680:src/mcu_msg.c **** 
 681:src/mcu_msg.c **** static char* mmsg_wrapper_print_msg_to_buff(mmsg_wrap_t msg)
 682:src/mcu_msg.c **** {
 773              		.loc 1 682 0
 774              		.cfi_startproc
 683:src/mcu_msg.c ****     return NULL;
 684:src/mcu_msg.c **** }
 775              		.loc 1 684 0
 776 0000 B8000000 		movl	$0, %eax
 776      00
 777 0005 C3       		ret
 778              		.cfi_endproc
 779              	.LFE55:
 781              		.section	.text.mmsg_wrapper_print_msg,"ax",@progbits
 783              	mmsg_wrapper_print_msg:
 784              	.LFB54:
 657:src/mcu_msg.c ****     mmsg_obj_wrap_t *pobj;
 785              		.loc 1 657 0
 786              		.cfi_startproc
 661:src/mcu_msg.c ****         return;
 787              		.loc 1 661 0
 788 0000 488B0500 		movq	mmsg_putc(%rip), %rax
GAS LISTING /tmp/ccYvOZGU.s 			page 29


 788      000000
 789 0007 4885C0   		testq	%rax, %rax
 790 000a 0F84B202 		je	.L114
 790      0000
 657:src/mcu_msg.c ****     mmsg_obj_wrap_t *pobj;
 791              		.loc 1 657 0 discriminator 1
 792 0010 4155     		pushq	%r13
 793              	.LCFI33:
 794              		.cfi_def_cfa_offset 16
 795              		.cfi_offset 13, -16
 796 0012 4154     		pushq	%r12
 797              	.LCFI34:
 798              		.cfi_def_cfa_offset 24
 799              		.cfi_offset 12, -24
 800 0014 55       		pushq	%rbp
 801              	.LCFI35:
 802              		.cfi_def_cfa_offset 32
 803              		.cfi_offset 6, -32
 804 0015 53       		pushq	%rbx
 805              	.LCFI36:
 806              		.cfi_def_cfa_offset 40
 807              		.cfi_offset 3, -40
 808 0016 4883EC58 		subq	$88, %rsp
 809              	.LCFI37:
 810              		.cfi_def_cfa_offset 128
 661:src/mcu_msg.c ****         return;
 811              		.loc 1 661 0 discriminator 1
 812 001a 4883BC24 		cmpq	$0, 128(%rsp)
 812      80000000 
 812      00
 813 0023 0F848E02 		je	.L87
 813      0000
 663:src/mcu_msg.c ****     mmsg_print_str(msg.id);
 814              		.loc 1 663 0
 815 0029 BF230000 		movl	$35, %edi
 815      00
 816 002e FFD0     		call	*%rax
 817              	.LVL103:
 664:src/mcu_msg.c ****     mmsg_putc(CTRL_START_MSG);
 818              		.loc 1 664 0
 819 0030 488BBC24 		movq	128(%rsp), %rdi
 819      80000000 
 820 0038 488BB424 		movq	136(%rsp), %rsi
 820      88000000 
 821 0040 E8000000 		call	mmsg_print_str
 821      00
 822              	.LVL104:
 665:src/mcu_msg.c ****     
 823              		.loc 1 665 0
 824 0045 BF7B0000 		movl	$123, %edi
 824      00
 825 004a FF150000 		call	*mmsg_putc(%rip)
 825      0000
 826              	.LVL105:
 667:src/mcu_msg.c ****     while(pcmd != NULL) {
 827              		.loc 1 667 0
 828 0050 488B9C24 		movq	152(%rsp), %rbx
GAS LISTING /tmp/ccYvOZGU.s 			page 30


 828      98000000 
 829              	.LVL106:
 668:src/mcu_msg.c ****         mmsg_wrapper_print_cmd(*pcmd);
 830              		.loc 1 668 0
 831 0058 EB04     		jmp	.L89
 832              	.L90:
 670:src/mcu_msg.c ****     }
 833              		.loc 1 670 0
 834 005a 488B5B10 		movq	16(%rbx), %rbx
 835              	.LVL107:
 836              	.L89:
 668:src/mcu_msg.c ****         mmsg_wrapper_print_cmd(*pcmd);
 837              		.loc 1 668 0
 838 005e 4885DB   		testq	%rbx, %rbx
 839 0061 7447     		je	.L117
 840 0063 488B03   		movq	(%rbx), %rax
 841 0066 488B4B08 		movq	8(%rbx), %rcx
 842 006a 4889C2   		movq	%rax, %rdx
 843 006d 48890424 		movq	%rax, (%rsp)
 844 0071 48894C24 		movq	%rcx, 8(%rsp)
 844      08
 845 0076 488B4310 		movq	16(%rbx), %rax
 846 007a 48894424 		movq	%rax, 16(%rsp)
 846      10
 847              	.LBB72:
 848              	.LBB73:
 648:src/mcu_msg.c ****         mmsg_putc(CTRL_CMD_START_FLAG);
 849              		.loc 1 648 0
 850 007f 4885D2   		testq	%rdx, %rdx
 851 0082 74D6     		je	.L90
 649:src/mcu_msg.c ****         mmsg_print_str(cmd.cmd);
 852              		.loc 1 649 0
 853 0084 BF3C0000 		movl	$60, %edi
 853      00
 854 0089 FF150000 		call	*mmsg_putc(%rip)
 854      0000
 855              	.LVL108:
 650:src/mcu_msg.c ****         mmsg_putc(CTRL_CMD_STOP_FLAG);
 856              		.loc 1 650 0
 857 008f 488B3C24 		movq	(%rsp), %rdi
 858 0093 488B7424 		movq	8(%rsp), %rsi
 858      08
 859 0098 E8000000 		call	mmsg_print_str
 859      00
 860              	.LVL109:
 651:src/mcu_msg.c ****     }
 861              		.loc 1 651 0
 862 009d BF3E0000 		movl	$62, %edi
 862      00
 863 00a2 FF150000 		call	*mmsg_putc(%rip)
 863      0000
 864              	.LVL110:
 865 00a8 EBB0     		jmp	.L90
 866              	.L117:
 867              	.LBE73:
 868              	.LBE72:
 672:src/mcu_msg.c ****     while(pobj != NULL) {
GAS LISTING /tmp/ccYvOZGU.s 			page 31


 869              		.loc 1 672 0
 870 00aa 4C8BA424 		movq	144(%rsp), %r12
 870      90000000 
 871              	.LVL111:
 673:src/mcu_msg.c ****         mmsg_wrapper_print_obj(*pobj);
 872              		.loc 1 673 0
 873 00b2 E93B0100 		jmp	.L92
 873      00
 874              	.LVL112:
 875              	.L122:
 876              	.LBB74:
 877              	.LBB75:
 627:src/mcu_msg.c ****                 fp != NULL; fp = fp->next, fp != NULL ? mmsg_putc(CTRL_KEY_SEP) : NULL) {
 878              		.loc 1 627 0
 879 00b7 488B6C24 		movq	56(%rsp), %rbp
 879      38
 880              	.LVL113:
 881 00bc 4D85ED   		testq	%r13, %r13
 882 00bf 740B     		je	.L96
 883 00c1 BF3B0000 		movl	$59, %edi
 883      00
 884 00c6 FF150000 		call	*mmsg_putc(%rip)
 884      0000
 885              	.LVL114:
 886              	.L96:
 621:src/mcu_msg.c ****         __print_key_equ(ip->id);
 887              		.loc 1 621 0
 888 00cc 4889EB   		movq	%rbp, %rbx
 889              	.LVL115:
 890              	.L98:
 627:src/mcu_msg.c ****                 fp != NULL; fp = fp->next, fp != NULL ? mmsg_putc(CTRL_KEY_SEP) : NULL) {
 891              		.loc 1 627 0
 892 00cf 4885DB   		testq	%rbx, %rbx
 893 00d2 7446     		je	.L118
 629:src/mcu_msg.c ****         mmsg_print_float(fp->val, fp->prec);
 894              		.loc 1 629 0
 895 00d4 BF240000 		movl	$36, %edi
 895      00
 896 00d9 FF150000 		call	*mmsg_putc(%rip)
 896      0000
 897              	.LVL116:
 898 00df 488B3B   		movq	(%rbx), %rdi
 899 00e2 488B7308 		movq	8(%rbx), %rsi
 900 00e6 E8000000 		call	mmsg_print_str
 900      00
 901              	.LVL117:
 902 00eb BF3D0000 		movl	$61, %edi
 902      00
 903 00f0 FF150000 		call	*mmsg_putc(%rip)
 903      0000
 904              	.LVL118:
 630:src/mcu_msg.c ****     }
 905              		.loc 1 630 0
 906 00f6 0FB67B14 		movzbl	20(%rbx), %edi
 907 00fa F30F1043 		movss	16(%rbx), %xmm0
 907      10
 908 00ff E8000000 		call	mmsg_print_float
GAS LISTING /tmp/ccYvOZGU.s 			page 32


 908      00
 909              	.LVL119:
 628:src/mcu_msg.c ****         __print_key_equ(fp->id);
 910              		.loc 1 628 0
 911 0104 488B5B18 		movq	24(%rbx), %rbx
 912              	.LVL120:
 913 0108 4885DB   		testq	%rbx, %rbx
 914 010b 74C2     		je	.L98
 915 010d BF3B0000 		movl	$59, %edi
 915      00
 916 0112 FF150000 		call	*mmsg_putc(%rip)
 916      0000
 917              	.LVL121:
 918 0118 EBB5     		jmp	.L98
 919              	.L118:
 634:src/mcu_msg.c ****                 sp != NULL; sp = sp->next, sp != NULL ? mmsg_putc(CTRL_KEY_SEP) : NULL) {
 920              		.loc 1 634 0
 921 011a 488B5C24 		movq	64(%rsp), %rbx
 921      40
 922              	.LVL122:
 923 011f 4885ED   		testq	%rbp, %rbp
 924 0122 7447     		je	.L107
 925 0124 BF3B0000 		movl	$59, %edi
 925      00
 926 0129 FF150000 		call	*mmsg_putc(%rip)
 926      0000
 927              	.LVL123:
 928 012f EB3A     		jmp	.L107
 929              	.LVL124:
 930              	.L103:
 931              	.LBB76:
 932              	.LBB77:
 580:src/mcu_msg.c ****             case '\'' : return '"';
 933              		.loc 1 580 0
 934 0131 BD270000 		movl	$39, %ebp
 934      00
 935              	.L104:
 936              	.LVL125:
 937              	.LBE77:
 938              	.LBE76:
 638:src/mcu_msg.c ****         mmsg_print_str(sp->content);
 939              		.loc 1 638 0
 940 0136 400FBEED 		movsbl	%bpl, %ebp
 941 013a 89EF     		movl	%ebp, %edi
 942 013c FF150000 		call	*mmsg_putc(%rip)
 942      0000
 943              	.LVL126:
 639:src/mcu_msg.c ****         mmsg_putc(qmark);
 944              		.loc 1 639 0
 945 0142 488B7B10 		movq	16(%rbx), %rdi
 946 0146 488B7318 		movq	24(%rbx), %rsi
 947 014a E8000000 		call	mmsg_print_str
 947      00
 948              	.LVL127:
 640:src/mcu_msg.c ****     }
 949              		.loc 1 640 0
 950 014f 89EF     		movl	%ebp, %edi
GAS LISTING /tmp/ccYvOZGU.s 			page 33


 951 0151 FF150000 		call	*mmsg_putc(%rip)
 951      0000
 952              	.LVL128:
 635:src/mcu_msg.c ****         __print_key_equ(sp->id);
 953              		.loc 1 635 0
 954 0157 488B5B20 		movq	32(%rbx), %rbx
 955              	.LVL129:
 956 015b 4885DB   		testq	%rbx, %rbx
 957 015e 740B     		je	.L107
 958 0160 BF3B0000 		movl	$59, %edi
 958      00
 959 0165 FF150000 		call	*mmsg_putc(%rip)
 959      0000
 960              	.LVL130:
 961              	.L107:
 634:src/mcu_msg.c ****                 sp != NULL; sp = sp->next, sp != NULL ? mmsg_putc(CTRL_KEY_SEP) : NULL) {
 962              		.loc 1 634 0
 963 016b 4885DB   		testq	%rbx, %rbx
 964 016e 7472     		je	.L119
 636:src/mcu_msg.c ****         qmark = define_qmark(sp->content);
 965              		.loc 1 636 0
 966 0170 BF240000 		movl	$36, %edi
 966      00
 967 0175 FF150000 		call	*mmsg_putc(%rip)
 967      0000
 968              	.LVL131:
 969 017b 488B3B   		movq	(%rbx), %rdi
 970 017e 488B7308 		movq	8(%rbx), %rsi
 971 0182 E8000000 		call	mmsg_print_str
 971      00
 972              	.LVL132:
 973 0187 BF3D0000 		movl	$61, %edi
 973      00
 974 018c FF150000 		call	*mmsg_putc(%rip)
 974      0000
 975              	.LVL133:
 976 0192 488B4B10 		movq	16(%rbx), %rcx
 977 0196 488B7B18 		movq	24(%rbx), %rdi
 978              	.LBB81:
 979              	.LBB80:
 577:src/mcu_msg.c ****     while(is_in_str_buff(str, p) && *p) {
 980              		.loc 1 577 0
 981 019a 4889CA   		movq	%rcx, %rdx
 982              	.LVL134:
 983              	.L101:
 984              	.LBB78:
 985              	.LBB79:
 176:src/mcu_msg.c **** }
 986              		.loc 1 176 0
 987 019d 4889D6   		movq	%rdx, %rsi
 988 01a0 4829CE   		subq	%rcx, %rsi
 989 01a3 0FB7C7   		movzwl	%di, %eax
 990              	.LVL135:
 991              	.LBE79:
 992              	.LBE78:
 578:src/mcu_msg.c ****         switch(*p) {
 993              		.loc 1 578 0
GAS LISTING /tmp/ccYvOZGU.s 			page 34


 994 01a6 4839C6   		cmpq	%rax, %rsi
 995 01a9 7D2D     		jge	.L111
 996 01ab 0FB602   		movzbl	(%rdx), %eax
 997 01ae 84C0     		testb	%al, %al
 998 01b0 7412     		je	.L120
 579:src/mcu_msg.c ****             case '"' :  return '\'';
 999              		.loc 1 579 0
 1000 01b2 3C22     		cmpb	$34, %al
 1001 01b4 0F8477FF 		je	.L103
 1001      FFFF
 1002 01ba 3C27     		cmpb	$39, %al
 1003 01bc 7410     		je	.L110
 584:src/mcu_msg.c ****     }
 1004              		.loc 1 584 0
 1005 01be 4883C201 		addq	$1, %rdx
 1006              	.LVL136:
 1007 01c2 EBD9     		jmp	.L101
 1008              	.L120:
 586:src/mcu_msg.c **** }
 1009              		.loc 1 586 0
 1010 01c4 BD220000 		movl	$34, %ebp
 1010      00
 1011 01c9 E968FFFF 		jmp	.L104
 1011      FF
 1012              	.L110:
 581:src/mcu_msg.c ****             default: break;
 1013              		.loc 1 581 0
 1014 01ce BD220000 		movl	$34, %ebp
 1014      00
 1015 01d3 E95EFFFF 		jmp	.L104
 1015      FF
 1016              	.L111:
 586:src/mcu_msg.c **** }
 1017              		.loc 1 586 0
 1018 01d8 BD220000 		movl	$34, %ebp
 1018      00
 1019 01dd E954FFFF 		jmp	.L104
 1019      FF
 1020              	.LVL137:
 1021              	.L119:
 1022              	.LBE80:
 1023              	.LBE81:
 643:src/mcu_msg.c **** }
 1024              		.loc 1 643 0
 1025 01e2 BF290000 		movl	$41, %edi
 1025      00
 1026 01e7 FF150000 		call	*mmsg_putc(%rip)
 1026      0000
 1027              	.LVL138:
 1028              	.LBE75:
 1029              	.LBE74:
 675:src/mcu_msg.c ****     }
 1030              		.loc 1 675 0
 1031 01ed 4D8B6424 		movq	40(%r12), %r12
 1031      28
 1032              	.LVL139:
 1033              	.L92:
GAS LISTING /tmp/ccYvOZGU.s 			page 35


 673:src/mcu_msg.c ****         mmsg_wrapper_print_obj(*pobj);
 1034              		.loc 1 673 0
 1035 01f2 4D85E4   		testq	%r12, %r12
 1036 01f5 0F84B100 		je	.L121
 1036      0000
 1037 01fb 498B0424 		movq	(%r12), %rax
 1038 01ff 498B5424 		movq	8(%r12), %rdx
 1038      08
 1039 0204 48894424 		movq	%rax, 32(%rsp)
 1039      20
 1040 0209 48895424 		movq	%rdx, 40(%rsp)
 1040      28
 1041 020e 498B4424 		movq	16(%r12), %rax
 1041      10
 1042 0213 498B5424 		movq	24(%r12), %rdx
 1042      18
 1043 0218 48894424 		movq	%rax, 48(%rsp)
 1043      30
 1044 021d 48895424 		movq	%rdx, 56(%rsp)
 1044      38
 1045 0222 498B4424 		movq	32(%r12), %rax
 1045      20
 1046 0227 498B5424 		movq	40(%r12), %rdx
 1046      28
 1047 022c 48894424 		movq	%rax, 64(%rsp)
 1047      40
 1048 0231 48895424 		movq	%rdx, 72(%rsp)
 1048      48
 1049              	.LBB83:
 1050              	.LBB82:
 616:src/mcu_msg.c ****     mmsg_print_str(obj.id);
 1051              		.loc 1 616 0
 1052 0236 BF400000 		movl	$64, %edi
 1052      00
 1053 023b FF150000 		call	*mmsg_putc(%rip)
 1053      0000
 1054              	.LVL140:
 617:src/mcu_msg.c ****     mmsg_putc(CTRL_START_OBJ);
 1055              		.loc 1 617 0
 1056 0241 488B7C24 		movq	32(%rsp), %rdi
 1056      20
 1057 0246 488B7424 		movq	40(%rsp), %rsi
 1057      28
 1058 024b E8000000 		call	mmsg_print_str
 1058      00
 1059              	.LVL141:
 618:src/mcu_msg.c ****     char qmark;
 1060              		.loc 1 618 0
 1061 0250 BF280000 		movl	$40, %edi
 1061      00
 1062 0255 FF150000 		call	*mmsg_putc(%rip)
 1062      0000
 1063              	.LVL142:
 621:src/mcu_msg.c ****         __print_key_equ(ip->id);
 1064              		.loc 1 621 0
 1065 025b 4C8B6C24 		movq	48(%rsp), %r13
 1065      30
GAS LISTING /tmp/ccYvOZGU.s 			page 36


 1066              	.LVL143:
 1067 0260 4C89EB   		movq	%r13, %rbx
 1068              	.LVL144:
 1069              	.L93:
 1070 0263 4885DB   		testq	%rbx, %rbx
 1071 0266 0F844BFE 		je	.L122
 1071      FFFF
 622:src/mcu_msg.c ****         mmsg_print_int(ip->val);
 1072              		.loc 1 622 0
 1073 026c BF240000 		movl	$36, %edi
 1073      00
 1074 0271 FF150000 		call	*mmsg_putc(%rip)
 1074      0000
 1075              	.LVL145:
 1076 0277 488B3B   		movq	(%rbx), %rdi
 1077 027a 488B7308 		movq	8(%rbx), %rsi
 1078 027e E8000000 		call	mmsg_print_str
 1078      00
 1079              	.LVL146:
 1080 0283 BF3D0000 		movl	$61, %edi
 1080      00
 1081 0288 FF150000 		call	*mmsg_putc(%rip)
 1081      0000
 1082              	.LVL147:
 623:src/mcu_msg.c ****     }
 1083              		.loc 1 623 0
 1084 028e 8B7B10   		movl	16(%rbx), %edi
 1085 0291 E8000000 		call	mmsg_print_int
 1085      00
 1086              	.LVL148:
 621:src/mcu_msg.c ****         __print_key_equ(ip->id);
 1087              		.loc 1 621 0
 1088 0296 488B5B18 		movq	24(%rbx), %rbx
 1089              	.LVL149:
 1090 029a 4885DB   		testq	%rbx, %rbx
 1091 029d 74C4     		je	.L93
 1092 029f BF3B0000 		movl	$59, %edi
 1092      00
 1093 02a4 FF150000 		call	*mmsg_putc(%rip)
 1093      0000
 1094              	.LVL150:
 1095 02aa EBB7     		jmp	.L93
 1096              	.LVL151:
 1097              	.L121:
 1098              	.LBE82:
 1099              	.LBE83:
 677:src/mcu_msg.c **** }
 1100              		.loc 1 677 0
 1101 02ac BF7D0000 		movl	$125, %edi
 1101      00
 1102 02b1 FF150000 		call	*mmsg_putc(%rip)
 1102      0000
 1103              	.LVL152:
 1104              	.L87:
 678:src/mcu_msg.c **** 
 1105              		.loc 1 678 0
 1106 02b7 4883C458 		addq	$88, %rsp
GAS LISTING /tmp/ccYvOZGU.s 			page 37


 1107              	.LCFI38:
 1108              		.cfi_def_cfa_offset 40
 1109 02bb 5B       		popq	%rbx
 1110              	.LCFI39:
 1111              		.cfi_def_cfa_offset 32
 1112 02bc 5D       		popq	%rbp
 1113              	.LCFI40:
 1114              		.cfi_def_cfa_offset 24
 1115 02bd 415C     		popq	%r12
 1116              	.LCFI41:
 1117              		.cfi_def_cfa_offset 16
 1118 02bf 415D     		popq	%r13
 1119              	.LCFI42:
 1120              		.cfi_def_cfa_offset 8
 1121 02c1 C3       		ret
 1122              	.L114:
 1123              		.cfi_restore 3
 1124              		.cfi_restore 6
 1125              		.cfi_restore 12
 1126              		.cfi_restore 13
 1127 02c2 F3C3     		rep ret
 1128              		.cfi_endproc
 1129              	.LFE54:
 1131              		.section	.text.mmsg_destroy_string,"ax",@progbits
 1132              		.globl	mmsg_destroy_string
 1134              	mmsg_destroy_string:
 1135              	.LFB27:
  61:src/mcu_msg.c ****     str->s = NULL;
 1136              		.loc 1 61 0
 1137              		.cfi_startproc
 1138              	.LVL153:
  62:src/mcu_msg.c ****     str->len = 0;
 1139              		.loc 1 62 0
 1140 0000 48C70700 		movq	$0, (%rdi)
 1140      000000
  63:src/mcu_msg.c **** }
 1141              		.loc 1 63 0
 1142 0007 66C74708 		movw	$0, 8(%rdi)
 1142      0000
  64:src/mcu_msg.c **** 
 1143              		.loc 1 64 0
 1144 000d C3       		ret
 1145              		.cfi_endproc
 1146              	.LFE27:
 1148              		.section	.text.find_keyword,"ax",@progbits
 1150              	find_keyword:
 1151              	.LFB36:
 208:src/mcu_msg.c **** 
 1152              		.loc 1 208 0
 1153              		.cfi_startproc
 1154              	.LVL154:
 1155 0000 4157     		pushq	%r15
 1156              	.LCFI43:
 1157              		.cfi_def_cfa_offset 16
 1158              		.cfi_offset 15, -16
 1159 0002 4156     		pushq	%r14
 1160              	.LCFI44:
GAS LISTING /tmp/ccYvOZGU.s 			page 38


 1161              		.cfi_def_cfa_offset 24
 1162              		.cfi_offset 14, -24
 1163 0004 4155     		pushq	%r13
 1164              	.LCFI45:
 1165              		.cfi_def_cfa_offset 32
 1166              		.cfi_offset 13, -32
 1167 0006 4154     		pushq	%r12
 1168              	.LCFI46:
 1169              		.cfi_def_cfa_offset 40
 1170              		.cfi_offset 12, -40
 1171 0008 55       		pushq	%rbp
 1172              	.LCFI47:
 1173              		.cfi_def_cfa_offset 48
 1174              		.cfi_offset 6, -48
 1175 0009 53       		pushq	%rbx
 1176              	.LCFI48:
 1177              		.cfi_def_cfa_offset 56
 1178              		.cfi_offset 3, -56
 1179 000a 4883EC38 		subq	$56, %rsp
 1180              	.LCFI49:
 1181              		.cfi_def_cfa_offset 112
 1182 000e 4989FC   		movq	%rdi, %r12
 1183 0011 4889F5   		movq	%rsi, %rbp
 1184 0014 4989D6   		movq	%rdx, %r14
 1185 0017 4189CF   		movl	%ecx, %r15d
 1186 001a 44884424 		movb	%r8b, 15(%rsp)
 1186      0F
 208:src/mcu_msg.c **** 
 1187              		.loc 1 208 0
 1188 001f 64488B04 		movq	%fs:40, %rax
 1188      25280000 
 1188      00
 1189 0028 48894424 		movq	%rax, 40(%rsp)
 1189      28
 1190 002d 31C0     		xorl	%eax, %eax
 211:src/mcu_msg.c ****     uint8_t equal;
 1191              		.loc 1 211 0
 1192 002f 4889FB   		movq	%rdi, %rbx
 1193              	.LVL155:
 214:src/mcu_msg.c ****     while(is_in_str_buff(str, p) && *p) {
 1194              		.loc 1 214 0
 1195 0032 4889D7   		movq	%rdx, %rdi
 1196              	.LVL156:
 1197 0035 E8000000 		call	str_len
 1197      00
 1198              	.LVL157:
 1199 003a 4189C5   		movl	%eax, %r13d
 1200 003d 66894424 		movw	%ax, 24(%rsp)
 1200      18
 215:src/mcu_msg.c ****         if(*p == '\'' || *p == '"') { //skip internal strings
 1201              		.loc 1 215 0
 1202 0042 E9D50000 		jmp	.L125
 1202      00
 1203              	.L148:
 217:src/mcu_msg.c ****         }
 1204              		.loc 1 217 0
 1205 0047 4889DF   		movq	%rbx, %rdi
GAS LISTING /tmp/ccYvOZGU.s 			page 39


 1206 004a E8000000 		call	skip_internal_str
 1206      00
 1207              	.LVL158:
 1208 004f 4889C3   		movq	%rax, %rbx
 1209              	.LVL159:
 1210 0052 E9EC0000 		jmp	.L126
 1210      00
 1211              	.LVL160:
 1212              	.L130:
 224:src/mcu_msg.c ****                     equal = 0;
 1213              		.loc 1 224 0
 1214 0057 8D4A9F   		leal	-97(%rdx), %ecx
 1215 005a 80F919   		cmpb	$25, %cl
 1216 005d 400F97C7 		seta	%dil
 1217 0061 80FA5F   		cmpb	$95, %dl
 1218 0064 0F95C1   		setne	%cl
 223:src/mcu_msg.c ****                                     !is_valid_keyword_char(*(res.s + i))) {
 1219              		.loc 1 223 0
 1220 0067 4084CF   		testb	%cl, %dil
 1221 006a 7410     		je	.L132
 224:src/mcu_msg.c ****                     equal = 0;
 1222              		.loc 1 224 0
 1223 006c 8D4ABF   		leal	-65(%rdx), %ecx
 1224 006f 80F919   		cmpb	$25, %cl
 1225 0072 7608     		jbe	.L132
 224:src/mcu_msg.c ****                     equal = 0;
 1226              		.loc 1 224 0 is_stmt 0 discriminator 1
 1227 0074 83EA30   		subl	$48, %edx
 1228 0077 80FA09   		cmpb	$9, %dl
 1229 007a 7757     		ja	.L143
 1230              	.L132:
 222:src/mcu_msg.c ****                 if((*(res.s + i) != *(keyword + i)) || is_ctrl_char(*(res.s + i)) || 
 1231              		.loc 1 222 0 is_stmt 1 discriminator 2
 1232 007c 83C001   		addl	$1, %eax
 1233              	.LVL161:
 1234              	.L128:
 222:src/mcu_msg.c ****                 if((*(res.s + i) != *(keyword + i)) || is_ctrl_char(*(res.s + i)) || 
 1235              		.loc 1 222 0 is_stmt 0 discriminator 1
 1236 007f 0FB7C8   		movzwl	%ax, %ecx
 1237 0082 488D140E 		leaq	(%rsi,%rcx), %rdx
 1238              	.LVL162:
 1239              	.LBB84:
 1240              	.LBB85:
 176:src/mcu_msg.c **** }
 1241              		.loc 1 176 0 is_stmt 1 discriminator 1
 1242 0086 4989D0   		movq	%rdx, %r8
 1243 0089 4D29E0   		subq	%r12, %r8
 1244 008c 0FB7FD   		movzwl	%bp, %edi
 1245              	.LVL163:
 1246              	.LBE85:
 1247              	.LBE84:
 222:src/mcu_msg.c ****                 if((*(res.s + i) != *(keyword + i)) || is_ctrl_char(*(res.s + i)) || 
 1248              		.loc 1 222 0 discriminator 1
 1249 008f 4939F8   		cmpq	%rdi, %r8
 1250 0092 7D46     		jge	.L144
 222:src/mcu_msg.c ****                 if((*(res.s + i) != *(keyword + i)) || is_ctrl_char(*(res.s + i)) || 
 1251              		.loc 1 222 0 is_stmt 0 discriminator 3
GAS LISTING /tmp/ccYvOZGU.s 			page 40


 1252 0094 664139C5 		cmpw	%ax, %r13w
 1253 0098 7624     		jbe	.L146
 223:src/mcu_msg.c ****                                     !is_valid_keyword_char(*(res.s + i))) {
 1254              		.loc 1 223 0 is_stmt 1
 1255 009a 0FB612   		movzbl	(%rdx), %edx
 1256 009d 413A140E 		cmpb	(%r14,%rcx), %dl
 1257 00a1 7522     		jne	.L141
 1258              	.LVL164:
 1259              	.LBB86:
 1260              	.LBB87:
  97:src/mcu_msg.c ****         case CTRL_MSG_FLAG:
 1261              		.loc 1 97 0 discriminator 1
 1262 00a3 8D4ADD   		leal	-35(%rdx), %ecx
 1263 00a6 80F95A   		cmpb	$90, %cl
 1264 00a9 77AC     		ja	.L130
 1265 00ab 0FB6C9   		movzbl	%cl, %ecx
 1266 00ae 488D3D00 		leaq	.L131(%rip), %rdi
 1266      000000
 1267 00b5 48630C8F 		movslq	(%rdi,%rcx,4), %rcx
 1268 00b9 4801F9   		addq	%rdi, %rcx
 1269 00bc FFE1     		jmp	*%rcx
 1270              		.section	.rodata.find_keyword,"a",@progbits
 1271              		.align 4
 1272              		.align 4
 1273              	.L131:
 1274 0000 00000000 		.long	.L142-.L131
 1275 0004 00000000 		.long	.L142-.L131
 1276 0008 00000000 		.long	.L130-.L131
 1277 000c 00000000 		.long	.L130-.L131
 1278 0010 00000000 		.long	.L130-.L131
 1279 0014 00000000 		.long	.L142-.L131
 1280 0018 00000000 		.long	.L142-.L131
 1281 001c 00000000 		.long	.L130-.L131
 1282 0020 00000000 		.long	.L130-.L131
 1283 0024 00000000 		.long	.L130-.L131
 1284 0028 00000000 		.long	.L130-.L131
 1285 002c 00000000 		.long	.L130-.L131
 1286 0030 00000000 		.long	.L130-.L131
 1287 0034 00000000 		.long	.L130-.L131
 1288 0038 00000000 		.long	.L130-.L131
 1289 003c 00000000 		.long	.L130-.L131
 1290 0040 00000000 		.long	.L130-.L131
 1291 0044 00000000 		.long	.L130-.L131
 1292 0048 00000000 		.long	.L130-.L131
 1293 004c 00000000 		.long	.L130-.L131
 1294 0050 00000000 		.long	.L130-.L131
 1295 0054 00000000 		.long	.L130-.L131
 1296 0058 00000000 		.long	.L130-.L131
 1297 005c 00000000 		.long	.L130-.L131
 1298 0060 00000000 		.long	.L142-.L131
 1299 0064 00000000 		.long	.L142-.L131
 1300 0068 00000000 		.long	.L142-.L131
 1301 006c 00000000 		.long	.L142-.L131
 1302 0070 00000000 		.long	.L130-.L131
 1303 0074 00000000 		.long	.L142-.L131
 1304 0078 00000000 		.long	.L130-.L131
 1305 007c 00000000 		.long	.L130-.L131
GAS LISTING /tmp/ccYvOZGU.s 			page 41


 1306 0080 00000000 		.long	.L130-.L131
 1307 0084 00000000 		.long	.L130-.L131
 1308 0088 00000000 		.long	.L130-.L131
 1309 008c 00000000 		.long	.L130-.L131
 1310 0090 00000000 		.long	.L130-.L131
 1311 0094 00000000 		.long	.L130-.L131
 1312 0098 00000000 		.long	.L130-.L131
 1313 009c 00000000 		.long	.L130-.L131
 1314 00a0 00000000 		.long	.L130-.L131
 1315 00a4 00000000 		.long	.L130-.L131
 1316 00a8 00000000 		.long	.L130-.L131
 1317 00ac 00000000 		.long	.L130-.L131
 1318 00b0 00000000 		.long	.L130-.L131
 1319 00b4 00000000 		.long	.L130-.L131
 1320 00b8 00000000 		.long	.L130-.L131
 1321 00bc 00000000 		.long	.L130-.L131
 1322 00c0 00000000 		.long	.L130-.L131
 1323 00c4 00000000 		.long	.L130-.L131
 1324 00c8 00000000 		.long	.L130-.L131
 1325 00cc 00000000 		.long	.L130-.L131
 1326 00d0 00000000 		.long	.L130-.L131
 1327 00d4 00000000 		.long	.L130-.L131
 1328 00d8 00000000 		.long	.L130-.L131
 1329 00dc 00000000 		.long	.L130-.L131
 1330 00e0 00000000 		.long	.L130-.L131
 1331 00e4 00000000 		.long	.L130-.L131
 1332 00e8 00000000 		.long	.L130-.L131
 1333 00ec 00000000 		.long	.L130-.L131
 1334 00f0 00000000 		.long	.L130-.L131
 1335 00f4 00000000 		.long	.L130-.L131
 1336 00f8 00000000 		.long	.L130-.L131
 1337 00fc 00000000 		.long	.L130-.L131
 1338 0100 00000000 		.long	.L130-.L131
 1339 0104 00000000 		.long	.L130-.L131
 1340 0108 00000000 		.long	.L130-.L131
 1341 010c 00000000 		.long	.L130-.L131
 1342 0110 00000000 		.long	.L130-.L131
 1343 0114 00000000 		.long	.L130-.L131
 1344 0118 00000000 		.long	.L130-.L131
 1345 011c 00000000 		.long	.L130-.L131
 1346 0120 00000000 		.long	.L130-.L131
 1347 0124 00000000 		.long	.L130-.L131
 1348 0128 00000000 		.long	.L130-.L131
 1349 012c 00000000 		.long	.L130-.L131
 1350 0130 00000000 		.long	.L130-.L131
 1351 0134 00000000 		.long	.L130-.L131
 1352 0138 00000000 		.long	.L130-.L131
 1353 013c 00000000 		.long	.L130-.L131
 1354 0140 00000000 		.long	.L130-.L131
 1355 0144 00000000 		.long	.L130-.L131
 1356 0148 00000000 		.long	.L130-.L131
 1357 014c 00000000 		.long	.L130-.L131
 1358 0150 00000000 		.long	.L130-.L131
 1359 0154 00000000 		.long	.L130-.L131
 1360 0158 00000000 		.long	.L130-.L131
 1361 015c 00000000 		.long	.L130-.L131
 1362 0160 00000000 		.long	.L142-.L131
GAS LISTING /tmp/ccYvOZGU.s 			page 42


 1363 0164 00000000 		.long	.L130-.L131
 1364 0168 00000000 		.long	.L142-.L131
 1365              		.section	.text.find_keyword
 1366              	.LVL165:
 1367              	.L146:
 1368              	.LBE87:
 1369              	.LBE86:
 221:src/mcu_msg.c ****             for(i = 0; is_in_str_buff(str, res.s + i) && i < res.len; i++) { // if not equal during
 1370              		.loc 1 221 0
 1371 00be BF010000 		movl	$1, %edi
 1371      00
 1372 00c3 EB1F     		jmp	.L136
 1373              	.L141:
 225:src/mcu_msg.c ****                     break;
 1374              		.loc 1 225 0
 1375 00c5 BF000000 		movl	$0, %edi
 1375      00
 1376 00ca EB18     		jmp	.L136
 1377              	.LVL166:
 1378              	.L142:
 1379 00cc BF000000 		movl	$0, %edi
 1379      00
 1380 00d1 EB11     		jmp	.L136
 1381              	.LVL167:
 1382              	.L143:
 1383 00d3 BF000000 		movl	$0, %edi
 1383      00
 1384 00d8 EB0A     		jmp	.L136
 1385              	.L144:
 221:src/mcu_msg.c ****             for(i = 0; is_in_str_buff(str, res.s + i) && i < res.len; i++) { // if not equal during
 1386              		.loc 1 221 0
 1387 00da BF010000 		movl	$1, %edi
 1387      00
 1388 00df EB03     		jmp	.L136
 1389              	.LVL168:
 1390              	.L135:
 229:src/mcu_msg.c ****             if(equal && *(res.s + i) == stopc) { //if the stop char is the next, whitout spaces, re
 1391              		.loc 1 229 0
 1392 00e1 83C001   		addl	$1, %eax
 1393              	.LVL169:
 1394              	.L136:
 229:src/mcu_msg.c ****             if(equal && *(res.s + i) == stopc) { //if the stop char is the next, whitout spaces, re
 1395              		.loc 1 229 0 is_stmt 0 discriminator 1
 1396 00e4 0FB7D8   		movzwl	%ax, %ebx
 1397 00e7 4801F3   		addq	%rsi, %rbx
 1398              	.LVL170:
 1399              	.LBB88:
 1400              	.LBB89:
 176:src/mcu_msg.c **** }
 1401              		.loc 1 176 0 is_stmt 1 discriminator 1
 1402 00ea 4889D9   		movq	%rbx, %rcx
 1403 00ed 4C29E1   		subq	%r12, %rcx
 1404 00f0 0FB7D5   		movzwl	%bp, %edx
 1405              	.LVL171:
 1406              	.LBE89:
 1407              	.LBE88:
 229:src/mcu_msg.c ****             if(equal && *(res.s + i) == stopc) { //if the stop char is the next, whitout spaces, re
GAS LISTING /tmp/ccYvOZGU.s 			page 43


 1408              		.loc 1 229 0 discriminator 1
 1409 00f3 4839D1   		cmpq	%rdx, %rcx
 1410 00f6 7D12     		jge	.L134
 229:src/mcu_msg.c ****             if(equal && *(res.s + i) == stopc) { //if the stop char is the next, whitout spaces, re
 1411              		.loc 1 229 0 is_stmt 0 discriminator 2
 1412 00f8 0FB613   		movzbl	(%rbx), %edx
 1413              	.LVL172:
 1414              	.LBB90:
 1415              	.LBB91:
 123:src/mcu_msg.c ****         case  ' ':
 1416              		.loc 1 123 0 is_stmt 1 discriminator 2
 1417 00fb 80FA09   		cmpb	$9, %dl
 1418 00fe 7C0A     		jl	.L134
 1419 0100 80FA0D   		cmpb	$13, %dl
 1420 0103 7EDC     		jle	.L135
 1421 0105 80FA20   		cmpb	$32, %dl
 1422 0108 74D7     		je	.L135
 1423              	.LVL173:
 1424              	.L134:
 1425              	.LBE91:
 1426              	.LBE90:
 230:src/mcu_msg.c ****                 return res;
 1427              		.loc 1 230 0
 1428 010a 4084FF   		testb	%dil, %dil
 1429 010d 7409     		je	.L127
 230:src/mcu_msg.c ****                 return res;
 1430              		.loc 1 230 0 is_stmt 0 discriminator 1
 1431 010f 0FB64424 		movzbl	15(%rsp), %eax
 1431      0F
 1432              	.LVL174:
 1433 0114 3803     		cmpb	%al, (%rbx)
 1434 0116 7451     		je	.L147
 1435              	.LVL175:
 1436              	.L127:
 236:src/mcu_msg.c ****     }
 1437              		.loc 1 236 0 is_stmt 1
 1438 0118 4883C301 		addq	$1, %rbx
 1439              	.LVL176:
 1440              	.L125:
 1441              	.LBB92:
 1442              	.LBB93:
 176:src/mcu_msg.c **** }
 1443              		.loc 1 176 0
 1444 011c 4889DA   		movq	%rbx, %rdx
 1445 011f 4C29E2   		subq	%r12, %rdx
 1446 0122 0FB7C5   		movzwl	%bp, %eax
 1447              	.LVL177:
 1448              	.LBE93:
 1449              	.LBE92:
 215:src/mcu_msg.c ****         if(*p == '\'' || *p == '"') { //skip internal strings
 1450              		.loc 1 215 0
 1451 0125 4839C2   		cmpq	%rax, %rdx
 1452 0128 7D4B     		jge	.L138
 215:src/mcu_msg.c ****         if(*p == '\'' || *p == '"') { //skip internal strings
 1453              		.loc 1 215 0 is_stmt 0 discriminator 1
 1454 012a 0FB603   		movzbl	(%rbx), %eax
 1455 012d 84C0     		testb	%al, %al
GAS LISTING /tmp/ccYvOZGU.s 			page 44


 1456 012f 7444     		je	.L138
 216:src/mcu_msg.c ****             p = skip_internal_str(p);
 1457              		.loc 1 216 0 is_stmt 1
 1458 0131 3C27     		cmpb	$39, %al
 1459 0133 0F94C2   		sete	%dl
 1460 0136 3C22     		cmpb	$34, %al
 1461 0138 0F94C0   		sete	%al
 1462 013b 08C2     		orb	%al, %dl
 1463 013d 0F8504FF 		jne	.L148
 1463      FFFF
 1464              	.L126:
 1465              	.LVL178:
 1466              	.LBB94:
 1467              	.LBB95:
 176:src/mcu_msg.c **** }
 1468              		.loc 1 176 0
 1469 0143 4889D8   		movq	%rbx, %rax
 1470 0146 4C29E0   		subq	%r12, %rax
 1471 0149 0FB7D5   		movzwl	%bp, %edx
 1472              	.LVL179:
 1473              	.LBE95:
 1474              	.LBE94:
 219:src/mcu_msg.c ****             res.s = p + 1;
 1475              		.loc 1 219 0
 1476 014c 4839C2   		cmpq	%rax, %rdx
 1477 014f 7EC7     		jle	.L127
 219:src/mcu_msg.c ****             res.s = p + 1;
 1478              		.loc 1 219 0 is_stmt 0 discriminator 1
 1479 0151 44383B   		cmpb	%r15b, (%rbx)
 1480 0154 75C2     		jne	.L127
 220:src/mcu_msg.c ****             equal = 1;
 1481              		.loc 1 220 0 is_stmt 1
 1482 0156 488D7301 		leaq	1(%rbx), %rsi
 1483 015a 48897424 		movq	%rsi, 16(%rsp)
 1483      10
 1484              	.LVL180:
 222:src/mcu_msg.c ****                 if((*(res.s + i) != *(keyword + i)) || is_ctrl_char(*(res.s + i)) || 
 1485              		.loc 1 222 0
 1486 015f B8000000 		movl	$0, %eax
 1486      00
 1487 0164 E916FFFF 		jmp	.L128
 1487      FF
 1488              	.LVL181:
 1489              	.L147:
 231:src/mcu_msg.c ****             } else {
 1490              		.loc 1 231 0
 1491 0169 488B4424 		movq	16(%rsp), %rax
 1491      10
 1492 016e 488B5424 		movq	24(%rsp), %rdx
 1492      18
 1493 0173 EB14     		jmp	.L137
 1494              	.LVL182:
 1495              	.L138:
 239:src/mcu_msg.c ****     return res;
 1496              		.loc 1 239 0
 1497 0175 488D7C24 		leaq	16(%rsp), %rdi
 1497      10
GAS LISTING /tmp/ccYvOZGU.s 			page 45


 1498 017a E8000000 		call	mmsg_destroy_string
 1498      00
 1499              	.LVL183:
 240:src/mcu_msg.c **** }
 1500              		.loc 1 240 0
 1501 017f 488B4424 		movq	16(%rsp), %rax
 1501      10
 1502 0184 488B5424 		movq	24(%rsp), %rdx
 1502      18
 1503              	.LVL184:
 1504              	.L137:
 241:src/mcu_msg.c **** 
 1505              		.loc 1 241 0
 1506 0189 488B7424 		movq	40(%rsp), %rsi
 1506      28
 1507 018e 64483334 		xorq	%fs:40, %rsi
 1507      25280000 
 1507      00
 1508 0197 750F     		jne	.L149
 1509 0199 4883C438 		addq	$56, %rsp
 1510              	.LCFI50:
 1511              		.cfi_remember_state
 1512              		.cfi_def_cfa_offset 56
 1513 019d 5B       		popq	%rbx
 1514              	.LCFI51:
 1515              		.cfi_def_cfa_offset 48
 1516 019e 5D       		popq	%rbp
 1517              	.LCFI52:
 1518              		.cfi_def_cfa_offset 40
 1519              	.LVL185:
 1520 019f 415C     		popq	%r12
 1521              	.LCFI53:
 1522              		.cfi_def_cfa_offset 32
 1523 01a1 415D     		popq	%r13
 1524              	.LCFI54:
 1525              		.cfi_def_cfa_offset 24
 1526 01a3 415E     		popq	%r14
 1527              	.LCFI55:
 1528              		.cfi_def_cfa_offset 16
 1529              	.LVL186:
 1530 01a5 415F     		popq	%r15
 1531              	.LCFI56:
 1532              		.cfi_def_cfa_offset 8
 1533              	.LVL187:
 1534 01a7 C3       		ret
 1535              	.LVL188:
 1536              	.L149:
 1537              	.LCFI57:
 1538              		.cfi_restore_state
 1539 01a8 E8000000 		call	__stack_chk_fail@PLT
 1539      00
 1540              	.LVL189:
 1541              		.cfi_endproc
 1542              	.LFE36:
 1544              		.section	.text.find_val,"ax",@progbits
 1546              	find_val:
 1547              	.LFB37:
GAS LISTING /tmp/ccYvOZGU.s 			page 46


 253:src/mcu_msg.c ****     mmsg_string_t res  = find_keyword(obj.content, key, CTRL_KEY_FLAG, CTRL_KEY_EQU); //object star
 1548              		.loc 1 253 0
 1549              		.cfi_startproc
 1550              	.LVL190:
 1551 0000 4883EC28 		subq	$40, %rsp
 1552              	.LCFI58:
 1553              		.cfi_def_cfa_offset 48
 1554 0004 4889FA   		movq	%rdi, %rdx
 253:src/mcu_msg.c ****     mmsg_string_t res  = find_keyword(obj.content, key, CTRL_KEY_FLAG, CTRL_KEY_EQU); //object star
 1555              		.loc 1 253 0
 1556 0007 64488B04 		movq	%fs:40, %rax
 1556      25280000 
 1556      00
 1557 0010 48894424 		movq	%rax, 24(%rsp)
 1557      18
 1558 0015 31C0     		xorl	%eax, %eax
 254:src/mcu_msg.c ****     char *p;
 1559              		.loc 1 254 0
 1560 0017 41B83D00 		movl	$61, %r8d
 1560      0000
 1561 001d B9240000 		movl	$36, %ecx
 1561      00
 1562 0022 488B7C24 		movq	64(%rsp), %rdi
 1562      40
 1563              	.LVL191:
 1564 0027 488B7424 		movq	72(%rsp), %rsi
 1564      48
 1565 002c E8000000 		call	find_keyword
 1565      00
 1566              	.LVL192:
 1567 0031 48890424 		movq	%rax, (%rsp)
 1568 0035 48895424 		movq	%rdx, 8(%rsp)
 1568      08
 256:src/mcu_msg.c ****         mmsg_destroy_string(&res);
 1569              		.loc 1 256 0
 1570 003a 4885C0   		testq	%rax, %rax
 1571 003d 7413     		je	.L166
 260:src/mcu_msg.c ****         while(is_in_str_buff(obj.content, res.s + 1) && *res.s != CTRL_KEY_EQU) res.s++;
 1572              		.loc 1 260 0
 1573 003f 80383D   		cmpb	$61, (%rax)
 1574 0042 7528     		jne	.L153
 1575              	.L154:
 263:src/mcu_msg.c ****     while(is_in_str_buff(obj.content, res.s) && is_whitespace(*res.s)) res.s++; //skip spaces after
 1576              		.loc 1 263 0
 1577 0044 488B0424 		movq	(%rsp), %rax
 1578 0048 4883C001 		addq	$1, %rax
 1579 004c 48890424 		movq	%rax, (%rsp)
 264:src/mcu_msg.c **** 
 1580              		.loc 1 264 0
 1581 0050 EB43     		jmp	.L158
 1582              	.L166:
 257:src/mcu_msg.c ****         return res;
 1583              		.loc 1 257 0
 1584 0052 4889E7   		movq	%rsp, %rdi
 1585 0055 E8000000 		call	mmsg_destroy_string
 1585      00
 1586              	.LVL193:
GAS LISTING /tmp/ccYvOZGU.s 			page 47


 258:src/mcu_msg.c ****     }
 1587              		.loc 1 258 0
 1588 005a 488B0424 		movq	(%rsp), %rax
 1589 005e 488B5424 		movq	8(%rsp), %rdx
 1589      08
 1590 0063 E9B10000 		jmp	.L152
 1590      00
 1591              	.L155:
 261:src/mcu_msg.c ****     }
 1592              		.loc 1 261 0 discriminator 3
 1593 0068 48891424 		movq	%rdx, (%rsp)
 1594              	.L153:
 261:src/mcu_msg.c ****     }
 1595              		.loc 1 261 0 is_stmt 0 discriminator 1
 1596 006c 488B0424 		movq	(%rsp), %rax
 1597 0070 488D5001 		leaq	1(%rax), %rdx
 1598              	.LVL194:
 1599              	.LBB96:
 1600              	.LBB97:
 176:src/mcu_msg.c **** }
 1601              		.loc 1 176 0 is_stmt 1 discriminator 1
 1602 0074 4889D1   		movq	%rdx, %rcx
 1603 0077 482B4C24 		subq	64(%rsp), %rcx
 1603      40
 1604 007c 0FB77424 		movzwl	72(%rsp), %esi
 1604      48
 1605              	.LVL195:
 1606              	.LBE97:
 1607              	.LBE96:
 261:src/mcu_msg.c ****     }
 1608              		.loc 1 261 0 discriminator 1
 1609 0081 4839CE   		cmpq	%rcx, %rsi
 1610 0084 7EBE     		jle	.L154
 261:src/mcu_msg.c ****     }
 1611              		.loc 1 261 0 is_stmt 0 discriminator 2
 1612 0086 80383D   		cmpb	$61, (%rax)
 1613 0089 75DD     		jne	.L155
 1614 008b EBB7     		jmp	.L154
 1615              	.LVL196:
 1616              	.L157:
 264:src/mcu_msg.c **** 
 1617              		.loc 1 264 0 is_stmt 1
 1618 008d 4883C001 		addq	$1, %rax
 1619 0091 48890424 		movq	%rax, (%rsp)
 1620              	.L158:
 264:src/mcu_msg.c **** 
 1621              		.loc 1 264 0 is_stmt 0 discriminator 1
 1622 0095 488B0424 		movq	(%rsp), %rax
 1623              	.LVL197:
 1624              	.LBB98:
 1625              	.LBB99:
 176:src/mcu_msg.c **** }
 1626              		.loc 1 176 0 is_stmt 1 discriminator 1
 1627 0099 4889C7   		movq	%rax, %rdi
 1628 009c 4889C1   		movq	%rax, %rcx
 1629 009f 482B4C24 		subq	64(%rsp), %rcx
 1629      40
GAS LISTING /tmp/ccYvOZGU.s 			page 48


 1630 00a4 0FB75424 		movzwl	72(%rsp), %edx
 1630      48
 1631              	.LVL198:
 1632              	.LBE99:
 1633              	.LBE98:
 264:src/mcu_msg.c **** 
 1634              		.loc 1 264 0 discriminator 1
 1635 00a9 4839D1   		cmpq	%rdx, %rcx
 1636 00ac 7D18     		jge	.L163
 264:src/mcu_msg.c **** 
 1637              		.loc 1 264 0 is_stmt 0 discriminator 2
 1638 00ae 0FB610   		movzbl	(%rax), %edx
 1639              	.LVL199:
 1640              	.LBB100:
 1641              	.LBB101:
 123:src/mcu_msg.c ****         case  ' ':
 1642              		.loc 1 123 0 is_stmt 1 discriminator 2
 1643 00b1 80FA09   		cmpb	$9, %dl
 1644 00b4 7C10     		jl	.L163
 1645 00b6 80FA0D   		cmpb	$13, %dl
 1646 00b9 7ED2     		jle	.L157
 1647 00bb 80FA20   		cmpb	$32, %dl
 1648 00be 74CD     		je	.L157
 1649 00c0 EB04     		jmp	.L163
 1650              	.LVL200:
 1651              	.L161:
 1652              	.LBE101:
 1653              	.LBE100:
 267:src/mcu_msg.c ****     res.len = p - res.s;
 1654              		.loc 1 267 0
 1655 00c2 4883C001 		addq	$1, %rax
 1656              	.LVL201:
 1657              	.L163:
 1658              	.LBB102:
 1659              	.LBB103:
 176:src/mcu_msg.c **** }
 1660              		.loc 1 176 0 discriminator 1
 1661 00c6 4889C6   		movq	%rax, %rsi
 1662 00c9 4889C1   		movq	%rax, %rcx
 1663 00cc 482B4C24 		subq	64(%rsp), %rcx
 1663      40
 1664 00d1 0FB75424 		movzwl	72(%rsp), %edx
 1664      48
 1665              	.LVL202:
 1666              	.LBE103:
 1667              	.LBE102:
 267:src/mcu_msg.c ****     res.len = p - res.s;
 1668              		.loc 1 267 0 discriminator 1
 1669 00d6 4839D1   		cmpq	%rdx, %rcx
 1670 00d9 7D2D     		jge	.L159
 267:src/mcu_msg.c ****     res.len = p - res.s;
 1671              		.loc 1 267 0 is_stmt 0 discriminator 2
 1672 00db 0FB610   		movzbl	(%rax), %edx
 1673              	.LVL203:
 1674              	.LBB104:
 1675              	.LBB105:
 123:src/mcu_msg.c ****         case  ' ':
GAS LISTING /tmp/ccYvOZGU.s 			page 49


 1676              		.loc 1 123 0 is_stmt 1 discriminator 2
 1677 00de 80FA09   		cmpb	$9, %dl
 1678 00e1 7C0A     		jl	.L160
 1679 00e3 80FA0D   		cmpb	$13, %dl
 1680 00e6 7E20     		jle	.L159
 1681 00e8 80FA20   		cmpb	$32, %dl
 1682 00eb 741B     		je	.L159
 1683              	.L160:
 1684              	.LVL204:
 1685              	.LBE105:
 1686              	.LBE104:
 1687              	.LBB106:
 1688              	.LBB107:
  97:src/mcu_msg.c ****         case CTRL_MSG_FLAG:
 1689              		.loc 1 97 0
 1690 00ed 83EA23   		subl	$35, %edx
 1691              	.LVL205:
 1692 00f0 80FA5A   		cmpb	$90, %dl
 1693 00f3 77CD     		ja	.L161
 1694 00f5 0FB6D2   		movzbl	%dl, %edx
 1695 00f8 488D0D00 		leaq	.L162(%rip), %rcx
 1695      000000
 1696 00ff 48631491 		movslq	(%rcx,%rdx,4), %rdx
 1697 0103 4801CA   		addq	%rcx, %rdx
 1698 0106 FFE2     		jmp	*%rdx
 1699              		.section	.rodata.find_val,"a",@progbits
 1700              		.align 4
 1701              		.align 4
 1702              	.L162:
 1703 0000 00000000 		.long	.L159-.L162
 1704 0004 00000000 		.long	.L159-.L162
 1705 0008 00000000 		.long	.L161-.L162
 1706 000c 00000000 		.long	.L161-.L162
 1707 0010 00000000 		.long	.L161-.L162
 1708 0014 00000000 		.long	.L159-.L162
 1709 0018 00000000 		.long	.L159-.L162
 1710 001c 00000000 		.long	.L161-.L162
 1711 0020 00000000 		.long	.L161-.L162
 1712 0024 00000000 		.long	.L161-.L162
 1713 0028 00000000 		.long	.L161-.L162
 1714 002c 00000000 		.long	.L161-.L162
 1715 0030 00000000 		.long	.L161-.L162
 1716 0034 00000000 		.long	.L161-.L162
 1717 0038 00000000 		.long	.L161-.L162
 1718 003c 00000000 		.long	.L161-.L162
 1719 0040 00000000 		.long	.L161-.L162
 1720 0044 00000000 		.long	.L161-.L162
 1721 0048 00000000 		.long	.L161-.L162
 1722 004c 00000000 		.long	.L161-.L162
 1723 0050 00000000 		.long	.L161-.L162
 1724 0054 00000000 		.long	.L161-.L162
 1725 0058 00000000 		.long	.L161-.L162
 1726 005c 00000000 		.long	.L161-.L162
 1727 0060 00000000 		.long	.L159-.L162
 1728 0064 00000000 		.long	.L159-.L162
 1729 0068 00000000 		.long	.L159-.L162
 1730 006c 00000000 		.long	.L159-.L162
GAS LISTING /tmp/ccYvOZGU.s 			page 50


 1731 0070 00000000 		.long	.L161-.L162
 1732 0074 00000000 		.long	.L159-.L162
 1733 0078 00000000 		.long	.L161-.L162
 1734 007c 00000000 		.long	.L161-.L162
 1735 0080 00000000 		.long	.L161-.L162
 1736 0084 00000000 		.long	.L161-.L162
 1737 0088 00000000 		.long	.L161-.L162
 1738 008c 00000000 		.long	.L161-.L162
 1739 0090 00000000 		.long	.L161-.L162
 1740 0094 00000000 		.long	.L161-.L162
 1741 0098 00000000 		.long	.L161-.L162
 1742 009c 00000000 		.long	.L161-.L162
 1743 00a0 00000000 		.long	.L161-.L162
 1744 00a4 00000000 		.long	.L161-.L162
 1745 00a8 00000000 		.long	.L161-.L162
 1746 00ac 00000000 		.long	.L161-.L162
 1747 00b0 00000000 		.long	.L161-.L162
 1748 00b4 00000000 		.long	.L161-.L162
 1749 00b8 00000000 		.long	.L161-.L162
 1750 00bc 00000000 		.long	.L161-.L162
 1751 00c0 00000000 		.long	.L161-.L162
 1752 00c4 00000000 		.long	.L161-.L162
 1753 00c8 00000000 		.long	.L161-.L162
 1754 00cc 00000000 		.long	.L161-.L162
 1755 00d0 00000000 		.long	.L161-.L162
 1756 00d4 00000000 		.long	.L161-.L162
 1757 00d8 00000000 		.long	.L161-.L162
 1758 00dc 00000000 		.long	.L161-.L162
 1759 00e0 00000000 		.long	.L161-.L162
 1760 00e4 00000000 		.long	.L161-.L162
 1761 00e8 00000000 		.long	.L161-.L162
 1762 00ec 00000000 		.long	.L161-.L162
 1763 00f0 00000000 		.long	.L161-.L162
 1764 00f4 00000000 		.long	.L161-.L162
 1765 00f8 00000000 		.long	.L161-.L162
 1766 00fc 00000000 		.long	.L161-.L162
 1767 0100 00000000 		.long	.L161-.L162
 1768 0104 00000000 		.long	.L161-.L162
 1769 0108 00000000 		.long	.L161-.L162
 1770 010c 00000000 		.long	.L161-.L162
 1771 0110 00000000 		.long	.L161-.L162
 1772 0114 00000000 		.long	.L161-.L162
 1773 0118 00000000 		.long	.L161-.L162
 1774 011c 00000000 		.long	.L161-.L162
 1775 0120 00000000 		.long	.L161-.L162
 1776 0124 00000000 		.long	.L161-.L162
 1777 0128 00000000 		.long	.L161-.L162
 1778 012c 00000000 		.long	.L161-.L162
 1779 0130 00000000 		.long	.L161-.L162
 1780 0134 00000000 		.long	.L161-.L162
 1781 0138 00000000 		.long	.L161-.L162
 1782 013c 00000000 		.long	.L161-.L162
 1783 0140 00000000 		.long	.L161-.L162
 1784 0144 00000000 		.long	.L161-.L162
 1785 0148 00000000 		.long	.L161-.L162
 1786 014c 00000000 		.long	.L161-.L162
 1787 0150 00000000 		.long	.L161-.L162
GAS LISTING /tmp/ccYvOZGU.s 			page 51


 1788 0154 00000000 		.long	.L161-.L162
 1789 0158 00000000 		.long	.L161-.L162
 1790 015c 00000000 		.long	.L161-.L162
 1791 0160 00000000 		.long	.L159-.L162
 1792 0164 00000000 		.long	.L161-.L162
 1793 0168 00000000 		.long	.L159-.L162
 1794              		.section	.text.find_val
 1795              	.LVL206:
 1796              	.L159:
 1797              	.LBE107:
 1798              	.LBE106:
 268:src/mcu_msg.c **** 
 1799              		.loc 1 268 0
 1800 0108 4829FE   		subq	%rdi, %rsi
 1801 010b 66897424 		movw	%si, 8(%rsp)
 1801      08
 270:src/mcu_msg.c **** }
 1802              		.loc 1 270 0
 1803 0110 488B0424 		movq	(%rsp), %rax
 1804              	.LVL207:
 1805 0114 488B5424 		movq	8(%rsp), %rdx
 1805      08
 1806              	.L152:
 271:src/mcu_msg.c **** 
 1807              		.loc 1 271 0
 1808 0119 488B7C24 		movq	24(%rsp), %rdi
 1808      18
 1809 011e 6448333C 		xorq	%fs:40, %rdi
 1809      25280000 
 1809      00
 1810 0127 7505     		jne	.L167
 1811 0129 4883C428 		addq	$40, %rsp
 1812              	.LCFI59:
 1813              		.cfi_remember_state
 1814              		.cfi_def_cfa_offset 8
 1815 012d C3       		ret
 1816              	.L167:
 1817              	.LCFI60:
 1818              		.cfi_restore_state
 1819 012e E8000000 		call	__stack_chk_fail@PLT
 1819      00
 1820              	.LVL208:
 1821              		.cfi_endproc
 1822              	.LFE37:
 1824              		.section	.text.mmsg_destroy,"ax",@progbits
 1825              		.globl	mmsg_destroy
 1827              	mmsg_destroy:
 1828              	.LFB28:
  68:src/mcu_msg.c ****     mmsg_destroy_string(&msg->id);
 1829              		.loc 1 68 0
 1830              		.cfi_startproc
 1831              	.LVL209:
 1832 0000 53       		pushq	%rbx
 1833              	.LCFI61:
 1834              		.cfi_def_cfa_offset 16
 1835              		.cfi_offset 3, -16
 1836 0001 4889FB   		movq	%rdi, %rbx
GAS LISTING /tmp/ccYvOZGU.s 			page 52


  69:src/mcu_msg.c ****     mmsg_destroy_string(&msg->content);
 1837              		.loc 1 69 0
 1838 0004 E8000000 		call	mmsg_destroy_string
 1838      00
 1839              	.LVL210:
  70:src/mcu_msg.c **** }
 1840              		.loc 1 70 0
 1841 0009 488D7B10 		leaq	16(%rbx), %rdi
 1842 000d E8000000 		call	mmsg_destroy_string
 1842      00
 1843              	.LVL211:
  71:src/mcu_msg.c **** 
 1844              		.loc 1 71 0
 1845 0012 5B       		popq	%rbx
 1846              	.LCFI62:
 1847              		.cfi_def_cfa_offset 8
 1848              	.LVL212:
 1849 0013 C3       		ret
 1850              		.cfi_endproc
 1851              	.LFE28:
 1853              		.section	.text.mmsg_destroy_obj,"ax",@progbits
 1854              		.globl	mmsg_destroy_obj
 1856              	mmsg_destroy_obj:
 1857              	.LFB29:
  76:src/mcu_msg.c ****     mmsg_destroy_string(&obj->id);
 1858              		.loc 1 76 0
 1859              		.cfi_startproc
 1860              	.LVL213:
 1861 0000 53       		pushq	%rbx
 1862              	.LCFI63:
 1863              		.cfi_def_cfa_offset 16
 1864              		.cfi_offset 3, -16
 1865 0001 4889FB   		movq	%rdi, %rbx
  77:src/mcu_msg.c ****     mmsg_destroy_string(&obj->content);
 1866              		.loc 1 77 0
 1867 0004 E8000000 		call	mmsg_destroy_string
 1867      00
 1868              	.LVL214:
  78:src/mcu_msg.c **** }
 1869              		.loc 1 78 0
 1870 0009 488D7B10 		leaq	16(%rbx), %rdi
 1871 000d E8000000 		call	mmsg_destroy_string
 1871      00
 1872              	.LVL215:
  79:src/mcu_msg.c **** 
 1873              		.loc 1 79 0
 1874 0012 5B       		popq	%rbx
 1875              	.LCFI64:
 1876              		.cfi_def_cfa_offset 8
 1877              	.LVL216:
 1878 0013 C3       		ret
 1879              		.cfi_endproc
 1880              	.LFE29:
 1882              		.section	.text.mmsg_init_string,"ax",@progbits
 1883              		.globl	mmsg_init_string
 1885              	mmsg_init_string:
 1886              	.LFB30:
GAS LISTING /tmp/ccYvOZGU.s 			page 53


  82:src/mcu_msg.c ****     mmsg_string_t res;
 1887              		.loc 1 82 0
 1888              		.cfi_startproc
 1889              	.LVL217:
 1890 0000 53       		pushq	%rbx
 1891              	.LCFI65:
 1892              		.cfi_def_cfa_offset 16
 1893              		.cfi_offset 3, -16
 1894 0001 4889FB   		movq	%rdi, %rbx
  85:src/mcu_msg.c ****     return res;
 1895              		.loc 1 85 0
 1896 0004 E8000000 		call	str_len
 1896      00
 1897              	.LVL218:
 1898 0009 BA000000 		movl	$0, %edx
 1898      00
 1899              	.LVL219:
 1900 000e 6689C2   		movw	%ax, %dx
  87:src/mcu_msg.c **** 
 1901              		.loc 1 87 0
 1902 0011 4889D8   		movq	%rbx, %rax
 1903 0014 5B       		popq	%rbx
 1904              	.LCFI66:
 1905              		.cfi_def_cfa_offset 8
 1906              	.LVL220:
 1907 0015 C3       		ret
 1908              		.cfi_endproc
 1909              	.LFE30:
 1911              		.section	.text.mmsg_get,"ax",@progbits
 1912              		.globl	mmsg_get
 1914              	mmsg_get:
 1915              	.LFB38:
 276:src/mcu_msg.c ****     mmsg_t res;
 1916              		.loc 1 276 0
 1917              		.cfi_startproc
 1918              	.LVL221:
 1919 0000 53       		pushq	%rbx
 1920              	.LCFI67:
 1921              		.cfi_def_cfa_offset 16
 1922              		.cfi_offset 3, -16
 1923 0001 4883EC30 		subq	$48, %rsp
 1924              	.LCFI68:
 1925              		.cfi_def_cfa_offset 64
 1926 0005 4889FB   		movq	%rdi, %rbx
 276:src/mcu_msg.c ****     mmsg_t res;
 1927              		.loc 1 276 0
 1928 0008 64488B04 		movq	%fs:40, %rax
 1928      25280000 
 1928      00
 1929 0011 48894424 		movq	%rax, 40(%rsp)
 1929      28
 1930 0016 31C0     		xorl	%eax, %eax
 278:src/mcu_msg.c ****     res.content.len = len;
 1931              		.loc 1 278 0
 1932 0018 48897424 		movq	%rsi, 16(%rsp)
 1932      10
 279:src/mcu_msg.c ****     res.id = find_keyword(res.content, id, CTRL_MSG_FLAG, CTRL_START_MSG); //object start with @ an
GAS LISTING /tmp/ccYvOZGU.s 			page 54


 1933              		.loc 1 279 0
 1934 001d 66894C24 		movw	%cx, 24(%rsp)
 1934      18
 280:src/mcu_msg.c ****     char *p;
 1935              		.loc 1 280 0
 1936 0022 41B87B00 		movl	$123, %r8d
 1936      0000
 1937 0028 B9230000 		movl	$35, %ecx
 1937      00
 1938              	.LVL222:
 1939 002d 4889F7   		movq	%rsi, %rdi
 1940              	.LVL223:
 1941 0030 488B7424 		movq	24(%rsp), %rsi
 1941      18
 1942              	.LVL224:
 1943 0035 E8000000 		call	find_keyword
 1943      00
 1944              	.LVL225:
 1945 003a 48890424 		movq	%rax, (%rsp)
 1946 003e 48895424 		movq	%rdx, 8(%rsp)
 1946      08
 282:src/mcu_msg.c ****         mmsg_destroy(&res);
 1947              		.loc 1 282 0
 1948 0043 4885C0   		testq	%rax, %rax
 1949 0046 741B     		je	.L185
 286:src/mcu_msg.c ****     if (*p != CTRL_START_MSG) { // if the next char is not START_MSG, move to the start flag
 1950              		.loc 1 286 0
 1951 0048 0FB75424 		movzwl	8(%rsp), %edx
 1951      08
 1952 004d 4801D0   		addq	%rdx, %rax
 1953              	.LVL226:
 287:src/mcu_msg.c ****         while(is_in_str_buff(res.content, p + 1) && *p != CTRL_START_MSG) p++;
 1954              		.loc 1 287 0
 1955 0050 80387B   		cmpb	$123, (%rax)
 1956 0053 753D     		jne	.L178
 1957              	.L177:
 290:src/mcu_msg.c ****     while(is_in_str_buff(res.content, p) && *p != CTRL_STOP_MSG) { //calc length
 1958              		.loc 1 290 0
 1959 0055 488D5001 		leaq	1(%rax), %rdx
 1960              	.LVL227:
 1961 0059 48895424 		movq	%rdx, 16(%rsp)
 1961      10
 1962 005e 4889D0   		movq	%rdx, %rax
 291:src/mcu_msg.c ****         p++;
 1963              		.loc 1 291 0
 1964 0061 EB50     		jmp	.L179
 1965              	.LVL228:
 1966              	.L185:
 283:src/mcu_msg.c ****         return res;
 1967              		.loc 1 283 0
 1968 0063 4889E7   		movq	%rsp, %rdi
 1969 0066 E8000000 		call	mmsg_destroy
 1969      00
 1970              	.LVL229:
 284:src/mcu_msg.c ****     }
 1971              		.loc 1 284 0
 1972 006b 488B0424 		movq	(%rsp), %rax
GAS LISTING /tmp/ccYvOZGU.s 			page 55


 1973 006f 488B5424 		movq	8(%rsp), %rdx
 1973      08
 1974 0074 488903   		movq	%rax, (%rbx)
 1975 0077 48895308 		movq	%rdx, 8(%rbx)
 1976 007b 488B4424 		movq	16(%rsp), %rax
 1976      10
 1977 0080 488B5424 		movq	24(%rsp), %rdx
 1977      18
 1978 0085 48894310 		movq	%rax, 16(%rbx)
 1979 0089 48895318 		movq	%rdx, 24(%rbx)
 1980 008d EB68     		jmp	.L174
 1981              	.LVL230:
 1982              	.L183:
 288:src/mcu_msg.c ****     }
 1983              		.loc 1 288 0
 1984 008f 4889D0   		movq	%rdx, %rax
 1985              	.LVL231:
 1986              	.L178:
 288:src/mcu_msg.c ****     }
 1987              		.loc 1 288 0 is_stmt 0 discriminator 1
 1988 0092 488D5001 		leaq	1(%rax), %rdx
 1989              	.LVL232:
 1990              	.LBB108:
 1991              	.LBB109:
 176:src/mcu_msg.c **** }
 1992              		.loc 1 176 0 is_stmt 1 discriminator 1
 1993 0096 4889D6   		movq	%rdx, %rsi
 1994 0099 482B7424 		subq	16(%rsp), %rsi
 1994      10
 1995 009e 0FB74C24 		movzwl	24(%rsp), %ecx
 1995      18
 1996              	.LVL233:
 1997              	.LBE109:
 1998              	.LBE108:
 288:src/mcu_msg.c ****     }
 1999              		.loc 1 288 0 discriminator 1
 2000 00a3 4839CE   		cmpq	%rcx, %rsi
 2001 00a6 7DAD     		jge	.L177
 288:src/mcu_msg.c ****     }
 2002              		.loc 1 288 0 is_stmt 0 discriminator 2
 2003 00a8 80387B   		cmpb	$123, (%rax)
 2004 00ab 75E2     		jne	.L183
 2005 00ad EBA6     		jmp	.L177
 2006              	.L181:
 292:src/mcu_msg.c ****     }
 2007              		.loc 1 292 0 is_stmt 1
 2008 00af 4883C001 		addq	$1, %rax
 2009              	.LVL234:
 2010              	.L179:
 2011              	.LBB110:
 2012              	.LBB111:
 176:src/mcu_msg.c **** }
 2013              		.loc 1 176 0
 2014 00b3 4889C7   		movq	%rax, %rdi
 2015 00b6 4889C6   		movq	%rax, %rsi
 2016 00b9 482B7424 		subq	16(%rsp), %rsi
 2016      10
GAS LISTING /tmp/ccYvOZGU.s 			page 56


 2017 00be 0FB74C24 		movzwl	24(%rsp), %ecx
 2017      18
 2018              	.LVL235:
 2019              	.LBE111:
 2020              	.LBE110:
 291:src/mcu_msg.c ****         p++;
 2021              		.loc 1 291 0
 2022 00c3 4839CE   		cmpq	%rcx, %rsi
 2023 00c6 7D05     		jge	.L180
 291:src/mcu_msg.c ****         p++;
 2024              		.loc 1 291 0 is_stmt 0 discriminator 1
 2025 00c8 80387D   		cmpb	$125, (%rax)
 2026 00cb 75E2     		jne	.L181
 2027              	.L180:
 294:src/mcu_msg.c ****     return res;
 2028              		.loc 1 294 0 is_stmt 1
 2029 00cd 4829D7   		subq	%rdx, %rdi
 2030 00d0 66897C24 		movw	%di, 24(%rsp)
 2030      18
 295:src/mcu_msg.c **** }
 2031              		.loc 1 295 0
 2032 00d5 488B0424 		movq	(%rsp), %rax
 2033              	.LVL236:
 2034 00d9 488B5424 		movq	8(%rsp), %rdx
 2034      08
 2035 00de 488903   		movq	%rax, (%rbx)
 2036 00e1 48895308 		movq	%rdx, 8(%rbx)
 2037 00e5 488B4424 		movq	16(%rsp), %rax
 2037      10
 2038 00ea 488B5424 		movq	24(%rsp), %rdx
 2038      18
 2039 00ef 48894310 		movq	%rax, 16(%rbx)
 2040 00f3 48895318 		movq	%rdx, 24(%rbx)
 2041              	.L174:
 296:src/mcu_msg.c **** 
 2042              		.loc 1 296 0
 2043 00f7 4889D8   		movq	%rbx, %rax
 2044 00fa 488B5C24 		movq	40(%rsp), %rbx
 2044      28
 2045 00ff 6448331C 		xorq	%fs:40, %rbx
 2045      25280000 
 2045      00
 2046              	.LVL237:
 2047 0108 7506     		jne	.L186
 2048 010a 4883C430 		addq	$48, %rsp
 2049              	.LCFI69:
 2050              		.cfi_remember_state
 2051              		.cfi_def_cfa_offset 16
 2052 010e 5B       		popq	%rbx
 2053              	.LCFI70:
 2054              		.cfi_def_cfa_offset 8
 2055 010f C3       		ret
 2056              	.L186:
 2057              	.LCFI71:
 2058              		.cfi_restore_state
 2059 0110 E8000000 		call	__stack_chk_fail@PLT
 2059      00
GAS LISTING /tmp/ccYvOZGU.s 			page 57


 2060              	.LVL238:
 2061              		.cfi_endproc
 2062              	.LFE38:
 2064              		.section	.text.mmsg_parser_get_obj,"ax",@progbits
 2065              		.globl	mmsg_parser_get_obj
 2067              	mmsg_parser_get_obj:
 2068              	.LFB39:
 301:src/mcu_msg.c ****     mmsg_obj_t res;
 2069              		.loc 1 301 0
 2070              		.cfi_startproc
 2071              	.LVL239:
 2072 0000 53       		pushq	%rbx
 2073              	.LCFI72:
 2074              		.cfi_def_cfa_offset 16
 2075              		.cfi_offset 3, -16
 2076 0001 4883EC30 		subq	$48, %rsp
 2077              	.LCFI73:
 2078              		.cfi_def_cfa_offset 64
 2079 0005 4889FB   		movq	%rdi, %rbx
 2080 0008 4889F2   		movq	%rsi, %rdx
 301:src/mcu_msg.c ****     mmsg_obj_t res;
 2081              		.loc 1 301 0
 2082 000b 64488B04 		movq	%fs:40, %rax
 2082      25280000 
 2082      00
 2083 0014 48894424 		movq	%rax, 40(%rsp)
 2083      28
 2084 0019 31C0     		xorl	%eax, %eax
 303:src/mcu_msg.c ****     char *p;
 2085              		.loc 1 303 0
 2086 001b 41B82800 		movl	$40, %r8d
 2086      0000
 2087 0021 B9400000 		movl	$64, %ecx
 2087      00
 2088 0026 488B7C24 		movq	80(%rsp), %rdi
 2088      50
 2089              	.LVL240:
 2090 002b 488B7424 		movq	88(%rsp), %rsi
 2090      58
 2091              	.LVL241:
 2092 0030 E8000000 		call	find_keyword
 2092      00
 2093              	.LVL242:
 2094 0035 48890424 		movq	%rax, (%rsp)
 2095 0039 48895424 		movq	%rdx, 8(%rsp)
 2095      08
 305:src/mcu_msg.c ****         mmsg_destroy_obj(&res);
 2096              		.loc 1 305 0
 2097 003e 4885C0   		testq	%rax, %rax
 2098 0041 741B     		je	.L198
 310:src/mcu_msg.c ****     if (*p != CTRL_START_OBJ) {
 2099              		.loc 1 310 0
 2100 0043 0FB75424 		movzwl	8(%rsp), %edx
 2100      08
 2101 0048 4801D0   		addq	%rdx, %rax
 2102              	.LVL243:
 311:src/mcu_msg.c ****         while(is_in_str_buff(msg.content, p + 1) && *p != CTRL_START_OBJ) p++;
GAS LISTING /tmp/ccYvOZGU.s 			page 58


 2103              		.loc 1 311 0
 2104 004b 803828   		cmpb	$40, (%rax)
 2105 004e 753D     		jne	.L191
 2106              	.L190:
 314:src/mcu_msg.c ****     while(is_in_str_buff(msg.content, p) && *p != CTRL_STOP_OBJ) {
 2107              		.loc 1 314 0
 2108 0050 488D5001 		leaq	1(%rax), %rdx
 2109              	.LVL244:
 2110 0054 48895424 		movq	%rdx, 16(%rsp)
 2110      10
 2111 0059 4889D0   		movq	%rdx, %rax
 315:src/mcu_msg.c ****         p++;
 2112              		.loc 1 315 0
 2113 005c EB50     		jmp	.L192
 2114              	.LVL245:
 2115              	.L198:
 306:src/mcu_msg.c ****         return res;
 2116              		.loc 1 306 0
 2117 005e 4889E7   		movq	%rsp, %rdi
 2118 0061 E8000000 		call	mmsg_destroy_obj
 2118      00
 2119              	.LVL246:
 307:src/mcu_msg.c ****     }
 2120              		.loc 1 307 0
 2121 0066 488B0424 		movq	(%rsp), %rax
 2122 006a 488B5424 		movq	8(%rsp), %rdx
 2122      08
 2123 006f 488903   		movq	%rax, (%rbx)
 2124 0072 48895308 		movq	%rdx, 8(%rbx)
 2125 0076 488B4424 		movq	16(%rsp), %rax
 2125      10
 2126 007b 488B5424 		movq	24(%rsp), %rdx
 2126      18
 2127 0080 48894310 		movq	%rax, 16(%rbx)
 2128 0084 48895318 		movq	%rdx, 24(%rbx)
 2129 0088 EB68     		jmp	.L187
 2130              	.LVL247:
 2131              	.L196:
 312:src/mcu_msg.c ****     }
 2132              		.loc 1 312 0
 2133 008a 4889D0   		movq	%rdx, %rax
 2134              	.LVL248:
 2135              	.L191:
 312:src/mcu_msg.c ****     }
 2136              		.loc 1 312 0 is_stmt 0 discriminator 1
 2137 008d 488D5001 		leaq	1(%rax), %rdx
 2138              	.LVL249:
 2139              	.LBB112:
 2140              	.LBB113:
 176:src/mcu_msg.c **** }
 2141              		.loc 1 176 0 is_stmt 1 discriminator 1
 2142 0091 4889D6   		movq	%rdx, %rsi
 2143 0094 482B7424 		subq	80(%rsp), %rsi
 2143      50
 2144 0099 0FB74C24 		movzwl	88(%rsp), %ecx
 2144      58
 2145              	.LVL250:
GAS LISTING /tmp/ccYvOZGU.s 			page 59


 2146              	.LBE113:
 2147              	.LBE112:
 312:src/mcu_msg.c ****     }
 2148              		.loc 1 312 0 discriminator 1
 2149 009e 4839CE   		cmpq	%rcx, %rsi
 2150 00a1 7DAD     		jge	.L190
 312:src/mcu_msg.c ****     }
 2151              		.loc 1 312 0 is_stmt 0 discriminator 2
 2152 00a3 803828   		cmpb	$40, (%rax)
 2153 00a6 75E2     		jne	.L196
 2154 00a8 EBA6     		jmp	.L190
 2155              	.L194:
 316:src/mcu_msg.c ****     }
 2156              		.loc 1 316 0 is_stmt 1
 2157 00aa 4883C001 		addq	$1, %rax
 2158              	.LVL251:
 2159              	.L192:
 2160              	.LBB114:
 2161              	.LBB115:
 176:src/mcu_msg.c **** }
 2162              		.loc 1 176 0
 2163 00ae 4889C7   		movq	%rax, %rdi
 2164 00b1 4889C6   		movq	%rax, %rsi
 2165 00b4 482B7424 		subq	80(%rsp), %rsi
 2165      50
 2166 00b9 0FB74C24 		movzwl	88(%rsp), %ecx
 2166      58
 2167              	.LVL252:
 2168              	.LBE115:
 2169              	.LBE114:
 315:src/mcu_msg.c ****         p++;
 2170              		.loc 1 315 0
 2171 00be 4839CE   		cmpq	%rcx, %rsi
 2172 00c1 7D05     		jge	.L193
 315:src/mcu_msg.c ****         p++;
 2173              		.loc 1 315 0 is_stmt 0 discriminator 1
 2174 00c3 803829   		cmpb	$41, (%rax)
 2175 00c6 75E2     		jne	.L194
 2176              	.L193:
 318:src/mcu_msg.c ****     return res;
 2177              		.loc 1 318 0 is_stmt 1
 2178 00c8 4829D7   		subq	%rdx, %rdi
 2179 00cb 66897C24 		movw	%di, 24(%rsp)
 2179      18
 319:src/mcu_msg.c **** }
 2180              		.loc 1 319 0
 2181 00d0 488B0424 		movq	(%rsp), %rax
 2182              	.LVL253:
 2183 00d4 488B5424 		movq	8(%rsp), %rdx
 2183      08
 2184 00d9 488903   		movq	%rax, (%rbx)
 2185 00dc 48895308 		movq	%rdx, 8(%rbx)
 2186 00e0 488B4424 		movq	16(%rsp), %rax
 2186      10
 2187 00e5 488B5424 		movq	24(%rsp), %rdx
 2187      18
 2188 00ea 48894310 		movq	%rax, 16(%rbx)
GAS LISTING /tmp/ccYvOZGU.s 			page 60


 2189 00ee 48895318 		movq	%rdx, 24(%rbx)
 2190              	.L187:
 320:src/mcu_msg.c **** 
 2191              		.loc 1 320 0
 2192 00f2 4889D8   		movq	%rbx, %rax
 2193 00f5 488B5C24 		movq	40(%rsp), %rbx
 2193      28
 2194 00fa 6448331C 		xorq	%fs:40, %rbx
 2194      25280000 
 2194      00
 2195              	.LVL254:
 2196 0103 7506     		jne	.L199
 2197 0105 4883C430 		addq	$48, %rsp
 2198              	.LCFI74:
 2199              		.cfi_remember_state
 2200              		.cfi_def_cfa_offset 16
 2201 0109 5B       		popq	%rbx
 2202              	.LCFI75:
 2203              		.cfi_def_cfa_offset 8
 2204 010a C3       		ret
 2205              	.L199:
 2206              	.LCFI76:
 2207              		.cfi_restore_state
 2208 010b E8000000 		call	__stack_chk_fail@PLT
 2208      00
 2209              	.LVL255:
 2210              		.cfi_endproc
 2211              	.LFE39:
 2213              		.section	.text.mmsg_parser_get_cmd,"ax",@progbits
 2214              		.globl	mmsg_parser_get_cmd
 2216              	mmsg_parser_get_cmd:
 2217              	.LFB40:
 323:src/mcu_msg.c ****     mmsg_cmd_t res;
 2218              		.loc 1 323 0
 2219              		.cfi_startproc
 2220              	.LVL256:
 2221 0000 4883EC08 		subq	$8, %rsp
 2222              	.LCFI77:
 2223              		.cfi_def_cfa_offset 16
 2224 0004 4889FA   		movq	%rdi, %rdx
 326:src/mcu_msg.c ****     return res;
 2225              		.loc 1 326 0
 2226 0007 41B83E00 		movl	$62, %r8d
 2226      0000
 2227 000d B93C0000 		movl	$60, %ecx
 2227      00
 2228 0012 488B7C24 		movq	32(%rsp), %rdi
 2228      20
 2229              	.LVL257:
 2230 0017 488B7424 		movq	40(%rsp), %rsi
 2230      28
 2231 001c E8000000 		call	find_keyword
 2231      00
 2232              	.LVL258:
 328:src/mcu_msg.c **** 
 2233              		.loc 1 328 0
 2234 0021 4883C408 		addq	$8, %rsp
GAS LISTING /tmp/ccYvOZGU.s 			page 61


 2235              	.LCFI78:
 2236              		.cfi_def_cfa_offset 8
 2237 0025 C3       		ret
 2238              		.cfi_endproc
 2239              	.LFE40:
 2241              		.section	.text.mmsg_parser_get_int,"ax",@progbits
 2242              		.globl	mmsg_parser_get_int
 2244              	mmsg_parser_get_int:
 2245              	.LFB41:
 331:src/mcu_msg.c ****     mmsg_string_t sval = find_val(obj, key);
 2246              		.loc 1 331 0
 2247              		.cfi_startproc
 2248              	.LVL259:
 2249 0000 53       		pushq	%rbx
 2250              	.LCFI79:
 2251              		.cfi_def_cfa_offset 16
 2252              		.cfi_offset 3, -16
 2253 0001 4889FB   		movq	%rdi, %rbx
 332:src/mcu_msg.c ****     mmsg_size_t i;
 2254              		.loc 1 332 0
 2255 0004 FF742428 		pushq	40(%rsp)
 2256              	.LCFI80:
 2257              		.cfi_def_cfa_offset 24
 2258 0008 FF742428 		pushq	40(%rsp)
 2259              	.LCFI81:
 2260              		.cfi_def_cfa_offset 32
 2261 000c FF742428 		pushq	40(%rsp)
 2262              	.LCFI82:
 2263              		.cfi_def_cfa_offset 40
 2264 0010 FF742428 		pushq	40(%rsp)
 2265              	.LCFI83:
 2266              		.cfi_def_cfa_offset 48
 2267 0014 4889F7   		movq	%rsi, %rdi
 2268              	.LVL260:
 2269 0017 E8000000 		call	find_val
 2269      00
 2270              	.LVL261:
 338:src/mcu_msg.c ****         return -1;
 2271              		.loc 1 338 0
 2272 001c 4883C420 		addq	$32, %rsp
 2273              	.LCFI84:
 2274              		.cfi_def_cfa_offset 16
 2275              	.LVL262:
 2276 0020 4885C0   		testq	%rax, %rax
 2277 0023 0F84AD00 		je	.L213
 2277      0000
 2278 0029 4889C2   		movq	%rax, %rdx
 342:src/mcu_msg.c ****         case '+':
 2279              		.loc 1 342 0
 2280 002c 0FB600   		movzbl	(%rax), %eax
 2281 002f 3C2B     		cmpb	$43, %al
 2282 0031 740C     		je	.L205
 2283 0033 3C2D     		cmpb	$45, %al
 2284 0035 7419     		je	.L206
 335:src/mcu_msg.c ****     int8_t res = 0; // result of function
 2285              		.loc 1 335 0
 2286 0037 41B80100 		movl	$1, %r8d
GAS LISTING /tmp/ccYvOZGU.s 			page 62


 2286      0000
 2287 003d EB0A     		jmp	.L204
 2288              	.L205:
 345:src/mcu_msg.c ****         break;
 2289              		.loc 1 345 0
 2290 003f 488D5201 		leaq	1(%rdx), %rdx
 344:src/mcu_msg.c ****             sval.s++;
 2291              		.loc 1 344 0
 2292 0043 41B80100 		movl	$1, %r8d
 2292      0000
 2293              	.LVL263:
 2294              	.L204:
 357:src/mcu_msg.c ****         if(*sval.s < '0' || *sval.s > '9') {    // if non valid number, return with error
 2295              		.loc 1 357 0
 2296 0049 BE000000 		movl	$0, %esi
 2296      00
 2297 004e EB1E     		jmp	.L207
 2298              	.LVL264:
 2299              	.L206:
 350:src/mcu_msg.c ****         break;
 2300              		.loc 1 350 0
 2301 0050 488D5201 		leaq	1(%rdx), %rdx
 349:src/mcu_msg.c ****             sval.s++;
 2302              		.loc 1 349 0
 2303 0054 41B8FFFF 		movl	$-1, %r8d
 2303      FFFF
 351:src/mcu_msg.c ****         
 2304              		.loc 1 351 0
 2305 005a EBED     		jmp	.L204
 2306              	.LVL265:
 2307              	.L209:
 357:src/mcu_msg.c ****         if(*sval.s < '0' || *sval.s > '9') {    // if non valid number, return with error
 2308              		.loc 1 357 0
 2309 005c 3C3B     		cmpb	$59, %al
 2310 005e 7432     		je	.L208
 358:src/mcu_msg.c ****             return -1;
 2311              		.loc 1 358 0
 2312 0060 83E830   		subl	$48, %eax
 2313 0063 3C09     		cmpb	$9, %al
 2314 0065 7776     		ja	.L215
 357:src/mcu_msg.c ****         if(*sval.s < '0' || *sval.s > '9') {    // if non valid number, return with error
 2315              		.loc 1 357 0 discriminator 2
 2316 0067 83C601   		addl	$1, %esi
 2317              	.LVL266:
 2318 006a 488D5701 		leaq	1(%rdi), %rdx
 2319              	.LVL267:
 2320              	.L207:
 357:src/mcu_msg.c ****         if(*sval.s < '0' || *sval.s > '9') {    // if non valid number, return with error
 2321              		.loc 1 357 0 is_stmt 0 discriminator 1
 2322 006e 4889D7   		movq	%rdx, %rdi
 2323              	.LVL268:
 2324              	.LBB116:
 2325              	.LBB117:
 176:src/mcu_msg.c **** }
 2326              		.loc 1 176 0 is_stmt 1 discriminator 1
 2327 0071 4889D1   		movq	%rdx, %rcx
 2328 0074 482B4C24 		subq	32(%rsp), %rcx
GAS LISTING /tmp/ccYvOZGU.s 			page 63


 2328      20
 2329 0079 0FB74424 		movzwl	40(%rsp), %eax
 2329      28
 2330              	.LVL269:
 2331              	.LBE117:
 2332              	.LBE116:
 357:src/mcu_msg.c ****         if(*sval.s < '0' || *sval.s > '9') {    // if non valid number, return with error
 2333              		.loc 1 357 0 discriminator 1
 2334 007e 4839C1   		cmpq	%rax, %rcx
 2335 0081 7D0F     		jge	.L208
 357:src/mcu_msg.c ****         if(*sval.s < '0' || *sval.s > '9') {    // if non valid number, return with error
 2336              		.loc 1 357 0 is_stmt 0 discriminator 3
 2337 0083 0FB602   		movzbl	(%rdx), %eax
 2338              	.LVL270:
 2339              	.LBB118:
 2340              	.LBB119:
 123:src/mcu_msg.c ****         case  ' ':
 2341              		.loc 1 123 0 is_stmt 1 discriminator 3
 2342 0086 3C09     		cmpb	$9, %al
 2343 0088 7CD2     		jl	.L209
 2344 008a 3C0D     		cmpb	$13, %al
 2345 008c 7E04     		jle	.L208
 2346 008e 3C20     		cmpb	$32, %al
 2347 0090 75CA     		jne	.L209
 2348              	.LVL271:
 2349              	.L208:
 2350              	.LBE119:
 2351              	.LBE118:
 363:src/mcu_msg.c ****     --sval.s;
 2352              		.loc 1 363 0
 2353 0092 C7030000 		movl	$0, (%rbx)
 2353      0000
 364:src/mcu_msg.c ****     while(i--) { //convert value to integer
 2354              		.loc 1 364 0
 2355 0098 488D57FF 		leaq	-1(%rdi), %rdx
 336:src/mcu_msg.c **** 
 2356              		.loc 1 336 0
 2357 009c B8000000 		movl	$0, %eax
 2357      00
 334:src/mcu_msg.c ****     int sign = 1;
 2358              		.loc 1 334 0
 2359 00a1 B9010000 		movl	$1, %ecx
 2359      00
 365:src/mcu_msg.c ****         *res_val += (*sval.s-- - '0') * m;
 2360              		.loc 1 365 0
 2361 00a6 EB1D     		jmp	.L211
 2362              	.LVL272:
 2363              	.L212:
 366:src/mcu_msg.c ****         m *= 10;
 2364              		.loc 1 366 0
 2365 00a8 4889D6   		movq	%rdx, %rsi
 2366 00ab 4883EA01 		subq	$1, %rdx
 2367 00af 0FBE36   		movsbl	(%rsi), %esi
 2368 00b2 83EE30   		subl	$48, %esi
 2369 00b5 0FAFF1   		imull	%ecx, %esi
 2370 00b8 0133     		addl	%esi, (%rbx)
 367:src/mcu_msg.c ****         res++;
GAS LISTING /tmp/ccYvOZGU.s 			page 64


 2371              		.loc 1 367 0
 2372 00ba 8D3489   		leal	(%rcx,%rcx,4), %esi
 2373 00bd 8D0C36   		leal	(%rsi,%rsi), %ecx
 2374              	.LVL273:
 368:src/mcu_msg.c ****     }
 2375              		.loc 1 368 0
 2376 00c0 83C001   		addl	$1, %eax
 2377              	.LVL274:
 365:src/mcu_msg.c ****         *res_val += (*sval.s-- - '0') * m;
 2378              		.loc 1 365 0
 2379 00c3 89FE     		movl	%edi, %esi
 2380              	.LVL275:
 2381              	.L211:
 2382 00c5 8D7EFF   		leal	-1(%rsi), %edi
 2383              	.LVL276:
 2384 00c8 6685F6   		testw	%si, %si
 2385 00cb 75DB     		jne	.L212
 371:src/mcu_msg.c **** 
 2386              		.loc 1 371 0
 2387 00cd 440FAF03 		imull	(%rbx), %r8d
 2388              	.LVL277:
 2389 00d1 448903   		movl	%r8d, (%rbx)
 2390              	.LVL278:
 2391              	.L202:
 374:src/mcu_msg.c **** 
 2392              		.loc 1 374 0
 2393 00d4 5B       		popq	%rbx
 2394              	.LCFI85:
 2395              		.cfi_remember_state
 2396              		.cfi_def_cfa_offset 8
 2397              	.LVL279:
 2398 00d5 C3       		ret
 2399              	.LVL280:
 2400              	.L213:
 2401              	.LCFI86:
 2402              		.cfi_restore_state
 339:src/mcu_msg.c **** 
 2403              		.loc 1 339 0
 2404 00d6 B8FFFFFF 		movl	$-1, %eax
 2404      FF
 2405 00db EBF7     		jmp	.L202
 2406              	.LVL281:
 2407              	.L215:
 359:src/mcu_msg.c ****         }
 2408              		.loc 1 359 0
 2409 00dd B8FFFFFF 		movl	$-1, %eax
 2409      FF
 2410 00e2 EBF0     		jmp	.L202
 2411              		.cfi_endproc
 2412              	.LFE41:
 2414              		.section	.text.mmsg_parser_get_float,"ax",@progbits
 2415              		.globl	mmsg_parser_get_float
 2417              	mmsg_parser_get_float:
 2418              	.LFB42:
 378:src/mcu_msg.c ****     mmsg_string_t sval = find_val(obj, key);
 2419              		.loc 1 378 0
 2420              		.cfi_startproc
GAS LISTING /tmp/ccYvOZGU.s 			page 65


 2421              	.LVL282:
 2422 0000 53       		pushq	%rbx
 2423              	.LCFI87:
 2424              		.cfi_def_cfa_offset 16
 2425              		.cfi_offset 3, -16
 2426 0001 4889FB   		movq	%rdi, %rbx
 379:src/mcu_msg.c ****     char *pf;
 2427              		.loc 1 379 0
 2428 0004 FF742428 		pushq	40(%rsp)
 2429              	.LCFI88:
 2430              		.cfi_def_cfa_offset 24
 2431 0008 FF742428 		pushq	40(%rsp)
 2432              	.LCFI89:
 2433              		.cfi_def_cfa_offset 32
 2434 000c FF742428 		pushq	40(%rsp)
 2435              	.LCFI90:
 2436              		.cfi_def_cfa_offset 40
 2437 0010 FF742428 		pushq	40(%rsp)
 2438              	.LCFI91:
 2439              		.cfi_def_cfa_offset 48
 2440 0014 4889F7   		movq	%rsi, %rdi
 2441              	.LVL283:
 2442 0017 E8000000 		call	find_val
 2442      00
 2443              	.LVL284:
 2444 001c 4889C1   		movq	%rax, %rcx
 2445              	.LVL285:
 387:src/mcu_msg.c ****         return -1;
 2446              		.loc 1 387 0
 2447 001f 4883C420 		addq	$32, %rsp
 2448              	.LCFI92:
 2449              		.cfi_def_cfa_offset 16
 2450 0023 4885C0   		testq	%rax, %rax
 2451 0026 0F844C01 		je	.L236
 2451      0000
 2452 002c 4889C2   		movq	%rax, %rdx
 391:src/mcu_msg.c ****         case '+':
 2453              		.loc 1 391 0
 2454 002f 0FB601   		movzbl	(%rcx), %eax
 2455 0032 3C2B     		cmpb	$43, %al
 2456 0034 740B     		je	.L221
 2457 0036 3C2D     		cmpb	$45, %al
 2458 0038 7417     		je	.L222
 384:src/mcu_msg.c ****     int8_t res = 0; // result of function
 2459              		.loc 1 384 0
 2460 003a BF010000 		movl	$1, %edi
 2460      00
 2461 003f EB09     		jmp	.L220
 2462              	.L221:
 394:src/mcu_msg.c ****         break;
 2463              		.loc 1 394 0
 2464 0041 488D4A01 		leaq	1(%rdx), %rcx
 393:src/mcu_msg.c ****             sval.s++;
 2465              		.loc 1 393 0
 2466 0045 BF010000 		movl	$1, %edi
 2466      00
 2467              	.LVL286:
GAS LISTING /tmp/ccYvOZGU.s 			page 66


 2468              	.L220:
 407:src/mcu_msg.c ****         if((*sval.s < '0' || *sval.s > '9')) {    // if non valid number, return with error
 2469              		.loc 1 407 0
 2470 004a BA000000 		movl	$0, %edx
 2470      00
 2471 004f EB25     		jmp	.L223
 2472              	.LVL287:
 2473              	.L222:
 399:src/mcu_msg.c ****         break;
 2474              		.loc 1 399 0
 2475 0051 488D4A01 		leaq	1(%rdx), %rcx
 398:src/mcu_msg.c ****             sval.s++;
 2476              		.loc 1 398 0
 2477 0055 BFFFFFFF 		movl	$-1, %edi
 2477      FF
 400:src/mcu_msg.c ****         
 2478              		.loc 1 400 0
 2479 005a EBEE     		jmp	.L220
 2480              	.LVL288:
 2481              	.L225:
 407:src/mcu_msg.c ****         if((*sval.s < '0' || *sval.s > '9')) {    // if non valid number, return with error
 2482              		.loc 1 407 0
 2483 005c 3C3B     		cmpb	$59, %al
 2484 005e 743A     		je	.L224
 407:src/mcu_msg.c ****         if((*sval.s < '0' || *sval.s > '9')) {    // if non valid number, return with error
 2485              		.loc 1 407 0 is_stmt 0 discriminator 5
 2486 0060 3C2E     		cmpb	$46, %al
 2487 0062 7436     		je	.L224
 408:src/mcu_msg.c ****             return -1;
 2488              		.loc 1 408 0 is_stmt 1
 2489 0064 83E830   		subl	$48, %eax
 2490 0067 3C09     		cmpb	$9, %al
 2491 0069 0F871001 		ja	.L238
 2491      0000
 407:src/mcu_msg.c ****         if((*sval.s < '0' || *sval.s > '9')) {    // if non valid number, return with error
 2492              		.loc 1 407 0 discriminator 2
 2493 006f 83C201   		addl	$1, %edx
 2494              	.LVL289:
 2495 0072 488D4E01 		leaq	1(%rsi), %rcx
 2496              	.LVL290:
 2497              	.L223:
 407:src/mcu_msg.c ****         if((*sval.s < '0' || *sval.s > '9')) {    // if non valid number, return with error
 2498              		.loc 1 407 0 is_stmt 0 discriminator 1
 2499 0076 4889CE   		movq	%rcx, %rsi
 2500              	.LVL291:
 2501              	.LBB120:
 2502              	.LBB121:
 176:src/mcu_msg.c **** }
 2503              		.loc 1 176 0 is_stmt 1 discriminator 1
 2504 0079 4989C8   		movq	%rcx, %r8
 2505 007c 4C2B4424 		subq	32(%rsp), %r8
 2505      20
 2506 0081 0FB74424 		movzwl	40(%rsp), %eax
 2506      28
 2507              	.LVL292:
 2508              	.LBE121:
 2509              	.LBE120:
GAS LISTING /tmp/ccYvOZGU.s 			page 67


 407:src/mcu_msg.c ****         if((*sval.s < '0' || *sval.s > '9')) {    // if non valid number, return with error
 2510              		.loc 1 407 0 discriminator 1
 2511 0086 4939C0   		cmpq	%rax, %r8
 2512 0089 7D0F     		jge	.L224
 407:src/mcu_msg.c ****         if((*sval.s < '0' || *sval.s > '9')) {    // if non valid number, return with error
 2513              		.loc 1 407 0 is_stmt 0 discriminator 3
 2514 008b 0FB601   		movzbl	(%rcx), %eax
 2515              	.LVL293:
 2516              	.LBB122:
 2517              	.LBB123:
 123:src/mcu_msg.c ****         case  ' ':
 2518              		.loc 1 123 0 is_stmt 1 discriminator 3
 2519 008e 3C09     		cmpb	$9, %al
 2520 0090 7CCA     		jl	.L225
 2521 0092 3C0D     		cmpb	$13, %al
 2522 0094 7E04     		jle	.L224
 2523 0096 3C20     		cmpb	$32, %al
 2524 0098 75C2     		jne	.L225
 2525              	.LVL294:
 2526              	.L224:
 2527              	.LBE123:
 2528              	.LBE122:
 413:src/mcu_msg.c ****     
 2529              		.loc 1 413 0
 2530 009a C7030000 		movl	$0x00000000, (%rbx)
 2530      0000
 415:src/mcu_msg.c ****         pf = sval.s + 1;
 2531              		.loc 1 415 0
 2532 00a0 803E2E   		cmpb	$46, (%rsi)
 2533 00a3 7416     		je	.L243
 385:src/mcu_msg.c **** 
 2534              		.loc 1 385 0
 2535 00a5 B8000000 		movl	$0, %eax
 2535      00
 419:src/mcu_msg.c ****     }
 2536              		.loc 1 419 0
 2537 00aa 41B80000 		movl	$0, %r8d
 2537      0000
 2538              	.LVL295:
 2539              	.L227:
 422:src/mcu_msg.c ****     while(i--) { // convert integer part
 2540              		.loc 1 422 0
 2541 00b0 488D4EFF 		leaq	-1(%rsi), %rcx
 382:src/mcu_msg.c ****     float mf = 0.1;
 2542              		.loc 1 382 0
 2543 00b4 BE010000 		movl	$1, %esi
 2543      00
 423:src/mcu_msg.c ****         *res_val += (*sval.s-- - '0') * m;
 2544              		.loc 1 423 0
 2545 00b9 EB38     		jmp	.L228
 2546              	.LVL296:
 2547              	.L243:
 416:src/mcu_msg.c ****         res++;
 2548              		.loc 1 416 0
 2549 00bb 4C8D4601 		leaq	1(%rsi), %r8
 2550              	.LVL297:
 417:src/mcu_msg.c ****     } else {
GAS LISTING /tmp/ccYvOZGU.s 			page 68


 2551              		.loc 1 417 0
 2552 00bf B8010000 		movl	$1, %eax
 2552      00
 2553 00c4 EBEA     		jmp	.L227
 2554              	.LVL298:
 2555              	.L231:
 424:src/mcu_msg.c ****         m *= 10;
 2556              		.loc 1 424 0
 2557 00c6 4889CA   		movq	%rcx, %rdx
 2558 00c9 4883E901 		subq	$1, %rcx
 2559 00cd 0FBE12   		movsbl	(%rdx), %edx
 2560 00d0 83EA30   		subl	$48, %edx
 2561 00d3 0FAFD6   		imull	%esi, %edx
 2562 00d6 660FEFC0 		pxor	%xmm0, %xmm0
 2563 00da F3480F2A 		cvtsi2ssq	%rdx, %xmm0
 2563      C2
 2564 00df F30F5803 		addss	(%rbx), %xmm0
 2565 00e3 F30F1103 		movss	%xmm0, (%rbx)
 425:src/mcu_msg.c ****         res++;
 2566              		.loc 1 425 0
 2567 00e7 8D14B6   		leal	(%rsi,%rsi,4), %edx
 2568 00ea 8D3412   		leal	(%rdx,%rdx), %esi
 2569              	.LVL299:
 426:src/mcu_msg.c ****     }
 2570              		.loc 1 426 0
 2571 00ed 83C001   		addl	$1, %eax
 2572              	.LVL300:
 423:src/mcu_msg.c ****         *res_val += (*sval.s-- - '0') * m;
 2573              		.loc 1 423 0
 2574 00f0 4489CA   		movl	%r9d, %edx
 2575              	.LVL301:
 2576              	.L228:
 2577 00f3 448D4AFF 		leal	-1(%rdx), %r9d
 2578              	.LVL302:
 2579 00f7 6685D2   		testw	%dx, %dx
 2580 00fa 75CA     		jne	.L231
 383:src/mcu_msg.c ****     int sign = 1;
 2581              		.loc 1 383 0
 2582 00fc F30F100D 		movss	.LC1(%rip), %xmm1
 2582      00000000 
 2583 0104 EB33     		jmp	.L232
 2584              	.LVL303:
 2585              	.L234:
 430:src/mcu_msg.c ****         if(*pf < '0' || *pf > '9') {    // if non valid number, return with error
 2586              		.loc 1 430 0
 2587 0106 80F93B   		cmpb	$59, %cl
 2588 0109 745B     		je	.L233
 431:src/mcu_msg.c ****             return -1;
 2589              		.loc 1 431 0
 2590 010b 83E930   		subl	$48, %ecx
 2591 010e 80F909   		cmpb	$9, %cl
 2592 0111 7773     		ja	.L240
 434:src/mcu_msg.c ****         mf /= 10;
 2593              		.loc 1 434 0
 2594 0113 83EA30   		subl	$48, %edx
 2595 0116 660FEFC0 		pxor	%xmm0, %xmm0
 2596 011a F30F2AC2 		cvtsi2ss	%edx, %xmm0
GAS LISTING /tmp/ccYvOZGU.s 			page 69


 2597 011e F30F59C1 		mulss	%xmm1, %xmm0
 2598 0122 F30F5803 		addss	(%rbx), %xmm0
 2599 0126 F30F1103 		movss	%xmm0, (%rbx)
 435:src/mcu_msg.c ****         res++; 
 2600              		.loc 1 435 0
 2601 012a F30F5E0D 		divss	.LC2(%rip), %xmm1
 2601      00000000 
 2602              	.LVL304:
 436:src/mcu_msg.c ****     }
 2603              		.loc 1 436 0
 2604 0132 83C001   		addl	$1, %eax
 2605              	.LVL305:
 430:src/mcu_msg.c ****         if(*pf < '0' || *pf > '9') {    // if non valid number, return with error
 2606              		.loc 1 430 0
 2607 0135 4983C001 		addq	$1, %r8
 2608              	.LVL306:
 2609              	.L232:
 430:src/mcu_msg.c ****         if(*pf < '0' || *pf > '9') {    // if non valid number, return with error
 2610              		.loc 1 430 0 is_stmt 0 discriminator 1
 2611 0139 4D85C0   		testq	%r8, %r8
 2612 013c 7428     		je	.L233
 2613              	.LVL307:
 2614              	.LBB124:
 2615              	.LBB125:
 176:src/mcu_msg.c **** }
 2616              		.loc 1 176 0 is_stmt 1 discriminator 2
 2617 013e 4C89C1   		movq	%r8, %rcx
 2618 0141 482B4C24 		subq	32(%rsp), %rcx
 2618      20
 2619 0146 0FB75424 		movzwl	40(%rsp), %edx
 2619      28
 2620              	.LVL308:
 2621              	.LBE125:
 2622              	.LBE124:
 430:src/mcu_msg.c ****         if(*pf < '0' || *pf > '9') {    // if non valid number, return with error
 2623              		.loc 1 430 0 discriminator 2
 2624 014b 4839D1   		cmpq	%rdx, %rcx
 2625 014e 7D16     		jge	.L233
 430:src/mcu_msg.c ****         if(*pf < '0' || *pf > '9') {    // if non valid number, return with error
 2626              		.loc 1 430 0 is_stmt 0 discriminator 3
 2627 0150 410FB608 		movzbl	(%r8), %ecx
 2628 0154 0FBED1   		movsbl	%cl, %edx
 2629              	.LVL309:
 2630              	.LBB126:
 2631              	.LBB127:
 123:src/mcu_msg.c ****         case  ' ':
 2632              		.loc 1 123 0 is_stmt 1 discriminator 3
 2633 0157 80F909   		cmpb	$9, %cl
 2634 015a 7CAA     		jl	.L234
 2635 015c 80F90D   		cmpb	$13, %cl
 2636 015f 7E05     		jle	.L233
 2637 0161 80F920   		cmpb	$32, %cl
 2638 0164 75A0     		jne	.L234
 2639              	.LVL310:
 2640              	.L233:
 2641              	.LBE127:
 2642              	.LBE126:
GAS LISTING /tmp/ccYvOZGU.s 			page 70


 439:src/mcu_msg.c **** 
 2643              		.loc 1 439 0
 2644 0166 660FEFC0 		pxor	%xmm0, %xmm0
 2645 016a F30F2AC7 		cvtsi2ss	%edi, %xmm0
 2646 016e F30F5903 		mulss	(%rbx), %xmm0
 2647 0172 F30F1103 		movss	%xmm0, (%rbx)
 2648              	.LVL311:
 2649              	.L218:
 442:src/mcu_msg.c **** 
 2650              		.loc 1 442 0
 2651 0176 5B       		popq	%rbx
 2652              	.LCFI93:
 2653              		.cfi_remember_state
 2654              		.cfi_def_cfa_offset 8
 2655              	.LVL312:
 2656 0177 C3       		ret
 2657              	.LVL313:
 2658              	.L236:
 2659              	.LCFI94:
 2660              		.cfi_restore_state
 388:src/mcu_msg.c **** 
 2661              		.loc 1 388 0
 2662 0178 B8FFFFFF 		movl	$-1, %eax
 2662      FF
 2663 017d EBF7     		jmp	.L218
 2664              	.LVL314:
 2665              	.L238:
 409:src/mcu_msg.c ****         }
 2666              		.loc 1 409 0
 2667 017f B8FFFFFF 		movl	$-1, %eax
 2667      FF
 2668 0184 EBF0     		jmp	.L218
 2669              	.LVL315:
 2670              	.L240:
 432:src/mcu_msg.c ****         }
 2671              		.loc 1 432 0
 2672 0186 B8FFFFFF 		movl	$-1, %eax
 2672      FF
 2673              	.LVL316:
 2674 018b EBE9     		jmp	.L218
 2675              		.cfi_endproc
 2676              	.LFE42:
 2678              		.section	.text.mmsg_parser_get_string,"ax",@progbits
 2679              		.globl	mmsg_parser_get_string
 2681              	mmsg_parser_get_string:
 2682              	.LFB43:
 447:src/mcu_msg.c ****     mmsg_string_t res = find_val(obj, key);
 2683              		.loc 1 447 0
 2684              		.cfi_startproc
 2685              	.LVL317:
 2686 0000 4883EC28 		subq	$40, %rsp
 2687              	.LCFI95:
 2688              		.cfi_def_cfa_offset 48
 447:src/mcu_msg.c ****     mmsg_string_t res = find_val(obj, key);
 2689              		.loc 1 447 0
 2690 0004 64488B04 		movq	%fs:40, %rax
 2690      25280000 
GAS LISTING /tmp/ccYvOZGU.s 			page 71


 2690      00
 2691 000d 48894424 		movq	%rax, 24(%rsp)
 2691      18
 2692 0012 31C0     		xorl	%eax, %eax
 448:src/mcu_msg.c ****     char qmark;
 2693              		.loc 1 448 0
 2694 0014 FF742448 		pushq	72(%rsp)
 2695              	.LCFI96:
 2696              		.cfi_def_cfa_offset 56
 2697 0018 FF742448 		pushq	72(%rsp)
 2698              	.LCFI97:
 2699              		.cfi_def_cfa_offset 64
 2700 001c FF742448 		pushq	72(%rsp)
 2701              	.LCFI98:
 2702              		.cfi_def_cfa_offset 72
 2703 0020 FF742448 		pushq	72(%rsp)
 2704              	.LCFI99:
 2705              		.cfi_def_cfa_offset 80
 2706 0024 E8000000 		call	find_val
 2706      00
 2707              	.LVL318:
 2708 0029 48894424 		movq	%rax, 32(%rsp)
 2708      20
 2709 002e 48895424 		movq	%rdx, 40(%rsp)
 2709      28
 452:src/mcu_msg.c ****         mmsg_destroy_string(&res);
 2710              		.loc 1 452 0
 2711 0033 4883C420 		addq	$32, %rsp
 2712              	.LCFI100:
 2713              		.cfi_def_cfa_offset 48
 2714 0037 4885C0   		testq	%rax, %rax
 2715 003a 7422     		je	.L253
 457:src/mcu_msg.c **** 
 2716              		.loc 1 457 0
 2717 003c 0FB638   		movzbl	(%rax), %edi
 2718              	.LVL319:
 459:src/mcu_msg.c ****         mmsg_destroy_string(&res);
 2719              		.loc 1 459 0
 2720 003f 4080FF27 		cmpb	$39, %dil
 2721 0043 0F95C1   		setne	%cl
 2722 0046 4080FF22 		cmpb	$34, %dil
 2723 004a 0F95C2   		setne	%dl
 2724 004d 84D1     		testb	%dl, %cl
 2725 004f 7520     		jne	.L254
 464:src/mcu_msg.c ****     while(is_in_str_buff(obj.content, p) && *p != qmark) { // calc len
 2726              		.loc 1 464 0
 2727 0051 488D7001 		leaq	1(%rax), %rsi
 2728 0055 48893424 		movq	%rsi, (%rsp)
 2729              	.LVL320:
 2730 0059 4889F0   		movq	%rsi, %rax
 465:src/mcu_msg.c ****         p++;
 2731              		.loc 1 465 0
 2732 005c EB2A     		jmp	.L248
 2733              	.LVL321:
 2734              	.L253:
 453:src/mcu_msg.c ****         return res;
 2735              		.loc 1 453 0
GAS LISTING /tmp/ccYvOZGU.s 			page 72


 2736 005e 4889E7   		movq	%rsp, %rdi
 2737 0061 E8000000 		call	mmsg_destroy_string
 2737      00
 2738              	.LVL322:
 454:src/mcu_msg.c ****     }
 2739              		.loc 1 454 0
 2740 0066 488B0424 		movq	(%rsp), %rax
 2741 006a 488B5424 		movq	8(%rsp), %rdx
 2741      08
 2742 006f EB43     		jmp	.L246
 2743              	.LVL323:
 2744              	.L254:
 460:src/mcu_msg.c ****         return res;
 2745              		.loc 1 460 0
 2746 0071 4889E7   		movq	%rsp, %rdi
 2747              	.LVL324:
 2748 0074 E8000000 		call	mmsg_destroy_string
 2748      00
 2749              	.LVL325:
 461:src/mcu_msg.c ****     }
 2750              		.loc 1 461 0
 2751 0079 488B0424 		movq	(%rsp), %rax
 2752 007d 488B5424 		movq	8(%rsp), %rdx
 2752      08
 2753 0082 EB30     		jmp	.L246
 2754              	.LVL326:
 2755              	.L250:
 466:src/mcu_msg.c ****     }
 2756              		.loc 1 466 0
 2757 0084 4883C001 		addq	$1, %rax
 2758              	.LVL327:
 2759              	.L248:
 2760              	.LBB128:
 2761              	.LBB129:
 176:src/mcu_msg.c **** }
 2762              		.loc 1 176 0
 2763 0088 4989C0   		movq	%rax, %r8
 2764 008b 4889C1   		movq	%rax, %rcx
 2765 008e 482B4C24 		subq	64(%rsp), %rcx
 2765      40
 2766 0093 0FB75424 		movzwl	72(%rsp), %edx
 2766      48
 2767              	.LVL328:
 2768              	.LBE129:
 2769              	.LBE128:
 465:src/mcu_msg.c ****         p++;
 2770              		.loc 1 465 0
 2771 0098 4839D1   		cmpq	%rdx, %rcx
 2772 009b 7D05     		jge	.L249
 465:src/mcu_msg.c ****         p++;
 2773              		.loc 1 465 0 is_stmt 0 discriminator 1
 2774 009d 403838   		cmpb	%dil, (%rax)
 2775 00a0 75E2     		jne	.L250
 2776              	.L249:
 468:src/mcu_msg.c ****     return res;
 2777              		.loc 1 468 0 is_stmt 1
 2778 00a2 4929F0   		subq	%rsi, %r8
GAS LISTING /tmp/ccYvOZGU.s 			page 73


 2779 00a5 66448944 		movw	%r8w, 8(%rsp)
 2779      2408
 469:src/mcu_msg.c **** }
 2780              		.loc 1 469 0
 2781 00ab 488B0424 		movq	(%rsp), %rax
 2782              	.LVL329:
 2783 00af 488B5424 		movq	8(%rsp), %rdx
 2783      08
 2784              	.LVL330:
 2785              	.L246:
 470:src/mcu_msg.c **** 
 2786              		.loc 1 470 0
 2787 00b4 488B7424 		movq	24(%rsp), %rsi
 2787      18
 2788 00b9 64483334 		xorq	%fs:40, %rsi
 2788      25280000 
 2788      00
 2789 00c2 7505     		jne	.L255
 2790 00c4 4883C428 		addq	$40, %rsp
 2791              	.LCFI101:
 2792              		.cfi_remember_state
 2793              		.cfi_def_cfa_offset 8
 2794 00c8 C3       		ret
 2795              	.L255:
 2796              	.LCFI102:
 2797              		.cfi_restore_state
 2798 00c9 E8000000 		call	__stack_chk_fail@PLT
 2798      00
 2799              	.LVL331:
 2800              		.cfi_endproc
 2801              	.LFE43:
 2803              		.section	.text.mmsg_string_hnd_create,"ax",@progbits
 2804              		.globl	mmsg_string_hnd_create
 2806              	mmsg_string_hnd_create:
 2807              	.LFB49:
 566:src/mcu_msg.c ****     mmsg_string_hnd_t hnd;
 2808              		.loc 1 566 0
 2809              		.cfi_startproc
 2810              	.LVL332:
 2811 0000 4889F8   		movq	%rdi, %rax
 568:src/mcu_msg.c ****     hnd.copy_to_chr_arr = mmsg_str_copy_to_chr_arr;
 2812              		.loc 1 568 0
 2813 0003 48893500 		movq	%rsi, mmsg_putc(%rip)
 2813      000000
 569:src/mcu_msg.c ****     hnd.copy = mmsg_str_copy;
 2814              		.loc 1 569 0
 2815 000a 488D1500 		leaq	mmsg_str_copy_to_chr_arr(%rip), %rdx
 2815      000000
 2816 0011 48895424 		movq	%rdx, -32(%rsp)
 2816      E0
 570:src/mcu_msg.c ****     hnd.print = mmsg_print_str;
 2817              		.loc 1 570 0
 2818 0016 488D0D00 		leaq	mmsg_str_copy(%rip), %rcx
 2818      000000
 2819 001d 48894C24 		movq	%rcx, -24(%rsp)
 2819      E8
 571:src/mcu_msg.c ****     return hnd;
GAS LISTING /tmp/ccYvOZGU.s 			page 74


 2820              		.loc 1 571 0
 2821 0022 488D3D00 		leaq	mmsg_print_str(%rip), %rdi
 2821      000000
 2822              	.LVL333:
 2823 0029 48897C24 		movq	%rdi, -16(%rsp)
 2823      F0
 572:src/mcu_msg.c **** }
 2824              		.loc 1 572 0
 2825 002e 488B7424 		movq	-40(%rsp), %rsi
 2825      D8
 2826              	.LVL334:
 2827 0033 488B7C24 		movq	-32(%rsp), %rdi
 2827      E0
 2828 0038 488930   		movq	%rsi, (%rax)
 2829 003b 48897808 		movq	%rdi, 8(%rax)
 2830 003f 488B7424 		movq	-24(%rsp), %rsi
 2830      E8
 2831 0044 488B7C24 		movq	-16(%rsp), %rdi
 2831      F0
 2832 0049 48897010 		movq	%rsi, 16(%rax)
 2833 004d 48897818 		movq	%rdi, 24(%rax)
 573:src/mcu_msg.c **** 
 2834              		.loc 1 573 0
 2835 0051 C3       		ret
 2836              		.cfi_endproc
 2837              	.LFE49:
 2839              		.section	.text.mmsg_wrapper_hnd_create,"ax",@progbits
 2840              		.globl	mmsg_wrapper_hnd_create
 2842              	mmsg_wrapper_hnd_create:
 2843              	.LFB51:
 595:src/mcu_msg.c ****     mmsg_wrap_hnd_t hnd;
 2844              		.loc 1 595 0
 2845              		.cfi_startproc
 2846              	.LVL335:
 2847 0000 4889F8   		movq	%rdi, %rax
 597:src/mcu_msg.c ****     hnd.print = mmsg_wrapper_print_msg;
 2848              		.loc 1 597 0
 2849 0003 48893500 		movq	%rsi, mmsg_putc(%rip)
 2849      000000
 598:src/mcu_msg.c ****     hnd.print_to_buff = mmsg_wrapper_print_msg_to_buff;
 2850              		.loc 1 598 0
 2851 000a 488D1500 		leaq	mmsg_wrapper_print_msg(%rip), %rdx
 2851      000000
 2852 0011 48895424 		movq	%rdx, -40(%rsp)
 2852      D8
 599:src/mcu_msg.c ****     hnd.print_obj = mmsg_wrapper_print_obj;
 2853              		.loc 1 599 0
 2854 0016 488D0D00 		leaq	mmsg_wrapper_print_msg_to_buff(%rip), %rcx
 2854      000000
 2855 001d 48894C24 		movq	%rcx, -16(%rsp)
 2855      F0
 600:src/mcu_msg.c ****     hnd.print_cmd = mmsg_wrapper_print_cmd;
 2856              		.loc 1 600 0
 2857 0022 488D3D00 		leaq	mmsg_wrapper_print_obj(%rip), %rdi
 2857      000000
 2858              	.LVL336:
 2859 0029 48897C24 		movq	%rdi, -32(%rsp)
GAS LISTING /tmp/ccYvOZGU.s 			page 75


 2859      E0
 601:src/mcu_msg.c ****     return hnd;
 2860              		.loc 1 601 0
 2861 002e 488D1500 		leaq	mmsg_wrapper_print_cmd(%rip), %rdx
 2861      000000
 2862 0035 48895424 		movq	%rdx, -24(%rsp)
 2862      E8
 602:src/mcu_msg.c **** }
 2863              		.loc 1 602 0
 2864 003a 488B7424 		movq	-40(%rsp), %rsi
 2864      D8
 2865              	.LVL337:
 2866 003f 488B7C24 		movq	-32(%rsp), %rdi
 2866      E0
 2867 0044 488930   		movq	%rsi, (%rax)
 2868 0047 48897808 		movq	%rdi, 8(%rax)
 2869 004b 488B7424 		movq	-24(%rsp), %rsi
 2869      E8
 2870 0050 488B7C24 		movq	-16(%rsp), %rdi
 2870      F0
 2871 0055 48897010 		movq	%rsi, 16(%rax)
 2872 0059 48897818 		movq	%rdi, 24(%rax)
 603:src/mcu_msg.c **** 
 2873              		.loc 1 603 0
 2874 005d C3       		ret
 2875              		.cfi_endproc
 2876              	.LFE51:
 2878              		.section	.text.mmsg_wrap_destroy,"ax",@progbits
 2879              		.globl	mmsg_wrap_destroy
 2881              	mmsg_wrap_destroy:
 2882              	.LFB56:
 685:src/mcu_msg.c **** 
 686:src/mcu_msg.c **** void mmsg_wrap_destroy(mmsg_wrap_t *msg)
 687:src/mcu_msg.c **** {
 2883              		.loc 1 687 0
 2884              		.cfi_startproc
 2885              	.LVL338:
 2886 0000 53       		pushq	%rbx
 2887              	.LCFI103:
 2888              		.cfi_def_cfa_offset 16
 2889              		.cfi_offset 3, -16
 2890 0001 4889FB   		movq	%rdi, %rbx
 688:src/mcu_msg.c ****     mmsg_destroy_string(&msg->id);
 2891              		.loc 1 688 0
 2892 0004 E8000000 		call	mmsg_destroy_string
 2892      00
 2893              	.LVL339:
 689:src/mcu_msg.c ****     msg->cmd_queue=NULL;
 2894              		.loc 1 689 0
 2895 0009 48C74318 		movq	$0, 24(%rbx)
 2895      00000000 
 690:src/mcu_msg.c ****     msg->obj_queue=NULL;
 2896              		.loc 1 690 0
 2897 0011 48C74310 		movq	$0, 16(%rbx)
 2897      00000000 
 691:src/mcu_msg.c **** }
 2898              		.loc 1 691 0
GAS LISTING /tmp/ccYvOZGU.s 			page 76


 2899 0019 5B       		popq	%rbx
 2900              	.LCFI104:
 2901              		.cfi_def_cfa_offset 8
 2902              	.LVL340:
 2903 001a C3       		ret
 2904              		.cfi_endproc
 2905              	.LFE56:
 2907              		.section	.text.mmsg_wrap_destroy_obj,"ax",@progbits
 2908              		.globl	mmsg_wrap_destroy_obj
 2910              	mmsg_wrap_destroy_obj:
 2911              	.LFB57:
 692:src/mcu_msg.c **** 
 693:src/mcu_msg.c **** void mmsg_wrap_destroy_obj(mmsg_obj_wrap_t *obj)
 694:src/mcu_msg.c **** {
 2912              		.loc 1 694 0
 2913              		.cfi_startproc
 2914              	.LVL341:
 2915 0000 53       		pushq	%rbx
 2916              	.LCFI105:
 2917              		.cfi_def_cfa_offset 16
 2918              		.cfi_offset 3, -16
 2919 0001 4889FB   		movq	%rdi, %rbx
 695:src/mcu_msg.c ****     mmsg_destroy_string(&obj->id);
 2920              		.loc 1 695 0
 2921 0004 E8000000 		call	mmsg_destroy_string
 2921      00
 2922              	.LVL342:
 696:src/mcu_msg.c ****     obj->int_queue = NULL;
 2923              		.loc 1 696 0
 2924 0009 48C74310 		movq	$0, 16(%rbx)
 2924      00000000 
 697:src/mcu_msg.c ****     obj->float_queue = NULL;
 2925              		.loc 1 697 0
 2926 0011 48C74318 		movq	$0, 24(%rbx)
 2926      00000000 
 698:src/mcu_msg.c ****     obj->string_queue = NULL;
 2927              		.loc 1 698 0
 2928 0019 48C74320 		movq	$0, 32(%rbx)
 2928      00000000 
 699:src/mcu_msg.c ****     obj->next = NULL;
 2929              		.loc 1 699 0
 2930 0021 48C74328 		movq	$0, 40(%rbx)
 2930      00000000 
 700:src/mcu_msg.c **** }
 2931              		.loc 1 700 0
 2932 0029 5B       		popq	%rbx
 2933              	.LCFI106:
 2934              		.cfi_def_cfa_offset 8
 2935              	.LVL343:
 2936 002a C3       		ret
 2937              		.cfi_endproc
 2938              	.LFE57:
 2940              		.section	.text.mmsg_wrap_destroy_str,"ax",@progbits
 2941              		.globl	mmsg_wrap_destroy_str
 2943              	mmsg_wrap_destroy_str:
 2944              	.LFB58:
 701:src/mcu_msg.c **** 
GAS LISTING /tmp/ccYvOZGU.s 			page 77


 702:src/mcu_msg.c **** void mmsg_wrap_destroy_str(mmsg_string_wrap_t *str)
 703:src/mcu_msg.c **** {
 2945              		.loc 1 703 0
 2946              		.cfi_startproc
 2947              	.LVL344:
 2948 0000 53       		pushq	%rbx
 2949              	.LCFI107:
 2950              		.cfi_def_cfa_offset 16
 2951              		.cfi_offset 3, -16
 2952 0001 4889FB   		movq	%rdi, %rbx
 704:src/mcu_msg.c ****     mmsg_destroy_string(&str->id);
 2953              		.loc 1 704 0
 2954 0004 E8000000 		call	mmsg_destroy_string
 2954      00
 2955              	.LVL345:
 705:src/mcu_msg.c ****     mmsg_destroy_string(&str->content);
 2956              		.loc 1 705 0
 2957 0009 488D7B10 		leaq	16(%rbx), %rdi
 2958 000d E8000000 		call	mmsg_destroy_string
 2958      00
 2959              	.LVL346:
 706:src/mcu_msg.c ****     str->next = NULL;
 2960              		.loc 1 706 0
 2961 0012 48C74320 		movq	$0, 32(%rbx)
 2961      00000000 
 707:src/mcu_msg.c **** }
 2962              		.loc 1 707 0
 2963 001a 5B       		popq	%rbx
 2964              	.LCFI108:
 2965              		.cfi_def_cfa_offset 8
 2966              	.LVL347:
 2967 001b C3       		ret
 2968              		.cfi_endproc
 2969              	.LFE58:
 2971              		.section	.text.mmsg_wrap_destroy_int,"ax",@progbits
 2972              		.globl	mmsg_wrap_destroy_int
 2974              	mmsg_wrap_destroy_int:
 2975              	.LFB59:
 708:src/mcu_msg.c **** 
 709:src/mcu_msg.c **** void mmsg_wrap_destroy_int(mmsg_int_wrap_t *i)
 710:src/mcu_msg.c **** {
 2976              		.loc 1 710 0
 2977              		.cfi_startproc
 2978              	.LVL348:
 2979 0000 53       		pushq	%rbx
 2980              	.LCFI109:
 2981              		.cfi_def_cfa_offset 16
 2982              		.cfi_offset 3, -16
 2983 0001 4889FB   		movq	%rdi, %rbx
 711:src/mcu_msg.c ****     mmsg_destroy_string(&i->id);
 2984              		.loc 1 711 0
 2985 0004 E8000000 		call	mmsg_destroy_string
 2985      00
 2986              	.LVL349:
 712:src/mcu_msg.c ****     i->val = 0;
 2987              		.loc 1 712 0
 2988 0009 C7431000 		movl	$0, 16(%rbx)
GAS LISTING /tmp/ccYvOZGU.s 			page 78


 2988      000000
 713:src/mcu_msg.c ****     i->next = NULL;
 2989              		.loc 1 713 0
 2990 0010 48C74318 		movq	$0, 24(%rbx)
 2990      00000000 
 714:src/mcu_msg.c **** }
 2991              		.loc 1 714 0
 2992 0018 5B       		popq	%rbx
 2993              	.LCFI110:
 2994              		.cfi_def_cfa_offset 8
 2995              	.LVL350:
 2996 0019 C3       		ret
 2997              		.cfi_endproc
 2998              	.LFE59:
 3000              		.section	.text.mmsg_wrap_destroy_float,"ax",@progbits
 3001              		.globl	mmsg_wrap_destroy_float
 3003              	mmsg_wrap_destroy_float:
 3004              	.LFB60:
 715:src/mcu_msg.c **** 
 716:src/mcu_msg.c **** void mmsg_wrap_destroy_float(mmsg_float_wrap_t *f)
 717:src/mcu_msg.c **** {
 3005              		.loc 1 717 0
 3006              		.cfi_startproc
 3007              	.LVL351:
 3008 0000 53       		pushq	%rbx
 3009              	.LCFI111:
 3010              		.cfi_def_cfa_offset 16
 3011              		.cfi_offset 3, -16
 3012 0001 4889FB   		movq	%rdi, %rbx
 718:src/mcu_msg.c ****     mmsg_destroy_string(&f->id);
 3013              		.loc 1 718 0
 3014 0004 E8000000 		call	mmsg_destroy_string
 3014      00
 3015              	.LVL352:
 719:src/mcu_msg.c ****     f->val = 0.0;
 3016              		.loc 1 719 0
 3017 0009 C7431000 		movl	$0x00000000, 16(%rbx)
 3017      000000
 720:src/mcu_msg.c ****     f->next = NULL;
 3018              		.loc 1 720 0
 3019 0010 48C74318 		movq	$0, 24(%rbx)
 3019      00000000 
 721:src/mcu_msg.c ****     f->prec = 0;
 3020              		.loc 1 721 0
 3021 0018 C6431400 		movb	$0, 20(%rbx)
 722:src/mcu_msg.c **** }
 3022              		.loc 1 722 0
 3023 001c 5B       		popq	%rbx
 3024              	.LCFI112:
 3025              		.cfi_def_cfa_offset 8
 3026              	.LVL353:
 3027 001d C3       		ret
 3028              		.cfi_endproc
 3029              	.LFE60:
 3031              		.section	.text.mmsg_wrapper_init_msg,"ax",@progbits
 3032              		.globl	mmsg_wrapper_init_msg
 3034              	mmsg_wrapper_init_msg:
GAS LISTING /tmp/ccYvOZGU.s 			page 79


 3035              	.LFB61:
 723:src/mcu_msg.c **** 
 724:src/mcu_msg.c **** 
 725:src/mcu_msg.c **** 
 726:src/mcu_msg.c **** mmsg_wrap_t mmsg_wrapper_init_msg(char *msg_id)
 727:src/mcu_msg.c **** {
 3036              		.loc 1 727 0
 3037              		.cfi_startproc
 3038              	.LVL354:
 3039 0000 53       		pushq	%rbx
 3040              	.LCFI113:
 3041              		.cfi_def_cfa_offset 16
 3042              		.cfi_offset 3, -16
 3043 0001 4883EC20 		subq	$32, %rsp
 3044              	.LCFI114:
 3045              		.cfi_def_cfa_offset 48
 3046 0005 4889FB   		movq	%rdi, %rbx
 728:src/mcu_msg.c ****     mmsg_wrap_t res;
 729:src/mcu_msg.c ****     res.id = mmsg_init_string(msg_id);
 3047              		.loc 1 729 0
 3048 0008 4889F7   		movq	%rsi, %rdi
 3049              	.LVL355:
 3050 000b E8000000 		call	mmsg_init_string
 3050      00
 3051              	.LVL356:
 730:src/mcu_msg.c ****     res.cmd_queue = NULL;
 3052              		.loc 1 730 0
 3053 0010 48C74424 		movq	$0, 24(%rsp)
 3053      18000000 
 3053      00
 731:src/mcu_msg.c ****     res.obj_queue = NULL;
 3054              		.loc 1 731 0
 3055 0019 48C74424 		movq	$0, 16(%rsp)
 3055      10000000 
 3055      00
 732:src/mcu_msg.c ****     return res;
 3056              		.loc 1 732 0
 3057 0022 488903   		movq	%rax, (%rbx)
 3058 0025 48895308 		movq	%rdx, 8(%rbx)
 3059 0029 488B4424 		movq	16(%rsp), %rax
 3059      10
 3060 002e 488B5424 		movq	24(%rsp), %rdx
 3060      18
 3061 0033 48894310 		movq	%rax, 16(%rbx)
 3062 0037 48895318 		movq	%rdx, 24(%rbx)
 733:src/mcu_msg.c **** }
 3063              		.loc 1 733 0
 3064 003b 4889D8   		movq	%rbx, %rax
 3065 003e 4883C420 		addq	$32, %rsp
 3066              	.LCFI115:
 3067              		.cfi_def_cfa_offset 16
 3068 0042 5B       		popq	%rbx
 3069              	.LCFI116:
 3070              		.cfi_def_cfa_offset 8
 3071              	.LVL357:
 3072 0043 C3       		ret
 3073              		.cfi_endproc
GAS LISTING /tmp/ccYvOZGU.s 			page 80


 3074              	.LFE61:
 3076              		.section	.text.mmsg_wrapper_init_cmd,"ax",@progbits
 3077              		.globl	mmsg_wrapper_init_cmd
 3079              	mmsg_wrapper_init_cmd:
 3080              	.LFB62:
 734:src/mcu_msg.c **** 
 735:src/mcu_msg.c **** 
 736:src/mcu_msg.c **** mmsg_cmd_wrap_t mmsg_wrapper_init_cmd(char *cmd)
 737:src/mcu_msg.c **** {
 3081              		.loc 1 737 0
 3082              		.cfi_startproc
 3083              	.LVL358:
 3084 0000 53       		pushq	%rbx
 3085              	.LCFI117:
 3086              		.cfi_def_cfa_offset 16
 3087              		.cfi_offset 3, -16
 3088 0001 4883EC20 		subq	$32, %rsp
 3089              	.LCFI118:
 3090              		.cfi_def_cfa_offset 48
 3091 0005 4889FB   		movq	%rdi, %rbx
 738:src/mcu_msg.c ****     mmsg_cmd_wrap_t res;
 739:src/mcu_msg.c ****     res.cmd = mmsg_init_string(cmd);
 3092              		.loc 1 739 0
 3093 0008 4889F7   		movq	%rsi, %rdi
 3094              	.LVL359:
 3095 000b E8000000 		call	mmsg_init_string
 3095      00
 3096              	.LVL360:
 740:src/mcu_msg.c ****     res.next = NULL;
 741:src/mcu_msg.c ****     return res;
 3097              		.loc 1 741 0
 3098 0010 488903   		movq	%rax, (%rbx)
 3099 0013 48895308 		movq	%rdx, 8(%rbx)
 3100 0017 48C74310 		movq	$0, 16(%rbx)
 3100      00000000 
 742:src/mcu_msg.c **** }
 3101              		.loc 1 742 0
 3102 001f 4889D8   		movq	%rbx, %rax
 3103 0022 4883C420 		addq	$32, %rsp
 3104              	.LCFI119:
 3105              		.cfi_def_cfa_offset 16
 3106 0026 5B       		popq	%rbx
 3107              	.LCFI120:
 3108              		.cfi_def_cfa_offset 8
 3109              	.LVL361:
 3110 0027 C3       		ret
 3111              		.cfi_endproc
 3112              	.LFE62:
 3114              		.section	.text.mmsg_wrapper_init_obj,"ax",@progbits
 3115              		.globl	mmsg_wrapper_init_obj
 3117              	mmsg_wrapper_init_obj:
 3118              	.LFB63:
 743:src/mcu_msg.c **** 
 744:src/mcu_msg.c **** mmsg_obj_wrap_t mmsg_wrapper_init_obj(char *obj_id)
 745:src/mcu_msg.c **** {
 3119              		.loc 1 745 0
 3120              		.cfi_startproc
GAS LISTING /tmp/ccYvOZGU.s 			page 81


 3121              	.LVL362:
 3122 0000 53       		pushq	%rbx
 3123              	.LCFI121:
 3124              		.cfi_def_cfa_offset 16
 3125              		.cfi_offset 3, -16
 3126 0001 4883EC30 		subq	$48, %rsp
 3127              	.LCFI122:
 3128              		.cfi_def_cfa_offset 64
 3129 0005 4889FB   		movq	%rdi, %rbx
 746:src/mcu_msg.c ****     mmsg_obj_wrap_t res;
 747:src/mcu_msg.c ****     res.id = mmsg_init_string(obj_id);
 3130              		.loc 1 747 0
 3131 0008 4889F7   		movq	%rsi, %rdi
 3132              	.LVL363:
 3133 000b E8000000 		call	mmsg_init_string
 3133      00
 3134              	.LVL364:
 748:src/mcu_msg.c ****     res.int_queue = NULL;
 3135              		.loc 1 748 0
 3136 0010 48C74424 		movq	$0, 16(%rsp)
 3136      10000000 
 3136      00
 749:src/mcu_msg.c ****     res.float_queue = NULL;
 3137              		.loc 1 749 0
 3138 0019 48C74424 		movq	$0, 24(%rsp)
 3138      18000000 
 3138      00
 750:src/mcu_msg.c ****     res.string_queue = NULL;
 3139              		.loc 1 750 0
 3140 0022 48C74424 		movq	$0, 32(%rsp)
 3140      20000000 
 3140      00
 751:src/mcu_msg.c ****     res.next = NULL;
 3141              		.loc 1 751 0
 3142 002b 48C74424 		movq	$0, 40(%rsp)
 3142      28000000 
 3142      00
 752:src/mcu_msg.c ****     return res;
 3143              		.loc 1 752 0
 3144 0034 488903   		movq	%rax, (%rbx)
 3145 0037 48895308 		movq	%rdx, 8(%rbx)
 3146 003b 488B4424 		movq	16(%rsp), %rax
 3146      10
 3147 0040 488B5424 		movq	24(%rsp), %rdx
 3147      18
 3148 0045 48894310 		movq	%rax, 16(%rbx)
 3149 0049 48895318 		movq	%rdx, 24(%rbx)
 3150 004d 488B4424 		movq	32(%rsp), %rax
 3150      20
 3151 0052 488B5424 		movq	40(%rsp), %rdx
 3151      28
 3152 0057 48894320 		movq	%rax, 32(%rbx)
 3153 005b 48895328 		movq	%rdx, 40(%rbx)
 753:src/mcu_msg.c **** }
 3154              		.loc 1 753 0
 3155 005f 4889D8   		movq	%rbx, %rax
 3156 0062 4883C430 		addq	$48, %rsp
GAS LISTING /tmp/ccYvOZGU.s 			page 82


 3157              	.LCFI123:
 3158              		.cfi_def_cfa_offset 16
 3159 0066 5B       		popq	%rbx
 3160              	.LCFI124:
 3161              		.cfi_def_cfa_offset 8
 3162              	.LVL365:
 3163 0067 C3       		ret
 3164              		.cfi_endproc
 3165              	.LFE63:
 3167              		.section	.text.mmsg_wrapper_init_string,"ax",@progbits
 3168              		.globl	mmsg_wrapper_init_string
 3170              	mmsg_wrapper_init_string:
 3171              	.LFB64:
 754:src/mcu_msg.c **** 
 755:src/mcu_msg.c **** mmsg_string_wrap_t mmsg_wrapper_init_string(char *id, char *content)
 756:src/mcu_msg.c **** {
 3172              		.loc 1 756 0
 3173              		.cfi_startproc
 3174              	.LVL366:
 3175 0000 4156     		pushq	%r14
 3176              	.LCFI125:
 3177              		.cfi_def_cfa_offset 16
 3178              		.cfi_offset 14, -16
 3179 0002 4155     		pushq	%r13
 3180              	.LCFI126:
 3181              		.cfi_def_cfa_offset 24
 3182              		.cfi_offset 13, -24
 3183 0004 55       		pushq	%rbp
 3184              	.LCFI127:
 3185              		.cfi_def_cfa_offset 32
 3186              		.cfi_offset 6, -32
 3187 0005 53       		pushq	%rbx
 3188              	.LCFI128:
 3189              		.cfi_def_cfa_offset 40
 3190              		.cfi_offset 3, -40
 3191 0006 4883EC38 		subq	$56, %rsp
 3192              	.LCFI129:
 3193              		.cfi_def_cfa_offset 96
 3194 000a 4889FB   		movq	%rdi, %rbx
 3195 000d 4889D5   		movq	%rdx, %rbp
 757:src/mcu_msg.c ****     mmsg_string_wrap_t res;
 758:src/mcu_msg.c ****     res.id = mmsg_init_string(id);
 3196              		.loc 1 758 0
 3197 0010 4889F7   		movq	%rsi, %rdi
 3198              	.LVL367:
 3199 0013 E8000000 		call	mmsg_init_string
 3199      00
 3200              	.LVL368:
 3201 0018 4989C5   		movq	%rax, %r13
 3202 001b 4989D6   		movq	%rdx, %r14
 759:src/mcu_msg.c ****     res.content = mmsg_init_string(content);
 3203              		.loc 1 759 0
 3204 001e 4889EF   		movq	%rbp, %rdi
 3205 0021 E8000000 		call	mmsg_init_string
 3205      00
 3206              	.LVL369:
 760:src/mcu_msg.c ****     res.next = NULL;
GAS LISTING /tmp/ccYvOZGU.s 			page 83


 761:src/mcu_msg.c ****     return res;
 3207              		.loc 1 761 0
 3208 0026 4C892B   		movq	%r13, (%rbx)
 3209 0029 4C897308 		movq	%r14, 8(%rbx)
 3210 002d 48894310 		movq	%rax, 16(%rbx)
 3211 0031 48895318 		movq	%rdx, 24(%rbx)
 3212 0035 48C74320 		movq	$0, 32(%rbx)
 3212      00000000 
 762:src/mcu_msg.c **** }
 3213              		.loc 1 762 0
 3214 003d 4889D8   		movq	%rbx, %rax
 3215 0040 4883C438 		addq	$56, %rsp
 3216              	.LCFI130:
 3217              		.cfi_def_cfa_offset 40
 3218 0044 5B       		popq	%rbx
 3219              	.LCFI131:
 3220              		.cfi_def_cfa_offset 32
 3221              	.LVL370:
 3222 0045 5D       		popq	%rbp
 3223              	.LCFI132:
 3224              		.cfi_def_cfa_offset 24
 3225              	.LVL371:
 3226 0046 415D     		popq	%r13
 3227              	.LCFI133:
 3228              		.cfi_def_cfa_offset 16
 3229 0048 415E     		popq	%r14
 3230              	.LCFI134:
 3231              		.cfi_def_cfa_offset 8
 3232 004a C3       		ret
 3233              		.cfi_endproc
 3234              	.LFE64:
 3236              		.section	.text.mmsg_wrapper_init_int,"ax",@progbits
 3237              		.globl	mmsg_wrapper_init_int
 3239              	mmsg_wrapper_init_int:
 3240              	.LFB65:
 763:src/mcu_msg.c **** 
 764:src/mcu_msg.c **** mmsg_int_wrap_t mmsg_wrapper_init_int(char *id, int val)
 765:src/mcu_msg.c **** {
 3241              		.loc 1 765 0
 3242              		.cfi_startproc
 3243              	.LVL372:
 3244 0000 55       		pushq	%rbp
 3245              	.LCFI135:
 3246              		.cfi_def_cfa_offset 16
 3247              		.cfi_offset 6, -16
 3248 0001 53       		pushq	%rbx
 3249              	.LCFI136:
 3250              		.cfi_def_cfa_offset 24
 3251              		.cfi_offset 3, -24
 3252 0002 4883EC28 		subq	$40, %rsp
 3253              	.LCFI137:
 3254              		.cfi_def_cfa_offset 64
 3255 0006 4889FB   		movq	%rdi, %rbx
 3256 0009 89D5     		movl	%edx, %ebp
 766:src/mcu_msg.c ****     mmsg_int_wrap_t res;
 767:src/mcu_msg.c ****     res.id = mmsg_init_string(id);
 3257              		.loc 1 767 0
GAS LISTING /tmp/ccYvOZGU.s 			page 84


 3258 000b 4889F7   		movq	%rsi, %rdi
 3259              	.LVL373:
 3260 000e E8000000 		call	mmsg_init_string
 3260      00
 3261              	.LVL374:
 768:src/mcu_msg.c ****     res.val = val;
 3262              		.loc 1 768 0
 3263 0013 896C2410 		movl	%ebp, 16(%rsp)
 769:src/mcu_msg.c ****     res.next = NULL;
 3264              		.loc 1 769 0
 3265 0017 48C74424 		movq	$0, 24(%rsp)
 3265      18000000 
 3265      00
 770:src/mcu_msg.c ****     return res;
 3266              		.loc 1 770 0
 3267 0020 488903   		movq	%rax, (%rbx)
 3268 0023 48895308 		movq	%rdx, 8(%rbx)
 3269 0027 488B4424 		movq	16(%rsp), %rax
 3269      10
 3270 002c 488B5424 		movq	24(%rsp), %rdx
 3270      18
 3271 0031 48894310 		movq	%rax, 16(%rbx)
 3272 0035 48895318 		movq	%rdx, 24(%rbx)
 771:src/mcu_msg.c **** }
 3273              		.loc 1 771 0
 3274 0039 4889D8   		movq	%rbx, %rax
 3275 003c 4883C428 		addq	$40, %rsp
 3276              	.LCFI138:
 3277              		.cfi_def_cfa_offset 24
 3278 0040 5B       		popq	%rbx
 3279              	.LCFI139:
 3280              		.cfi_def_cfa_offset 16
 3281              	.LVL375:
 3282 0041 5D       		popq	%rbp
 3283              	.LCFI140:
 3284              		.cfi_def_cfa_offset 8
 3285              	.LVL376:
 3286 0042 C3       		ret
 3287              		.cfi_endproc
 3288              	.LFE65:
 3290              		.section	.text.mmsg_wrapper_init_float,"ax",@progbits
 3291              		.globl	mmsg_wrapper_init_float
 3293              	mmsg_wrapper_init_float:
 3294              	.LFB66:
 772:src/mcu_msg.c **** 
 773:src/mcu_msg.c **** mmsg_float_wrap_t mmsg_wrapper_init_float(char *id, float val, uint8_t prec)
 774:src/mcu_msg.c **** {
 3295              		.loc 1 774 0
 3296              		.cfi_startproc
 3297              	.LVL377:
 3298 0000 4154     		pushq	%r12
 3299              	.LCFI141:
 3300              		.cfi_def_cfa_offset 16
 3301              		.cfi_offset 12, -16
 3302 0002 55       		pushq	%rbp
 3303              	.LCFI142:
 3304              		.cfi_def_cfa_offset 24
GAS LISTING /tmp/ccYvOZGU.s 			page 85


 3305              		.cfi_offset 6, -24
 3306 0003 53       		pushq	%rbx
 3307              	.LCFI143:
 3308              		.cfi_def_cfa_offset 32
 3309              		.cfi_offset 3, -32
 3310 0004 4883EC20 		subq	$32, %rsp
 3311              	.LCFI144:
 3312              		.cfi_def_cfa_offset 64
 3313 0008 4889FB   		movq	%rdi, %rbx
 3314 000b 66410F7E 		movd	%xmm0, %r12d
 3314      C4
 3315 0010 89D5     		movl	%edx, %ebp
 775:src/mcu_msg.c ****     mmsg_float_wrap_t res;
 776:src/mcu_msg.c ****     res.id = mmsg_init_string(id);
 3316              		.loc 1 776 0
 3317 0012 4889F7   		movq	%rsi, %rdi
 3318              	.LVL378:
 3319 0015 E8000000 		call	mmsg_init_string
 3319      00
 3320              	.LVL379:
 777:src/mcu_msg.c ****     res.val = val;
 3321              		.loc 1 777 0
 3322 001a 44896424 		movl	%r12d, 16(%rsp)
 3322      10
 778:src/mcu_msg.c ****     res.prec = prec;
 3323              		.loc 1 778 0
 3324 001f 40886C24 		movb	%bpl, 20(%rsp)
 3324      14
 779:src/mcu_msg.c ****     res.next = NULL;
 3325              		.loc 1 779 0
 3326 0024 48C74424 		movq	$0, 24(%rsp)
 3326      18000000 
 3326      00
 780:src/mcu_msg.c ****     return res;
 3327              		.loc 1 780 0
 3328 002d 488903   		movq	%rax, (%rbx)
 3329 0030 48895308 		movq	%rdx, 8(%rbx)
 3330 0034 488B4424 		movq	16(%rsp), %rax
 3330      10
 3331 0039 488B5424 		movq	24(%rsp), %rdx
 3331      18
 3332 003e 48894310 		movq	%rax, 16(%rbx)
 3333 0042 48895318 		movq	%rdx, 24(%rbx)
 781:src/mcu_msg.c **** }
 3334              		.loc 1 781 0
 3335 0046 4889D8   		movq	%rbx, %rax
 3336 0049 4883C420 		addq	$32, %rsp
 3337              	.LCFI145:
 3338              		.cfi_def_cfa_offset 32
 3339 004d 5B       		popq	%rbx
 3340              	.LCFI146:
 3341              		.cfi_def_cfa_offset 24
 3342              	.LVL380:
 3343 004e 5D       		popq	%rbp
 3344              	.LCFI147:
 3345              		.cfi_def_cfa_offset 16
 3346 004f 415C     		popq	%r12
GAS LISTING /tmp/ccYvOZGU.s 			page 86


 3347              	.LCFI148:
 3348              		.cfi_def_cfa_offset 8
 3349              	.LVL381:
 3350 0051 C3       		ret
 3351              		.cfi_endproc
 3352              	.LFE66:
 3354              		.section	.text.mmsg_wrapper_add_string_to_obj,"ax",@progbits
 3355              		.globl	mmsg_wrapper_add_string_to_obj
 3357              	mmsg_wrapper_add_string_to_obj:
 3358              	.LFB67:
 782:src/mcu_msg.c **** 
 783:src/mcu_msg.c **** 
 784:src/mcu_msg.c **** void mmsg_wrapper_add_string_to_obj(mmsg_obj_wrap_t *obj, mmsg_string_wrap_t *str)
 785:src/mcu_msg.c **** {
 3359              		.loc 1 785 0
 3360              		.cfi_startproc
 3361              	.LVL382:
 786:src/mcu_msg.c ****     mmsg_string_wrap_t *strp;
 787:src/mcu_msg.c ****     if(obj->string_queue == NULL) { //first element
 3362              		.loc 1 787 0
 3363 0000 488B5720 		movq	32(%rdi), %rdx
 3364 0004 4885D2   		testq	%rdx, %rdx
 3365 0007 7510     		jne	.L281
 788:src/mcu_msg.c ****         obj->string_queue = str;
 3366              		.loc 1 788 0
 3367 0009 48897720 		movq	%rsi, 32(%rdi)
 789:src/mcu_msg.c ****         obj->string_queue->next = NULL;
 3368              		.loc 1 789 0
 3369 000d 48C74620 		movq	$0, 32(%rsi)
 3369      00000000 
 3370 0015 C3       		ret
 3371              	.LVL383:
 3372              	.L283:
 790:src/mcu_msg.c ****     } else {
 791:src/mcu_msg.c ****         strp = obj->string_queue;
 792:src/mcu_msg.c **** 
 793:src/mcu_msg.c ****         while(strp->next != NULL) 
 794:src/mcu_msg.c ****             strp = strp->next;
 3373              		.loc 1 794 0
 3374 0016 4889C2   		movq	%rax, %rdx
 3375              	.LVL384:
 3376              	.L281:
 793:src/mcu_msg.c ****             strp = strp->next;
 3377              		.loc 1 793 0
 3378 0019 488B4220 		movq	32(%rdx), %rax
 3379 001d 4885C0   		testq	%rax, %rax
 3380 0020 75F4     		jne	.L283
 795:src/mcu_msg.c ****         strp->next = str;
 3381              		.loc 1 795 0
 3382 0022 48897220 		movq	%rsi, 32(%rdx)
 796:src/mcu_msg.c ****         str->next = NULL;
 3383              		.loc 1 796 0
 3384 0026 48C74620 		movq	$0, 32(%rsi)
 3384      00000000 
 797:src/mcu_msg.c ****     }
 798:src/mcu_msg.c **** }
 3385              		.loc 1 798 0
GAS LISTING /tmp/ccYvOZGU.s 			page 87


 3386 002e C3       		ret
 3387              		.cfi_endproc
 3388              	.LFE67:
 3390              		.section	.text.mmsg_wrapper_add_int_to_obj,"ax",@progbits
 3391              		.globl	mmsg_wrapper_add_int_to_obj
 3393              	mmsg_wrapper_add_int_to_obj:
 3394              	.LFB68:
 799:src/mcu_msg.c **** 
 800:src/mcu_msg.c **** void mmsg_wrapper_add_int_to_obj(mmsg_obj_wrap_t *obj, mmsg_int_wrap_t *int_val)
 801:src/mcu_msg.c **** {
 3395              		.loc 1 801 0
 3396              		.cfi_startproc
 3397              	.LVL385:
 802:src/mcu_msg.c ****     mmsg_int_wrap_t *ip;
 803:src/mcu_msg.c ****     if(obj->int_queue == NULL) { //first element
 3398              		.loc 1 803 0
 3399 0000 488B5710 		movq	16(%rdi), %rdx
 3400 0004 4885D2   		testq	%rdx, %rdx
 3401 0007 7510     		jne	.L285
 804:src/mcu_msg.c ****         obj->int_queue = int_val;
 3402              		.loc 1 804 0
 3403 0009 48897710 		movq	%rsi, 16(%rdi)
 805:src/mcu_msg.c ****         obj->int_queue->next = NULL;
 3404              		.loc 1 805 0
 3405 000d 48C74618 		movq	$0, 24(%rsi)
 3405      00000000 
 3406 0015 C3       		ret
 3407              	.LVL386:
 3408              	.L287:
 806:src/mcu_msg.c ****     } else {
 807:src/mcu_msg.c ****         ip = obj->int_queue;
 808:src/mcu_msg.c **** 
 809:src/mcu_msg.c ****         while(ip->next != NULL) 
 810:src/mcu_msg.c ****             ip = ip->next;
 3409              		.loc 1 810 0
 3410 0016 4889C2   		movq	%rax, %rdx
 3411              	.LVL387:
 3412              	.L285:
 809:src/mcu_msg.c ****             ip = ip->next;
 3413              		.loc 1 809 0
 3414 0019 488B4218 		movq	24(%rdx), %rax
 3415 001d 4885C0   		testq	%rax, %rax
 3416 0020 75F4     		jne	.L287
 811:src/mcu_msg.c ****         ip->next = int_val;
 3417              		.loc 1 811 0
 3418 0022 48897218 		movq	%rsi, 24(%rdx)
 812:src/mcu_msg.c ****         int_val->next = NULL;
 3419              		.loc 1 812 0
 3420 0026 48C74618 		movq	$0, 24(%rsi)
 3420      00000000 
 813:src/mcu_msg.c ****     }
 814:src/mcu_msg.c **** }
 3421              		.loc 1 814 0
 3422 002e C3       		ret
 3423              		.cfi_endproc
 3424              	.LFE68:
 3426              		.section	.text.mmsg_wrapper_add_float_to_obj,"ax",@progbits
GAS LISTING /tmp/ccYvOZGU.s 			page 88


 3427              		.globl	mmsg_wrapper_add_float_to_obj
 3429              	mmsg_wrapper_add_float_to_obj:
 3430              	.LFB69:
 815:src/mcu_msg.c **** 
 816:src/mcu_msg.c **** 
 817:src/mcu_msg.c **** void mmsg_wrapper_add_float_to_obj(mmsg_obj_wrap_t *obj, mmsg_float_wrap_t *float_val)
 818:src/mcu_msg.c **** {
 3431              		.loc 1 818 0
 3432              		.cfi_startproc
 3433              	.LVL388:
 819:src/mcu_msg.c ****     mmsg_float_wrap_t *fp;
 820:src/mcu_msg.c ****     if(obj->float_queue == NULL) { //first element
 3434              		.loc 1 820 0
 3435 0000 488B5718 		movq	24(%rdi), %rdx
 3436 0004 4885D2   		testq	%rdx, %rdx
 3437 0007 7510     		jne	.L289
 821:src/mcu_msg.c ****         obj->float_queue = float_val;
 3438              		.loc 1 821 0
 3439 0009 48897718 		movq	%rsi, 24(%rdi)
 822:src/mcu_msg.c ****         obj->float_queue->next = NULL;
 3440              		.loc 1 822 0
 3441 000d 48C74618 		movq	$0, 24(%rsi)
 3441      00000000 
 3442 0015 C3       		ret
 3443              	.LVL389:
 3444              	.L291:
 823:src/mcu_msg.c ****     } else {
 824:src/mcu_msg.c ****         fp = obj->float_queue;
 825:src/mcu_msg.c **** 
 826:src/mcu_msg.c ****         while(fp->next != NULL) 
 827:src/mcu_msg.c ****             fp = fp->next;
 3445              		.loc 1 827 0
 3446 0016 4889C2   		movq	%rax, %rdx
 3447              	.LVL390:
 3448              	.L289:
 826:src/mcu_msg.c ****             fp = fp->next;
 3449              		.loc 1 826 0
 3450 0019 488B4218 		movq	24(%rdx), %rax
 3451 001d 4885C0   		testq	%rax, %rax
 3452 0020 75F4     		jne	.L291
 828:src/mcu_msg.c ****         fp->next = float_val;
 3453              		.loc 1 828 0
 3454 0022 48897218 		movq	%rsi, 24(%rdx)
 829:src/mcu_msg.c ****         float_val->next = NULL;
 3455              		.loc 1 829 0
 3456 0026 48C74618 		movq	$0, 24(%rsi)
 3456      00000000 
 830:src/mcu_msg.c ****     }
 831:src/mcu_msg.c **** }
 3457              		.loc 1 831 0
 3458 002e C3       		ret
 3459              		.cfi_endproc
 3460              	.LFE69:
 3462              		.section	.text.mmsg_wrapper_add_object_to_msg,"ax",@progbits
 3463              		.globl	mmsg_wrapper_add_object_to_msg
 3465              	mmsg_wrapper_add_object_to_msg:
 3466              	.LFB70:
GAS LISTING /tmp/ccYvOZGU.s 			page 89


 832:src/mcu_msg.c **** 
 833:src/mcu_msg.c **** void mmsg_wrapper_add_object_to_msg(mmsg_wrap_t *msg, mmsg_obj_wrap_t *obj)
 834:src/mcu_msg.c **** {
 3467              		.loc 1 834 0
 3468              		.cfi_startproc
 3469              	.LVL391:
 835:src/mcu_msg.c ****     mmsg_obj_wrap_t *op;
 836:src/mcu_msg.c ****     if(msg->obj_queue == NULL) { //if empty 
 3470              		.loc 1 836 0
 3471 0000 488B5710 		movq	16(%rdi), %rdx
 3472 0004 4885D2   		testq	%rdx, %rdx
 3473 0007 7510     		jne	.L293
 837:src/mcu_msg.c ****         msg->obj_queue = obj;
 3474              		.loc 1 837 0
 3475 0009 48897710 		movq	%rsi, 16(%rdi)
 838:src/mcu_msg.c ****         msg->obj_queue->next = NULL;
 3476              		.loc 1 838 0
 3477 000d 48C74628 		movq	$0, 40(%rsi)
 3477      00000000 
 3478 0015 C3       		ret
 3479              	.LVL392:
 3480              	.L295:
 839:src/mcu_msg.c ****     } else {
 840:src/mcu_msg.c ****         op = msg->obj_queue;
 841:src/mcu_msg.c ****         while(op->next != NULL)
 842:src/mcu_msg.c ****             op = op->next;
 3481              		.loc 1 842 0
 3482 0016 4889C2   		movq	%rax, %rdx
 3483              	.LVL393:
 3484              	.L293:
 841:src/mcu_msg.c ****             op = op->next;
 3485              		.loc 1 841 0
 3486 0019 488B4228 		movq	40(%rdx), %rax
 3487 001d 4885C0   		testq	%rax, %rax
 3488 0020 75F4     		jne	.L295
 843:src/mcu_msg.c ****         op->next = obj;
 3489              		.loc 1 843 0
 3490 0022 48897228 		movq	%rsi, 40(%rdx)
 844:src/mcu_msg.c ****         obj->next = NULL;
 3491              		.loc 1 844 0
 3492 0026 48C74628 		movq	$0, 40(%rsi)
 3492      00000000 
 845:src/mcu_msg.c ****     }
 846:src/mcu_msg.c **** }
 3493              		.loc 1 846 0
 3494 002e C3       		ret
 3495              		.cfi_endproc
 3496              	.LFE70:
 3498              		.section	.text.mmsg_wrapper_add_cmd_to_msg,"ax",@progbits
 3499              		.globl	mmsg_wrapper_add_cmd_to_msg
 3501              	mmsg_wrapper_add_cmd_to_msg:
 3502              	.LFB71:
 847:src/mcu_msg.c **** 
 848:src/mcu_msg.c **** void mmsg_wrapper_add_cmd_to_msg(mmsg_wrap_t *msg, mmsg_cmd_wrap_t *cmd)
 849:src/mcu_msg.c **** {
 3503              		.loc 1 849 0
 3504              		.cfi_startproc
GAS LISTING /tmp/ccYvOZGU.s 			page 90


 3505              	.LVL394:
 850:src/mcu_msg.c ****     mmsg_cmd_wrap_t *cp;
 851:src/mcu_msg.c ****     if(msg->cmd_queue == NULL) { //if empty 
 3506              		.loc 1 851 0
 3507 0000 48837F18 		cmpq	$0, 24(%rdi)
 3507      00
 3508 0005 7406     		je	.L301
 852:src/mcu_msg.c ****         msg->cmd_queue = cmd;
 853:src/mcu_msg.c ****         msg->cmd_queue->next = NULL;
 854:src/mcu_msg.c ****     } else {
 855:src/mcu_msg.c ****         cp = msg->obj_queue;
 3509              		.loc 1 855 0
 3510 0007 488B5710 		movq	16(%rdi), %rdx
 3511              	.LVL395:
 856:src/mcu_msg.c ****         while(cp->next != NULL)
 3512              		.loc 1 856 0
 3513 000b EB10     		jmp	.L299
 3514              	.LVL396:
 3515              	.L301:
 852:src/mcu_msg.c ****         msg->cmd_queue = cmd;
 3516              		.loc 1 852 0
 3517 000d 48897718 		movq	%rsi, 24(%rdi)
 853:src/mcu_msg.c ****     } else {
 3518              		.loc 1 853 0
 3519 0011 48C74610 		movq	$0, 16(%rsi)
 3519      00000000 
 3520 0019 C3       		ret
 3521              	.LVL397:
 3522              	.L300:
 857:src/mcu_msg.c ****             cp = cp->next;
 3523              		.loc 1 857 0
 3524 001a 4889C2   		movq	%rax, %rdx
 3525              	.LVL398:
 3526              	.L299:
 856:src/mcu_msg.c ****         while(cp->next != NULL)
 3527              		.loc 1 856 0
 3528 001d 488B4210 		movq	16(%rdx), %rax
 3529 0021 4885C0   		testq	%rax, %rax
 3530 0024 75F4     		jne	.L300
 858:src/mcu_msg.c ****         cp->next = cmd;
 3531              		.loc 1 858 0
 3532 0026 48897210 		movq	%rsi, 16(%rdx)
 859:src/mcu_msg.c ****         cmd->next = NULL;
 3533              		.loc 1 859 0
 3534 002a 48C74610 		movq	$0, 16(%rsi)
 3534      00000000 
 860:src/mcu_msg.c ****     }
 861:src/mcu_msg.c **** }
 3535              		.loc 1 861 0
 3536 0032 C3       		ret
 3537              		.cfi_endproc
 3538              	.LFE71:
 3540              		.section	.bss.mmsg_putc,"aw",@nobits
 3541              		.align 8
 3544              	mmsg_putc:
 3545 0000 00000000 		.zero	8
 3545      00000000 
GAS LISTING /tmp/ccYvOZGU.s 			page 91


 3546              		.section	.rodata.cst4,"aM",@progbits,4
 3547              		.align 4
 3548              	.LC1:
 3549 0000 CDCCCC3D 		.long	1036831949
 3550              		.align 4
 3551              	.LC2:
 3552 0004 00002041 		.long	1092616192
 3553              		.text
 3554              	.Letext0:
 3555              		.file 2 "/usr/lib/gcc/x86_64-linux-gnu/7/include/stddef.h"
 3556              		.file 3 "/usr/include/x86_64-linux-gnu/bits/types.h"
 3557              		.file 4 "/usr/include/x86_64-linux-gnu/bits/libio.h"
 3558              		.file 5 "/usr/include/stdio.h"
 3559              		.file 6 "/usr/include/x86_64-linux-gnu/bits/sys_errlist.h"
 3560              		.file 7 "/usr/include/x86_64-linux-gnu/bits/stdint-intn.h"
 3561              		.file 8 "/usr/include/x86_64-linux-gnu/bits/stdint-uintn.h"
 3562              		.file 9 "inc/mcu_msg_cfg.h"
 3563              		.file 10 "inc/mcu_msg.h"
GAS LISTING /tmp/ccYvOZGU.s 			page 92


DEFINED SYMBOLS
                            *ABS*:0000000000000000 mcu_msg.c
     /tmp/ccYvOZGU.s:6      .text.str_len:0000000000000000 str_len
     /tmp/ccYvOZGU.s:35     .text.skip_internal_str:0000000000000000 skip_internal_str
     /tmp/ccYvOZGU.s:92     .text.mmsg_str_copy_to_chr_arr:0000000000000000 mmsg_str_copy_to_chr_arr
     /tmp/ccYvOZGU.s:119    .text.mmsg_str_copy:0000000000000000 mmsg_str_copy
     /tmp/ccYvOZGU.s:147    .text.mmsg_print_int:0000000000000000 mmsg_print_int
     /tmp/ccYvOZGU.s:3544   .bss.mmsg_putc:0000000000000000 mmsg_putc
     /tmp/ccYvOZGU.s:305    .text.mmsg_print_float:0000000000000000 mmsg_print_float
     /tmp/ccYvOZGU.s:439    .text.mmsg_print_str:0000000000000000 mmsg_print_str
     /tmp/ccYvOZGU.s:502    .text.mmsg_wrapper_print_obj:0000000000000000 mmsg_wrapper_print_obj
     /tmp/ccYvOZGU.s:737    .text.mmsg_wrapper_print_cmd:0000000000000000 mmsg_wrapper_print_cmd
     /tmp/ccYvOZGU.s:771    .text.mmsg_wrapper_print_msg_to_buff:0000000000000000 mmsg_wrapper_print_msg_to_buff
     /tmp/ccYvOZGU.s:783    .text.mmsg_wrapper_print_msg:0000000000000000 mmsg_wrapper_print_msg
     /tmp/ccYvOZGU.s:1134   .text.mmsg_destroy_string:0000000000000000 mmsg_destroy_string
     /tmp/ccYvOZGU.s:1150   .text.find_keyword:0000000000000000 find_keyword
     /tmp/ccYvOZGU.s:1546   .text.find_val:0000000000000000 find_val
     /tmp/ccYvOZGU.s:1827   .text.mmsg_destroy:0000000000000000 mmsg_destroy
     /tmp/ccYvOZGU.s:1856   .text.mmsg_destroy_obj:0000000000000000 mmsg_destroy_obj
     /tmp/ccYvOZGU.s:1885   .text.mmsg_init_string:0000000000000000 mmsg_init_string
     /tmp/ccYvOZGU.s:1914   .text.mmsg_get:0000000000000000 mmsg_get
     /tmp/ccYvOZGU.s:2067   .text.mmsg_parser_get_obj:0000000000000000 mmsg_parser_get_obj
     /tmp/ccYvOZGU.s:2216   .text.mmsg_parser_get_cmd:0000000000000000 mmsg_parser_get_cmd
     /tmp/ccYvOZGU.s:2244   .text.mmsg_parser_get_int:0000000000000000 mmsg_parser_get_int
     /tmp/ccYvOZGU.s:2417   .text.mmsg_parser_get_float:0000000000000000 mmsg_parser_get_float
     /tmp/ccYvOZGU.s:2681   .text.mmsg_parser_get_string:0000000000000000 mmsg_parser_get_string
     /tmp/ccYvOZGU.s:2806   .text.mmsg_string_hnd_create:0000000000000000 mmsg_string_hnd_create
     /tmp/ccYvOZGU.s:2842   .text.mmsg_wrapper_hnd_create:0000000000000000 mmsg_wrapper_hnd_create
     /tmp/ccYvOZGU.s:2881   .text.mmsg_wrap_destroy:0000000000000000 mmsg_wrap_destroy
     /tmp/ccYvOZGU.s:2910   .text.mmsg_wrap_destroy_obj:0000000000000000 mmsg_wrap_destroy_obj
     /tmp/ccYvOZGU.s:2943   .text.mmsg_wrap_destroy_str:0000000000000000 mmsg_wrap_destroy_str
     /tmp/ccYvOZGU.s:2974   .text.mmsg_wrap_destroy_int:0000000000000000 mmsg_wrap_destroy_int
     /tmp/ccYvOZGU.s:3003   .text.mmsg_wrap_destroy_float:0000000000000000 mmsg_wrap_destroy_float
     /tmp/ccYvOZGU.s:3034   .text.mmsg_wrapper_init_msg:0000000000000000 mmsg_wrapper_init_msg
     /tmp/ccYvOZGU.s:3079   .text.mmsg_wrapper_init_cmd:0000000000000000 mmsg_wrapper_init_cmd
     /tmp/ccYvOZGU.s:3117   .text.mmsg_wrapper_init_obj:0000000000000000 mmsg_wrapper_init_obj
     /tmp/ccYvOZGU.s:3170   .text.mmsg_wrapper_init_string:0000000000000000 mmsg_wrapper_init_string
     /tmp/ccYvOZGU.s:3239   .text.mmsg_wrapper_init_int:0000000000000000 mmsg_wrapper_init_int
     /tmp/ccYvOZGU.s:3293   .text.mmsg_wrapper_init_float:0000000000000000 mmsg_wrapper_init_float
     /tmp/ccYvOZGU.s:3357   .text.mmsg_wrapper_add_string_to_obj:0000000000000000 mmsg_wrapper_add_string_to_obj
     /tmp/ccYvOZGU.s:3393   .text.mmsg_wrapper_add_int_to_obj:0000000000000000 mmsg_wrapper_add_int_to_obj
     /tmp/ccYvOZGU.s:3429   .text.mmsg_wrapper_add_float_to_obj:0000000000000000 mmsg_wrapper_add_float_to_obj
     /tmp/ccYvOZGU.s:3465   .text.mmsg_wrapper_add_object_to_msg:0000000000000000 mmsg_wrapper_add_object_to_msg
     /tmp/ccYvOZGU.s:3501   .text.mmsg_wrapper_add_cmd_to_msg:0000000000000000 mmsg_wrapper_add_cmd_to_msg
     /tmp/ccYvOZGU.s:3548   .rodata.cst4:0000000000000000 .LC1
     /tmp/ccYvOZGU.s:3551   .rodata.cst4:0000000000000004 .LC2

UNDEFINED SYMBOLS
_GLOBAL_OFFSET_TABLE_
__stack_chk_fail
