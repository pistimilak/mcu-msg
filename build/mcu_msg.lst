GAS LISTING /tmp/cc45SYiz.s 			page 1


   1              		.file	"mcu_msg.c"
   2              		.text
   3              	.Ltext0:
   4              		.section	.text.__str_len,"ax",@progbits
   6              	__str_len:
   7              	.LFB34:
   8              		.file 1 "src/mcu_msg.c"
   1:src/mcu_msg.c **** /**
   2:src/mcu_msg.c ****  * @file msg_parser.c
   3:src/mcu_msg.c ****  * @author Istvan Milak (istvan.milak@gmail.com)
   4:src/mcu_msg.c ****  * @brief Simple message parser for embedded applications, eg serial comm
   5:src/mcu_msg.c ****  * @version 0.1
   6:src/mcu_msg.c ****  * @date 2019-12-15
   7:src/mcu_msg.c ****  * 
   8:src/mcu_msg.c ****  * @copyright Copyright (c) 2019
   9:src/mcu_msg.c ****  * 
  10:src/mcu_msg.c ****  */
  11:src/mcu_msg.c **** #include <stdio.h>
  12:src/mcu_msg.c **** #include "mcu_msg.h"
  13:src/mcu_msg.c **** 
  14:src/mcu_msg.c **** /*Control chars*/
  15:src/mcu_msg.c **** #define __CTRL_MSG_FLAG           '#'
  16:src/mcu_msg.c **** #define __CTRL_START_MSG          '{'
  17:src/mcu_msg.c **** #define __CTRL_STOP_MSG           '}'
  18:src/mcu_msg.c **** #define __CTRL_START_OBJ          '('
  19:src/mcu_msg.c **** #define __CTRL_STOP_OBJ           ')'
  20:src/mcu_msg.c **** #define __CTRL_OBJ_FLAG           '@'
  21:src/mcu_msg.c **** #define __CTRL_KEY_FLAG           '$'
  22:src/mcu_msg.c **** #define __CTRL_KEY_SEP            ';'
  23:src/mcu_msg.c **** #define __CTRL_KEY_EQU            '='
  24:src/mcu_msg.c **** #define __CTRL_CMD_START_FLAG     '<'
  25:src/mcu_msg.c **** #define __CTRL_CMD_STOP_FLAG      '>'
  26:src/mcu_msg.c **** 
  27:src/mcu_msg.c **** 
  28:src/mcu_msg.c **** /*putchar implementation: must be implemented for printing to UART or other output*/
  29:src/mcu_msg.c **** static int (*__msg_putc)(char) = NULL; 
  30:src/mcu_msg.c **** 
  31:src/mcu_msg.c **** /*Static function declarations*/
  32:src/mcu_msg.c **** static inline uint8_t   __is_ctrl_char(char c);
  33:src/mcu_msg.c **** static inline uint8_t   __is_whitespace(char c);
  34:src/mcu_msg.c **** static msg_size_t       __str_len(char *str);
  35:src/mcu_msg.c **** static inline uint8_t   __is_p_in_str(msg_str_t str, char *p);
  36:src/mcu_msg.c **** static char*            __skip_internal_str(char *start);
  37:src/mcu_msg.c **** static msg_str_t        __find_keyword(msg_str_t str, char *keyword, char flagc, char stopc);
  38:src/mcu_msg.c **** static msg_str_t        __find_val(msg_obj_t obj, char *key);
  39:src/mcu_msg.c **** // static void             __msg_str_copy_to_chr_arr(char *dest, msg_str_t source);
  40:src/mcu_msg.c **** // static void             __msg_str_copy(msg_str_t dest, msg_str_t source);
  41:src/mcu_msg.c **** static void             __msg_print(msg_t msg);
  42:src/mcu_msg.c **** static void             __msg_print_int(int i);
  43:src/mcu_msg.c **** static void             __msg_print_float(float f, uint8_t prec);
  44:src/mcu_msg.c **** static void             __msg_print_str(msg_str_t str);
  45:src/mcu_msg.c **** static inline char      __define_qmark(msg_str_t str);
  46:src/mcu_msg.c **** 
  47:src/mcu_msg.c **** 
  48:src/mcu_msg.c **** 
  49:src/mcu_msg.c **** #if MCU_MSG_USE_BUFFERING
  50:src/mcu_msg.c **** // static msg_size_t __msg_putc_to_buff(msg_str_buff_t *buff, char c);
GAS LISTING /tmp/cc45SYiz.s 			page 2


  51:src/mcu_msg.c **** // static msg_size_t __msg_print_int_to_buff(msg_str_buff_t *buff, int i);
  52:src/mcu_msg.c **** // static msg_size_t __msg_print_float_to_buff(msg_str_buff_t *buff, float f, uint8_t prec);
  53:src/mcu_msg.c **** // static msg_size_t __msg_print_str_to_buff(msg_str_buff_t *buff, msg_str_t str);
  54:src/mcu_msg.c **** #endif
  55:src/mcu_msg.c **** 
  56:src/mcu_msg.c **** #if MCU_MSG_USE_WRAPPER
  57:src/mcu_msg.c **** static void             __msg_wrapper_print_obj(msg_wrap_obj_t obj);
  58:src/mcu_msg.c **** static inline void      __msg_wrapper_print_cmd(msg_wrap_cmd_t cmd);
  59:src/mcu_msg.c **** static void             __msg_wrapper_print_msg(msg_wrap_t msg);
  60:src/mcu_msg.c **** #endif
  61:src/mcu_msg.c **** 
  62:src/mcu_msg.c **** #if (MCU_MSG_USE_WRAPPER && MCU_MSG_USE_BUFFERING)
  63:src/mcu_msg.c **** static msg_size_t           __msg_wrapper_print_obj_to_buff(msg_str_buff_t *buff, msg_wrap_obj_t ob
  64:src/mcu_msg.c **** static inline msg_size_t    __msg_wrapper_print_cmd_to_buff(msg_str_buff_t *buff, msg_wrap_cmd_t cm
  65:src/mcu_msg.c **** static msg_size_t           __msg_wrapper_print_msg_to_buff(msg_str_buff_t *buff, msg_wrap_t msg);
  66:src/mcu_msg.c **** #endif
  67:src/mcu_msg.c **** 
  68:src/mcu_msg.c **** /////////////////////////////////////////////////////////////////////////////////////////////
  69:src/mcu_msg.c **** //                                      Parser functions                                   //
  70:src/mcu_msg.c **** /////////////////////////////////////////////////////////////////////////////////////////////
  71:src/mcu_msg.c **** 
  72:src/mcu_msg.c **** /*destroy string*/
  73:src/mcu_msg.c **** void msg_destroy_string(msg_str_t *str)
  74:src/mcu_msg.c **** {
  75:src/mcu_msg.c ****     str->s = NULL;
  76:src/mcu_msg.c ****     str->len = 0;
  77:src/mcu_msg.c **** }
  78:src/mcu_msg.c **** 
  79:src/mcu_msg.c **** /*destroy message*/
  80:src/mcu_msg.c **** void msg_destroy(msg_t *msg)
  81:src/mcu_msg.c **** {
  82:src/mcu_msg.c ****     msg_destroy_string(&msg->id);
  83:src/mcu_msg.c ****     msg_destroy_string(&msg->content);
  84:src/mcu_msg.c **** }
  85:src/mcu_msg.c **** 
  86:src/mcu_msg.c **** 
  87:src/mcu_msg.c **** /*destroy object*/
  88:src/mcu_msg.c **** void msg_destroy_obj(msg_obj_t *obj)
  89:src/mcu_msg.c **** {
  90:src/mcu_msg.c ****     msg_destroy_string(&obj->id);
  91:src/mcu_msg.c ****     msg_destroy_string(&obj->content);
  92:src/mcu_msg.c **** }
  93:src/mcu_msg.c **** 
  94:src/mcu_msg.c **** /*destroy cmd*/
  95:src/mcu_msg.c **** void msg_destroy_cmd(msg_cmd_t *cmd)
  96:src/mcu_msg.c **** {
  97:src/mcu_msg.c ****     msg_destroy_string(&cmd->cmd);
  98:src/mcu_msg.c **** }
  99:src/mcu_msg.c **** 
 100:src/mcu_msg.c **** msg_str_t msg_init_string(char *str)
 101:src/mcu_msg.c **** {
 102:src/mcu_msg.c ****     msg_str_t res;
 103:src/mcu_msg.c ****     res.s = str;
 104:src/mcu_msg.c ****     res.len = __str_len(res.s);
 105:src/mcu_msg.c ****     return res;
 106:src/mcu_msg.c **** }
 107:src/mcu_msg.c **** 
GAS LISTING /tmp/cc45SYiz.s 			page 3


 108:src/mcu_msg.c **** /**
 109:src/mcu_msg.c ****  * @brief Argument char is control char or not
 110:src/mcu_msg.c ****  * 
 111:src/mcu_msg.c ****  * @param c char
 112:src/mcu_msg.c ****  * @return uint8_t comparison result
 113:src/mcu_msg.c ****  */
 114:src/mcu_msg.c **** static inline uint8_t __is_ctrl_char(char c)
 115:src/mcu_msg.c **** {
 116:src/mcu_msg.c ****     switch(c) {
 117:src/mcu_msg.c ****         case __CTRL_MSG_FLAG:
 118:src/mcu_msg.c ****         case __CTRL_START_MSG:
 119:src/mcu_msg.c ****         case __CTRL_STOP_MSG:
 120:src/mcu_msg.c ****         case __CTRL_START_OBJ:
 121:src/mcu_msg.c ****         case __CTRL_STOP_OBJ:
 122:src/mcu_msg.c ****         case __CTRL_OBJ_FLAG:
 123:src/mcu_msg.c ****         case __CTRL_KEY_FLAG:
 124:src/mcu_msg.c ****         case __CTRL_KEY_SEP:
 125:src/mcu_msg.c ****         case __CTRL_KEY_EQU:
 126:src/mcu_msg.c ****         case __CTRL_CMD_START_FLAG:
 127:src/mcu_msg.c ****         case __CTRL_CMD_STOP_FLAG:
 128:src/mcu_msg.c ****             return 1;
 129:src/mcu_msg.c ****         default:
 130:src/mcu_msg.c ****             return 0;
 131:src/mcu_msg.c ****     }
 132:src/mcu_msg.c **** }
 133:src/mcu_msg.c **** 
 134:src/mcu_msg.c **** /**
 135:src/mcu_msg.c ****  * @brief Char is a whitespace
 136:src/mcu_msg.c ****  * 
 137:src/mcu_msg.c ****  * @param c char
 138:src/mcu_msg.c ****  * @return uint8_t comparison result
 139:src/mcu_msg.c ****  */
 140:src/mcu_msg.c **** static inline uint8_t __is_whitespace(char c)
 141:src/mcu_msg.c **** {
 142:src/mcu_msg.c ****     switch(c) {
 143:src/mcu_msg.c ****         case  ' ':
 144:src/mcu_msg.c ****         case '\t':
 145:src/mcu_msg.c ****         case '\n':
 146:src/mcu_msg.c ****         case '\v':
 147:src/mcu_msg.c ****         case '\f':
 148:src/mcu_msg.c ****         case '\r':
 149:src/mcu_msg.c ****             return 1;
 150:src/mcu_msg.c ****         default:
 151:src/mcu_msg.c ****             return 0;
 152:src/mcu_msg.c ****     }
 153:src/mcu_msg.c **** }
 154:src/mcu_msg.c **** 
 155:src/mcu_msg.c **** /**
 156:src/mcu_msg.c ****  * @brief Argument char is valid keyword char or not
 157:src/mcu_msg.c ****  * 
 158:src/mcu_msg.c ****  * @param c char
 159:src/mcu_msg.c ****  * @return uint8_t comparison result
 160:src/mcu_msg.c ****  */
 161:src/mcu_msg.c **** 
 162:src/mcu_msg.c **** #define is_valid_keyword_char(c)        ((c == '_') || (c >= 'a' && c <= 'z') || (c >= 'A' && c <= 
 163:src/mcu_msg.c ****                                         (c >= '0' && c <= '9'))
 164:src/mcu_msg.c **** 
GAS LISTING /tmp/cc45SYiz.s 			page 4


 165:src/mcu_msg.c **** /**
 166:src/mcu_msg.c ****  * @brief strlen implementation for internal usage
 167:src/mcu_msg.c ****  * 
 168:src/mcu_msg.c ****  * @param str string 
 169:src/mcu_msg.c ****  * @return msg_size_t length of string 
 170:src/mcu_msg.c ****  */
 171:src/mcu_msg.c **** static msg_size_t __str_len(char *str)
 172:src/mcu_msg.c **** {
   9              		.loc 1 172 0
  10              		.cfi_startproc
  11              	.LVL0:
 173:src/mcu_msg.c ****     char *p = str;
  12              		.loc 1 173 0
  13 0000 4889F8   		movq	%rdi, %rax
 174:src/mcu_msg.c ****     while(*p)
  14              		.loc 1 174 0
  15 0003 EB04     		jmp	.L2
  16              	.LVL1:
  17              	.L3:
 175:src/mcu_msg.c ****         p++;
  18              		.loc 1 175 0
  19 0005 4883C001 		addq	$1, %rax
  20              	.LVL2:
  21              	.L2:
 174:src/mcu_msg.c ****     while(*p)
  22              		.loc 1 174 0
  23 0009 803800   		cmpb	$0, (%rax)
  24 000c 75F7     		jne	.L3
 176:src/mcu_msg.c ****     return (p - str);
  25              		.loc 1 176 0
  26 000e 4829F8   		subq	%rdi, %rax
  27              	.LVL3:
 177:src/mcu_msg.c **** }
  28              		.loc 1 177 0
  29 0011 C3       		ret
  30              		.cfi_endproc
  31              	.LFE34:
  33              		.section	.text.__skip_internal_str,"ax",@progbits
  35              	__skip_internal_str:
  36              	.LFB36:
 178:src/mcu_msg.c **** 
 179:src/mcu_msg.c **** /**
 180:src/mcu_msg.c ****  * @brief Deciding char pointer is in the string buffer or not
 181:src/mcu_msg.c ****  * 
 182:src/mcu_msg.c ****  * @param str string buffer with start pointer and length
 183:src/mcu_msg.c ****  * @param p current pointer
 184:src/mcu_msg.c ****  * @return uint8_t return boole result
 185:src/mcu_msg.c ****  */
 186:src/mcu_msg.c **** static inline uint8_t __is_p_in_str(msg_str_t str, char *p)
 187:src/mcu_msg.c **** {
 188:src/mcu_msg.c ****     return ((p - str.s) < str.len);
 189:src/mcu_msg.c **** }
 190:src/mcu_msg.c **** 
 191:src/mcu_msg.c **** /**
 192:src/mcu_msg.c ****  * @brief Skiping internal string from start qoution mark to end qmark
 193:src/mcu_msg.c ****  * 
 194:src/mcu_msg.c ****  * @param start start pointer
GAS LISTING /tmp/cc45SYiz.s 			page 5


 195:src/mcu_msg.c ****  * @return char* return end pointer
 196:src/mcu_msg.c ****  */
 197:src/mcu_msg.c **** static char *__skip_internal_str(char *start)
 198:src/mcu_msg.c **** {
  37              		.loc 1 198 0
  38              		.cfi_startproc
  39              	.LVL4:
 199:src/mcu_msg.c ****     char *p = start;
 200:src/mcu_msg.c ****     char qmark = *start;
  40              		.loc 1 200 0
  41 0000 0FB60F   		movzbl	(%rdi), %ecx
  42              	.LVL5:
 201:src/mcu_msg.c ****     if((qmark != '\'' && qmark != '"')) return NULL;
  43              		.loc 1 201 0
  44 0003 80F927   		cmpb	$39, %cl
  45 0006 0F95C2   		setne	%dl
  46 0009 80F922   		cmpb	$34, %cl
  47 000c 0F95C0   		setne	%al
  48 000f 84C2     		testb	%al, %dl
  49 0011 751E     		jne	.L9
 202:src/mcu_msg.c ****     ++p;
  50              		.loc 1 202 0
  51 0013 488D4701 		leaq	1(%rdi), %rax
  52              	.LVL6:
 203:src/mcu_msg.c ****     while(*p && (*p != qmark)) {
  53              		.loc 1 203 0
  54 0017 EB04     		jmp	.L6
  55              	.L8:
 204:src/mcu_msg.c ****         p++;
  56              		.loc 1 204 0
  57 0019 4883C001 		addq	$1, %rax
  58              	.LVL7:
  59              	.L6:
 203:src/mcu_msg.c ****     while(*p && (*p != qmark)) {
  60              		.loc 1 203 0
  61 001d 0FB610   		movzbl	(%rax), %edx
  62 0020 84D2     		testb	%dl, %dl
  63 0022 7404     		je	.L7
 203:src/mcu_msg.c ****     while(*p && (*p != qmark)) {
  64              		.loc 1 203 0 is_stmt 0 discriminator 1
  65 0024 38CA     		cmpb	%cl, %dl
  66 0026 75F1     		jne	.L8
  67              	.L7:
 205:src/mcu_msg.c ****     }
 206:src/mcu_msg.c ****     
 207:src/mcu_msg.c ****     return *p ? ++p : NULL;
  68              		.loc 1 207 0 is_stmt 1
  69 0028 84D2     		testb	%dl, %dl
  70 002a 740B     		je	.L10
  71              		.loc 1 207 0 is_stmt 0 discriminator 1
  72 002c 4883C001 		addq	$1, %rax
  73              	.LVL8:
  74 0030 C3       		ret
  75              	.LVL9:
  76              	.L9:
 201:src/mcu_msg.c ****     ++p;
  77              		.loc 1 201 0 is_stmt 1
GAS LISTING /tmp/cc45SYiz.s 			page 6


  78 0031 B8000000 		movl	$0, %eax
  78      00
  79 0036 C3       		ret
  80              	.LVL10:
  81              	.L10:
  82              		.loc 1 207 0
  83 0037 B8000000 		movl	$0, %eax
  83      00
  84              	.LVL11:
 208:src/mcu_msg.c **** }
  85              		.loc 1 208 0
  86 003c C3       		ret
  87              		.cfi_endproc
  88              	.LFE36:
  90              		.section	.text.__msg_print_int,"ax",@progbits
  92              	__msg_print_int:
  93              	.LFB45:
 209:src/mcu_msg.c **** 
 210:src/mcu_msg.c **** /**
 211:src/mcu_msg.c ****  * @brief find the position of the keyword int message string (first occurance)
 212:src/mcu_msg.c ****  * if the keyword found in the message string, the next (none space) char must be stopc
 213:src/mcu_msg.c ****  * @param str source string
 214:src/mcu_msg.c ****  * @param keyword keword has to be found
 215:src/mcu_msg.c ****  * @param flagc flag, eg. '@', '$'
 216:src/mcu_msg.c ****  * @param stopc stop character eg. '(', '='
 217:src/mcu_msg.c ****  * @return msg_str_t location and size of the keyword (whitout flag) or NULL if keyword not found
 218:src/mcu_msg.c ****  */
 219:src/mcu_msg.c **** static msg_str_t __find_keyword(msg_str_t str, char *keyword, char flagc, char stopc)
 220:src/mcu_msg.c **** {
 221:src/mcu_msg.c **** 
 222:src/mcu_msg.c ****     msg_str_t res;
 223:src/mcu_msg.c ****     char *p = str.s;
 224:src/mcu_msg.c ****     uint8_t equal;
 225:src/mcu_msg.c ****     msg_size_t i;
 226:src/mcu_msg.c ****     res.len = __str_len(keyword);
 227:src/mcu_msg.c ****     while(__is_p_in_str(str, p) && *p) {
 228:src/mcu_msg.c ****         if(*p == '\'' || *p == '"') { //skip internal strings
 229:src/mcu_msg.c ****             p = __skip_internal_str(p);
 230:src/mcu_msg.c ****         }
 231:src/mcu_msg.c ****         if(__is_p_in_str(str, p)  && *p == flagc) { // if flag char detected start the analization
 232:src/mcu_msg.c ****             res.s = p + 1;
 233:src/mcu_msg.c ****             equal = 1;
 234:src/mcu_msg.c ****             for(i = 0; __is_p_in_str(str, res.s + i) && i < res.len; i++) { // if not equal during 
 235:src/mcu_msg.c ****                 if((*(res.s + i) != *(keyword + i)) || __is_ctrl_char(*(res.s + i)) || 
 236:src/mcu_msg.c ****                                     !is_valid_keyword_char(*(res.s + i))) {
 237:src/mcu_msg.c ****                     equal = 0;
 238:src/mcu_msg.c ****                     break;
 239:src/mcu_msg.c ****                 }
 240:src/mcu_msg.c ****             }
 241:src/mcu_msg.c ****             while(__is_p_in_str(str, res.s + i) && __is_whitespace(*(res.s + i))) i++; //skip space
 242:src/mcu_msg.c ****             if(equal && *(res.s + i) == stopc) { //if the stop char is the next, whitout spaces, re
 243:src/mcu_msg.c ****                 return res;
 244:src/mcu_msg.c ****             } else {
 245:src/mcu_msg.c ****                 p = res.s + i; // if not matched, return continue the iteration from last checked c
 246:src/mcu_msg.c ****             }
 247:src/mcu_msg.c ****         }
 248:src/mcu_msg.c ****         p++;
GAS LISTING /tmp/cc45SYiz.s 			page 7


 249:src/mcu_msg.c ****     }
 250:src/mcu_msg.c ****     // if not found (loop finished whitout match) return with a destroyed string
 251:src/mcu_msg.c ****     msg_destroy_string(&res);
 252:src/mcu_msg.c ****     return res;
 253:src/mcu_msg.c **** }
 254:src/mcu_msg.c **** 
 255:src/mcu_msg.c **** 
 256:src/mcu_msg.c **** /**
 257:src/mcu_msg.c ****  * @brief Getting the value start position for particular key in message object
 258:src/mcu_msg.c ****  * 
 259:src/mcu_msg.c ****  * @param obj message object
 260:src/mcu_msg.c ****  * @param key key for search
 261:src/mcu_msg.c ****  * @return char* location of the value start point or NULL if the key was not found
 262:src/mcu_msg.c ****  */
 263:src/mcu_msg.c **** 
 264:src/mcu_msg.c **** static msg_str_t __find_val(msg_obj_t obj, char *key)
 265:src/mcu_msg.c **** {
 266:src/mcu_msg.c ****     msg_str_t res  = __find_keyword(obj.content, key, __CTRL_KEY_FLAG, __CTRL_KEY_EQU); //object st
 267:src/mcu_msg.c ****     char *p;
 268:src/mcu_msg.c ****     if(res.s == NULL) { //if keyword not found, return with NULLs and 0 lengths
 269:src/mcu_msg.c ****         msg_destroy_string(&res);
 270:src/mcu_msg.c ****         return res;
 271:src/mcu_msg.c ****     }
 272:src/mcu_msg.c ****     if(*res.s != __CTRL_KEY_EQU) { // move pointer to 'equal'
 273:src/mcu_msg.c ****         while(__is_p_in_str(obj.content, res.s + 1) && *res.s != __CTRL_KEY_EQU) res.s++;
 274:src/mcu_msg.c ****     }
 275:src/mcu_msg.c ****     res.s++;
 276:src/mcu_msg.c ****     while(__is_p_in_str(obj.content, res.s) && __is_whitespace(*res.s)) res.s++; //skip spaces afte
 277:src/mcu_msg.c **** 
 278:src/mcu_msg.c ****     p = res.s;
 279:src/mcu_msg.c ****     while(__is_p_in_str(obj.content, p) && !__is_whitespace(*p) && !__is_ctrl_char(*p)) p++; //calc
 280:src/mcu_msg.c ****     res.len = p - res.s;
 281:src/mcu_msg.c **** 
 282:src/mcu_msg.c ****     return res;
 283:src/mcu_msg.c **** }
 284:src/mcu_msg.c **** 
 285:src/mcu_msg.c **** 
 286:src/mcu_msg.c **** /*get message*/
 287:src/mcu_msg.c **** msg_t msg_get(char *raw_str, char *id, msg_size_t len)
 288:src/mcu_msg.c **** {
 289:src/mcu_msg.c ****     msg_t res;
 290:src/mcu_msg.c ****     res.content.s = raw_str;
 291:src/mcu_msg.c ****     res.content.len = len;
 292:src/mcu_msg.c ****     res.id = __find_keyword(res.content, id, __CTRL_MSG_FLAG, __CTRL_START_MSG); //object start wit
 293:src/mcu_msg.c ****     char *p;
 294:src/mcu_msg.c ****     if(res.id.s == NULL) { //if keyword not found, return with NULLs and 0 lengths
 295:src/mcu_msg.c ****         msg_destroy(&res);
 296:src/mcu_msg.c ****         return res;
 297:src/mcu_msg.c ****     }
 298:src/mcu_msg.c ****     p = res.id.s + res.id.len; //init pointer to end of the id
 299:src/mcu_msg.c ****     if (*p != __CTRL_START_MSG) { // if the next char is not START_MSG, move to the start flag
 300:src/mcu_msg.c ****         while(__is_p_in_str(res.content, p + 1) && *p != __CTRL_START_MSG) p++;
 301:src/mcu_msg.c ****     }
 302:src/mcu_msg.c ****     res.content.s = ++p; // set content string pointer to the current pos
 303:src/mcu_msg.c ****     while(__is_p_in_str(res.content, p) && *p != __CTRL_STOP_MSG) { //calc length
 304:src/mcu_msg.c ****         p++;
 305:src/mcu_msg.c ****     }
GAS LISTING /tmp/cc45SYiz.s 			page 8


 306:src/mcu_msg.c ****     res.content.len = p - res.content.s;
 307:src/mcu_msg.c ****     return res;
 308:src/mcu_msg.c **** }
 309:src/mcu_msg.c **** 
 310:src/mcu_msg.c **** 
 311:src/mcu_msg.c **** 
 312:src/mcu_msg.c **** msg_obj_t msg_parser_get_obj(msg_t msg, char *id)
 313:src/mcu_msg.c **** {
 314:src/mcu_msg.c ****     msg_obj_t res;
 315:src/mcu_msg.c ****     res.id = __find_keyword(msg.content, id, __CTRL_OBJ_FLAG, __CTRL_START_OBJ); //object start wit
 316:src/mcu_msg.c ****     char *p;
 317:src/mcu_msg.c ****     if(res.id.s == NULL) { //if keyword not found, return with NULLs and 0 lengths
 318:src/mcu_msg.c ****         msg_destroy_obj(&res);
 319:src/mcu_msg.c ****         return res;
 320:src/mcu_msg.c ****     }
 321:src/mcu_msg.c **** 
 322:src/mcu_msg.c ****     p = res.id.s + res.id.len;
 323:src/mcu_msg.c ****     if (*p != __CTRL_START_OBJ) {
 324:src/mcu_msg.c ****         while(__is_p_in_str(msg.content, p + 1) && *p != __CTRL_START_OBJ) p++;
 325:src/mcu_msg.c ****     }
 326:src/mcu_msg.c ****     res.content.s = ++p;
 327:src/mcu_msg.c ****     while(__is_p_in_str(msg.content, p) && *p != __CTRL_STOP_OBJ) {
 328:src/mcu_msg.c ****         p++;
 329:src/mcu_msg.c ****     }
 330:src/mcu_msg.c ****     res.content.len = p - res.content.s;
 331:src/mcu_msg.c ****     return res;
 332:src/mcu_msg.c **** }
 333:src/mcu_msg.c **** 
 334:src/mcu_msg.c **** msg_cmd_t msg_parser_get_cmd(msg_t msg, char *cmd_id)
 335:src/mcu_msg.c **** {
 336:src/mcu_msg.c ****     msg_cmd_t res;
 337:src/mcu_msg.c ****     // return with the find result
 338:src/mcu_msg.c ****     res.cmd = __find_keyword(msg.content, cmd_id, __CTRL_CMD_START_FLAG, __CTRL_CMD_STOP_FLAG);
 339:src/mcu_msg.c ****     return res;
 340:src/mcu_msg.c **** }
 341:src/mcu_msg.c **** 
 342:src/mcu_msg.c **** int8_t msg_parser_get_int(int *res_val, msg_obj_t obj, char *key)
 343:src/mcu_msg.c **** {
 344:src/mcu_msg.c ****     msg_str_t sval = __find_val(obj, key);
 345:src/mcu_msg.c ****     msg_size_t i;
 346:src/mcu_msg.c ****     unsigned m = 1;
 347:src/mcu_msg.c ****     int sign = 1;
 348:src/mcu_msg.c ****     int8_t res = 0; // result of function
 349:src/mcu_msg.c **** 
 350:src/mcu_msg.c ****     if(sval.s == NULL)  //key nout found
 351:src/mcu_msg.c ****         return -1;
 352:src/mcu_msg.c **** 
 353:src/mcu_msg.c **** 
 354:src/mcu_msg.c ****     switch(*sval.s) { //if the sign is defined, set the sign variable and increment the pointer
 355:src/mcu_msg.c ****         case '+':
 356:src/mcu_msg.c ****             sign = 1;
 357:src/mcu_msg.c ****             sval.s++;
 358:src/mcu_msg.c ****         break;
 359:src/mcu_msg.c ****         
 360:src/mcu_msg.c ****         case '-':
 361:src/mcu_msg.c ****             sign = -1;
 362:src/mcu_msg.c ****             sval.s++;
GAS LISTING /tmp/cc45SYiz.s 			page 9


 363:src/mcu_msg.c ****         break;
 364:src/mcu_msg.c ****         
 365:src/mcu_msg.c ****         default:
 366:src/mcu_msg.c ****         break;
 367:src/mcu_msg.c ****     }
 368:src/mcu_msg.c **** 
 369:src/mcu_msg.c ****     for(i = 0; __is_p_in_str(obj.content, sval.s) && !__is_whitespace(*sval.s) && *sval.s != __CTRL
 370:src/mcu_msg.c ****         if(*sval.s < '0' || *sval.s > '9') {    // if non valid number, return with error
 371:src/mcu_msg.c ****             return -1;
 372:src/mcu_msg.c ****         }
 373:src/mcu_msg.c ****     }
 374:src/mcu_msg.c **** 
 375:src/mcu_msg.c ****     *res_val = 0;
 376:src/mcu_msg.c ****     --sval.s;
 377:src/mcu_msg.c ****     while(i--) { //convert value to integer
 378:src/mcu_msg.c ****         *res_val += (*sval.s-- - '0') * m;
 379:src/mcu_msg.c ****         m *= 10;
 380:src/mcu_msg.c ****         res++;
 381:src/mcu_msg.c ****     }
 382:src/mcu_msg.c ****     
 383:src/mcu_msg.c ****     *res_val *= sign; //corrigate with the sign
 384:src/mcu_msg.c **** 
 385:src/mcu_msg.c ****     return res; // return with the digit count, if correct
 386:src/mcu_msg.c **** }
 387:src/mcu_msg.c **** 
 388:src/mcu_msg.c **** 
 389:src/mcu_msg.c **** int8_t msg_parser_get_float(float *res_val, msg_obj_t obj, char *key)
 390:src/mcu_msg.c **** {
 391:src/mcu_msg.c ****     msg_str_t sval = __find_val(obj, key);
 392:src/mcu_msg.c ****     char *pf;
 393:src/mcu_msg.c ****     msg_size_t i;
 394:src/mcu_msg.c ****     unsigned m = 1;
 395:src/mcu_msg.c ****     float mf = 0.1;
 396:src/mcu_msg.c ****     int sign = 1;
 397:src/mcu_msg.c ****     int8_t res = 0; // result of function
 398:src/mcu_msg.c **** 
 399:src/mcu_msg.c ****     if(sval.s == NULL)  //key nout found
 400:src/mcu_msg.c ****         return -1;
 401:src/mcu_msg.c **** 
 402:src/mcu_msg.c **** 
 403:src/mcu_msg.c ****     switch(*sval.s) { //if the sign is defined, set the sign variable and increment the pointer
 404:src/mcu_msg.c ****         case '+':
 405:src/mcu_msg.c ****             sign = 1;
 406:src/mcu_msg.c ****             sval.s++;
 407:src/mcu_msg.c ****         break;
 408:src/mcu_msg.c ****         
 409:src/mcu_msg.c ****         case '-':
 410:src/mcu_msg.c ****             sign = -1;
 411:src/mcu_msg.c ****             sval.s++;
 412:src/mcu_msg.c ****         break;
 413:src/mcu_msg.c ****         
 414:src/mcu_msg.c ****         default:
 415:src/mcu_msg.c ****         break;
 416:src/mcu_msg.c ****     }
 417:src/mcu_msg.c **** 
 418:src/mcu_msg.c ****     //move p to dec separator or end of the value
 419:src/mcu_msg.c ****     for(i = 0; __is_p_in_str(obj.content, sval.s) && !__is_whitespace(*sval.s) && *sval.s != __CTRL
GAS LISTING /tmp/cc45SYiz.s 			page 10


 420:src/mcu_msg.c ****         if((*sval.s < '0' || *sval.s > '9')) {    // if non valid number, return with error
 421:src/mcu_msg.c ****             return -1;
 422:src/mcu_msg.c ****         }
 423:src/mcu_msg.c ****     }
 424:src/mcu_msg.c **** 
 425:src/mcu_msg.c ****     *res_val = 0.0;
 426:src/mcu_msg.c ****     
 427:src/mcu_msg.c ****     if(*sval.s == '.') {
 428:src/mcu_msg.c ****         pf = sval.s + 1;
 429:src/mcu_msg.c ****         res++;
 430:src/mcu_msg.c ****     } else {
 431:src/mcu_msg.c ****         pf = NULL;
 432:src/mcu_msg.c ****     }
 433:src/mcu_msg.c **** 
 434:src/mcu_msg.c ****     --sval.s;
 435:src/mcu_msg.c ****     while(i--) { // convert integer part
 436:src/mcu_msg.c ****         *res_val += (*sval.s-- - '0') * m;
 437:src/mcu_msg.c ****         m *= 10;
 438:src/mcu_msg.c ****         res++;
 439:src/mcu_msg.c ****     }
 440:src/mcu_msg.c ****     
 441:src/mcu_msg.c ****     // calculate floating point section after '.' (if there is)
 442:src/mcu_msg.c ****     for(; pf != NULL && __is_p_in_str(obj.content, pf) && !__is_whitespace(*pf) && *pf != __CTRL_KE
 443:src/mcu_msg.c ****         if(*pf < '0' || *pf > '9') {    // if non valid number, return with error
 444:src/mcu_msg.c ****             return -1;
 445:src/mcu_msg.c ****         }
 446:src/mcu_msg.c ****         *res_val += (*pf - '0') * mf;
 447:src/mcu_msg.c ****         mf /= 10;
 448:src/mcu_msg.c ****         res++; 
 449:src/mcu_msg.c ****     }
 450:src/mcu_msg.c **** 
 451:src/mcu_msg.c ****     *res_val *= sign; //corrigate with the sign
 452:src/mcu_msg.c **** 
 453:src/mcu_msg.c ****     return res; // return with the digit count + '.' separator, if correct
 454:src/mcu_msg.c **** }
 455:src/mcu_msg.c **** 
 456:src/mcu_msg.c **** 
 457:src/mcu_msg.c **** 
 458:src/mcu_msg.c **** msg_str_t msg_parser_get_string(msg_obj_t obj, char *key)
 459:src/mcu_msg.c **** {
 460:src/mcu_msg.c ****     msg_str_t res = __find_val(obj, key);
 461:src/mcu_msg.c ****     char qmark;
 462:src/mcu_msg.c ****     char *p;
 463:src/mcu_msg.c **** 
 464:src/mcu_msg.c ****     if(res.s == NULL) {
 465:src/mcu_msg.c ****         msg_destroy_string(&res);
 466:src/mcu_msg.c ****         return res;
 467:src/mcu_msg.c ****     }
 468:src/mcu_msg.c ****         
 469:src/mcu_msg.c ****     qmark = *res.s;
 470:src/mcu_msg.c **** 
 471:src/mcu_msg.c ****     if(qmark != '\'' && qmark != '"') { // qmark not found, this is not a string
 472:src/mcu_msg.c ****         msg_destroy_string(&res);
 473:src/mcu_msg.c ****         return res;
 474:src/mcu_msg.c ****     }
 475:src/mcu_msg.c **** 
 476:src/mcu_msg.c ****     p = ++res.s;
GAS LISTING /tmp/cc45SYiz.s 			page 11


 477:src/mcu_msg.c ****     while(__is_p_in_str(obj.content, p) && *p != qmark) { // calc len
 478:src/mcu_msg.c ****         p++;
 479:src/mcu_msg.c ****     }
 480:src/mcu_msg.c ****     res.len = p - res.s;
 481:src/mcu_msg.c ****     return res;
 482:src/mcu_msg.c **** }
 483:src/mcu_msg.c **** 
 484:src/mcu_msg.c **** /**
 485:src/mcu_msg.c ****  * @brief Default string copy to char array
 486:src/mcu_msg.c ****  * 
 487:src/mcu_msg.c ****  * @param dest destination char array
 488:src/mcu_msg.c ****  * @param source source string type
 489:src/mcu_msg.c ****  */
 490:src/mcu_msg.c **** // static void __msg_str_copy_to_chr_arr(char *dest, msg_str_t source)
 491:src/mcu_msg.c **** // {
 492:src/mcu_msg.c **** //     msg_size_t i;
 493:src/mcu_msg.c **** //     for(i = 0; i < source.len; *(dest + i) = *(source.s + i), i++);
 494:src/mcu_msg.c **** // }
 495:src/mcu_msg.c **** 
 496:src/mcu_msg.c **** /**
 497:src/mcu_msg.c ****  * @brief Default string copy to string type
 498:src/mcu_msg.c ****  * 
 499:src/mcu_msg.c ****  * @param dest destination string type
 500:src/mcu_msg.c ****  * @param source source string type
 501:src/mcu_msg.c ****  */
 502:src/mcu_msg.c **** // static void __msg_str_copy(msg_str_t dest, msg_str_t source)
 503:src/mcu_msg.c **** // {
 504:src/mcu_msg.c **** //     msg_size_t i;
 505:src/mcu_msg.c **** //     for(i = 0, dest.len = source.len; i < source.len; *(dest.s + i) = *(source.s + i), i++);
 506:src/mcu_msg.c **** // }
 507:src/mcu_msg.c **** 
 508:src/mcu_msg.c **** 
 509:src/mcu_msg.c **** 
 510:src/mcu_msg.c **** // static void __msg_print_int(int i)
 511:src/mcu_msg.c **** // {
 512:src/mcu_msg.c **** //     int8_t sign = i < 0 ? -1 : 1;
 513:src/mcu_msg.c **** //     //                     int32->2147483647  int16:32767
 514:src/mcu_msg.c **** //     long div;
 515:src/mcu_msg.c **** //     char dig;
 516:src/mcu_msg.c **** 
 517:src/mcu_msg.c **** //     if(!__msg_putc) //if function pointer is NULL, return
 518:src/mcu_msg.c **** //         return;
 519:src/mcu_msg.c **** //     if(!i) {
 520:src/mcu_msg.c **** //         __msg_putc('0');
 521:src/mcu_msg.c **** //         return;
 522:src/mcu_msg.c **** //     }
 523:src/mcu_msg.c **** 
 524:src/mcu_msg.c **** //     switch(sign) {
 525:src/mcu_msg.c **** //         case -1: div = sizeof(int) >= 4 ? -1000000000L : -10000L; __msg_putc('-'); break;
 526:src/mcu_msg.c **** //         default: div = sizeof(int) >= 4 ?  1000000000L :  10000L; break;
 527:src/mcu_msg.c **** //     }
 528:src/mcu_msg.c **** //     while(div) {
 529:src/mcu_msg.c **** //         if(sign == -1 ? (i > div) : (i < div)) {
 530:src/mcu_msg.c **** //             div /= 10;
 531:src/mcu_msg.c **** //             continue;
 532:src/mcu_msg.c **** //         }
 533:src/mcu_msg.c **** //         dig = '0' + ((i / div) % 10);
GAS LISTING /tmp/cc45SYiz.s 			page 12


 534:src/mcu_msg.c **** //         __msg_putc(dig);
 535:src/mcu_msg.c **** //         div /= 10;
 536:src/mcu_msg.c **** //     }
 537:src/mcu_msg.c ****     
 538:src/mcu_msg.c **** // }
 539:src/mcu_msg.c **** 
 540:src/mcu_msg.c **** 
 541:src/mcu_msg.c **** static void __msg_print_int(int i)
 542:src/mcu_msg.c **** {
  94              		.loc 1 542 0
  95              		.cfi_startproc
  96              	.LVL12:
  97 0000 4154     		pushq	%r12
  98              	.LCFI0:
  99              		.cfi_def_cfa_offset 16
 100              		.cfi_offset 12, -16
 101 0002 55       		pushq	%rbp
 102              	.LCFI1:
 103              		.cfi_def_cfa_offset 24
 104              		.cfi_offset 6, -24
 105 0003 53       		pushq	%rbx
 106              	.LCFI2:
 107              		.cfi_def_cfa_offset 32
 108              		.cfi_offset 3, -32
 543:src/mcu_msg.c ****     // int8_t sign = i < 0 ? -1: 1;
 544:src/mcu_msg.c ****     unsigned val = i < 0 ? ~i + 1 : i;
 109              		.loc 1 544 0
 110 0004 89F8     		movl	%edi, %eax
 111 0006 C1F81F   		sarl	$31, %eax
 112 0009 89C3     		movl	%eax, %ebx
 113 000b 31FB     		xorl	%edi, %ebx
 114 000d 29C3     		subl	%eax, %ebx
 115              	.LVL13:
 545:src/mcu_msg.c ****                                   // 4294967295   65535
 546:src/mcu_msg.c ****     unsigned div = sizeof(int) > 2 ? 1000000000UL : 10000UL;
 547:src/mcu_msg.c ****     uint8_t dig;
 548:src/mcu_msg.c ****     uint8_t first_dig = 0;
 549:src/mcu_msg.c **** 
 550:src/mcu_msg.c ****     if(!i) {
 116              		.loc 1 550 0
 117 000f 85FF     		testl	%edi, %edi
 118 0011 7510     		jne	.L12
 551:src/mcu_msg.c ****         __msg_putc('0');
 119              		.loc 1 551 0
 120 0013 BF300000 		movl	$48, %edi
 120      00
 121              	.LVL14:
 122 0018 FF150000 		call	*__msg_putc(%rip)
 122      0000
 123              	.LVL15:
 124              	.L11:
 552:src/mcu_msg.c ****         return;
 553:src/mcu_msg.c ****     }
 554:src/mcu_msg.c ****     if(i < 0) __msg_putc('-');
 555:src/mcu_msg.c ****     while(div) {
 556:src/mcu_msg.c ****         dig = 0;
 557:src/mcu_msg.c ****         while(val >= div) {
GAS LISTING /tmp/cc45SYiz.s 			page 13


 558:src/mcu_msg.c ****             val -= div;
 559:src/mcu_msg.c ****             dig += 1;
 560:src/mcu_msg.c ****         }
 561:src/mcu_msg.c ****         div /= 10;
 562:src/mcu_msg.c ****         if(!first_dig && dig) {
 563:src/mcu_msg.c ****             first_dig = 1;
 564:src/mcu_msg.c ****         }
 565:src/mcu_msg.c ****         if(first_dig) __msg_putc('0' + dig);
 566:src/mcu_msg.c ****     }
 567:src/mcu_msg.c ****     
 568:src/mcu_msg.c **** }
 125              		.loc 1 568 0
 126 001e 5B       		popq	%rbx
 127              	.LCFI3:
 128              		.cfi_remember_state
 129              		.cfi_def_cfa_offset 24
 130 001f 5D       		popq	%rbp
 131              	.LCFI4:
 132              		.cfi_def_cfa_offset 16
 133 0020 415C     		popq	%r12
 134              	.LCFI5:
 135              		.cfi_def_cfa_offset 8
 136 0022 C3       		ret
 137              	.LVL16:
 138              	.L12:
 139              	.LCFI6:
 140              		.cfi_restore_state
 554:src/mcu_msg.c ****     while(div) {
 141              		.loc 1 554 0
 142 0023 85FF     		testl	%edi, %edi
 143 0025 790B     		jns	.L14
 554:src/mcu_msg.c ****     while(div) {
 144              		.loc 1 554 0 is_stmt 0 discriminator 1
 145 0027 BF2D0000 		movl	$45, %edi
 145      00
 146              	.LVL17:
 147 002c FF150000 		call	*__msg_putc(%rip)
 147      0000
 148              	.LVL18:
 149              	.L14:
 563:src/mcu_msg.c ****         }
 150              		.loc 1 563 0 is_stmt 1
 151 0032 41BC0000 		movl	$0, %r12d
 151      0000
 152 0038 BD00CA9A 		movl	$1000000000, %ebp
 152      3B
 153 003d EB3A     		jmp	.L15
 154              	.LVL19:
 155              	.L16:
 558:src/mcu_msg.c ****             dig += 1;
 156              		.loc 1 558 0
 157 003f 29EB     		subl	%ebp, %ebx
 158              	.LVL20:
 559:src/mcu_msg.c ****         }
 159              		.loc 1 559 0
 160 0041 83C701   		addl	$1, %edi
 161              	.LVL21:
GAS LISTING /tmp/cc45SYiz.s 			page 14


 162              	.L19:
 557:src/mcu_msg.c ****             val -= div;
 163              		.loc 1 557 0
 164 0044 39EB     		cmpl	%ebp, %ebx
 165 0046 73F7     		jnb	.L16
 561:src/mcu_msg.c ****         if(!first_dig && dig) {
 166              		.loc 1 561 0
 167 0048 BACDCCCC 		movl	$-858993459, %edx
 167      CC
 168 004d 89E8     		movl	%ebp, %eax
 169 004f F7E2     		mull	%edx
 170              	.LVL22:
 171 0051 C1EA03   		shrl	$3, %edx
 172 0054 89D5     		movl	%edx, %ebp
 173              	.LVL23:
 562:src/mcu_msg.c ****             first_dig = 1;
 174              		.loc 1 562 0
 175 0056 4489E0   		movl	%r12d, %eax
 176 0059 83F001   		xorl	$1, %eax
 177 005c 4084FF   		testb	%dil, %dil
 178 005f 0F95C2   		setne	%dl
 179              	.LVL24:
 180 0062 84C2     		testb	%al, %dl
 181 0064 741E     		je	.L23
 563:src/mcu_msg.c ****         }
 182              		.loc 1 563 0
 183 0066 41BC0100 		movl	$1, %r12d
 183      0000
 184              	.LVL25:
 185              	.L17:
 565:src/mcu_msg.c ****     }
 186              		.loc 1 565 0 discriminator 1
 187 006c 83C730   		addl	$48, %edi
 188              	.LVL26:
 189 006f 400FBEFF 		movsbl	%dil, %edi
 190 0073 FF150000 		call	*__msg_putc(%rip)
 190      0000
 191              	.LVL27:
 192              	.L15:
 555:src/mcu_msg.c ****         dig = 0;
 193              		.loc 1 555 0
 194 0079 85ED     		testl	%ebp, %ebp
 195 007b 74A1     		je	.L11
 556:src/mcu_msg.c ****         while(val >= div) {
 196              		.loc 1 556 0
 197 007d BF000000 		movl	$0, %edi
 197      00
 198 0082 EBC0     		jmp	.L19
 199              	.LVL28:
 200              	.L23:
 565:src/mcu_msg.c ****     }
 201              		.loc 1 565 0
 202 0084 4584E4   		testb	%r12b, %r12b
 203 0087 74F0     		je	.L15
 204 0089 EBE1     		jmp	.L17
 205              		.cfi_endproc
 206              	.LFE45:
GAS LISTING /tmp/cc45SYiz.s 			page 15


 208              		.section	.text.__msg_print_float,"ax",@progbits
 210              	__msg_print_float:
 211              	.LFB46:
 569:src/mcu_msg.c **** 
 570:src/mcu_msg.c **** // static void __msg_print_float(float f, uint8_t prec)
 571:src/mcu_msg.c **** // {
 572:src/mcu_msg.c **** //     int i_part = f;
 573:src/mcu_msg.c **** //     float f_part = f - i_part;
 574:src/mcu_msg.c **** //     unsigned f_part_int;
 575:src/mcu_msg.c **** //     long mul = f < 0.0 ? -10 : 10;
 576:src/mcu_msg.c **** //     uint8_t j;
 577:src/mcu_msg.c **** //     char dig;
 578:src/mcu_msg.c **** //     if(!__msg_putc) //if function pointer is NULL, return
 579:src/mcu_msg.c **** //         return;
 580:src/mcu_msg.c **** 
 581:src/mcu_msg.c **** //     if(!i_part) {
 582:src/mcu_msg.c **** //         if(i_part < 0) __msg_putc('-');
 583:src/mcu_msg.c **** //         __msg_putc('0');
 584:src/mcu_msg.c **** //     } else {
 585:src/mcu_msg.c **** //         __msg_print_int(i_part);  
 586:src/mcu_msg.c **** //     }
 587:src/mcu_msg.c ****       
 588:src/mcu_msg.c **** //     __msg_putc('.');
 589:src/mcu_msg.c **** //     for(j = 0; j < prec; mul *= 10, j++) {
 590:src/mcu_msg.c **** //         dig = '0' + ((long)(f_part * mul) % 10);
 591:src/mcu_msg.c **** //         __msg_putc(dig);
 592:src/mcu_msg.c **** //     }
 593:src/mcu_msg.c **** // }
 594:src/mcu_msg.c **** 
 595:src/mcu_msg.c **** static void __msg_print_float(float f, uint8_t prec)
 596:src/mcu_msg.c **** {
 212              		.loc 1 596 0
 213              		.cfi_startproc
 214              	.LVL29:
 215 0000 53       		pushq	%rbx
 216              	.LCFI7:
 217              		.cfi_def_cfa_offset 16
 218              		.cfi_offset 3, -16
 219 0001 4883EC10 		subq	$16, %rsp
 220              	.LCFI8:
 221              		.cfi_def_cfa_offset 32
 222 0005 89F9     		movl	%edi, %ecx
 597:src/mcu_msg.c ****     int i_part = (int)f;
 223              		.loc 1 597 0
 224 0007 F30F2CF8 		cvttss2si	%xmm0, %edi
 225              	.LVL30:
 598:src/mcu_msg.c ****     float f_part = f < 0 ? (f - (float)i_part) * -1  : (f - (float)i_part);
 226              		.loc 1 598 0
 227 000b 660FEFC9 		pxor	%xmm1, %xmm1
 228 000f 0F2EC8   		ucomiss	%xmm0, %xmm1
 229 0012 771E     		ja	.L35
 230              		.loc 1 598 0 is_stmt 0 discriminator 2
 231 0014 660FEFC9 		pxor	%xmm1, %xmm1
 232 0018 F30F2ACF 		cvtsi2ss	%edi, %xmm1
 233 001c F30F5CC1 		subss	%xmm1, %xmm0
 234              	.LVL31:
 235 0020 F30F1144 		movss	%xmm0, 12(%rsp)
GAS LISTING /tmp/cc45SYiz.s 			page 16


 235      240C
 236              	.L27:
 237              	.LVL32:
 599:src/mcu_msg.c ****     unsigned mul = 1;
 600:src/mcu_msg.c ****     uint8_t j;
 601:src/mcu_msg.c ****     for(j = 0; j < prec; j++ ) mul *= 10;
 238              		.loc 1 601 0 is_stmt 1 discriminator 4
 239 0026 B8000000 		movl	$0, %eax
 239      00
 599:src/mcu_msg.c ****     unsigned mul = 1;
 240              		.loc 1 599 0 discriminator 4
 241 002b BB010000 		movl	$1, %ebx
 241      00
 242              		.loc 1 601 0 discriminator 4
 243 0030 EB24     		jmp	.L28
 244              	.LVL33:
 245              	.L35:
 598:src/mcu_msg.c ****     float f_part = f < 0 ? (f - (float)i_part) * -1  : (f - (float)i_part);
 246              		.loc 1 598 0 discriminator 1
 247 0032 660FEFC9 		pxor	%xmm1, %xmm1
 248 0036 F30F2ACF 		cvtsi2ss	%edi, %xmm1
 249 003a F30F5CC1 		subss	%xmm1, %xmm0
 250              	.LVL34:
 251 003e 0F570500 		xorps	.LC1(%rip), %xmm0
 251      000000
 252 0045 F30F1144 		movss	%xmm0, 12(%rsp)
 252      240C
 253 004b EBD9     		jmp	.L27
 254              	.LVL35:
 255              	.L29:
 256              		.loc 1 601 0 discriminator 3
 257 004d 8D149B   		leal	(%rbx,%rbx,4), %edx
 258 0050 8D1C12   		leal	(%rdx,%rdx), %ebx
 259              	.LVL36:
 260 0053 83C001   		addl	$1, %eax
 261              	.LVL37:
 262              	.L28:
 263              		.loc 1 601 0 is_stmt 0 discriminator 1
 264 0056 38C8     		cmpb	%cl, %al
 265 0058 72F3     		jb	.L29
 602:src/mcu_msg.c ****     __msg_print_int(i_part);
 266              		.loc 1 602 0 is_stmt 1
 267 005a E8000000 		call	__msg_print_int
 267      00
 268              	.LVL38:
 603:src/mcu_msg.c ****     __msg_putc('.');
 269              		.loc 1 603 0
 270 005f BF2E0000 		movl	$46, %edi
 270      00
 271 0064 FF150000 		call	*__msg_putc(%rip)
 271      0000
 272              	.LVL39:
 604:src/mcu_msg.c ****     __msg_print_int((unsigned)(f_part * mul));
 273              		.loc 1 604 0
 274 006a 89DB     		movl	%ebx, %ebx
 275 006c 660FEFC0 		pxor	%xmm0, %xmm0
 276 0070 F3480F2A 		cvtsi2ssq	%rbx, %xmm0
GAS LISTING /tmp/cc45SYiz.s 			page 17


 276      C3
 277 0075 F30F5944 		mulss	12(%rsp), %xmm0
 277      240C
 278 007b F3480F2C 		cvttss2siq	%xmm0, %rdi
 278      F8
 279 0080 E8000000 		call	__msg_print_int
 279      00
 280              	.LVL40:
 605:src/mcu_msg.c **** }
 281              		.loc 1 605 0
 282 0085 4883C410 		addq	$16, %rsp
 283              	.LCFI9:
 284              		.cfi_def_cfa_offset 16
 285 0089 5B       		popq	%rbx
 286              	.LCFI10:
 287              		.cfi_def_cfa_offset 8
 288              	.LVL41:
 289 008a C3       		ret
 290              		.cfi_endproc
 291              	.LFE46:
 293              		.section	.text.__msg_print_str,"ax",@progbits
 295              	__msg_print_str:
 296              	.LFB47:
 606:src/mcu_msg.c **** 
 607:src/mcu_msg.c **** 
 608:src/mcu_msg.c **** static void __msg_print_str(msg_str_t str)
 609:src/mcu_msg.c **** {
 297              		.loc 1 609 0
 298              		.cfi_startproc
 299              	.LVL42:
 610:src/mcu_msg.c ****     msg_size_t i;
 611:src/mcu_msg.c ****     if(!__msg_putc) { //if function pointer is NULL, return
 300              		.loc 1 611 0
 301 0000 48833D00 		cmpq	$0, __msg_putc(%rip)
 301      00000000 
 302 0008 742C     		je	.L41
 609:src/mcu_msg.c ****     msg_size_t i;
 303              		.loc 1 609 0
 304 000a 4154     		pushq	%r12
 305              	.LCFI11:
 306              		.cfi_def_cfa_offset 16
 307              		.cfi_offset 12, -16
 308 000c 55       		pushq	%rbp
 309              	.LCFI12:
 310              		.cfi_def_cfa_offset 24
 311              		.cfi_offset 6, -24
 312 000d 53       		pushq	%rbx
 313              	.LCFI13:
 314              		.cfi_def_cfa_offset 32
 315              		.cfi_offset 3, -32
 316 000e 4989FC   		movq	%rdi, %r12
 317 0011 4889F5   		movq	%rsi, %rbp
 612:src/mcu_msg.c ****         return;
 613:src/mcu_msg.c ****     }
 614:src/mcu_msg.c ****     for(i = 0; i < str.len; __msg_putc(*(str.s + i)), i++);
 318              		.loc 1 614 0
 319 0014 BB000000 		movl	$0, %ebx
GAS LISTING /tmp/cc45SYiz.s 			page 18


 319      00
 320 0019 EB11     		jmp	.L38
 321              	.LVL43:
 322              	.L39:
 323              		.loc 1 614 0 is_stmt 0 discriminator 3
 324 001b 0FB7C3   		movzwl	%bx, %eax
 325 001e 410FBE3C 		movsbl	(%r12,%rax), %edi
 325      04
 326 0023 FF150000 		call	*__msg_putc(%rip)
 326      0000
 327              	.LVL44:
 328 0029 83C301   		addl	$1, %ebx
 329              	.LVL45:
 330              	.L38:
 331              		.loc 1 614 0 discriminator 1
 332 002c 6639DD   		cmpw	%bx, %bp
 333 002f 77EA     		ja	.L39
 615:src/mcu_msg.c **** }
 334              		.loc 1 615 0 is_stmt 1
 335 0031 5B       		popq	%rbx
 336              	.LCFI14:
 337              		.cfi_def_cfa_offset 24
 338              	.LVL46:
 339 0032 5D       		popq	%rbp
 340              	.LCFI15:
 341              		.cfi_def_cfa_offset 16
 342 0033 415C     		popq	%r12
 343              	.LCFI16:
 344              		.cfi_def_cfa_offset 8
 345 0035 C3       		ret
 346              	.L41:
 347              		.cfi_restore 3
 348              		.cfi_restore 6
 349              		.cfi_restore 12
 350 0036 F3C3     		rep ret
 351              		.cfi_endproc
 352              	.LFE47:
 354              		.section	.text.__msg_print,"ax",@progbits
 356              	__msg_print:
 357              	.LFB48:
 616:src/mcu_msg.c **** 
 617:src/mcu_msg.c **** static void __msg_print(msg_t msg)
 618:src/mcu_msg.c **** {
 358              		.loc 1 618 0
 359              		.cfi_startproc
 360 0000 4883EC08 		subq	$8, %rsp
 361              	.LCFI17:
 362              		.cfi_def_cfa_offset 16
 619:src/mcu_msg.c ****     __msg_print_str(msg.content);
 363              		.loc 1 619 0
 364 0004 488B7C24 		movq	32(%rsp), %rdi
 364      20
 365 0009 488B7424 		movq	40(%rsp), %rsi
 365      28
 366 000e E8000000 		call	__msg_print_str
 366      00
 367              	.LVL47:
GAS LISTING /tmp/cc45SYiz.s 			page 19


 620:src/mcu_msg.c **** }
 368              		.loc 1 620 0
 369 0013 4883C408 		addq	$8, %rsp
 370              	.LCFI18:
 371              		.cfi_def_cfa_offset 8
 372 0017 C3       		ret
 373              		.cfi_endproc
 374              	.LFE48:
 376              		.section	.text.__msg_wrapper_print_obj,"ax",@progbits
 378              	__msg_wrapper_print_obj:
 379              	.LFB51:
 621:src/mcu_msg.c **** 
 622:src/mcu_msg.c **** /**
 623:src/mcu_msg.c ****  * @brief Create string handler and set the basic functions
 624:src/mcu_msg.c ****  * 
 625:src/mcu_msg.c ****  * @param putc expected print function, set to NULL if you don't need the print feature
 626:src/mcu_msg.c ****  * @return msg_string_hnd_t handler
 627:src/mcu_msg.c ****  */
 628:src/mcu_msg.c **** msg_hnd_t msg_hnd_create(int (*putc)(char))
 629:src/mcu_msg.c **** {
 630:src/mcu_msg.c ****     // TODO
 631:src/mcu_msg.c ****     msg_hnd_t hnd;
 632:src/mcu_msg.c ****     hnd.putc = __msg_putc = putc;            // init putchar
 633:src/mcu_msg.c ****     hnd.print_msg = __msg_print;
 634:src/mcu_msg.c ****     hnd.print_str = __msg_print_str;
 635:src/mcu_msg.c ****     hnd.print_int = __msg_print_int;
 636:src/mcu_msg.c ****     hnd.print_float = __msg_print_float;
 637:src/mcu_msg.c ****     hnd.print_wrapper_msg = __msg_wrapper_print_msg;
 638:src/mcu_msg.c ****     return hnd;
 639:src/mcu_msg.c **** }
 640:src/mcu_msg.c **** 
 641:src/mcu_msg.c **** static inline char __define_qmark(msg_str_t str)
 642:src/mcu_msg.c **** {
 643:src/mcu_msg.c ****     char *p = str.s;
 644:src/mcu_msg.c ****     while(__is_p_in_str(str, p) && *p) {
 645:src/mcu_msg.c ****         switch(*p) {
 646:src/mcu_msg.c ****             case '"' :  return '\'';
 647:src/mcu_msg.c ****             case '\'' : return '"';
 648:src/mcu_msg.c ****             default: break;
 649:src/mcu_msg.c ****         }
 650:src/mcu_msg.c ****         p++;
 651:src/mcu_msg.c ****     }
 652:src/mcu_msg.c ****     return '"'; // default
 653:src/mcu_msg.c **** }
 654:src/mcu_msg.c **** 
 655:src/mcu_msg.c **** #if MCU_MSG_USE_BUFFERING
 656:src/mcu_msg.c **** 
 657:src/mcu_msg.c **** // void msg_destroy_str_buff(msg_str_buff_t *buff)
 658:src/mcu_msg.c **** // {
 659:src/mcu_msg.c **** //     msg_destroy_string(&buff->buff);
 660:src/mcu_msg.c **** //     buff->p = NULL;
 661:src/mcu_msg.c **** // }
 662:src/mcu_msg.c **** 
 663:src/mcu_msg.c **** // void msg_clear_str_buff(msg_str_buff_t *buff) {
 664:src/mcu_msg.c **** //     msg_size_t i;
 665:src/mcu_msg.c **** //     for(i = 0; i < buff->buff.len; *(buff->buff.s + i) = '0', i++); //fill with 0
 666:src/mcu_msg.c **** //     buff->p = buff->buff.s; // reset positon
GAS LISTING /tmp/cc45SYiz.s 			page 20


 667:src/mcu_msg.c **** // }
 668:src/mcu_msg.c **** 
 669:src/mcu_msg.c **** // void msg_reset_str_buff(msg_str_buff_t *buff)
 670:src/mcu_msg.c **** // {
 671:src/mcu_msg.c **** //     buff->p = buff->buff.s; // reset positon
 672:src/mcu_msg.c **** // }
 673:src/mcu_msg.c **** 
 674:src/mcu_msg.c **** 
 675:src/mcu_msg.c **** // msg_str_buff_t msg_init_str_buff(char *buff, msg_size_t buff_size)
 676:src/mcu_msg.c **** // {
 677:src/mcu_msg.c **** //     msg_str_buff_t b;
 678:src/mcu_msg.c ****     
 679:src/mcu_msg.c **** //     b.buff.s = buff;
 680:src/mcu_msg.c **** //     b.p = buff;
 681:src/mcu_msg.c **** //     // if(buff_size < 1) {
 682:src/mcu_msg.c **** //     //     msg_destroy_str_buff(&b);   // retrun with an empty buff
 683:src/mcu_msg.c **** //     // } else {
 684:src/mcu_msg.c **** //     //     b.buff.len = buff_size - 1; // terminate with 0 necessary at the end of message
 685:src/mcu_msg.c **** //     // }
 686:src/mcu_msg.c **** //     b.buff.len = buff_size;
 687:src/mcu_msg.c **** //     return b;
 688:src/mcu_msg.c **** // }
 689:src/mcu_msg.c **** 
 690:src/mcu_msg.c **** // static msg_size_t __msg_putc_to_buff(msg_str_buff_t *buff, char c)
 691:src/mcu_msg.c **** // {
 692:src/mcu_msg.c **** //     if((buff->p - buff->buff.s) >= buff->buff.len) // return null if position is out of buffer
 693:src/mcu_msg.c **** //         return 0;
 694:src/mcu_msg.c **** //     *buff->p = c;
 695:src/mcu_msg.c **** //     buff->p++;
 696:src/mcu_msg.c **** //     return buff->buff.len - (buff->p - buff->buff.s); // return with the empty spaces
 697:src/mcu_msg.c **** // }
 698:src/mcu_msg.c **** 
 699:src/mcu_msg.c **** 
 700:src/mcu_msg.c **** // static msg_size_t __msg_print_int_to_buff(msg_str_buff_t *buff, int i)
 701:src/mcu_msg.c **** // {
 702:src/mcu_msg.c **** //     int8_t sign = i < 0 ? -1 : 1;
 703:src/mcu_msg.c **** //     long div;
 704:src/mcu_msg.c **** //     char dig;
 705:src/mcu_msg.c **** 
 706:src/mcu_msg.c **** //     if(!i) {
 707:src/mcu_msg.c **** //         __msg_putc_to_buff(buff, '0');
 708:src/mcu_msg.c **** //         return buff->p - buff->buff.s;
 709:src/mcu_msg.c **** //     }
 710:src/mcu_msg.c **** 
 711:src/mcu_msg.c **** //     switch(sign) {
 712:src/mcu_msg.c **** //         case -1: div = sizeof(int) >= 4 ? -1000000000L : -10000L; __msg_putc_to_buff(buff, '-');
 713:src/mcu_msg.c **** //         default: div = sizeof(int) >= 4 ?  1000000000L :  10000L; break;
 714:src/mcu_msg.c **** //     }
 715:src/mcu_msg.c **** //     while(div) {
 716:src/mcu_msg.c **** //         if(sign == -1 ? (i > div) : (i < div)) {
 717:src/mcu_msg.c **** //             div /= 10;
 718:src/mcu_msg.c **** //             continue;
 719:src/mcu_msg.c **** //         }
 720:src/mcu_msg.c **** //         dig = '0' + ((i / div) % 10);
 721:src/mcu_msg.c **** //         __msg_putc_to_buff(buff, dig);
 722:src/mcu_msg.c **** //         div /= 10;
 723:src/mcu_msg.c **** //     }
GAS LISTING /tmp/cc45SYiz.s 			page 21


 724:src/mcu_msg.c **** 
 725:src/mcu_msg.c **** //     return buff->buff.len - (buff->p - buff->buff.s);
 726:src/mcu_msg.c **** // }
 727:src/mcu_msg.c **** 
 728:src/mcu_msg.c **** // static msg_size_t __msg_print_float_to_buff(msg_str_buff_t *buff, float f, uint8_t prec)
 729:src/mcu_msg.c **** // {
 730:src/mcu_msg.c **** //     int i_part = f;
 731:src/mcu_msg.c **** //     float f_part = f - i_part;
 732:src/mcu_msg.c **** //     long mul = f < 0.0 ? -10 : 10;
 733:src/mcu_msg.c **** //     uint8_t j;
 734:src/mcu_msg.c **** //     char dig;
 735:src/mcu_msg.c **** 
 736:src/mcu_msg.c **** 
 737:src/mcu_msg.c **** //     if(!i_part) {
 738:src/mcu_msg.c **** //         if(mul < 0) __msg_putc_to_buff(buff, '-');
 739:src/mcu_msg.c **** //         __msg_putc_to_buff(buff, '0');
 740:src/mcu_msg.c **** //     } else {
 741:src/mcu_msg.c **** //         __msg_print_int_to_buff(buff, i_part);  
 742:src/mcu_msg.c **** //     }
 743:src/mcu_msg.c ****       
 744:src/mcu_msg.c **** //     __msg_putc_to_buff(buff, '.');
 745:src/mcu_msg.c **** //     for(j = 0; j < prec; mul *= 10, j++) {
 746:src/mcu_msg.c **** //         dig = '0' + ((long)(f_part * mul) % 10);
 747:src/mcu_msg.c **** //         __msg_putc_to_buff(buff, dig);
 748:src/mcu_msg.c **** //     }
 749:src/mcu_msg.c **** //     return buff->buff.len - (buff->p - buff->buff.s);
 750:src/mcu_msg.c **** // }
 751:src/mcu_msg.c **** 
 752:src/mcu_msg.c **** // static msg_size_t __msg_print_str_to_buff(msg_str_buff_t *buff, msg_str_t str)
 753:src/mcu_msg.c **** // {
 754:src/mcu_msg.c **** //     msg_size_t i;
 755:src/mcu_msg.c **** //     for(i = 0; i < str.len; i++) {
 756:src/mcu_msg.c **** //         if(!__msg_putc_to_buff(buff, *(str.s + i))) return 0;
 757:src/mcu_msg.c **** //     }
 758:src/mcu_msg.c **** //     return buff->buff.len - (buff->p - buff->buff.s);
 759:src/mcu_msg.c **** // }
 760:src/mcu_msg.c **** #endif
 761:src/mcu_msg.c **** 
 762:src/mcu_msg.c **** /////////////////////////////////////////////////////////////////////////////////////////////
 763:src/mcu_msg.c **** //                                     Wrapper functions                                   //
 764:src/mcu_msg.c **** /////////////////////////////////////////////////////////////////////////////////////////////
 765:src/mcu_msg.c **** #if MCU_MSG_USE_WRAPPER
 766:src/mcu_msg.c **** 
 767:src/mcu_msg.c **** // msg_wrap_hnd_t msg_wrapper_hnd_create(int (*putc)(char))
 768:src/mcu_msg.c **** // {
 769:src/mcu_msg.c **** //     msg_wrap_hnd_t hnd;
 770:src/mcu_msg.c **** //     __msg_putc = putc; // init putchar
 771:src/mcu_msg.c **** //     hnd.print = __msg_wrapper_print_msg;
 772:src/mcu_msg.c **** //     hnd.print_obj = __msg_wrapper_print_obj;
 773:src/mcu_msg.c **** //     hnd.print_cmd = __msg_wrapper_print_cmd;
 774:src/mcu_msg.c **** // #if MCU_MSG_USE_BUFFERING
 775:src/mcu_msg.c **** //     hnd.print_to_buff = __msg_wrapper_print_msg_to_buff;
 776:src/mcu_msg.c **** //     // hnd.print_obj_to_buff = __msg_wrapper_print_obj_to_buff;
 777:src/mcu_msg.c **** //     // hnd.print_cmd_to_buff = __msg_wrapper_print_cmd_to_buff;
 778:src/mcu_msg.c **** // #endif
 779:src/mcu_msg.c **** //     return hnd;
 780:src/mcu_msg.c **** // }
GAS LISTING /tmp/cc45SYiz.s 			page 22


 781:src/mcu_msg.c **** 
 782:src/mcu_msg.c **** #define __print_key_equ(key_str)        __msg_putc(__CTRL_KEY_FLAG); \
 783:src/mcu_msg.c ****                                         __msg_print_str(key_str);    \
 784:src/mcu_msg.c ****                                         __msg_putc(__CTRL_KEY_EQU)
 785:src/mcu_msg.c **** 
 786:src/mcu_msg.c **** #define __print_msg_start(msg)          __msg_putc(__CTRL_MSG_FLAG); \
 787:src/mcu_msg.c ****                                         __msg_print_str(msg.id);     \
 788:src/mcu_msg.c ****                                         __msg_putc(__CTRL_START_MSG)
 789:src/mcu_msg.c **** 
 790:src/mcu_msg.c **** 
 791:src/mcu_msg.c **** #define __print_obj_start(obj)          __msg_putc(__CTRL_OBJ_FLAG);  \
 792:src/mcu_msg.c ****                                         __msg_print_str(obj.id);      \
 793:src/mcu_msg.c ****                                         __msg_putc(__CTRL_START_OBJ)  
 794:src/mcu_msg.c **** 
 795:src/mcu_msg.c **** static void __msg_wrapper_print_obj(msg_wrap_obj_t obj)
 796:src/mcu_msg.c **** {
 380              		.loc 1 796 0
 381              		.cfi_startproc
 382 0000 4154     		pushq	%r12
 383              	.LCFI19:
 384              		.cfi_def_cfa_offset 16
 385              		.cfi_offset 12, -16
 386 0002 55       		pushq	%rbp
 387              	.LCFI20:
 388              		.cfi_def_cfa_offset 24
 389              		.cfi_offset 6, -24
 390 0003 53       		pushq	%rbx
 391              	.LCFI21:
 392              		.cfi_def_cfa_offset 32
 393              		.cfi_offset 3, -32
 797:src/mcu_msg.c ****     msg_wrap_str_t *sp;
 798:src/mcu_msg.c ****     msg_wrap_int_t *ip;
 799:src/mcu_msg.c ****     msg_wrap_float_t *fp;
 800:src/mcu_msg.c ****     char qmark;
 801:src/mcu_msg.c **** 
 802:src/mcu_msg.c ****     __print_obj_start(obj);
 394              		.loc 1 802 0
 395 0004 BF400000 		movl	$64, %edi
 395      00
 396 0009 FF150000 		call	*__msg_putc(%rip)
 396      0000
 397              	.LVL48:
 398 000f 488B7C24 		movq	32(%rsp), %rdi
 398      20
 399 0014 488B7424 		movq	40(%rsp), %rsi
 399      28
 400 0019 E8000000 		call	__msg_print_str
 400      00
 401              	.LVL49:
 402 001e BF280000 		movl	$40, %edi
 402      00
 403 0023 FF150000 		call	*__msg_putc(%rip)
 403      0000
 404              	.LVL50:
 803:src/mcu_msg.c ****     
 804:src/mcu_msg.c **** 
 805:src/mcu_msg.c ****     // print integers
GAS LISTING /tmp/cc45SYiz.s 			page 23


 806:src/mcu_msg.c ****     
 807:src/mcu_msg.c ****     for(ip = obj.int_queue; ip != NULL; ip = ip->next) {
 405              		.loc 1 807 0
 406 0029 4C8B6424 		movq	48(%rsp), %r12
 406      30
 407              	.LVL51:
 408 002e 4C89E3   		movq	%r12, %rbx
 409 0031 EB04     		jmp	.L47
 410              	.LVL52:
 411              	.L48:
 412              		.loc 1 807 0 is_stmt 0 discriminator 2
 413 0033 488B5B18 		movq	24(%rbx), %rbx
 414              	.LVL53:
 415              	.L47:
 416              		.loc 1 807 0 discriminator 1
 417 0037 4885DB   		testq	%rbx, %rbx
 418 003a 743E     		je	.L67
 808:src/mcu_msg.c ****         __print_key_equ(ip->id);
 419              		.loc 1 808 0 is_stmt 1
 420 003c BF240000 		movl	$36, %edi
 420      00
 421 0041 FF150000 		call	*__msg_putc(%rip)
 421      0000
 422              	.LVL54:
 423 0047 488B3B   		movq	(%rbx), %rdi
 424 004a 488B7308 		movq	8(%rbx), %rsi
 425 004e E8000000 		call	__msg_print_str
 425      00
 426              	.LVL55:
 427 0053 BF3D0000 		movl	$61, %edi
 427      00
 428 0058 FF150000 		call	*__msg_putc(%rip)
 428      0000
 429              	.LVL56:
 809:src/mcu_msg.c ****         __msg_print_int(ip->val);
 430              		.loc 1 809 0
 431 005e 8B7B10   		movl	16(%rbx), %edi
 432 0061 E8000000 		call	__msg_print_int
 432      00
 433              	.LVL57:
 810:src/mcu_msg.c ****         if(ip->next != NULL) __msg_putc(__CTRL_KEY_SEP);
 434              		.loc 1 810 0
 435 0066 48837B18 		cmpq	$0, 24(%rbx)
 435      00
 436 006b 74C6     		je	.L48
 437              		.loc 1 810 0 is_stmt 0 discriminator 1
 438 006d BF3B0000 		movl	$59, %edi
 438      00
 439 0072 FF150000 		call	*__msg_putc(%rip)
 439      0000
 440              	.LVL58:
 441 0078 EBB9     		jmp	.L48
 442              	.L67:
 811:src/mcu_msg.c ****     }
 812:src/mcu_msg.c **** 
 813:src/mcu_msg.c ****     // print floats
 814:src/mcu_msg.c ****     if(obj.float_queue != NULL && obj.int_queue != NULL) __msg_putc(__CTRL_KEY_SEP);
GAS LISTING /tmp/cc45SYiz.s 			page 24


 443              		.loc 1 814 0 is_stmt 1
 444 007a 488B6C24 		movq	56(%rsp), %rbp
 444      38
 445 007f 4885ED   		testq	%rbp, %rbp
 446 0082 7410     		je	.L50
 447              		.loc 1 814 0 is_stmt 0 discriminator 1
 448 0084 4D85E4   		testq	%r12, %r12
 449 0087 740B     		je	.L50
 450              		.loc 1 814 0 discriminator 2
 451 0089 BF3B0000 		movl	$59, %edi
 451      00
 452 008e FF150000 		call	*__msg_putc(%rip)
 452      0000
 453              	.LVL59:
 454              	.L50:
 807:src/mcu_msg.c ****         __print_key_equ(ip->id);
 455              		.loc 1 807 0 is_stmt 1 discriminator 1
 456 0094 4889EB   		movq	%rbp, %rbx
 457              	.LVL60:
 458 0097 EB04     		jmp	.L51
 459              	.LVL61:
 460              	.L52:
 815:src/mcu_msg.c ****     for(fp = obj.float_queue; fp != NULL; fp = fp->next) {
 461              		.loc 1 815 0 discriminator 2
 462 0099 488B5B18 		movq	24(%rbx), %rbx
 463              	.LVL62:
 464              	.L51:
 465              		.loc 1 815 0 is_stmt 0 discriminator 1
 466 009d 4885DB   		testq	%rbx, %rbx
 467 00a0 7444     		je	.L68
 816:src/mcu_msg.c ****         __print_key_equ(fp->id);
 468              		.loc 1 816 0 is_stmt 1
 469 00a2 BF240000 		movl	$36, %edi
 469      00
 470 00a7 FF150000 		call	*__msg_putc(%rip)
 470      0000
 471              	.LVL63:
 472 00ad 488B3B   		movq	(%rbx), %rdi
 473 00b0 488B7308 		movq	8(%rbx), %rsi
 474 00b4 E8000000 		call	__msg_print_str
 474      00
 475              	.LVL64:
 476 00b9 BF3D0000 		movl	$61, %edi
 476      00
 477 00be FF150000 		call	*__msg_putc(%rip)
 477      0000
 478              	.LVL65:
 817:src/mcu_msg.c ****         __msg_print_float(fp->val, fp->prec);
 479              		.loc 1 817 0
 480 00c4 0FB67B14 		movzbl	20(%rbx), %edi
 481 00c8 F30F1043 		movss	16(%rbx), %xmm0
 481      10
 482 00cd E8000000 		call	__msg_print_float
 482      00
 483              	.LVL66:
 818:src/mcu_msg.c ****         if(fp->next != NULL) __msg_putc(__CTRL_KEY_SEP);
 484              		.loc 1 818 0
GAS LISTING /tmp/cc45SYiz.s 			page 25


 485 00d2 48837B18 		cmpq	$0, 24(%rbx)
 485      00
 486 00d7 74C0     		je	.L52
 487              		.loc 1 818 0 is_stmt 0 discriminator 1
 488 00d9 BF3B0000 		movl	$59, %edi
 488      00
 489 00de FF150000 		call	*__msg_putc(%rip)
 489      0000
 490              	.LVL67:
 491 00e4 EBB3     		jmp	.L52
 492              	.L68:
 819:src/mcu_msg.c ****     }
 820:src/mcu_msg.c ****     // print strings
 821:src/mcu_msg.c ****     if(obj.string_queue != NULL && obj.float_queue != NULL) __msg_putc(__CTRL_KEY_SEP);
 493              		.loc 1 821 0 is_stmt 1
 494 00e6 488B5C24 		movq	64(%rsp), %rbx
 494      40
 495              	.LVL68:
 496 00eb 4885DB   		testq	%rbx, %rbx
 497 00ee 744E     		je	.L55
 498              		.loc 1 821 0 is_stmt 0 discriminator 1
 499 00f0 4885ED   		testq	%rbp, %rbp
 500 00f3 7449     		je	.L55
 501              		.loc 1 821 0 discriminator 2
 502 00f5 BF3B0000 		movl	$59, %edi
 502      00
 503 00fa FF150000 		call	*__msg_putc(%rip)
 503      0000
 504              	.LVL69:
 505 0100 EB3C     		jmp	.L55
 506              	.LVL70:
 507              	.L58:
 508              	.LBB56:
 509              	.LBB57:
 646:src/mcu_msg.c ****             case '\'' : return '"';
 510              		.loc 1 646 0 is_stmt 1
 511 0102 BD270000 		movl	$39, %ebp
 511      00
 512              	.L59:
 513              	.LVL71:
 514              	.LBE57:
 515              	.LBE56:
 822:src/mcu_msg.c ****     for(sp = obj.string_queue; sp != NULL; sp = sp->next) {
 823:src/mcu_msg.c ****         __print_key_equ(sp->id);
 824:src/mcu_msg.c ****         qmark = __define_qmark(sp->content);
 825:src/mcu_msg.c ****         __msg_putc(qmark);
 516              		.loc 1 825 0
 517 0107 400FBEED 		movsbl	%bpl, %ebp
 518 010b 89EF     		movl	%ebp, %edi
 519 010d FF150000 		call	*__msg_putc(%rip)
 519      0000
 520              	.LVL72:
 826:src/mcu_msg.c ****         __msg_print_str(sp->content);
 521              		.loc 1 826 0
 522 0113 488B7B10 		movq	16(%rbx), %rdi
 523 0117 488B7318 		movq	24(%rbx), %rsi
 524 011b E8000000 		call	__msg_print_str
GAS LISTING /tmp/cc45SYiz.s 			page 26


 524      00
 525              	.LVL73:
 827:src/mcu_msg.c ****         __msg_putc(qmark);
 526              		.loc 1 827 0
 527 0120 89EF     		movl	%ebp, %edi
 528 0122 FF150000 		call	*__msg_putc(%rip)
 528      0000
 529              	.LVL74:
 828:src/mcu_msg.c ****         if(sp->next != NULL) __msg_putc(__CTRL_KEY_SEP);
 530              		.loc 1 828 0
 531 0128 48837B20 		cmpq	$0, 32(%rbx)
 531      00
 532 012d 740B     		je	.L61
 533              		.loc 1 828 0 is_stmt 0 discriminator 1
 534 012f BF3B0000 		movl	$59, %edi
 534      00
 535 0134 FF150000 		call	*__msg_putc(%rip)
 535      0000
 536              	.LVL75:
 537              	.L61:
 822:src/mcu_msg.c ****         __print_key_equ(sp->id);
 538              		.loc 1 822 0 is_stmt 1 discriminator 2
 539 013a 488B5B20 		movq	32(%rbx), %rbx
 540              	.LVL76:
 541              	.L55:
 822:src/mcu_msg.c ****         __print_key_equ(sp->id);
 542              		.loc 1 822 0 is_stmt 0 discriminator 1
 543 013e 4885DB   		testq	%rbx, %rbx
 544 0141 7472     		je	.L69
 823:src/mcu_msg.c ****         qmark = __define_qmark(sp->content);
 545              		.loc 1 823 0 is_stmt 1
 546 0143 BF240000 		movl	$36, %edi
 546      00
 547 0148 FF150000 		call	*__msg_putc(%rip)
 547      0000
 548              	.LVL77:
 549 014e 488B3B   		movq	(%rbx), %rdi
 550 0151 488B7308 		movq	8(%rbx), %rsi
 551 0155 E8000000 		call	__msg_print_str
 551      00
 552              	.LVL78:
 553 015a BF3D0000 		movl	$61, %edi
 553      00
 554 015f FF150000 		call	*__msg_putc(%rip)
 554      0000
 555              	.LVL79:
 556 0165 488B4B10 		movq	16(%rbx), %rcx
 557 0169 488B7B18 		movq	24(%rbx), %rdi
 558              	.LBB61:
 559              	.LBB60:
 643:src/mcu_msg.c ****     while(__is_p_in_str(str, p) && *p) {
 560              		.loc 1 643 0
 561 016d 4889CA   		movq	%rcx, %rdx
 562              	.LVL80:
 563              	.L56:
 564              	.LBB58:
 565              	.LBB59:
GAS LISTING /tmp/cc45SYiz.s 			page 27


 188:src/mcu_msg.c **** }
 566              		.loc 1 188 0
 567 0170 4889D6   		movq	%rdx, %rsi
 568 0173 4829CE   		subq	%rcx, %rsi
 569 0176 0FB7C7   		movzwl	%di, %eax
 570              	.LVL81:
 571              	.LBE59:
 572              	.LBE58:
 644:src/mcu_msg.c ****         switch(*p) {
 573              		.loc 1 644 0
 574 0179 4839C6   		cmpq	%rax, %rsi
 575 017c 7D2D     		jge	.L64
 576 017e 0FB602   		movzbl	(%rdx), %eax
 577 0181 84C0     		testb	%al, %al
 578 0183 7412     		je	.L70
 645:src/mcu_msg.c ****             case '"' :  return '\'';
 579              		.loc 1 645 0
 580 0185 3C22     		cmpb	$34, %al
 581 0187 0F8475FF 		je	.L58
 581      FFFF
 582 018d 3C27     		cmpb	$39, %al
 583 018f 7410     		je	.L63
 650:src/mcu_msg.c ****     }
 584              		.loc 1 650 0
 585 0191 4883C201 		addq	$1, %rdx
 586              	.LVL82:
 587 0195 EBD9     		jmp	.L56
 588              	.L70:
 652:src/mcu_msg.c **** }
 589              		.loc 1 652 0
 590 0197 BD220000 		movl	$34, %ebp
 590      00
 591 019c E966FFFF 		jmp	.L59
 591      FF
 592              	.L63:
 647:src/mcu_msg.c ****             default: break;
 593              		.loc 1 647 0
 594 01a1 BD220000 		movl	$34, %ebp
 594      00
 595 01a6 E95CFFFF 		jmp	.L59
 595      FF
 596              	.L64:
 652:src/mcu_msg.c **** }
 597              		.loc 1 652 0
 598 01ab BD220000 		movl	$34, %ebp
 598      00
 599 01b0 E952FFFF 		jmp	.L59
 599      FF
 600              	.LVL83:
 601              	.L69:
 602              	.LBE60:
 603              	.LBE61:
 829:src/mcu_msg.c ****     }
 830:src/mcu_msg.c **** 
 831:src/mcu_msg.c ****     __msg_putc(__CTRL_STOP_OBJ);
 604              		.loc 1 831 0
 605 01b5 BF290000 		movl	$41, %edi
GAS LISTING /tmp/cc45SYiz.s 			page 28


 605      00
 606 01ba FF150000 		call	*__msg_putc(%rip)
 606      0000
 607              	.LVL84:
 832:src/mcu_msg.c **** }
 608              		.loc 1 832 0
 609 01c0 5B       		popq	%rbx
 610              	.LCFI22:
 611              		.cfi_def_cfa_offset 24
 612              	.LVL85:
 613 01c1 5D       		popq	%rbp
 614              	.LCFI23:
 615              		.cfi_def_cfa_offset 16
 616 01c2 415C     		popq	%r12
 617              	.LCFI24:
 618              		.cfi_def_cfa_offset 8
 619 01c4 C3       		ret
 620              		.cfi_endproc
 621              	.LFE51:
 623              		.section	.rodata.__msg_wrapper_print_msg.str1.1,"aMS",@progbits,1
 624              	.LC2:
 625 0000 3E3E00   		.string	">>"
 626              		.section	.text.__msg_wrapper_print_msg,"ax",@progbits
 628              	__msg_wrapper_print_msg:
 629              	.LFB53:
 833:src/mcu_msg.c **** 
 834:src/mcu_msg.c **** 
 835:src/mcu_msg.c **** 
 836:src/mcu_msg.c **** static inline void __msg_wrapper_print_cmd(msg_wrap_cmd_t cmd)
 837:src/mcu_msg.c **** {
 838:src/mcu_msg.c ****     if(cmd.cmd.s != NULL) {
 839:src/mcu_msg.c ****         __msg_putc(__CTRL_CMD_START_FLAG);
 840:src/mcu_msg.c ****         __msg_print_str(cmd.cmd);
 841:src/mcu_msg.c ****         __msg_putc(__CTRL_CMD_STOP_FLAG);
 842:src/mcu_msg.c ****     }
 843:src/mcu_msg.c **** }
 844:src/mcu_msg.c **** 
 845:src/mcu_msg.c **** 
 846:src/mcu_msg.c **** 
 847:src/mcu_msg.c **** static void __msg_wrapper_print_msg(msg_wrap_t msg)
 848:src/mcu_msg.c **** {
 630              		.loc 1 848 0
 631              		.cfi_startproc
 849:src/mcu_msg.c ****     msg_wrap_obj_t *pobj;
 850:src/mcu_msg.c ****     msg_wrap_cmd_t *pcmd;
 851:src/mcu_msg.c **** 
 852:src/mcu_msg.c ****     if(!__msg_putc || msg.id.s == NULL) // return if putchar not implemented
 632              		.loc 1 852 0
 633 0000 488B0500 		movq	__msg_putc(%rip), %rax
 633      000000
 634 0007 4885C0   		testq	%rax, %rax
 635 000a 0F84D000 		je	.L79
 635      0000
 848:src/mcu_msg.c ****     msg_wrap_obj_t *pobj;
 636              		.loc 1 848 0 discriminator 1
 637 0010 53       		pushq	%rbx
 638              	.LCFI25:
GAS LISTING /tmp/cc45SYiz.s 			page 29


 639              		.cfi_def_cfa_offset 16
 640              		.cfi_offset 3, -16
 641 0011 4883EC20 		subq	$32, %rsp
 642              	.LCFI26:
 643              		.cfi_def_cfa_offset 48
 644              		.loc 1 852 0 discriminator 1
 645 0015 48837C24 		cmpq	$0, 48(%rsp)
 645      3000
 646 001b 0F84B900 		je	.L71
 646      0000
 853:src/mcu_msg.c ****         return;
 854:src/mcu_msg.c ****     __print_msg_start(msg);
 647              		.loc 1 854 0
 648 0021 BF230000 		movl	$35, %edi
 648      00
 649 0026 FFD0     		call	*%rax
 650              	.LVL86:
 651 0028 488B7C24 		movq	48(%rsp), %rdi
 651      30
 652 002d 488B7424 		movq	56(%rsp), %rsi
 652      38
 653 0032 E8000000 		call	__msg_print_str
 653      00
 654              	.LVL87:
 655 0037 BF7B0000 		movl	$123, %edi
 655      00
 656 003c FF150000 		call	*__msg_putc(%rip)
 656      0000
 657              	.LVL88:
 855:src/mcu_msg.c ****     
 856:src/mcu_msg.c ****     pcmd = msg.cmd_queue;
 658              		.loc 1 856 0
 659 0042 488B5C24 		movq	72(%rsp), %rbx
 659      48
 660              	.LVL89:
 857:src/mcu_msg.c ****     while(pcmd != NULL) {
 661              		.loc 1 857 0
 662 0047 EB10     		jmp	.L73
 663              	.L74:
 858:src/mcu_msg.c ****         __msg_wrapper_print_cmd(*pcmd);
 859:src/mcu_msg.c ****         pcmd = pcmd->next;   
 664              		.loc 1 859 0
 665 0049 488B5B10 		movq	16(%rbx), %rbx
 666              	.LVL90:
 667              	.LBB66:
 668              	.LBB67:
 669              		.file 2 "/usr/include/x86_64-linux-gnu/bits/stdio2.h"
   1:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** /* Checking macros for stdio functions.
   2:/usr/include/x86_64-linux-gnu/bits/stdio2.h ****    Copyright (C) 2004-2018 Free Software Foundation, Inc.
   3:/usr/include/x86_64-linux-gnu/bits/stdio2.h ****    This file is part of the GNU C Library.
   4:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** 
   5:/usr/include/x86_64-linux-gnu/bits/stdio2.h ****    The GNU C Library is free software; you can redistribute it and/or
   6:/usr/include/x86_64-linux-gnu/bits/stdio2.h ****    modify it under the terms of the GNU Lesser General Public
   7:/usr/include/x86_64-linux-gnu/bits/stdio2.h ****    License as published by the Free Software Foundation; either
   8:/usr/include/x86_64-linux-gnu/bits/stdio2.h ****    version 2.1 of the License, or (at your option) any later version.
   9:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** 
  10:/usr/include/x86_64-linux-gnu/bits/stdio2.h ****    The GNU C Library is distributed in the hope that it will be useful,
GAS LISTING /tmp/cc45SYiz.s 			page 30


  11:/usr/include/x86_64-linux-gnu/bits/stdio2.h ****    but WITHOUT ANY WARRANTY; without even the implied warranty of
  12:/usr/include/x86_64-linux-gnu/bits/stdio2.h ****    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
  13:/usr/include/x86_64-linux-gnu/bits/stdio2.h ****    Lesser General Public License for more details.
  14:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** 
  15:/usr/include/x86_64-linux-gnu/bits/stdio2.h ****    You should have received a copy of the GNU Lesser General Public
  16:/usr/include/x86_64-linux-gnu/bits/stdio2.h ****    License along with the GNU C Library; if not, see
  17:/usr/include/x86_64-linux-gnu/bits/stdio2.h ****    <http://www.gnu.org/licenses/>.  */
  18:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** 
  19:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** #ifndef _STDIO_H
  20:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** # error "Never include <bits/stdio2.h> directly; use <stdio.h> instead."
  21:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** #endif
  22:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** 
  23:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** extern int __sprintf_chk (char *__restrict __s, int __flag, size_t __slen,
  24:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** 			  const char *__restrict __format, ...) __THROW;
  25:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** extern int __vsprintf_chk (char *__restrict __s, int __flag, size_t __slen,
  26:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** 			   const char *__restrict __format,
  27:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** 			   _G_va_list __ap) __THROW;
  28:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** 
  29:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** #ifdef __va_arg_pack
  30:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** __fortify_function int
  31:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** __NTH (sprintf (char *__restrict __s, const char *__restrict __fmt, ...))
  32:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** {
  33:/usr/include/x86_64-linux-gnu/bits/stdio2.h ****   return __builtin___sprintf_chk (__s, __USE_FORTIFY_LEVEL - 1,
  34:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** 				  __bos (__s), __fmt, __va_arg_pack ());
  35:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** }
  36:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** #elif !defined __cplusplus
  37:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** # define sprintf(str, ...) \
  38:/usr/include/x86_64-linux-gnu/bits/stdio2.h ****   __builtin___sprintf_chk (str, __USE_FORTIFY_LEVEL - 1, __bos (str), \
  39:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** 			   __VA_ARGS__)
  40:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** #endif
  41:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** 
  42:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** __fortify_function int
  43:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** __NTH (vsprintf (char *__restrict __s, const char *__restrict __fmt,
  44:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** 		 _G_va_list __ap))
  45:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** {
  46:/usr/include/x86_64-linux-gnu/bits/stdio2.h ****   return __builtin___vsprintf_chk (__s, __USE_FORTIFY_LEVEL - 1,
  47:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** 				   __bos (__s), __fmt, __ap);
  48:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** }
  49:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** 
  50:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** #if defined __USE_ISOC99 || defined __USE_UNIX98
  51:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** 
  52:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** extern int __snprintf_chk (char *__restrict __s, size_t __n, int __flag,
  53:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** 			   size_t __slen, const char *__restrict __format,
  54:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** 			   ...) __THROW;
  55:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** extern int __vsnprintf_chk (char *__restrict __s, size_t __n, int __flag,
  56:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** 			    size_t __slen, const char *__restrict __format,
  57:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** 			    _G_va_list __ap) __THROW;
  58:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** 
  59:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** # ifdef __va_arg_pack
  60:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** __fortify_function int
  61:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** __NTH (snprintf (char *__restrict __s, size_t __n,
  62:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** 		 const char *__restrict __fmt, ...))
  63:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** {
  64:/usr/include/x86_64-linux-gnu/bits/stdio2.h ****   return __builtin___snprintf_chk (__s, __n, __USE_FORTIFY_LEVEL - 1,
  65:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** 				   __bos (__s), __fmt, __va_arg_pack ());
  66:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** }
  67:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** # elif !defined __cplusplus
GAS LISTING /tmp/cc45SYiz.s 			page 31


  68:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** #  define snprintf(str, len, ...) \
  69:/usr/include/x86_64-linux-gnu/bits/stdio2.h ****   __builtin___snprintf_chk (str, len, __USE_FORTIFY_LEVEL - 1, __bos (str), \
  70:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** 			    __VA_ARGS__)
  71:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** # endif
  72:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** 
  73:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** __fortify_function int
  74:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** __NTH (vsnprintf (char *__restrict __s, size_t __n,
  75:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** 		  const char *__restrict __fmt, _G_va_list __ap))
  76:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** {
  77:/usr/include/x86_64-linux-gnu/bits/stdio2.h ****   return __builtin___vsnprintf_chk (__s, __n, __USE_FORTIFY_LEVEL - 1,
  78:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** 				    __bos (__s), __fmt, __ap);
  79:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** }
  80:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** 
  81:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** #endif
  82:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** 
  83:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** #if __USE_FORTIFY_LEVEL > 1
  84:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** 
  85:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** extern int __fprintf_chk (FILE *__restrict __stream, int __flag,
  86:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** 			  const char *__restrict __format, ...);
  87:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** extern int __printf_chk (int __flag, const char *__restrict __format, ...);
  88:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** extern int __vfprintf_chk (FILE *__restrict __stream, int __flag,
  89:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** 			   const char *__restrict __format, _G_va_list __ap);
  90:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** extern int __vprintf_chk (int __flag, const char *__restrict __format,
  91:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** 			  _G_va_list __ap);
  92:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** 
  93:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** # ifdef __va_arg_pack
  94:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** __fortify_function int
  95:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** fprintf (FILE *__restrict __stream, const char *__restrict __fmt, ...)
  96:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** {
  97:/usr/include/x86_64-linux-gnu/bits/stdio2.h ****   return __fprintf_chk (__stream, __USE_FORTIFY_LEVEL - 1, __fmt,
  98:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** 			__va_arg_pack ());
  99:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** }
 100:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** 
 101:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** __fortify_function int
 102:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** printf (const char *__restrict __fmt, ...)
 103:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** {
 104:/usr/include/x86_64-linux-gnu/bits/stdio2.h ****   return __printf_chk (__USE_FORTIFY_LEVEL - 1, __fmt, __va_arg_pack ());
 670              		.loc 2 104 0
 671 004d 488D3D00 		leaq	.LC2(%rip), %rdi
 671      000000
 672 0054 E8000000 		call	puts@PLT
 672      00
 673              	.LVL91:
 674              	.L73:
 675              	.LBE67:
 676              	.LBE66:
 857:src/mcu_msg.c ****         __msg_wrapper_print_cmd(*pcmd);
 677              		.loc 1 857 0
 678 0059 4885DB   		testq	%rbx, %rbx
 679 005c 7447     		je	.L82
 680 005e 488B03   		movq	(%rbx), %rax
 681 0061 488B4B08 		movq	8(%rbx), %rcx
 682 0065 4889C2   		movq	%rax, %rdx
 683 0068 48890424 		movq	%rax, (%rsp)
 684 006c 48894C24 		movq	%rcx, 8(%rsp)
 684      08
 685 0071 488B4310 		movq	16(%rbx), %rax
GAS LISTING /tmp/cc45SYiz.s 			page 32


 686 0075 48894424 		movq	%rax, 16(%rsp)
 686      10
 687              	.LBB68:
 688              	.LBB69:
 838:src/mcu_msg.c ****         __msg_putc(__CTRL_CMD_START_FLAG);
 689              		.loc 1 838 0
 690 007a 4885D2   		testq	%rdx, %rdx
 691 007d 74CA     		je	.L74
 839:src/mcu_msg.c ****         __msg_print_str(cmd.cmd);
 692              		.loc 1 839 0
 693 007f BF3C0000 		movl	$60, %edi
 693      00
 694 0084 FF150000 		call	*__msg_putc(%rip)
 694      0000
 695              	.LVL92:
 840:src/mcu_msg.c ****         __msg_putc(__CTRL_CMD_STOP_FLAG);
 696              		.loc 1 840 0
 697 008a 488B3C24 		movq	(%rsp), %rdi
 698 008e 488B7424 		movq	8(%rsp), %rsi
 698      08
 699 0093 E8000000 		call	__msg_print_str
 699      00
 700              	.LVL93:
 841:src/mcu_msg.c ****     }
 701              		.loc 1 841 0
 702 0098 BF3E0000 		movl	$62, %edi
 702      00
 703 009d FF150000 		call	*__msg_putc(%rip)
 703      0000
 704              	.LVL94:
 705 00a3 EBA4     		jmp	.L74
 706              	.L82:
 707              	.LBE69:
 708              	.LBE68:
 860:src/mcu_msg.c ****         printf(">>\n");
 861:src/mcu_msg.c ****     }
 862:src/mcu_msg.c ****     pobj = msg.obj_queue;
 709              		.loc 1 862 0
 710 00a5 488B5C24 		movq	64(%rsp), %rbx
 710      40
 711              	.LVL95:
 863:src/mcu_msg.c ****     while(pobj != NULL) {
 712              		.loc 1 863 0
 713 00aa EB1E     		jmp	.L76
 714              	.L77:
 864:src/mcu_msg.c ****         __msg_wrapper_print_obj(*pobj);
 715              		.loc 1 864 0
 716 00ac FF7328   		pushq	40(%rbx)
 717              	.LCFI27:
 718              		.cfi_def_cfa_offset 56
 719 00af FF7320   		pushq	32(%rbx)
 720              	.LCFI28:
 721              		.cfi_def_cfa_offset 64
 722 00b2 FF7318   		pushq	24(%rbx)
 723              	.LCFI29:
 724              		.cfi_def_cfa_offset 72
 725 00b5 FF7310   		pushq	16(%rbx)
GAS LISTING /tmp/cc45SYiz.s 			page 33


 726              	.LCFI30:
 727              		.cfi_def_cfa_offset 80
 728 00b8 FF7308   		pushq	8(%rbx)
 729              	.LCFI31:
 730              		.cfi_def_cfa_offset 88
 731 00bb FF33     		pushq	(%rbx)
 732              	.LCFI32:
 733              		.cfi_def_cfa_offset 96
 734 00bd E8000000 		call	__msg_wrapper_print_obj
 734      00
 735              	.LVL96:
 865:src/mcu_msg.c ****         pobj = pobj->next;  
 736              		.loc 1 865 0
 737 00c2 488B5B28 		movq	40(%rbx), %rbx
 738              	.LVL97:
 739 00c6 4883C430 		addq	$48, %rsp
 740              	.LCFI33:
 741              		.cfi_def_cfa_offset 48
 742              	.L76:
 863:src/mcu_msg.c ****     while(pobj != NULL) {
 743              		.loc 1 863 0
 744 00ca 4885DB   		testq	%rbx, %rbx
 745 00cd 75DD     		jne	.L77
 866:src/mcu_msg.c ****     }
 867:src/mcu_msg.c ****     __msg_putc(__CTRL_STOP_MSG);
 746              		.loc 1 867 0
 747 00cf BF7D0000 		movl	$125, %edi
 747      00
 748 00d4 FF150000 		call	*__msg_putc(%rip)
 748      0000
 749              	.LVL98:
 750              	.L71:
 868:src/mcu_msg.c **** }
 751              		.loc 1 868 0
 752 00da 4883C420 		addq	$32, %rsp
 753              	.LCFI34:
 754              		.cfi_def_cfa_offset 16
 755 00de 5B       		popq	%rbx
 756              	.LCFI35:
 757              		.cfi_def_cfa_offset 8
 758 00df C3       		ret
 759              	.L79:
 760              		.cfi_restore 3
 761 00e0 F3C3     		rep ret
 762              		.cfi_endproc
 763              	.LFE53:
 765              		.section	.text.msg_destroy_string,"ax",@progbits
 766              		.globl	msg_destroy_string
 768              	msg_destroy_string:
 769              	.LFB27:
  74:src/mcu_msg.c ****     str->s = NULL;
 770              		.loc 1 74 0
 771              		.cfi_startproc
 772              	.LVL99:
  75:src/mcu_msg.c ****     str->len = 0;
 773              		.loc 1 75 0
 774 0000 48C70700 		movq	$0, (%rdi)
GAS LISTING /tmp/cc45SYiz.s 			page 34


 774      000000
  76:src/mcu_msg.c **** }
 775              		.loc 1 76 0
 776 0007 66C74708 		movw	$0, 8(%rdi)
 776      0000
  77:src/mcu_msg.c **** 
 777              		.loc 1 77 0
 778 000d C3       		ret
 779              		.cfi_endproc
 780              	.LFE27:
 782              		.section	.text.__find_keyword,"ax",@progbits
 784              	__find_keyword:
 785              	.LFB37:
 220:src/mcu_msg.c **** 
 786              		.loc 1 220 0
 787              		.cfi_startproc
 788              	.LVL100:
 789 0000 4157     		pushq	%r15
 790              	.LCFI36:
 791              		.cfi_def_cfa_offset 16
 792              		.cfi_offset 15, -16
 793 0002 4156     		pushq	%r14
 794              	.LCFI37:
 795              		.cfi_def_cfa_offset 24
 796              		.cfi_offset 14, -24
 797 0004 4155     		pushq	%r13
 798              	.LCFI38:
 799              		.cfi_def_cfa_offset 32
 800              		.cfi_offset 13, -32
 801 0006 4154     		pushq	%r12
 802              	.LCFI39:
 803              		.cfi_def_cfa_offset 40
 804              		.cfi_offset 12, -40
 805 0008 55       		pushq	%rbp
 806              	.LCFI40:
 807              		.cfi_def_cfa_offset 48
 808              		.cfi_offset 6, -48
 809 0009 53       		pushq	%rbx
 810              	.LCFI41:
 811              		.cfi_def_cfa_offset 56
 812              		.cfi_offset 3, -56
 813 000a 4883EC38 		subq	$56, %rsp
 814              	.LCFI42:
 815              		.cfi_def_cfa_offset 112
 816 000e 4989FC   		movq	%rdi, %r12
 817 0011 4889F5   		movq	%rsi, %rbp
 818 0014 4989D6   		movq	%rdx, %r14
 819 0017 4189CF   		movl	%ecx, %r15d
 820 001a 44884424 		movb	%r8b, 15(%rsp)
 820      0F
 220:src/mcu_msg.c **** 
 821              		.loc 1 220 0
 822 001f 64488B04 		movq	%fs:40, %rax
 822      25280000 
 822      00
 823 0028 48894424 		movq	%rax, 40(%rsp)
 823      28
GAS LISTING /tmp/cc45SYiz.s 			page 35


 824 002d 31C0     		xorl	%eax, %eax
 223:src/mcu_msg.c ****     uint8_t equal;
 825              		.loc 1 223 0
 826 002f 4889FB   		movq	%rdi, %rbx
 827              	.LVL101:
 226:src/mcu_msg.c ****     while(__is_p_in_str(str, p) && *p) {
 828              		.loc 1 226 0
 829 0032 4889D7   		movq	%rdx, %rdi
 830              	.LVL102:
 831 0035 E8000000 		call	__str_len
 831      00
 832              	.LVL103:
 833 003a 4189C5   		movl	%eax, %r13d
 834 003d 66894424 		movw	%ax, 24(%rsp)
 834      18
 227:src/mcu_msg.c ****         if(*p == '\'' || *p == '"') { //skip internal strings
 835              		.loc 1 227 0
 836 0042 E9D50000 		jmp	.L85
 836      00
 837              	.L108:
 229:src/mcu_msg.c ****         }
 838              		.loc 1 229 0
 839 0047 4889DF   		movq	%rbx, %rdi
 840 004a E8000000 		call	__skip_internal_str
 840      00
 841              	.LVL104:
 842 004f 4889C3   		movq	%rax, %rbx
 843              	.LVL105:
 844 0052 E9EC0000 		jmp	.L86
 844      00
 845              	.LVL106:
 846              	.L90:
 236:src/mcu_msg.c ****                     equal = 0;
 847              		.loc 1 236 0
 848 0057 8D4A9F   		leal	-97(%rdx), %ecx
 849 005a 80F919   		cmpb	$25, %cl
 850 005d 400F97C7 		seta	%dil
 851 0061 80FA5F   		cmpb	$95, %dl
 852 0064 0F95C1   		setne	%cl
 235:src/mcu_msg.c ****                                     !is_valid_keyword_char(*(res.s + i))) {
 853              		.loc 1 235 0
 854 0067 4084CF   		testb	%cl, %dil
 855 006a 7410     		je	.L92
 236:src/mcu_msg.c ****                     equal = 0;
 856              		.loc 1 236 0
 857 006c 8D4ABF   		leal	-65(%rdx), %ecx
 858 006f 80F919   		cmpb	$25, %cl
 859 0072 7608     		jbe	.L92
 236:src/mcu_msg.c ****                     equal = 0;
 860              		.loc 1 236 0 is_stmt 0 discriminator 1
 861 0074 83EA30   		subl	$48, %edx
 862 0077 80FA09   		cmpb	$9, %dl
 863 007a 7757     		ja	.L103
 864              	.L92:
 234:src/mcu_msg.c ****                 if((*(res.s + i) != *(keyword + i)) || __is_ctrl_char(*(res.s + i)) || 
 865              		.loc 1 234 0 is_stmt 1 discriminator 2
 866 007c 83C001   		addl	$1, %eax
GAS LISTING /tmp/cc45SYiz.s 			page 36


 867              	.LVL107:
 868              	.L88:
 234:src/mcu_msg.c ****                 if((*(res.s + i) != *(keyword + i)) || __is_ctrl_char(*(res.s + i)) || 
 869              		.loc 1 234 0 is_stmt 0 discriminator 1
 870 007f 0FB7C8   		movzwl	%ax, %ecx
 871 0082 488D140E 		leaq	(%rsi,%rcx), %rdx
 872              	.LVL108:
 873              	.LBB70:
 874              	.LBB71:
 188:src/mcu_msg.c **** }
 875              		.loc 1 188 0 is_stmt 1 discriminator 1
 876 0086 4989D0   		movq	%rdx, %r8
 877 0089 4D29E0   		subq	%r12, %r8
 878 008c 0FB7FD   		movzwl	%bp, %edi
 879              	.LVL109:
 880              	.LBE71:
 881              	.LBE70:
 234:src/mcu_msg.c ****                 if((*(res.s + i) != *(keyword + i)) || __is_ctrl_char(*(res.s + i)) || 
 882              		.loc 1 234 0 discriminator 1
 883 008f 4939F8   		cmpq	%rdi, %r8
 884 0092 7D46     		jge	.L104
 234:src/mcu_msg.c ****                 if((*(res.s + i) != *(keyword + i)) || __is_ctrl_char(*(res.s + i)) || 
 885              		.loc 1 234 0 is_stmt 0 discriminator 3
 886 0094 664139C5 		cmpw	%ax, %r13w
 887 0098 7624     		jbe	.L106
 235:src/mcu_msg.c ****                                     !is_valid_keyword_char(*(res.s + i))) {
 888              		.loc 1 235 0 is_stmt 1
 889 009a 0FB612   		movzbl	(%rdx), %edx
 890 009d 413A140E 		cmpb	(%r14,%rcx), %dl
 891 00a1 7522     		jne	.L101
 892              	.LVL110:
 893              	.LBB72:
 894              	.LBB73:
 116:src/mcu_msg.c ****         case __CTRL_MSG_FLAG:
 895              		.loc 1 116 0 discriminator 1
 896 00a3 8D4ADD   		leal	-35(%rdx), %ecx
 897 00a6 80F95A   		cmpb	$90, %cl
 898 00a9 77AC     		ja	.L90
 899 00ab 0FB6C9   		movzbl	%cl, %ecx
 900 00ae 488D3D00 		leaq	.L91(%rip), %rdi
 900      000000
 901 00b5 48630C8F 		movslq	(%rdi,%rcx,4), %rcx
 902 00b9 4801F9   		addq	%rdi, %rcx
 903 00bc FFE1     		jmp	*%rcx
 904              		.section	.rodata.__find_keyword,"a",@progbits
 905              		.align 4
 906              		.align 4
 907              	.L91:
 908 0000 00000000 		.long	.L102-.L91
 909 0004 00000000 		.long	.L102-.L91
 910 0008 00000000 		.long	.L90-.L91
 911 000c 00000000 		.long	.L90-.L91
 912 0010 00000000 		.long	.L90-.L91
 913 0014 00000000 		.long	.L102-.L91
 914 0018 00000000 		.long	.L102-.L91
 915 001c 00000000 		.long	.L90-.L91
 916 0020 00000000 		.long	.L90-.L91
GAS LISTING /tmp/cc45SYiz.s 			page 37


 917 0024 00000000 		.long	.L90-.L91
 918 0028 00000000 		.long	.L90-.L91
 919 002c 00000000 		.long	.L90-.L91
 920 0030 00000000 		.long	.L90-.L91
 921 0034 00000000 		.long	.L90-.L91
 922 0038 00000000 		.long	.L90-.L91
 923 003c 00000000 		.long	.L90-.L91
 924 0040 00000000 		.long	.L90-.L91
 925 0044 00000000 		.long	.L90-.L91
 926 0048 00000000 		.long	.L90-.L91
 927 004c 00000000 		.long	.L90-.L91
 928 0050 00000000 		.long	.L90-.L91
 929 0054 00000000 		.long	.L90-.L91
 930 0058 00000000 		.long	.L90-.L91
 931 005c 00000000 		.long	.L90-.L91
 932 0060 00000000 		.long	.L102-.L91
 933 0064 00000000 		.long	.L102-.L91
 934 0068 00000000 		.long	.L102-.L91
 935 006c 00000000 		.long	.L102-.L91
 936 0070 00000000 		.long	.L90-.L91
 937 0074 00000000 		.long	.L102-.L91
 938 0078 00000000 		.long	.L90-.L91
 939 007c 00000000 		.long	.L90-.L91
 940 0080 00000000 		.long	.L90-.L91
 941 0084 00000000 		.long	.L90-.L91
 942 0088 00000000 		.long	.L90-.L91
 943 008c 00000000 		.long	.L90-.L91
 944 0090 00000000 		.long	.L90-.L91
 945 0094 00000000 		.long	.L90-.L91
 946 0098 00000000 		.long	.L90-.L91
 947 009c 00000000 		.long	.L90-.L91
 948 00a0 00000000 		.long	.L90-.L91
 949 00a4 00000000 		.long	.L90-.L91
 950 00a8 00000000 		.long	.L90-.L91
 951 00ac 00000000 		.long	.L90-.L91
 952 00b0 00000000 		.long	.L90-.L91
 953 00b4 00000000 		.long	.L90-.L91
 954 00b8 00000000 		.long	.L90-.L91
 955 00bc 00000000 		.long	.L90-.L91
 956 00c0 00000000 		.long	.L90-.L91
 957 00c4 00000000 		.long	.L90-.L91
 958 00c8 00000000 		.long	.L90-.L91
 959 00cc 00000000 		.long	.L90-.L91
 960 00d0 00000000 		.long	.L90-.L91
 961 00d4 00000000 		.long	.L90-.L91
 962 00d8 00000000 		.long	.L90-.L91
 963 00dc 00000000 		.long	.L90-.L91
 964 00e0 00000000 		.long	.L90-.L91
 965 00e4 00000000 		.long	.L90-.L91
 966 00e8 00000000 		.long	.L90-.L91
 967 00ec 00000000 		.long	.L90-.L91
 968 00f0 00000000 		.long	.L90-.L91
 969 00f4 00000000 		.long	.L90-.L91
 970 00f8 00000000 		.long	.L90-.L91
 971 00fc 00000000 		.long	.L90-.L91
 972 0100 00000000 		.long	.L90-.L91
 973 0104 00000000 		.long	.L90-.L91
GAS LISTING /tmp/cc45SYiz.s 			page 38


 974 0108 00000000 		.long	.L90-.L91
 975 010c 00000000 		.long	.L90-.L91
 976 0110 00000000 		.long	.L90-.L91
 977 0114 00000000 		.long	.L90-.L91
 978 0118 00000000 		.long	.L90-.L91
 979 011c 00000000 		.long	.L90-.L91
 980 0120 00000000 		.long	.L90-.L91
 981 0124 00000000 		.long	.L90-.L91
 982 0128 00000000 		.long	.L90-.L91
 983 012c 00000000 		.long	.L90-.L91
 984 0130 00000000 		.long	.L90-.L91
 985 0134 00000000 		.long	.L90-.L91
 986 0138 00000000 		.long	.L90-.L91
 987 013c 00000000 		.long	.L90-.L91
 988 0140 00000000 		.long	.L90-.L91
 989 0144 00000000 		.long	.L90-.L91
 990 0148 00000000 		.long	.L90-.L91
 991 014c 00000000 		.long	.L90-.L91
 992 0150 00000000 		.long	.L90-.L91
 993 0154 00000000 		.long	.L90-.L91
 994 0158 00000000 		.long	.L90-.L91
 995 015c 00000000 		.long	.L90-.L91
 996 0160 00000000 		.long	.L102-.L91
 997 0164 00000000 		.long	.L90-.L91
 998 0168 00000000 		.long	.L102-.L91
 999              		.section	.text.__find_keyword
 1000              	.LVL111:
 1001              	.L106:
 1002              	.LBE73:
 1003              	.LBE72:
 233:src/mcu_msg.c ****             for(i = 0; __is_p_in_str(str, res.s + i) && i < res.len; i++) { // if not equal during 
 1004              		.loc 1 233 0
 1005 00be BF010000 		movl	$1, %edi
 1005      00
 1006 00c3 EB1F     		jmp	.L96
 1007              	.L101:
 237:src/mcu_msg.c ****                     break;
 1008              		.loc 1 237 0
 1009 00c5 BF000000 		movl	$0, %edi
 1009      00
 1010 00ca EB18     		jmp	.L96
 1011              	.LVL112:
 1012              	.L102:
 1013 00cc BF000000 		movl	$0, %edi
 1013      00
 1014 00d1 EB11     		jmp	.L96
 1015              	.LVL113:
 1016              	.L103:
 1017 00d3 BF000000 		movl	$0, %edi
 1017      00
 1018 00d8 EB0A     		jmp	.L96
 1019              	.L104:
 233:src/mcu_msg.c ****             for(i = 0; __is_p_in_str(str, res.s + i) && i < res.len; i++) { // if not equal during 
 1020              		.loc 1 233 0
 1021 00da BF010000 		movl	$1, %edi
 1021      00
 1022 00df EB03     		jmp	.L96
GAS LISTING /tmp/cc45SYiz.s 			page 39


 1023              	.LVL114:
 1024              	.L95:
 241:src/mcu_msg.c ****             if(equal && *(res.s + i) == stopc) { //if the stop char is the next, whitout spaces, re
 1025              		.loc 1 241 0
 1026 00e1 83C001   		addl	$1, %eax
 1027              	.LVL115:
 1028              	.L96:
 241:src/mcu_msg.c ****             if(equal && *(res.s + i) == stopc) { //if the stop char is the next, whitout spaces, re
 1029              		.loc 1 241 0 is_stmt 0 discriminator 1
 1030 00e4 0FB7D8   		movzwl	%ax, %ebx
 1031 00e7 4801F3   		addq	%rsi, %rbx
 1032              	.LVL116:
 1033              	.LBB74:
 1034              	.LBB75:
 188:src/mcu_msg.c **** }
 1035              		.loc 1 188 0 is_stmt 1 discriminator 1
 1036 00ea 4889D9   		movq	%rbx, %rcx
 1037 00ed 4C29E1   		subq	%r12, %rcx
 1038 00f0 0FB7D5   		movzwl	%bp, %edx
 1039              	.LVL117:
 1040              	.LBE75:
 1041              	.LBE74:
 241:src/mcu_msg.c ****             if(equal && *(res.s + i) == stopc) { //if the stop char is the next, whitout spaces, re
 1042              		.loc 1 241 0 discriminator 1
 1043 00f3 4839D1   		cmpq	%rdx, %rcx
 1044 00f6 7D12     		jge	.L94
 241:src/mcu_msg.c ****             if(equal && *(res.s + i) == stopc) { //if the stop char is the next, whitout spaces, re
 1045              		.loc 1 241 0 is_stmt 0 discriminator 2
 1046 00f8 0FB613   		movzbl	(%rbx), %edx
 1047              	.LVL118:
 1048              	.LBB76:
 1049              	.LBB77:
 142:src/mcu_msg.c ****         case  ' ':
 1050              		.loc 1 142 0 is_stmt 1 discriminator 2
 1051 00fb 80FA09   		cmpb	$9, %dl
 1052 00fe 7C0A     		jl	.L94
 1053 0100 80FA0D   		cmpb	$13, %dl
 1054 0103 7EDC     		jle	.L95
 1055 0105 80FA20   		cmpb	$32, %dl
 1056 0108 74D7     		je	.L95
 1057              	.LVL119:
 1058              	.L94:
 1059              	.LBE77:
 1060              	.LBE76:
 242:src/mcu_msg.c ****                 return res;
 1061              		.loc 1 242 0
 1062 010a 4084FF   		testb	%dil, %dil
 1063 010d 7409     		je	.L87
 242:src/mcu_msg.c ****                 return res;
 1064              		.loc 1 242 0 is_stmt 0 discriminator 1
 1065 010f 0FB64424 		movzbl	15(%rsp), %eax
 1065      0F
 1066              	.LVL120:
 1067 0114 3803     		cmpb	%al, (%rbx)
 1068 0116 7451     		je	.L107
 1069              	.LVL121:
 1070              	.L87:
GAS LISTING /tmp/cc45SYiz.s 			page 40


 248:src/mcu_msg.c ****     }
 1071              		.loc 1 248 0 is_stmt 1
 1072 0118 4883C301 		addq	$1, %rbx
 1073              	.LVL122:
 1074              	.L85:
 1075              	.LBB78:
 1076              	.LBB79:
 188:src/mcu_msg.c **** }
 1077              		.loc 1 188 0
 1078 011c 4889DA   		movq	%rbx, %rdx
 1079 011f 4C29E2   		subq	%r12, %rdx
 1080 0122 0FB7C5   		movzwl	%bp, %eax
 1081              	.LVL123:
 1082              	.LBE79:
 1083              	.LBE78:
 227:src/mcu_msg.c ****         if(*p == '\'' || *p == '"') { //skip internal strings
 1084              		.loc 1 227 0
 1085 0125 4839C2   		cmpq	%rax, %rdx
 1086 0128 7D4B     		jge	.L98
 227:src/mcu_msg.c ****         if(*p == '\'' || *p == '"') { //skip internal strings
 1087              		.loc 1 227 0 is_stmt 0 discriminator 1
 1088 012a 0FB603   		movzbl	(%rbx), %eax
 1089 012d 84C0     		testb	%al, %al
 1090 012f 7444     		je	.L98
 228:src/mcu_msg.c ****             p = __skip_internal_str(p);
 1091              		.loc 1 228 0 is_stmt 1
 1092 0131 3C27     		cmpb	$39, %al
 1093 0133 0F94C2   		sete	%dl
 1094 0136 3C22     		cmpb	$34, %al
 1095 0138 0F94C0   		sete	%al
 1096 013b 08C2     		orb	%al, %dl
 1097 013d 0F8504FF 		jne	.L108
 1097      FFFF
 1098              	.L86:
 1099              	.LVL124:
 1100              	.LBB80:
 1101              	.LBB81:
 188:src/mcu_msg.c **** }
 1102              		.loc 1 188 0
 1103 0143 4889D8   		movq	%rbx, %rax
 1104 0146 4C29E0   		subq	%r12, %rax
 1105 0149 0FB7D5   		movzwl	%bp, %edx
 1106              	.LVL125:
 1107              	.LBE81:
 1108              	.LBE80:
 231:src/mcu_msg.c ****             res.s = p + 1;
 1109              		.loc 1 231 0
 1110 014c 4839C2   		cmpq	%rax, %rdx
 1111 014f 7EC7     		jle	.L87
 231:src/mcu_msg.c ****             res.s = p + 1;
 1112              		.loc 1 231 0 is_stmt 0 discriminator 1
 1113 0151 44383B   		cmpb	%r15b, (%rbx)
 1114 0154 75C2     		jne	.L87
 232:src/mcu_msg.c ****             equal = 1;
 1115              		.loc 1 232 0 is_stmt 1
 1116 0156 488D7301 		leaq	1(%rbx), %rsi
 1117 015a 48897424 		movq	%rsi, 16(%rsp)
GAS LISTING /tmp/cc45SYiz.s 			page 41


 1117      10
 1118              	.LVL126:
 234:src/mcu_msg.c ****                 if((*(res.s + i) != *(keyword + i)) || __is_ctrl_char(*(res.s + i)) || 
 1119              		.loc 1 234 0
 1120 015f B8000000 		movl	$0, %eax
 1120      00
 1121 0164 E916FFFF 		jmp	.L88
 1121      FF
 1122              	.LVL127:
 1123              	.L107:
 243:src/mcu_msg.c ****             } else {
 1124              		.loc 1 243 0
 1125 0169 488B4424 		movq	16(%rsp), %rax
 1125      10
 1126 016e 488B5424 		movq	24(%rsp), %rdx
 1126      18
 1127 0173 EB14     		jmp	.L97
 1128              	.LVL128:
 1129              	.L98:
 251:src/mcu_msg.c ****     return res;
 1130              		.loc 1 251 0
 1131 0175 488D7C24 		leaq	16(%rsp), %rdi
 1131      10
 1132 017a E8000000 		call	msg_destroy_string
 1132      00
 1133              	.LVL129:
 252:src/mcu_msg.c **** }
 1134              		.loc 1 252 0
 1135 017f 488B4424 		movq	16(%rsp), %rax
 1135      10
 1136 0184 488B5424 		movq	24(%rsp), %rdx
 1136      18
 1137              	.LVL130:
 1138              	.L97:
 253:src/mcu_msg.c **** 
 1139              		.loc 1 253 0
 1140 0189 488B7424 		movq	40(%rsp), %rsi
 1140      28
 1141 018e 64483334 		xorq	%fs:40, %rsi
 1141      25280000 
 1141      00
 1142 0197 750F     		jne	.L109
 1143 0199 4883C438 		addq	$56, %rsp
 1144              	.LCFI43:
 1145              		.cfi_remember_state
 1146              		.cfi_def_cfa_offset 56
 1147 019d 5B       		popq	%rbx
 1148              	.LCFI44:
 1149              		.cfi_def_cfa_offset 48
 1150 019e 5D       		popq	%rbp
 1151              	.LCFI45:
 1152              		.cfi_def_cfa_offset 40
 1153              	.LVL131:
 1154 019f 415C     		popq	%r12
 1155              	.LCFI46:
 1156              		.cfi_def_cfa_offset 32
 1157 01a1 415D     		popq	%r13
GAS LISTING /tmp/cc45SYiz.s 			page 42


 1158              	.LCFI47:
 1159              		.cfi_def_cfa_offset 24
 1160 01a3 415E     		popq	%r14
 1161              	.LCFI48:
 1162              		.cfi_def_cfa_offset 16
 1163              	.LVL132:
 1164 01a5 415F     		popq	%r15
 1165              	.LCFI49:
 1166              		.cfi_def_cfa_offset 8
 1167              	.LVL133:
 1168 01a7 C3       		ret
 1169              	.LVL134:
 1170              	.L109:
 1171              	.LCFI50:
 1172              		.cfi_restore_state
 1173 01a8 E8000000 		call	__stack_chk_fail@PLT
 1173      00
 1174              	.LVL135:
 1175              		.cfi_endproc
 1176              	.LFE37:
 1178              		.section	.text.__find_val,"ax",@progbits
 1180              	__find_val:
 1181              	.LFB38:
 265:src/mcu_msg.c ****     msg_str_t res  = __find_keyword(obj.content, key, __CTRL_KEY_FLAG, __CTRL_KEY_EQU); //object st
 1182              		.loc 1 265 0
 1183              		.cfi_startproc
 1184              	.LVL136:
 1185 0000 4883EC28 		subq	$40, %rsp
 1186              	.LCFI51:
 1187              		.cfi_def_cfa_offset 48
 1188 0004 4889FA   		movq	%rdi, %rdx
 265:src/mcu_msg.c ****     msg_str_t res  = __find_keyword(obj.content, key, __CTRL_KEY_FLAG, __CTRL_KEY_EQU); //object st
 1189              		.loc 1 265 0
 1190 0007 64488B04 		movq	%fs:40, %rax
 1190      25280000 
 1190      00
 1191 0010 48894424 		movq	%rax, 24(%rsp)
 1191      18
 1192 0015 31C0     		xorl	%eax, %eax
 266:src/mcu_msg.c ****     char *p;
 1193              		.loc 1 266 0
 1194 0017 41B83D00 		movl	$61, %r8d
 1194      0000
 1195 001d B9240000 		movl	$36, %ecx
 1195      00
 1196 0022 488B7C24 		movq	64(%rsp), %rdi
 1196      40
 1197              	.LVL137:
 1198 0027 488B7424 		movq	72(%rsp), %rsi
 1198      48
 1199 002c E8000000 		call	__find_keyword
 1199      00
 1200              	.LVL138:
 1201 0031 48890424 		movq	%rax, (%rsp)
 1202 0035 48895424 		movq	%rdx, 8(%rsp)
 1202      08
 268:src/mcu_msg.c ****         msg_destroy_string(&res);
GAS LISTING /tmp/cc45SYiz.s 			page 43


 1203              		.loc 1 268 0
 1204 003a 4885C0   		testq	%rax, %rax
 1205 003d 7413     		je	.L126
 272:src/mcu_msg.c ****         while(__is_p_in_str(obj.content, res.s + 1) && *res.s != __CTRL_KEY_EQU) res.s++;
 1206              		.loc 1 272 0
 1207 003f 80383D   		cmpb	$61, (%rax)
 1208 0042 7528     		jne	.L113
 1209              	.L114:
 275:src/mcu_msg.c ****     while(__is_p_in_str(obj.content, res.s) && __is_whitespace(*res.s)) res.s++; //skip spaces afte
 1210              		.loc 1 275 0
 1211 0044 488B0424 		movq	(%rsp), %rax
 1212 0048 4883C001 		addq	$1, %rax
 1213 004c 48890424 		movq	%rax, (%rsp)
 276:src/mcu_msg.c **** 
 1214              		.loc 1 276 0
 1215 0050 EB43     		jmp	.L118
 1216              	.L126:
 269:src/mcu_msg.c ****         return res;
 1217              		.loc 1 269 0
 1218 0052 4889E7   		movq	%rsp, %rdi
 1219 0055 E8000000 		call	msg_destroy_string
 1219      00
 1220              	.LVL139:
 270:src/mcu_msg.c ****     }
 1221              		.loc 1 270 0
 1222 005a 488B0424 		movq	(%rsp), %rax
 1223 005e 488B5424 		movq	8(%rsp), %rdx
 1223      08
 1224 0063 E9B10000 		jmp	.L112
 1224      00
 1225              	.L115:
 273:src/mcu_msg.c ****     }
 1226              		.loc 1 273 0 discriminator 3
 1227 0068 48891424 		movq	%rdx, (%rsp)
 1228              	.L113:
 273:src/mcu_msg.c ****     }
 1229              		.loc 1 273 0 is_stmt 0 discriminator 1
 1230 006c 488B0424 		movq	(%rsp), %rax
 1231 0070 488D5001 		leaq	1(%rax), %rdx
 1232              	.LVL140:
 1233              	.LBB82:
 1234              	.LBB83:
 188:src/mcu_msg.c **** }
 1235              		.loc 1 188 0 is_stmt 1 discriminator 1
 1236 0074 4889D1   		movq	%rdx, %rcx
 1237 0077 482B4C24 		subq	64(%rsp), %rcx
 1237      40
 1238 007c 0FB77424 		movzwl	72(%rsp), %esi
 1238      48
 1239              	.LVL141:
 1240              	.LBE83:
 1241              	.LBE82:
 273:src/mcu_msg.c ****     }
 1242              		.loc 1 273 0 discriminator 1
 1243 0081 4839CE   		cmpq	%rcx, %rsi
 1244 0084 7EBE     		jle	.L114
 273:src/mcu_msg.c ****     }
GAS LISTING /tmp/cc45SYiz.s 			page 44


 1245              		.loc 1 273 0 is_stmt 0 discriminator 2
 1246 0086 80383D   		cmpb	$61, (%rax)
 1247 0089 75DD     		jne	.L115
 1248 008b EBB7     		jmp	.L114
 1249              	.LVL142:
 1250              	.L117:
 276:src/mcu_msg.c **** 
 1251              		.loc 1 276 0 is_stmt 1
 1252 008d 4883C001 		addq	$1, %rax
 1253 0091 48890424 		movq	%rax, (%rsp)
 1254              	.L118:
 276:src/mcu_msg.c **** 
 1255              		.loc 1 276 0 is_stmt 0 discriminator 1
 1256 0095 488B0424 		movq	(%rsp), %rax
 1257              	.LVL143:
 1258              	.LBB84:
 1259              	.LBB85:
 188:src/mcu_msg.c **** }
 1260              		.loc 1 188 0 is_stmt 1 discriminator 1
 1261 0099 4889C7   		movq	%rax, %rdi
 1262 009c 4889C1   		movq	%rax, %rcx
 1263 009f 482B4C24 		subq	64(%rsp), %rcx
 1263      40
 1264 00a4 0FB75424 		movzwl	72(%rsp), %edx
 1264      48
 1265              	.LVL144:
 1266              	.LBE85:
 1267              	.LBE84:
 276:src/mcu_msg.c **** 
 1268              		.loc 1 276 0 discriminator 1
 1269 00a9 4839D1   		cmpq	%rdx, %rcx
 1270 00ac 7D18     		jge	.L123
 276:src/mcu_msg.c **** 
 1271              		.loc 1 276 0 is_stmt 0 discriminator 2
 1272 00ae 0FB610   		movzbl	(%rax), %edx
 1273              	.LVL145:
 1274              	.LBB86:
 1275              	.LBB87:
 142:src/mcu_msg.c ****         case  ' ':
 1276              		.loc 1 142 0 is_stmt 1 discriminator 2
 1277 00b1 80FA09   		cmpb	$9, %dl
 1278 00b4 7C10     		jl	.L123
 1279 00b6 80FA0D   		cmpb	$13, %dl
 1280 00b9 7ED2     		jle	.L117
 1281 00bb 80FA20   		cmpb	$32, %dl
 1282 00be 74CD     		je	.L117
 1283 00c0 EB04     		jmp	.L123
 1284              	.LVL146:
 1285              	.L121:
 1286              	.LBE87:
 1287              	.LBE86:
 279:src/mcu_msg.c ****     res.len = p - res.s;
 1288              		.loc 1 279 0
 1289 00c2 4883C001 		addq	$1, %rax
 1290              	.LVL147:
 1291              	.L123:
 1292              	.LBB88:
GAS LISTING /tmp/cc45SYiz.s 			page 45


 1293              	.LBB89:
 188:src/mcu_msg.c **** }
 1294              		.loc 1 188 0 discriminator 1
 1295 00c6 4889C6   		movq	%rax, %rsi
 1296 00c9 4889C1   		movq	%rax, %rcx
 1297 00cc 482B4C24 		subq	64(%rsp), %rcx
 1297      40
 1298 00d1 0FB75424 		movzwl	72(%rsp), %edx
 1298      48
 1299              	.LVL148:
 1300              	.LBE89:
 1301              	.LBE88:
 279:src/mcu_msg.c ****     res.len = p - res.s;
 1302              		.loc 1 279 0 discriminator 1
 1303 00d6 4839D1   		cmpq	%rdx, %rcx
 1304 00d9 7D2D     		jge	.L119
 279:src/mcu_msg.c ****     res.len = p - res.s;
 1305              		.loc 1 279 0 is_stmt 0 discriminator 2
 1306 00db 0FB610   		movzbl	(%rax), %edx
 1307              	.LVL149:
 1308              	.LBB90:
 1309              	.LBB91:
 142:src/mcu_msg.c ****         case  ' ':
 1310              		.loc 1 142 0 is_stmt 1 discriminator 2
 1311 00de 80FA09   		cmpb	$9, %dl
 1312 00e1 7C0A     		jl	.L120
 1313 00e3 80FA0D   		cmpb	$13, %dl
 1314 00e6 7E20     		jle	.L119
 1315 00e8 80FA20   		cmpb	$32, %dl
 1316 00eb 741B     		je	.L119
 1317              	.L120:
 1318              	.LVL150:
 1319              	.LBE91:
 1320              	.LBE90:
 1321              	.LBB92:
 1322              	.LBB93:
 116:src/mcu_msg.c ****         case __CTRL_MSG_FLAG:
 1323              		.loc 1 116 0
 1324 00ed 83EA23   		subl	$35, %edx
 1325              	.LVL151:
 1326 00f0 80FA5A   		cmpb	$90, %dl
 1327 00f3 77CD     		ja	.L121
 1328 00f5 0FB6D2   		movzbl	%dl, %edx
 1329 00f8 488D0D00 		leaq	.L122(%rip), %rcx
 1329      000000
 1330 00ff 48631491 		movslq	(%rcx,%rdx,4), %rdx
 1331 0103 4801CA   		addq	%rcx, %rdx
 1332 0106 FFE2     		jmp	*%rdx
 1333              		.section	.rodata.__find_val,"a",@progbits
 1334              		.align 4
 1335              		.align 4
 1336              	.L122:
 1337 0000 00000000 		.long	.L119-.L122
 1338 0004 00000000 		.long	.L119-.L122
 1339 0008 00000000 		.long	.L121-.L122
 1340 000c 00000000 		.long	.L121-.L122
 1341 0010 00000000 		.long	.L121-.L122
GAS LISTING /tmp/cc45SYiz.s 			page 46


 1342 0014 00000000 		.long	.L119-.L122
 1343 0018 00000000 		.long	.L119-.L122
 1344 001c 00000000 		.long	.L121-.L122
 1345 0020 00000000 		.long	.L121-.L122
 1346 0024 00000000 		.long	.L121-.L122
 1347 0028 00000000 		.long	.L121-.L122
 1348 002c 00000000 		.long	.L121-.L122
 1349 0030 00000000 		.long	.L121-.L122
 1350 0034 00000000 		.long	.L121-.L122
 1351 0038 00000000 		.long	.L121-.L122
 1352 003c 00000000 		.long	.L121-.L122
 1353 0040 00000000 		.long	.L121-.L122
 1354 0044 00000000 		.long	.L121-.L122
 1355 0048 00000000 		.long	.L121-.L122
 1356 004c 00000000 		.long	.L121-.L122
 1357 0050 00000000 		.long	.L121-.L122
 1358 0054 00000000 		.long	.L121-.L122
 1359 0058 00000000 		.long	.L121-.L122
 1360 005c 00000000 		.long	.L121-.L122
 1361 0060 00000000 		.long	.L119-.L122
 1362 0064 00000000 		.long	.L119-.L122
 1363 0068 00000000 		.long	.L119-.L122
 1364 006c 00000000 		.long	.L119-.L122
 1365 0070 00000000 		.long	.L121-.L122
 1366 0074 00000000 		.long	.L119-.L122
 1367 0078 00000000 		.long	.L121-.L122
 1368 007c 00000000 		.long	.L121-.L122
 1369 0080 00000000 		.long	.L121-.L122
 1370 0084 00000000 		.long	.L121-.L122
 1371 0088 00000000 		.long	.L121-.L122
 1372 008c 00000000 		.long	.L121-.L122
 1373 0090 00000000 		.long	.L121-.L122
 1374 0094 00000000 		.long	.L121-.L122
 1375 0098 00000000 		.long	.L121-.L122
 1376 009c 00000000 		.long	.L121-.L122
 1377 00a0 00000000 		.long	.L121-.L122
 1378 00a4 00000000 		.long	.L121-.L122
 1379 00a8 00000000 		.long	.L121-.L122
 1380 00ac 00000000 		.long	.L121-.L122
 1381 00b0 00000000 		.long	.L121-.L122
 1382 00b4 00000000 		.long	.L121-.L122
 1383 00b8 00000000 		.long	.L121-.L122
 1384 00bc 00000000 		.long	.L121-.L122
 1385 00c0 00000000 		.long	.L121-.L122
 1386 00c4 00000000 		.long	.L121-.L122
 1387 00c8 00000000 		.long	.L121-.L122
 1388 00cc 00000000 		.long	.L121-.L122
 1389 00d0 00000000 		.long	.L121-.L122
 1390 00d4 00000000 		.long	.L121-.L122
 1391 00d8 00000000 		.long	.L121-.L122
 1392 00dc 00000000 		.long	.L121-.L122
 1393 00e0 00000000 		.long	.L121-.L122
 1394 00e4 00000000 		.long	.L121-.L122
 1395 00e8 00000000 		.long	.L121-.L122
 1396 00ec 00000000 		.long	.L121-.L122
 1397 00f0 00000000 		.long	.L121-.L122
 1398 00f4 00000000 		.long	.L121-.L122
GAS LISTING /tmp/cc45SYiz.s 			page 47


 1399 00f8 00000000 		.long	.L121-.L122
 1400 00fc 00000000 		.long	.L121-.L122
 1401 0100 00000000 		.long	.L121-.L122
 1402 0104 00000000 		.long	.L121-.L122
 1403 0108 00000000 		.long	.L121-.L122
 1404 010c 00000000 		.long	.L121-.L122
 1405 0110 00000000 		.long	.L121-.L122
 1406 0114 00000000 		.long	.L121-.L122
 1407 0118 00000000 		.long	.L121-.L122
 1408 011c 00000000 		.long	.L121-.L122
 1409 0120 00000000 		.long	.L121-.L122
 1410 0124 00000000 		.long	.L121-.L122
 1411 0128 00000000 		.long	.L121-.L122
 1412 012c 00000000 		.long	.L121-.L122
 1413 0130 00000000 		.long	.L121-.L122
 1414 0134 00000000 		.long	.L121-.L122
 1415 0138 00000000 		.long	.L121-.L122
 1416 013c 00000000 		.long	.L121-.L122
 1417 0140 00000000 		.long	.L121-.L122
 1418 0144 00000000 		.long	.L121-.L122
 1419 0148 00000000 		.long	.L121-.L122
 1420 014c 00000000 		.long	.L121-.L122
 1421 0150 00000000 		.long	.L121-.L122
 1422 0154 00000000 		.long	.L121-.L122
 1423 0158 00000000 		.long	.L121-.L122
 1424 015c 00000000 		.long	.L121-.L122
 1425 0160 00000000 		.long	.L119-.L122
 1426 0164 00000000 		.long	.L121-.L122
 1427 0168 00000000 		.long	.L119-.L122
 1428              		.section	.text.__find_val
 1429              	.LVL152:
 1430              	.L119:
 1431              	.LBE93:
 1432              	.LBE92:
 280:src/mcu_msg.c **** 
 1433              		.loc 1 280 0
 1434 0108 4829FE   		subq	%rdi, %rsi
 1435 010b 66897424 		movw	%si, 8(%rsp)
 1435      08
 282:src/mcu_msg.c **** }
 1436              		.loc 1 282 0
 1437 0110 488B0424 		movq	(%rsp), %rax
 1438              	.LVL153:
 1439 0114 488B5424 		movq	8(%rsp), %rdx
 1439      08
 1440              	.L112:
 283:src/mcu_msg.c **** 
 1441              		.loc 1 283 0
 1442 0119 488B7C24 		movq	24(%rsp), %rdi
 1442      18
 1443 011e 6448333C 		xorq	%fs:40, %rdi
 1443      25280000 
 1443      00
 1444 0127 7505     		jne	.L127
 1445 0129 4883C428 		addq	$40, %rsp
 1446              	.LCFI52:
 1447              		.cfi_remember_state
GAS LISTING /tmp/cc45SYiz.s 			page 48


 1448              		.cfi_def_cfa_offset 8
 1449 012d C3       		ret
 1450              	.L127:
 1451              	.LCFI53:
 1452              		.cfi_restore_state
 1453 012e E8000000 		call	__stack_chk_fail@PLT
 1453      00
 1454              	.LVL154:
 1455              		.cfi_endproc
 1456              	.LFE38:
 1458              		.section	.text.msg_destroy,"ax",@progbits
 1459              		.globl	msg_destroy
 1461              	msg_destroy:
 1462              	.LFB28:
  81:src/mcu_msg.c ****     msg_destroy_string(&msg->id);
 1463              		.loc 1 81 0
 1464              		.cfi_startproc
 1465              	.LVL155:
 1466 0000 53       		pushq	%rbx
 1467              	.LCFI54:
 1468              		.cfi_def_cfa_offset 16
 1469              		.cfi_offset 3, -16
 1470 0001 4889FB   		movq	%rdi, %rbx
  82:src/mcu_msg.c ****     msg_destroy_string(&msg->content);
 1471              		.loc 1 82 0
 1472 0004 E8000000 		call	msg_destroy_string
 1472      00
 1473              	.LVL156:
  83:src/mcu_msg.c **** }
 1474              		.loc 1 83 0
 1475 0009 488D7B10 		leaq	16(%rbx), %rdi
 1476 000d E8000000 		call	msg_destroy_string
 1476      00
 1477              	.LVL157:
  84:src/mcu_msg.c **** 
 1478              		.loc 1 84 0
 1479 0012 5B       		popq	%rbx
 1480              	.LCFI55:
 1481              		.cfi_def_cfa_offset 8
 1482              	.LVL158:
 1483 0013 C3       		ret
 1484              		.cfi_endproc
 1485              	.LFE28:
 1487              		.section	.text.msg_destroy_obj,"ax",@progbits
 1488              		.globl	msg_destroy_obj
 1490              	msg_destroy_obj:
 1491              	.LFB29:
  89:src/mcu_msg.c ****     msg_destroy_string(&obj->id);
 1492              		.loc 1 89 0
 1493              		.cfi_startproc
 1494              	.LVL159:
 1495 0000 53       		pushq	%rbx
 1496              	.LCFI56:
 1497              		.cfi_def_cfa_offset 16
 1498              		.cfi_offset 3, -16
 1499 0001 4889FB   		movq	%rdi, %rbx
  90:src/mcu_msg.c ****     msg_destroy_string(&obj->content);
GAS LISTING /tmp/cc45SYiz.s 			page 49


 1500              		.loc 1 90 0
 1501 0004 E8000000 		call	msg_destroy_string
 1501      00
 1502              	.LVL160:
  91:src/mcu_msg.c **** }
 1503              		.loc 1 91 0
 1504 0009 488D7B10 		leaq	16(%rbx), %rdi
 1505 000d E8000000 		call	msg_destroy_string
 1505      00
 1506              	.LVL161:
  92:src/mcu_msg.c **** 
 1507              		.loc 1 92 0
 1508 0012 5B       		popq	%rbx
 1509              	.LCFI57:
 1510              		.cfi_def_cfa_offset 8
 1511              	.LVL162:
 1512 0013 C3       		ret
 1513              		.cfi_endproc
 1514              	.LFE29:
 1516              		.section	.text.msg_destroy_cmd,"ax",@progbits
 1517              		.globl	msg_destroy_cmd
 1519              	msg_destroy_cmd:
 1520              	.LFB30:
  96:src/mcu_msg.c ****     msg_destroy_string(&cmd->cmd);
 1521              		.loc 1 96 0
 1522              		.cfi_startproc
 1523              	.LVL163:
  97:src/mcu_msg.c **** }
 1524              		.loc 1 97 0
 1525 0000 E8000000 		call	msg_destroy_string
 1525      00
 1526              	.LVL164:
  98:src/mcu_msg.c **** 
 1527              		.loc 1 98 0
 1528 0005 F3C3     		rep ret
 1529              		.cfi_endproc
 1530              	.LFE30:
 1532              		.section	.text.msg_init_string,"ax",@progbits
 1533              		.globl	msg_init_string
 1535              	msg_init_string:
 1536              	.LFB31:
 101:src/mcu_msg.c ****     msg_str_t res;
 1537              		.loc 1 101 0
 1538              		.cfi_startproc
 1539              	.LVL165:
 1540 0000 53       		pushq	%rbx
 1541              	.LCFI58:
 1542              		.cfi_def_cfa_offset 16
 1543              		.cfi_offset 3, -16
 1544 0001 4889FB   		movq	%rdi, %rbx
 104:src/mcu_msg.c ****     return res;
 1545              		.loc 1 104 0
 1546 0004 E8000000 		call	__str_len
 1546      00
 1547              	.LVL166:
 1548 0009 BA000000 		movl	$0, %edx
 1548      00
GAS LISTING /tmp/cc45SYiz.s 			page 50


 1549              	.LVL167:
 1550 000e 6689C2   		movw	%ax, %dx
 106:src/mcu_msg.c **** 
 1551              		.loc 1 106 0
 1552 0011 4889D8   		movq	%rbx, %rax
 1553 0014 5B       		popq	%rbx
 1554              	.LCFI59:
 1555              		.cfi_def_cfa_offset 8
 1556              	.LVL168:
 1557 0015 C3       		ret
 1558              		.cfi_endproc
 1559              	.LFE31:
 1561              		.section	.text.msg_get,"ax",@progbits
 1562              		.globl	msg_get
 1564              	msg_get:
 1565              	.LFB39:
 288:src/mcu_msg.c ****     msg_t res;
 1566              		.loc 1 288 0
 1567              		.cfi_startproc
 1568              	.LVL169:
 1569 0000 53       		pushq	%rbx
 1570              	.LCFI60:
 1571              		.cfi_def_cfa_offset 16
 1572              		.cfi_offset 3, -16
 1573 0001 4883EC30 		subq	$48, %rsp
 1574              	.LCFI61:
 1575              		.cfi_def_cfa_offset 64
 1576 0005 4889FB   		movq	%rdi, %rbx
 288:src/mcu_msg.c ****     msg_t res;
 1577              		.loc 1 288 0
 1578 0008 64488B04 		movq	%fs:40, %rax
 1578      25280000 
 1578      00
 1579 0011 48894424 		movq	%rax, 40(%rsp)
 1579      28
 1580 0016 31C0     		xorl	%eax, %eax
 290:src/mcu_msg.c ****     res.content.len = len;
 1581              		.loc 1 290 0
 1582 0018 48897424 		movq	%rsi, 16(%rsp)
 1582      10
 291:src/mcu_msg.c ****     res.id = __find_keyword(res.content, id, __CTRL_MSG_FLAG, __CTRL_START_MSG); //object start wit
 1583              		.loc 1 291 0
 1584 001d 66894C24 		movw	%cx, 24(%rsp)
 1584      18
 292:src/mcu_msg.c ****     char *p;
 1585              		.loc 1 292 0
 1586 0022 41B87B00 		movl	$123, %r8d
 1586      0000
 1587 0028 B9230000 		movl	$35, %ecx
 1587      00
 1588              	.LVL170:
 1589 002d 4889F7   		movq	%rsi, %rdi
 1590              	.LVL171:
 1591 0030 488B7424 		movq	24(%rsp), %rsi
 1591      18
 1592              	.LVL172:
 1593 0035 E8000000 		call	__find_keyword
GAS LISTING /tmp/cc45SYiz.s 			page 51


 1593      00
 1594              	.LVL173:
 1595 003a 48890424 		movq	%rax, (%rsp)
 1596 003e 48895424 		movq	%rdx, 8(%rsp)
 1596      08
 294:src/mcu_msg.c ****         msg_destroy(&res);
 1597              		.loc 1 294 0
 1598 0043 4885C0   		testq	%rax, %rax
 1599 0046 741B     		je	.L146
 298:src/mcu_msg.c ****     if (*p != __CTRL_START_MSG) { // if the next char is not START_MSG, move to the start flag
 1600              		.loc 1 298 0
 1601 0048 0FB75424 		movzwl	8(%rsp), %edx
 1601      08
 1602 004d 4801D0   		addq	%rdx, %rax
 1603              	.LVL174:
 299:src/mcu_msg.c ****         while(__is_p_in_str(res.content, p + 1) && *p != __CTRL_START_MSG) p++;
 1604              		.loc 1 299 0
 1605 0050 80387B   		cmpb	$123, (%rax)
 1606 0053 753D     		jne	.L139
 1607              	.L138:
 302:src/mcu_msg.c ****     while(__is_p_in_str(res.content, p) && *p != __CTRL_STOP_MSG) { //calc length
 1608              		.loc 1 302 0
 1609 0055 488D5001 		leaq	1(%rax), %rdx
 1610              	.LVL175:
 1611 0059 48895424 		movq	%rdx, 16(%rsp)
 1611      10
 1612 005e 4889D0   		movq	%rdx, %rax
 303:src/mcu_msg.c ****         p++;
 1613              		.loc 1 303 0
 1614 0061 EB50     		jmp	.L140
 1615              	.LVL176:
 1616              	.L146:
 295:src/mcu_msg.c ****         return res;
 1617              		.loc 1 295 0
 1618 0063 4889E7   		movq	%rsp, %rdi
 1619 0066 E8000000 		call	msg_destroy
 1619      00
 1620              	.LVL177:
 296:src/mcu_msg.c ****     }
 1621              		.loc 1 296 0
 1622 006b 488B0424 		movq	(%rsp), %rax
 1623 006f 488B5424 		movq	8(%rsp), %rdx
 1623      08
 1624 0074 488903   		movq	%rax, (%rbx)
 1625 0077 48895308 		movq	%rdx, 8(%rbx)
 1626 007b 488B4424 		movq	16(%rsp), %rax
 1626      10
 1627 0080 488B5424 		movq	24(%rsp), %rdx
 1627      18
 1628 0085 48894310 		movq	%rax, 16(%rbx)
 1629 0089 48895318 		movq	%rdx, 24(%rbx)
 1630 008d EB68     		jmp	.L135
 1631              	.LVL178:
 1632              	.L144:
 300:src/mcu_msg.c ****     }
 1633              		.loc 1 300 0
 1634 008f 4889D0   		movq	%rdx, %rax
GAS LISTING /tmp/cc45SYiz.s 			page 52


 1635              	.LVL179:
 1636              	.L139:
 300:src/mcu_msg.c ****     }
 1637              		.loc 1 300 0 is_stmt 0 discriminator 1
 1638 0092 488D5001 		leaq	1(%rax), %rdx
 1639              	.LVL180:
 1640              	.LBB94:
 1641              	.LBB95:
 188:src/mcu_msg.c **** }
 1642              		.loc 1 188 0 is_stmt 1 discriminator 1
 1643 0096 4889D6   		movq	%rdx, %rsi
 1644 0099 482B7424 		subq	16(%rsp), %rsi
 1644      10
 1645 009e 0FB74C24 		movzwl	24(%rsp), %ecx
 1645      18
 1646              	.LVL181:
 1647              	.LBE95:
 1648              	.LBE94:
 300:src/mcu_msg.c ****     }
 1649              		.loc 1 300 0 discriminator 1
 1650 00a3 4839CE   		cmpq	%rcx, %rsi
 1651 00a6 7DAD     		jge	.L138
 300:src/mcu_msg.c ****     }
 1652              		.loc 1 300 0 is_stmt 0 discriminator 2
 1653 00a8 80387B   		cmpb	$123, (%rax)
 1654 00ab 75E2     		jne	.L144
 1655 00ad EBA6     		jmp	.L138
 1656              	.L142:
 304:src/mcu_msg.c ****     }
 1657              		.loc 1 304 0 is_stmt 1
 1658 00af 4883C001 		addq	$1, %rax
 1659              	.LVL182:
 1660              	.L140:
 1661              	.LBB96:
 1662              	.LBB97:
 188:src/mcu_msg.c **** }
 1663              		.loc 1 188 0
 1664 00b3 4889C7   		movq	%rax, %rdi
 1665 00b6 4889C6   		movq	%rax, %rsi
 1666 00b9 482B7424 		subq	16(%rsp), %rsi
 1666      10
 1667 00be 0FB74C24 		movzwl	24(%rsp), %ecx
 1667      18
 1668              	.LVL183:
 1669              	.LBE97:
 1670              	.LBE96:
 303:src/mcu_msg.c ****         p++;
 1671              		.loc 1 303 0
 1672 00c3 4839CE   		cmpq	%rcx, %rsi
 1673 00c6 7D05     		jge	.L141
 303:src/mcu_msg.c ****         p++;
 1674              		.loc 1 303 0 is_stmt 0 discriminator 1
 1675 00c8 80387D   		cmpb	$125, (%rax)
 1676 00cb 75E2     		jne	.L142
 1677              	.L141:
 306:src/mcu_msg.c ****     return res;
 1678              		.loc 1 306 0 is_stmt 1
GAS LISTING /tmp/cc45SYiz.s 			page 53


 1679 00cd 4829D7   		subq	%rdx, %rdi
 1680 00d0 66897C24 		movw	%di, 24(%rsp)
 1680      18
 307:src/mcu_msg.c **** }
 1681              		.loc 1 307 0
 1682 00d5 488B0424 		movq	(%rsp), %rax
 1683              	.LVL184:
 1684 00d9 488B5424 		movq	8(%rsp), %rdx
 1684      08
 1685 00de 488903   		movq	%rax, (%rbx)
 1686 00e1 48895308 		movq	%rdx, 8(%rbx)
 1687 00e5 488B4424 		movq	16(%rsp), %rax
 1687      10
 1688 00ea 488B5424 		movq	24(%rsp), %rdx
 1688      18
 1689 00ef 48894310 		movq	%rax, 16(%rbx)
 1690 00f3 48895318 		movq	%rdx, 24(%rbx)
 1691              	.L135:
 308:src/mcu_msg.c **** 
 1692              		.loc 1 308 0
 1693 00f7 4889D8   		movq	%rbx, %rax
 1694 00fa 488B5C24 		movq	40(%rsp), %rbx
 1694      28
 1695 00ff 6448331C 		xorq	%fs:40, %rbx
 1695      25280000 
 1695      00
 1696              	.LVL185:
 1697 0108 7506     		jne	.L147
 1698 010a 4883C430 		addq	$48, %rsp
 1699              	.LCFI62:
 1700              		.cfi_remember_state
 1701              		.cfi_def_cfa_offset 16
 1702 010e 5B       		popq	%rbx
 1703              	.LCFI63:
 1704              		.cfi_def_cfa_offset 8
 1705 010f C3       		ret
 1706              	.L147:
 1707              	.LCFI64:
 1708              		.cfi_restore_state
 1709 0110 E8000000 		call	__stack_chk_fail@PLT
 1709      00
 1710              	.LVL186:
 1711              		.cfi_endproc
 1712              	.LFE39:
 1714              		.section	.text.msg_parser_get_obj,"ax",@progbits
 1715              		.globl	msg_parser_get_obj
 1717              	msg_parser_get_obj:
 1718              	.LFB40:
 313:src/mcu_msg.c ****     msg_obj_t res;
 1719              		.loc 1 313 0
 1720              		.cfi_startproc
 1721              	.LVL187:
 1722 0000 53       		pushq	%rbx
 1723              	.LCFI65:
 1724              		.cfi_def_cfa_offset 16
 1725              		.cfi_offset 3, -16
 1726 0001 4883EC30 		subq	$48, %rsp
GAS LISTING /tmp/cc45SYiz.s 			page 54


 1727              	.LCFI66:
 1728              		.cfi_def_cfa_offset 64
 1729 0005 4889FB   		movq	%rdi, %rbx
 1730 0008 4889F2   		movq	%rsi, %rdx
 313:src/mcu_msg.c ****     msg_obj_t res;
 1731              		.loc 1 313 0
 1732 000b 64488B04 		movq	%fs:40, %rax
 1732      25280000 
 1732      00
 1733 0014 48894424 		movq	%rax, 40(%rsp)
 1733      28
 1734 0019 31C0     		xorl	%eax, %eax
 315:src/mcu_msg.c ****     char *p;
 1735              		.loc 1 315 0
 1736 001b 41B82800 		movl	$40, %r8d
 1736      0000
 1737 0021 B9400000 		movl	$64, %ecx
 1737      00
 1738 0026 488B7C24 		movq	80(%rsp), %rdi
 1738      50
 1739              	.LVL188:
 1740 002b 488B7424 		movq	88(%rsp), %rsi
 1740      58
 1741              	.LVL189:
 1742 0030 E8000000 		call	__find_keyword
 1742      00
 1743              	.LVL190:
 1744 0035 48890424 		movq	%rax, (%rsp)
 1745 0039 48895424 		movq	%rdx, 8(%rsp)
 1745      08
 317:src/mcu_msg.c ****         msg_destroy_obj(&res);
 1746              		.loc 1 317 0
 1747 003e 4885C0   		testq	%rax, %rax
 1748 0041 741B     		je	.L159
 322:src/mcu_msg.c ****     if (*p != __CTRL_START_OBJ) {
 1749              		.loc 1 322 0
 1750 0043 0FB75424 		movzwl	8(%rsp), %edx
 1750      08
 1751 0048 4801D0   		addq	%rdx, %rax
 1752              	.LVL191:
 323:src/mcu_msg.c ****         while(__is_p_in_str(msg.content, p + 1) && *p != __CTRL_START_OBJ) p++;
 1753              		.loc 1 323 0
 1754 004b 803828   		cmpb	$40, (%rax)
 1755 004e 753D     		jne	.L152
 1756              	.L151:
 326:src/mcu_msg.c ****     while(__is_p_in_str(msg.content, p) && *p != __CTRL_STOP_OBJ) {
 1757              		.loc 1 326 0
 1758 0050 488D5001 		leaq	1(%rax), %rdx
 1759              	.LVL192:
 1760 0054 48895424 		movq	%rdx, 16(%rsp)
 1760      10
 1761 0059 4889D0   		movq	%rdx, %rax
 327:src/mcu_msg.c ****         p++;
 1762              		.loc 1 327 0
 1763 005c EB50     		jmp	.L153
 1764              	.LVL193:
 1765              	.L159:
GAS LISTING /tmp/cc45SYiz.s 			page 55


 318:src/mcu_msg.c ****         return res;
 1766              		.loc 1 318 0
 1767 005e 4889E7   		movq	%rsp, %rdi
 1768 0061 E8000000 		call	msg_destroy_obj
 1768      00
 1769              	.LVL194:
 319:src/mcu_msg.c ****     }
 1770              		.loc 1 319 0
 1771 0066 488B0424 		movq	(%rsp), %rax
 1772 006a 488B5424 		movq	8(%rsp), %rdx
 1772      08
 1773 006f 488903   		movq	%rax, (%rbx)
 1774 0072 48895308 		movq	%rdx, 8(%rbx)
 1775 0076 488B4424 		movq	16(%rsp), %rax
 1775      10
 1776 007b 488B5424 		movq	24(%rsp), %rdx
 1776      18
 1777 0080 48894310 		movq	%rax, 16(%rbx)
 1778 0084 48895318 		movq	%rdx, 24(%rbx)
 1779 0088 EB68     		jmp	.L148
 1780              	.LVL195:
 1781              	.L157:
 324:src/mcu_msg.c ****     }
 1782              		.loc 1 324 0
 1783 008a 4889D0   		movq	%rdx, %rax
 1784              	.LVL196:
 1785              	.L152:
 324:src/mcu_msg.c ****     }
 1786              		.loc 1 324 0 is_stmt 0 discriminator 1
 1787 008d 488D5001 		leaq	1(%rax), %rdx
 1788              	.LVL197:
 1789              	.LBB98:
 1790              	.LBB99:
 188:src/mcu_msg.c **** }
 1791              		.loc 1 188 0 is_stmt 1 discriminator 1
 1792 0091 4889D6   		movq	%rdx, %rsi
 1793 0094 482B7424 		subq	80(%rsp), %rsi
 1793      50
 1794 0099 0FB74C24 		movzwl	88(%rsp), %ecx
 1794      58
 1795              	.LVL198:
 1796              	.LBE99:
 1797              	.LBE98:
 324:src/mcu_msg.c ****     }
 1798              		.loc 1 324 0 discriminator 1
 1799 009e 4839CE   		cmpq	%rcx, %rsi
 1800 00a1 7DAD     		jge	.L151
 324:src/mcu_msg.c ****     }
 1801              		.loc 1 324 0 is_stmt 0 discriminator 2
 1802 00a3 803828   		cmpb	$40, (%rax)
 1803 00a6 75E2     		jne	.L157
 1804 00a8 EBA6     		jmp	.L151
 1805              	.L155:
 328:src/mcu_msg.c ****     }
 1806              		.loc 1 328 0 is_stmt 1
 1807 00aa 4883C001 		addq	$1, %rax
 1808              	.LVL199:
GAS LISTING /tmp/cc45SYiz.s 			page 56


 1809              	.L153:
 1810              	.LBB100:
 1811              	.LBB101:
 188:src/mcu_msg.c **** }
 1812              		.loc 1 188 0
 1813 00ae 4889C7   		movq	%rax, %rdi
 1814 00b1 4889C6   		movq	%rax, %rsi
 1815 00b4 482B7424 		subq	80(%rsp), %rsi
 1815      50
 1816 00b9 0FB74C24 		movzwl	88(%rsp), %ecx
 1816      58
 1817              	.LVL200:
 1818              	.LBE101:
 1819              	.LBE100:
 327:src/mcu_msg.c ****         p++;
 1820              		.loc 1 327 0
 1821 00be 4839CE   		cmpq	%rcx, %rsi
 1822 00c1 7D05     		jge	.L154
 327:src/mcu_msg.c ****         p++;
 1823              		.loc 1 327 0 is_stmt 0 discriminator 1
 1824 00c3 803829   		cmpb	$41, (%rax)
 1825 00c6 75E2     		jne	.L155
 1826              	.L154:
 330:src/mcu_msg.c ****     return res;
 1827              		.loc 1 330 0 is_stmt 1
 1828 00c8 4829D7   		subq	%rdx, %rdi
 1829 00cb 66897C24 		movw	%di, 24(%rsp)
 1829      18
 331:src/mcu_msg.c **** }
 1830              		.loc 1 331 0
 1831 00d0 488B0424 		movq	(%rsp), %rax
 1832              	.LVL201:
 1833 00d4 488B5424 		movq	8(%rsp), %rdx
 1833      08
 1834 00d9 488903   		movq	%rax, (%rbx)
 1835 00dc 48895308 		movq	%rdx, 8(%rbx)
 1836 00e0 488B4424 		movq	16(%rsp), %rax
 1836      10
 1837 00e5 488B5424 		movq	24(%rsp), %rdx
 1837      18
 1838 00ea 48894310 		movq	%rax, 16(%rbx)
 1839 00ee 48895318 		movq	%rdx, 24(%rbx)
 1840              	.L148:
 332:src/mcu_msg.c **** 
 1841              		.loc 1 332 0
 1842 00f2 4889D8   		movq	%rbx, %rax
 1843 00f5 488B5C24 		movq	40(%rsp), %rbx
 1843      28
 1844 00fa 6448331C 		xorq	%fs:40, %rbx
 1844      25280000 
 1844      00
 1845              	.LVL202:
 1846 0103 7506     		jne	.L160
 1847 0105 4883C430 		addq	$48, %rsp
 1848              	.LCFI67:
 1849              		.cfi_remember_state
 1850              		.cfi_def_cfa_offset 16
GAS LISTING /tmp/cc45SYiz.s 			page 57


 1851 0109 5B       		popq	%rbx
 1852              	.LCFI68:
 1853              		.cfi_def_cfa_offset 8
 1854 010a C3       		ret
 1855              	.L160:
 1856              	.LCFI69:
 1857              		.cfi_restore_state
 1858 010b E8000000 		call	__stack_chk_fail@PLT
 1858      00
 1859              	.LVL203:
 1860              		.cfi_endproc
 1861              	.LFE40:
 1863              		.section	.text.msg_parser_get_cmd,"ax",@progbits
 1864              		.globl	msg_parser_get_cmd
 1866              	msg_parser_get_cmd:
 1867              	.LFB41:
 335:src/mcu_msg.c ****     msg_cmd_t res;
 1868              		.loc 1 335 0
 1869              		.cfi_startproc
 1870              	.LVL204:
 1871 0000 4883EC08 		subq	$8, %rsp
 1872              	.LCFI70:
 1873              		.cfi_def_cfa_offset 16
 1874 0004 4889FA   		movq	%rdi, %rdx
 338:src/mcu_msg.c ****     return res;
 1875              		.loc 1 338 0
 1876 0007 41B83E00 		movl	$62, %r8d
 1876      0000
 1877 000d B93C0000 		movl	$60, %ecx
 1877      00
 1878 0012 488B7C24 		movq	32(%rsp), %rdi
 1878      20
 1879              	.LVL205:
 1880 0017 488B7424 		movq	40(%rsp), %rsi
 1880      28
 1881 001c E8000000 		call	__find_keyword
 1881      00
 1882              	.LVL206:
 340:src/mcu_msg.c **** 
 1883              		.loc 1 340 0
 1884 0021 4883C408 		addq	$8, %rsp
 1885              	.LCFI71:
 1886              		.cfi_def_cfa_offset 8
 1887 0025 C3       		ret
 1888              		.cfi_endproc
 1889              	.LFE41:
 1891              		.section	.text.msg_parser_get_int,"ax",@progbits
 1892              		.globl	msg_parser_get_int
 1894              	msg_parser_get_int:
 1895              	.LFB42:
 343:src/mcu_msg.c ****     msg_str_t sval = __find_val(obj, key);
 1896              		.loc 1 343 0
 1897              		.cfi_startproc
 1898              	.LVL207:
 1899 0000 53       		pushq	%rbx
 1900              	.LCFI72:
 1901              		.cfi_def_cfa_offset 16
GAS LISTING /tmp/cc45SYiz.s 			page 58


 1902              		.cfi_offset 3, -16
 1903 0001 4889FB   		movq	%rdi, %rbx
 344:src/mcu_msg.c ****     msg_size_t i;
 1904              		.loc 1 344 0
 1905 0004 FF742428 		pushq	40(%rsp)
 1906              	.LCFI73:
 1907              		.cfi_def_cfa_offset 24
 1908 0008 FF742428 		pushq	40(%rsp)
 1909              	.LCFI74:
 1910              		.cfi_def_cfa_offset 32
 1911 000c FF742428 		pushq	40(%rsp)
 1912              	.LCFI75:
 1913              		.cfi_def_cfa_offset 40
 1914 0010 FF742428 		pushq	40(%rsp)
 1915              	.LCFI76:
 1916              		.cfi_def_cfa_offset 48
 1917 0014 4889F7   		movq	%rsi, %rdi
 1918              	.LVL208:
 1919 0017 E8000000 		call	__find_val
 1919      00
 1920              	.LVL209:
 350:src/mcu_msg.c ****         return -1;
 1921              		.loc 1 350 0
 1922 001c 4883C420 		addq	$32, %rsp
 1923              	.LCFI77:
 1924              		.cfi_def_cfa_offset 16
 1925              	.LVL210:
 1926 0020 4885C0   		testq	%rax, %rax
 1927 0023 0F84AD00 		je	.L174
 1927      0000
 1928 0029 4889C2   		movq	%rax, %rdx
 354:src/mcu_msg.c ****         case '+':
 1929              		.loc 1 354 0
 1930 002c 0FB600   		movzbl	(%rax), %eax
 1931 002f 3C2B     		cmpb	$43, %al
 1932 0031 740C     		je	.L166
 1933 0033 3C2D     		cmpb	$45, %al
 1934 0035 7419     		je	.L167
 347:src/mcu_msg.c ****     int8_t res = 0; // result of function
 1935              		.loc 1 347 0
 1936 0037 41B80100 		movl	$1, %r8d
 1936      0000
 1937 003d EB0A     		jmp	.L165
 1938              	.L166:
 357:src/mcu_msg.c ****         break;
 1939              		.loc 1 357 0
 1940 003f 488D5201 		leaq	1(%rdx), %rdx
 356:src/mcu_msg.c ****             sval.s++;
 1941              		.loc 1 356 0
 1942 0043 41B80100 		movl	$1, %r8d
 1942      0000
 1943              	.LVL211:
 1944              	.L165:
 369:src/mcu_msg.c ****         if(*sval.s < '0' || *sval.s > '9') {    // if non valid number, return with error
 1945              		.loc 1 369 0
 1946 0049 BE000000 		movl	$0, %esi
 1946      00
GAS LISTING /tmp/cc45SYiz.s 			page 59


 1947 004e EB1E     		jmp	.L168
 1948              	.LVL212:
 1949              	.L167:
 362:src/mcu_msg.c ****         break;
 1950              		.loc 1 362 0
 1951 0050 488D5201 		leaq	1(%rdx), %rdx
 361:src/mcu_msg.c ****             sval.s++;
 1952              		.loc 1 361 0
 1953 0054 41B8FFFF 		movl	$-1, %r8d
 1953      FFFF
 363:src/mcu_msg.c ****         
 1954              		.loc 1 363 0
 1955 005a EBED     		jmp	.L165
 1956              	.LVL213:
 1957              	.L170:
 369:src/mcu_msg.c ****         if(*sval.s < '0' || *sval.s > '9') {    // if non valid number, return with error
 1958              		.loc 1 369 0
 1959 005c 3C3B     		cmpb	$59, %al
 1960 005e 7432     		je	.L169
 370:src/mcu_msg.c ****             return -1;
 1961              		.loc 1 370 0
 1962 0060 83E830   		subl	$48, %eax
 1963 0063 3C09     		cmpb	$9, %al
 1964 0065 7776     		ja	.L176
 369:src/mcu_msg.c ****         if(*sval.s < '0' || *sval.s > '9') {    // if non valid number, return with error
 1965              		.loc 1 369 0 discriminator 2
 1966 0067 83C601   		addl	$1, %esi
 1967              	.LVL214:
 1968 006a 488D5701 		leaq	1(%rdi), %rdx
 1969              	.LVL215:
 1970              	.L168:
 369:src/mcu_msg.c ****         if(*sval.s < '0' || *sval.s > '9') {    // if non valid number, return with error
 1971              		.loc 1 369 0 is_stmt 0 discriminator 1
 1972 006e 4889D7   		movq	%rdx, %rdi
 1973              	.LVL216:
 1974              	.LBB102:
 1975              	.LBB103:
 188:src/mcu_msg.c **** }
 1976              		.loc 1 188 0 is_stmt 1 discriminator 1
 1977 0071 4889D1   		movq	%rdx, %rcx
 1978 0074 482B4C24 		subq	32(%rsp), %rcx
 1978      20
 1979 0079 0FB74424 		movzwl	40(%rsp), %eax
 1979      28
 1980              	.LVL217:
 1981              	.LBE103:
 1982              	.LBE102:
 369:src/mcu_msg.c ****         if(*sval.s < '0' || *sval.s > '9') {    // if non valid number, return with error
 1983              		.loc 1 369 0 discriminator 1
 1984 007e 4839C1   		cmpq	%rax, %rcx
 1985 0081 7D0F     		jge	.L169
 369:src/mcu_msg.c ****         if(*sval.s < '0' || *sval.s > '9') {    // if non valid number, return with error
 1986              		.loc 1 369 0 is_stmt 0 discriminator 3
 1987 0083 0FB602   		movzbl	(%rdx), %eax
 1988              	.LVL218:
 1989              	.LBB104:
 1990              	.LBB105:
GAS LISTING /tmp/cc45SYiz.s 			page 60


 142:src/mcu_msg.c ****         case  ' ':
 1991              		.loc 1 142 0 is_stmt 1 discriminator 3
 1992 0086 3C09     		cmpb	$9, %al
 1993 0088 7CD2     		jl	.L170
 1994 008a 3C0D     		cmpb	$13, %al
 1995 008c 7E04     		jle	.L169
 1996 008e 3C20     		cmpb	$32, %al
 1997 0090 75CA     		jne	.L170
 1998              	.LVL219:
 1999              	.L169:
 2000              	.LBE105:
 2001              	.LBE104:
 375:src/mcu_msg.c ****     --sval.s;
 2002              		.loc 1 375 0
 2003 0092 C7030000 		movl	$0, (%rbx)
 2003      0000
 376:src/mcu_msg.c ****     while(i--) { //convert value to integer
 2004              		.loc 1 376 0
 2005 0098 488D57FF 		leaq	-1(%rdi), %rdx
 348:src/mcu_msg.c **** 
 2006              		.loc 1 348 0
 2007 009c B8000000 		movl	$0, %eax
 2007      00
 346:src/mcu_msg.c ****     int sign = 1;
 2008              		.loc 1 346 0
 2009 00a1 B9010000 		movl	$1, %ecx
 2009      00
 377:src/mcu_msg.c ****         *res_val += (*sval.s-- - '0') * m;
 2010              		.loc 1 377 0
 2011 00a6 EB1D     		jmp	.L172
 2012              	.LVL220:
 2013              	.L173:
 378:src/mcu_msg.c ****         m *= 10;
 2014              		.loc 1 378 0
 2015 00a8 4889D6   		movq	%rdx, %rsi
 2016 00ab 4883EA01 		subq	$1, %rdx
 2017 00af 0FBE36   		movsbl	(%rsi), %esi
 2018 00b2 83EE30   		subl	$48, %esi
 2019 00b5 0FAFF1   		imull	%ecx, %esi
 2020 00b8 0133     		addl	%esi, (%rbx)
 379:src/mcu_msg.c ****         res++;
 2021              		.loc 1 379 0
 2022 00ba 8D3489   		leal	(%rcx,%rcx,4), %esi
 2023 00bd 8D0C36   		leal	(%rsi,%rsi), %ecx
 2024              	.LVL221:
 380:src/mcu_msg.c ****     }
 2025              		.loc 1 380 0
 2026 00c0 83C001   		addl	$1, %eax
 2027              	.LVL222:
 377:src/mcu_msg.c ****         *res_val += (*sval.s-- - '0') * m;
 2028              		.loc 1 377 0
 2029 00c3 89FE     		movl	%edi, %esi
 2030              	.LVL223:
 2031              	.L172:
 2032 00c5 8D7EFF   		leal	-1(%rsi), %edi
 2033              	.LVL224:
 2034 00c8 6685F6   		testw	%si, %si
GAS LISTING /tmp/cc45SYiz.s 			page 61


 2035 00cb 75DB     		jne	.L173
 383:src/mcu_msg.c **** 
 2036              		.loc 1 383 0
 2037 00cd 440FAF03 		imull	(%rbx), %r8d
 2038              	.LVL225:
 2039 00d1 448903   		movl	%r8d, (%rbx)
 2040              	.LVL226:
 2041              	.L163:
 386:src/mcu_msg.c **** 
 2042              		.loc 1 386 0
 2043 00d4 5B       		popq	%rbx
 2044              	.LCFI78:
 2045              		.cfi_remember_state
 2046              		.cfi_def_cfa_offset 8
 2047              	.LVL227:
 2048 00d5 C3       		ret
 2049              	.LVL228:
 2050              	.L174:
 2051              	.LCFI79:
 2052              		.cfi_restore_state
 351:src/mcu_msg.c **** 
 2053              		.loc 1 351 0
 2054 00d6 B8FFFFFF 		movl	$-1, %eax
 2054      FF
 2055 00db EBF7     		jmp	.L163
 2056              	.LVL229:
 2057              	.L176:
 371:src/mcu_msg.c ****         }
 2058              		.loc 1 371 0
 2059 00dd B8FFFFFF 		movl	$-1, %eax
 2059      FF
 2060 00e2 EBF0     		jmp	.L163
 2061              		.cfi_endproc
 2062              	.LFE42:
 2064              		.section	.text.msg_parser_get_float,"ax",@progbits
 2065              		.globl	msg_parser_get_float
 2067              	msg_parser_get_float:
 2068              	.LFB43:
 390:src/mcu_msg.c ****     msg_str_t sval = __find_val(obj, key);
 2069              		.loc 1 390 0
 2070              		.cfi_startproc
 2071              	.LVL230:
 2072 0000 53       		pushq	%rbx
 2073              	.LCFI80:
 2074              		.cfi_def_cfa_offset 16
 2075              		.cfi_offset 3, -16
 2076 0001 4889FB   		movq	%rdi, %rbx
 391:src/mcu_msg.c ****     char *pf;
 2077              		.loc 1 391 0
 2078 0004 FF742428 		pushq	40(%rsp)
 2079              	.LCFI81:
 2080              		.cfi_def_cfa_offset 24
 2081 0008 FF742428 		pushq	40(%rsp)
 2082              	.LCFI82:
 2083              		.cfi_def_cfa_offset 32
 2084 000c FF742428 		pushq	40(%rsp)
 2085              	.LCFI83:
GAS LISTING /tmp/cc45SYiz.s 			page 62


 2086              		.cfi_def_cfa_offset 40
 2087 0010 FF742428 		pushq	40(%rsp)
 2088              	.LCFI84:
 2089              		.cfi_def_cfa_offset 48
 2090 0014 4889F7   		movq	%rsi, %rdi
 2091              	.LVL231:
 2092 0017 E8000000 		call	__find_val
 2092      00
 2093              	.LVL232:
 2094 001c 4889C1   		movq	%rax, %rcx
 2095              	.LVL233:
 399:src/mcu_msg.c ****         return -1;
 2096              		.loc 1 399 0
 2097 001f 4883C420 		addq	$32, %rsp
 2098              	.LCFI85:
 2099              		.cfi_def_cfa_offset 16
 2100 0023 4885C0   		testq	%rax, %rax
 2101 0026 0F844C01 		je	.L197
 2101      0000
 2102 002c 4889C2   		movq	%rax, %rdx
 403:src/mcu_msg.c ****         case '+':
 2103              		.loc 1 403 0
 2104 002f 0FB601   		movzbl	(%rcx), %eax
 2105 0032 3C2B     		cmpb	$43, %al
 2106 0034 740B     		je	.L182
 2107 0036 3C2D     		cmpb	$45, %al
 2108 0038 7417     		je	.L183
 396:src/mcu_msg.c ****     int8_t res = 0; // result of function
 2109              		.loc 1 396 0
 2110 003a BF010000 		movl	$1, %edi
 2110      00
 2111 003f EB09     		jmp	.L181
 2112              	.L182:
 406:src/mcu_msg.c ****         break;
 2113              		.loc 1 406 0
 2114 0041 488D4A01 		leaq	1(%rdx), %rcx
 405:src/mcu_msg.c ****             sval.s++;
 2115              		.loc 1 405 0
 2116 0045 BF010000 		movl	$1, %edi
 2116      00
 2117              	.LVL234:
 2118              	.L181:
 419:src/mcu_msg.c ****         if((*sval.s < '0' || *sval.s > '9')) {    // if non valid number, return with error
 2119              		.loc 1 419 0
 2120 004a BA000000 		movl	$0, %edx
 2120      00
 2121 004f EB25     		jmp	.L184
 2122              	.LVL235:
 2123              	.L183:
 411:src/mcu_msg.c ****         break;
 2124              		.loc 1 411 0
 2125 0051 488D4A01 		leaq	1(%rdx), %rcx
 410:src/mcu_msg.c ****             sval.s++;
 2126              		.loc 1 410 0
 2127 0055 BFFFFFFF 		movl	$-1, %edi
 2127      FF
 412:src/mcu_msg.c ****         
GAS LISTING /tmp/cc45SYiz.s 			page 63


 2128              		.loc 1 412 0
 2129 005a EBEE     		jmp	.L181
 2130              	.LVL236:
 2131              	.L186:
 419:src/mcu_msg.c ****         if((*sval.s < '0' || *sval.s > '9')) {    // if non valid number, return with error
 2132              		.loc 1 419 0
 2133 005c 3C3B     		cmpb	$59, %al
 2134 005e 743A     		je	.L185
 419:src/mcu_msg.c ****         if((*sval.s < '0' || *sval.s > '9')) {    // if non valid number, return with error
 2135              		.loc 1 419 0 is_stmt 0 discriminator 5
 2136 0060 3C2E     		cmpb	$46, %al
 2137 0062 7436     		je	.L185
 420:src/mcu_msg.c ****             return -1;
 2138              		.loc 1 420 0 is_stmt 1
 2139 0064 83E830   		subl	$48, %eax
 2140 0067 3C09     		cmpb	$9, %al
 2141 0069 0F871001 		ja	.L199
 2141      0000
 419:src/mcu_msg.c ****         if((*sval.s < '0' || *sval.s > '9')) {    // if non valid number, return with error
 2142              		.loc 1 419 0 discriminator 2
 2143 006f 83C201   		addl	$1, %edx
 2144              	.LVL237:
 2145 0072 488D4E01 		leaq	1(%rsi), %rcx
 2146              	.LVL238:
 2147              	.L184:
 419:src/mcu_msg.c ****         if((*sval.s < '0' || *sval.s > '9')) {    // if non valid number, return with error
 2148              		.loc 1 419 0 is_stmt 0 discriminator 1
 2149 0076 4889CE   		movq	%rcx, %rsi
 2150              	.LVL239:
 2151              	.LBB106:
 2152              	.LBB107:
 188:src/mcu_msg.c **** }
 2153              		.loc 1 188 0 is_stmt 1 discriminator 1
 2154 0079 4989C8   		movq	%rcx, %r8
 2155 007c 4C2B4424 		subq	32(%rsp), %r8
 2155      20
 2156 0081 0FB74424 		movzwl	40(%rsp), %eax
 2156      28
 2157              	.LVL240:
 2158              	.LBE107:
 2159              	.LBE106:
 419:src/mcu_msg.c ****         if((*sval.s < '0' || *sval.s > '9')) {    // if non valid number, return with error
 2160              		.loc 1 419 0 discriminator 1
 2161 0086 4939C0   		cmpq	%rax, %r8
 2162 0089 7D0F     		jge	.L185
 419:src/mcu_msg.c ****         if((*sval.s < '0' || *sval.s > '9')) {    // if non valid number, return with error
 2163              		.loc 1 419 0 is_stmt 0 discriminator 3
 2164 008b 0FB601   		movzbl	(%rcx), %eax
 2165              	.LVL241:
 2166              	.LBB108:
 2167              	.LBB109:
 142:src/mcu_msg.c ****         case  ' ':
 2168              		.loc 1 142 0 is_stmt 1 discriminator 3
 2169 008e 3C09     		cmpb	$9, %al
 2170 0090 7CCA     		jl	.L186
 2171 0092 3C0D     		cmpb	$13, %al
 2172 0094 7E04     		jle	.L185
GAS LISTING /tmp/cc45SYiz.s 			page 64


 2173 0096 3C20     		cmpb	$32, %al
 2174 0098 75C2     		jne	.L186
 2175              	.LVL242:
 2176              	.L185:
 2177              	.LBE109:
 2178              	.LBE108:
 425:src/mcu_msg.c ****     
 2179              		.loc 1 425 0
 2180 009a C7030000 		movl	$0x00000000, (%rbx)
 2180      0000
 427:src/mcu_msg.c ****         pf = sval.s + 1;
 2181              		.loc 1 427 0
 2182 00a0 803E2E   		cmpb	$46, (%rsi)
 2183 00a3 7416     		je	.L204
 397:src/mcu_msg.c **** 
 2184              		.loc 1 397 0
 2185 00a5 B8000000 		movl	$0, %eax
 2185      00
 431:src/mcu_msg.c ****     }
 2186              		.loc 1 431 0
 2187 00aa 41B80000 		movl	$0, %r8d
 2187      0000
 2188              	.LVL243:
 2189              	.L188:
 434:src/mcu_msg.c ****     while(i--) { // convert integer part
 2190              		.loc 1 434 0
 2191 00b0 488D4EFF 		leaq	-1(%rsi), %rcx
 394:src/mcu_msg.c ****     float mf = 0.1;
 2192              		.loc 1 394 0
 2193 00b4 BE010000 		movl	$1, %esi
 2193      00
 435:src/mcu_msg.c ****         *res_val += (*sval.s-- - '0') * m;
 2194              		.loc 1 435 0
 2195 00b9 EB38     		jmp	.L189
 2196              	.LVL244:
 2197              	.L204:
 428:src/mcu_msg.c ****         res++;
 2198              		.loc 1 428 0
 2199 00bb 4C8D4601 		leaq	1(%rsi), %r8
 2200              	.LVL245:
 429:src/mcu_msg.c ****     } else {
 2201              		.loc 1 429 0
 2202 00bf B8010000 		movl	$1, %eax
 2202      00
 2203 00c4 EBEA     		jmp	.L188
 2204              	.LVL246:
 2205              	.L192:
 436:src/mcu_msg.c ****         m *= 10;
 2206              		.loc 1 436 0
 2207 00c6 4889CA   		movq	%rcx, %rdx
 2208 00c9 4883E901 		subq	$1, %rcx
 2209 00cd 0FBE12   		movsbl	(%rdx), %edx
 2210 00d0 83EA30   		subl	$48, %edx
 2211 00d3 0FAFD6   		imull	%esi, %edx
 2212 00d6 660FEFC0 		pxor	%xmm0, %xmm0
 2213 00da F3480F2A 		cvtsi2ssq	%rdx, %xmm0
 2213      C2
GAS LISTING /tmp/cc45SYiz.s 			page 65


 2214 00df F30F5803 		addss	(%rbx), %xmm0
 2215 00e3 F30F1103 		movss	%xmm0, (%rbx)
 437:src/mcu_msg.c ****         res++;
 2216              		.loc 1 437 0
 2217 00e7 8D14B6   		leal	(%rsi,%rsi,4), %edx
 2218 00ea 8D3412   		leal	(%rdx,%rdx), %esi
 2219              	.LVL247:
 438:src/mcu_msg.c ****     }
 2220              		.loc 1 438 0
 2221 00ed 83C001   		addl	$1, %eax
 2222              	.LVL248:
 435:src/mcu_msg.c ****         *res_val += (*sval.s-- - '0') * m;
 2223              		.loc 1 435 0
 2224 00f0 4489CA   		movl	%r9d, %edx
 2225              	.LVL249:
 2226              	.L189:
 2227 00f3 448D4AFF 		leal	-1(%rdx), %r9d
 2228              	.LVL250:
 2229 00f7 6685D2   		testw	%dx, %dx
 2230 00fa 75CA     		jne	.L192
 395:src/mcu_msg.c ****     int sign = 1;
 2231              		.loc 1 395 0
 2232 00fc F30F100D 		movss	.LC3(%rip), %xmm1
 2232      00000000 
 2233 0104 EB33     		jmp	.L193
 2234              	.LVL251:
 2235              	.L195:
 442:src/mcu_msg.c ****         if(*pf < '0' || *pf > '9') {    // if non valid number, return with error
 2236              		.loc 1 442 0
 2237 0106 80F93B   		cmpb	$59, %cl
 2238 0109 745B     		je	.L194
 443:src/mcu_msg.c ****             return -1;
 2239              		.loc 1 443 0
 2240 010b 83E930   		subl	$48, %ecx
 2241 010e 80F909   		cmpb	$9, %cl
 2242 0111 7773     		ja	.L201
 446:src/mcu_msg.c ****         mf /= 10;
 2243              		.loc 1 446 0
 2244 0113 83EA30   		subl	$48, %edx
 2245 0116 660FEFC0 		pxor	%xmm0, %xmm0
 2246 011a F30F2AC2 		cvtsi2ss	%edx, %xmm0
 2247 011e F30F59C1 		mulss	%xmm1, %xmm0
 2248 0122 F30F5803 		addss	(%rbx), %xmm0
 2249 0126 F30F1103 		movss	%xmm0, (%rbx)
 447:src/mcu_msg.c ****         res++; 
 2250              		.loc 1 447 0
 2251 012a F30F5E0D 		divss	.LC4(%rip), %xmm1
 2251      00000000 
 2252              	.LVL252:
 448:src/mcu_msg.c ****     }
 2253              		.loc 1 448 0
 2254 0132 83C001   		addl	$1, %eax
 2255              	.LVL253:
 442:src/mcu_msg.c ****         if(*pf < '0' || *pf > '9') {    // if non valid number, return with error
 2256              		.loc 1 442 0
 2257 0135 4983C001 		addq	$1, %r8
 2258              	.LVL254:
GAS LISTING /tmp/cc45SYiz.s 			page 66


 2259              	.L193:
 442:src/mcu_msg.c ****         if(*pf < '0' || *pf > '9') {    // if non valid number, return with error
 2260              		.loc 1 442 0 is_stmt 0 discriminator 1
 2261 0139 4D85C0   		testq	%r8, %r8
 2262 013c 7428     		je	.L194
 2263              	.LVL255:
 2264              	.LBB110:
 2265              	.LBB111:
 188:src/mcu_msg.c **** }
 2266              		.loc 1 188 0 is_stmt 1 discriminator 2
 2267 013e 4C89C1   		movq	%r8, %rcx
 2268 0141 482B4C24 		subq	32(%rsp), %rcx
 2268      20
 2269 0146 0FB75424 		movzwl	40(%rsp), %edx
 2269      28
 2270              	.LVL256:
 2271              	.LBE111:
 2272              	.LBE110:
 442:src/mcu_msg.c ****         if(*pf < '0' || *pf > '9') {    // if non valid number, return with error
 2273              		.loc 1 442 0 discriminator 2
 2274 014b 4839D1   		cmpq	%rdx, %rcx
 2275 014e 7D16     		jge	.L194
 442:src/mcu_msg.c ****         if(*pf < '0' || *pf > '9') {    // if non valid number, return with error
 2276              		.loc 1 442 0 is_stmt 0 discriminator 3
 2277 0150 410FB608 		movzbl	(%r8), %ecx
 2278 0154 0FBED1   		movsbl	%cl, %edx
 2279              	.LVL257:
 2280              	.LBB112:
 2281              	.LBB113:
 142:src/mcu_msg.c ****         case  ' ':
 2282              		.loc 1 142 0 is_stmt 1 discriminator 3
 2283 0157 80F909   		cmpb	$9, %cl
 2284 015a 7CAA     		jl	.L195
 2285 015c 80F90D   		cmpb	$13, %cl
 2286 015f 7E05     		jle	.L194
 2287 0161 80F920   		cmpb	$32, %cl
 2288 0164 75A0     		jne	.L195
 2289              	.LVL258:
 2290              	.L194:
 2291              	.LBE113:
 2292              	.LBE112:
 451:src/mcu_msg.c **** 
 2293              		.loc 1 451 0
 2294 0166 660FEFC0 		pxor	%xmm0, %xmm0
 2295 016a F30F2AC7 		cvtsi2ss	%edi, %xmm0
 2296 016e F30F5903 		mulss	(%rbx), %xmm0
 2297 0172 F30F1103 		movss	%xmm0, (%rbx)
 2298              	.LVL259:
 2299              	.L179:
 454:src/mcu_msg.c **** 
 2300              		.loc 1 454 0
 2301 0176 5B       		popq	%rbx
 2302              	.LCFI86:
 2303              		.cfi_remember_state
 2304              		.cfi_def_cfa_offset 8
 2305              	.LVL260:
 2306 0177 C3       		ret
GAS LISTING /tmp/cc45SYiz.s 			page 67


 2307              	.LVL261:
 2308              	.L197:
 2309              	.LCFI87:
 2310              		.cfi_restore_state
 400:src/mcu_msg.c **** 
 2311              		.loc 1 400 0
 2312 0178 B8FFFFFF 		movl	$-1, %eax
 2312      FF
 2313 017d EBF7     		jmp	.L179
 2314              	.LVL262:
 2315              	.L199:
 421:src/mcu_msg.c ****         }
 2316              		.loc 1 421 0
 2317 017f B8FFFFFF 		movl	$-1, %eax
 2317      FF
 2318 0184 EBF0     		jmp	.L179
 2319              	.LVL263:
 2320              	.L201:
 444:src/mcu_msg.c ****         }
 2321              		.loc 1 444 0
 2322 0186 B8FFFFFF 		movl	$-1, %eax
 2322      FF
 2323              	.LVL264:
 2324 018b EBE9     		jmp	.L179
 2325              		.cfi_endproc
 2326              	.LFE43:
 2328              		.section	.text.msg_parser_get_string,"ax",@progbits
 2329              		.globl	msg_parser_get_string
 2331              	msg_parser_get_string:
 2332              	.LFB44:
 459:src/mcu_msg.c ****     msg_str_t res = __find_val(obj, key);
 2333              		.loc 1 459 0
 2334              		.cfi_startproc
 2335              	.LVL265:
 2336 0000 4883EC28 		subq	$40, %rsp
 2337              	.LCFI88:
 2338              		.cfi_def_cfa_offset 48
 459:src/mcu_msg.c ****     msg_str_t res = __find_val(obj, key);
 2339              		.loc 1 459 0
 2340 0004 64488B04 		movq	%fs:40, %rax
 2340      25280000 
 2340      00
 2341 000d 48894424 		movq	%rax, 24(%rsp)
 2341      18
 2342 0012 31C0     		xorl	%eax, %eax
 460:src/mcu_msg.c ****     char qmark;
 2343              		.loc 1 460 0
 2344 0014 FF742448 		pushq	72(%rsp)
 2345              	.LCFI89:
 2346              		.cfi_def_cfa_offset 56
 2347 0018 FF742448 		pushq	72(%rsp)
 2348              	.LCFI90:
 2349              		.cfi_def_cfa_offset 64
 2350 001c FF742448 		pushq	72(%rsp)
 2351              	.LCFI91:
 2352              		.cfi_def_cfa_offset 72
 2353 0020 FF742448 		pushq	72(%rsp)
GAS LISTING /tmp/cc45SYiz.s 			page 68


 2354              	.LCFI92:
 2355              		.cfi_def_cfa_offset 80
 2356 0024 E8000000 		call	__find_val
 2356      00
 2357              	.LVL266:
 2358 0029 48894424 		movq	%rax, 32(%rsp)
 2358      20
 2359 002e 48895424 		movq	%rdx, 40(%rsp)
 2359      28
 464:src/mcu_msg.c ****         msg_destroy_string(&res);
 2360              		.loc 1 464 0
 2361 0033 4883C420 		addq	$32, %rsp
 2362              	.LCFI93:
 2363              		.cfi_def_cfa_offset 48
 2364 0037 4885C0   		testq	%rax, %rax
 2365 003a 7422     		je	.L214
 469:src/mcu_msg.c **** 
 2366              		.loc 1 469 0
 2367 003c 0FB638   		movzbl	(%rax), %edi
 2368              	.LVL267:
 471:src/mcu_msg.c ****         msg_destroy_string(&res);
 2369              		.loc 1 471 0
 2370 003f 4080FF27 		cmpb	$39, %dil
 2371 0043 0F95C1   		setne	%cl
 2372 0046 4080FF22 		cmpb	$34, %dil
 2373 004a 0F95C2   		setne	%dl
 2374 004d 84D1     		testb	%dl, %cl
 2375 004f 7520     		jne	.L215
 476:src/mcu_msg.c ****     while(__is_p_in_str(obj.content, p) && *p != qmark) { // calc len
 2376              		.loc 1 476 0
 2377 0051 488D7001 		leaq	1(%rax), %rsi
 2378 0055 48893424 		movq	%rsi, (%rsp)
 2379              	.LVL268:
 2380 0059 4889F0   		movq	%rsi, %rax
 477:src/mcu_msg.c ****         p++;
 2381              		.loc 1 477 0
 2382 005c EB2A     		jmp	.L209
 2383              	.LVL269:
 2384              	.L214:
 465:src/mcu_msg.c ****         return res;
 2385              		.loc 1 465 0
 2386 005e 4889E7   		movq	%rsp, %rdi
 2387 0061 E8000000 		call	msg_destroy_string
 2387      00
 2388              	.LVL270:
 466:src/mcu_msg.c ****     }
 2389              		.loc 1 466 0
 2390 0066 488B0424 		movq	(%rsp), %rax
 2391 006a 488B5424 		movq	8(%rsp), %rdx
 2391      08
 2392 006f EB43     		jmp	.L207
 2393              	.LVL271:
 2394              	.L215:
 472:src/mcu_msg.c ****         return res;
 2395              		.loc 1 472 0
 2396 0071 4889E7   		movq	%rsp, %rdi
 2397              	.LVL272:
GAS LISTING /tmp/cc45SYiz.s 			page 69


 2398 0074 E8000000 		call	msg_destroy_string
 2398      00
 2399              	.LVL273:
 473:src/mcu_msg.c ****     }
 2400              		.loc 1 473 0
 2401 0079 488B0424 		movq	(%rsp), %rax
 2402 007d 488B5424 		movq	8(%rsp), %rdx
 2402      08
 2403 0082 EB30     		jmp	.L207
 2404              	.LVL274:
 2405              	.L211:
 478:src/mcu_msg.c ****     }
 2406              		.loc 1 478 0
 2407 0084 4883C001 		addq	$1, %rax
 2408              	.LVL275:
 2409              	.L209:
 2410              	.LBB114:
 2411              	.LBB115:
 188:src/mcu_msg.c **** }
 2412              		.loc 1 188 0
 2413 0088 4989C0   		movq	%rax, %r8
 2414 008b 4889C1   		movq	%rax, %rcx
 2415 008e 482B4C24 		subq	64(%rsp), %rcx
 2415      40
 2416 0093 0FB75424 		movzwl	72(%rsp), %edx
 2416      48
 2417              	.LVL276:
 2418              	.LBE115:
 2419              	.LBE114:
 477:src/mcu_msg.c ****         p++;
 2420              		.loc 1 477 0
 2421 0098 4839D1   		cmpq	%rdx, %rcx
 2422 009b 7D05     		jge	.L210
 477:src/mcu_msg.c ****         p++;
 2423              		.loc 1 477 0 is_stmt 0 discriminator 1
 2424 009d 403838   		cmpb	%dil, (%rax)
 2425 00a0 75E2     		jne	.L211
 2426              	.L210:
 480:src/mcu_msg.c ****     return res;
 2427              		.loc 1 480 0 is_stmt 1
 2428 00a2 4929F0   		subq	%rsi, %r8
 2429 00a5 66448944 		movw	%r8w, 8(%rsp)
 2429      2408
 481:src/mcu_msg.c **** }
 2430              		.loc 1 481 0
 2431 00ab 488B0424 		movq	(%rsp), %rax
 2432              	.LVL277:
 2433 00af 488B5424 		movq	8(%rsp), %rdx
 2433      08
 2434              	.LVL278:
 2435              	.L207:
 482:src/mcu_msg.c **** 
 2436              		.loc 1 482 0
 2437 00b4 488B7424 		movq	24(%rsp), %rsi
 2437      18
 2438 00b9 64483334 		xorq	%fs:40, %rsi
 2438      25280000 
GAS LISTING /tmp/cc45SYiz.s 			page 70


 2438      00
 2439 00c2 7505     		jne	.L216
 2440 00c4 4883C428 		addq	$40, %rsp
 2441              	.LCFI94:
 2442              		.cfi_remember_state
 2443              		.cfi_def_cfa_offset 8
 2444 00c8 C3       		ret
 2445              	.L216:
 2446              	.LCFI95:
 2447              		.cfi_restore_state
 2448 00c9 E8000000 		call	__stack_chk_fail@PLT
 2448      00
 2449              	.LVL279:
 2450              		.cfi_endproc
 2451              	.LFE44:
 2453              		.section	.text.msg_hnd_create,"ax",@progbits
 2454              		.globl	msg_hnd_create
 2456              	msg_hnd_create:
 2457              	.LFB49:
 629:src/mcu_msg.c ****     // TODO
 2458              		.loc 1 629 0
 2459              		.cfi_startproc
 2460              	.LVL280:
 2461 0000 4889F8   		movq	%rdi, %rax
 632:src/mcu_msg.c ****     hnd.print_msg = __msg_print;
 2462              		.loc 1 632 0
 2463 0003 48893500 		movq	%rsi, __msg_putc(%rip)
 2463      000000
 2464 000a 48897424 		movq	%rsi, -72(%rsp)
 2464      B8
 633:src/mcu_msg.c ****     hnd.print_str = __msg_print_str;
 2465              		.loc 1 633 0
 2466 000f 488D0D00 		leaq	__msg_print(%rip), %rcx
 2466      000000
 2467 0016 48894C24 		movq	%rcx, -64(%rsp)
 2467      C0
 634:src/mcu_msg.c ****     hnd.print_int = __msg_print_int;
 2468              		.loc 1 634 0
 2469 001b 488D3D00 		leaq	__msg_print_str(%rip), %rdi
 2469      000000
 2470              	.LVL281:
 2471 0022 48897C24 		movq	%rdi, -56(%rsp)
 2471      C8
 635:src/mcu_msg.c ****     hnd.print_float = __msg_print_float;
 2472              		.loc 1 635 0
 2473 0027 488D1500 		leaq	__msg_print_int(%rip), %rdx
 2473      000000
 2474 002e 48895424 		movq	%rdx, -48(%rsp)
 2474      D0
 636:src/mcu_msg.c ****     hnd.print_wrapper_msg = __msg_wrapper_print_msg;
 2475              		.loc 1 636 0
 2476 0033 488D0D00 		leaq	__msg_print_float(%rip), %rcx
 2476      000000
 2477 003a 48894C24 		movq	%rcx, -40(%rsp)
 2477      D8
 637:src/mcu_msg.c ****     return hnd;
 2478              		.loc 1 637 0
GAS LISTING /tmp/cc45SYiz.s 			page 71


 2479 003f 488D3D00 		leaq	__msg_wrapper_print_msg(%rip), %rdi
 2479      000000
 2480 0046 48897C24 		movq	%rdi, -32(%rsp)
 2480      E0
 638:src/mcu_msg.c **** }
 2481              		.loc 1 638 0
 2482 004b 488B7424 		movq	-72(%rsp), %rsi
 2482      B8
 2483 0050 488B7C24 		movq	-64(%rsp), %rdi
 2483      C0
 2484 0055 488930   		movq	%rsi, (%rax)
 2485 0058 48897808 		movq	%rdi, 8(%rax)
 2486 005c 488B7424 		movq	-56(%rsp), %rsi
 2486      C8
 2487              	.LVL282:
 2488 0061 488B7C24 		movq	-48(%rsp), %rdi
 2488      D0
 2489 0066 48897010 		movq	%rsi, 16(%rax)
 2490 006a 48897818 		movq	%rdi, 24(%rax)
 2491 006e 488B7424 		movq	-40(%rsp), %rsi
 2491      D8
 2492 0073 488B7C24 		movq	-32(%rsp), %rdi
 2492      E0
 2493 0078 48897020 		movq	%rsi, 32(%rax)
 2494 007c 48897828 		movq	%rdi, 40(%rax)
 2495 0080 488B5424 		movq	-24(%rsp), %rdx
 2495      E8
 2496 0085 48895030 		movq	%rdx, 48(%rax)
 639:src/mcu_msg.c **** 
 2497              		.loc 1 639 0
 2498 0089 C3       		ret
 2499              		.cfi_endproc
 2500              	.LFE49:
 2502              		.section	.text.msg_wrap_destroy,"ax",@progbits
 2503              		.globl	msg_wrap_destroy
 2505              	msg_wrap_destroy:
 2506              	.LFB54:
 869:src/mcu_msg.c **** 
 870:src/mcu_msg.c **** 
 871:src/mcu_msg.c **** 
 872:src/mcu_msg.c **** 
 873:src/mcu_msg.c **** void msg_wrap_destroy(msg_wrap_t *msg)
 874:src/mcu_msg.c **** {
 2507              		.loc 1 874 0
 2508              		.cfi_startproc
 2509              	.LVL283:
 2510 0000 53       		pushq	%rbx
 2511              	.LCFI96:
 2512              		.cfi_def_cfa_offset 16
 2513              		.cfi_offset 3, -16
 2514 0001 4889FB   		movq	%rdi, %rbx
 875:src/mcu_msg.c ****     msg_destroy_string(&msg->id);
 2515              		.loc 1 875 0
 2516 0004 E8000000 		call	msg_destroy_string
 2516      00
 2517              	.LVL284:
 876:src/mcu_msg.c ****     msg->cmd_queue = NULL;
GAS LISTING /tmp/cc45SYiz.s 			page 72


 2518              		.loc 1 876 0
 2519 0009 48C74318 		movq	$0, 24(%rbx)
 2519      00000000 
 877:src/mcu_msg.c ****     msg->obj_queue = NULL;
 2520              		.loc 1 877 0
 2521 0011 48C74310 		movq	$0, 16(%rbx)
 2521      00000000 
 878:src/mcu_msg.c **** }
 2522              		.loc 1 878 0
 2523 0019 5B       		popq	%rbx
 2524              	.LCFI97:
 2525              		.cfi_def_cfa_offset 8
 2526              	.LVL285:
 2527 001a C3       		ret
 2528              		.cfi_endproc
 2529              	.LFE54:
 2531              		.section	.text.msg_wrap_destroy_obj,"ax",@progbits
 2532              		.globl	msg_wrap_destroy_obj
 2534              	msg_wrap_destroy_obj:
 2535              	.LFB55:
 879:src/mcu_msg.c **** 
 880:src/mcu_msg.c **** void msg_wrap_destroy_obj(msg_wrap_obj_t *obj)
 881:src/mcu_msg.c **** {
 2536              		.loc 1 881 0
 2537              		.cfi_startproc
 2538              	.LVL286:
 2539 0000 53       		pushq	%rbx
 2540              	.LCFI98:
 2541              		.cfi_def_cfa_offset 16
 2542              		.cfi_offset 3, -16
 2543 0001 4889FB   		movq	%rdi, %rbx
 882:src/mcu_msg.c ****     msg_destroy_string(&obj->id);
 2544              		.loc 1 882 0
 2545 0004 E8000000 		call	msg_destroy_string
 2545      00
 2546              	.LVL287:
 883:src/mcu_msg.c ****     obj->int_queue = NULL;
 2547              		.loc 1 883 0
 2548 0009 48C74310 		movq	$0, 16(%rbx)
 2548      00000000 
 884:src/mcu_msg.c ****     obj->float_queue = NULL;
 2549              		.loc 1 884 0
 2550 0011 48C74318 		movq	$0, 24(%rbx)
 2550      00000000 
 885:src/mcu_msg.c ****     obj->string_queue = NULL;
 2551              		.loc 1 885 0
 2552 0019 48C74320 		movq	$0, 32(%rbx)
 2552      00000000 
 886:src/mcu_msg.c ****     obj->next = NULL;
 2553              		.loc 1 886 0
 2554 0021 48C74328 		movq	$0, 40(%rbx)
 2554      00000000 
 887:src/mcu_msg.c **** }
 2555              		.loc 1 887 0
 2556 0029 5B       		popq	%rbx
 2557              	.LCFI99:
 2558              		.cfi_def_cfa_offset 8
GAS LISTING /tmp/cc45SYiz.s 			page 73


 2559              	.LVL288:
 2560 002a C3       		ret
 2561              		.cfi_endproc
 2562              	.LFE55:
 2564              		.section	.text.msg_wrap_destroy_cmd,"ax",@progbits
 2565              		.globl	msg_wrap_destroy_cmd
 2567              	msg_wrap_destroy_cmd:
 2568              	.LFB56:
 888:src/mcu_msg.c **** 
 889:src/mcu_msg.c **** void msg_wrap_destroy_cmd(msg_wrap_cmd_t *cmd)
 890:src/mcu_msg.c **** {
 2569              		.loc 1 890 0
 2570              		.cfi_startproc
 2571              	.LVL289:
 2572 0000 53       		pushq	%rbx
 2573              	.LCFI100:
 2574              		.cfi_def_cfa_offset 16
 2575              		.cfi_offset 3, -16
 2576 0001 4889FB   		movq	%rdi, %rbx
 891:src/mcu_msg.c ****     msg_destroy_string(&cmd->cmd);
 2577              		.loc 1 891 0
 2578 0004 E8000000 		call	msg_destroy_string
 2578      00
 2579              	.LVL290:
 892:src/mcu_msg.c ****     cmd->next = NULL;
 2580              		.loc 1 892 0
 2581 0009 48C74310 		movq	$0, 16(%rbx)
 2581      00000000 
 893:src/mcu_msg.c **** }
 2582              		.loc 1 893 0
 2583 0011 5B       		popq	%rbx
 2584              	.LCFI101:
 2585              		.cfi_def_cfa_offset 8
 2586              	.LVL291:
 2587 0012 C3       		ret
 2588              		.cfi_endproc
 2589              	.LFE56:
 2591              		.section	.text.msg_wrap_destroy_str,"ax",@progbits
 2592              		.globl	msg_wrap_destroy_str
 2594              	msg_wrap_destroy_str:
 2595              	.LFB57:
 894:src/mcu_msg.c **** 
 895:src/mcu_msg.c **** void msg_wrap_destroy_str(msg_wrap_str_t *str)
 896:src/mcu_msg.c **** {
 2596              		.loc 1 896 0
 2597              		.cfi_startproc
 2598              	.LVL292:
 2599 0000 53       		pushq	%rbx
 2600              	.LCFI102:
 2601              		.cfi_def_cfa_offset 16
 2602              		.cfi_offset 3, -16
 2603 0001 4889FB   		movq	%rdi, %rbx
 897:src/mcu_msg.c ****     msg_destroy_string(&str->id);
 2604              		.loc 1 897 0
 2605 0004 E8000000 		call	msg_destroy_string
 2605      00
 2606              	.LVL293:
GAS LISTING /tmp/cc45SYiz.s 			page 74


 898:src/mcu_msg.c ****     msg_destroy_string(&str->content);
 2607              		.loc 1 898 0
 2608 0009 488D7B10 		leaq	16(%rbx), %rdi
 2609 000d E8000000 		call	msg_destroy_string
 2609      00
 2610              	.LVL294:
 899:src/mcu_msg.c ****     str->next = NULL;
 2611              		.loc 1 899 0
 2612 0012 48C74320 		movq	$0, 32(%rbx)
 2612      00000000 
 900:src/mcu_msg.c **** }
 2613              		.loc 1 900 0
 2614 001a 5B       		popq	%rbx
 2615              	.LCFI103:
 2616              		.cfi_def_cfa_offset 8
 2617              	.LVL295:
 2618 001b C3       		ret
 2619              		.cfi_endproc
 2620              	.LFE57:
 2622              		.section	.text.msg_wrap_destroy_int,"ax",@progbits
 2623              		.globl	msg_wrap_destroy_int
 2625              	msg_wrap_destroy_int:
 2626              	.LFB58:
 901:src/mcu_msg.c **** 
 902:src/mcu_msg.c **** void msg_wrap_destroy_int(msg_wrap_int_t *i)
 903:src/mcu_msg.c **** {
 2627              		.loc 1 903 0
 2628              		.cfi_startproc
 2629              	.LVL296:
 2630 0000 53       		pushq	%rbx
 2631              	.LCFI104:
 2632              		.cfi_def_cfa_offset 16
 2633              		.cfi_offset 3, -16
 2634 0001 4889FB   		movq	%rdi, %rbx
 904:src/mcu_msg.c ****     msg_destroy_string(&i->id);
 2635              		.loc 1 904 0
 2636 0004 E8000000 		call	msg_destroy_string
 2636      00
 2637              	.LVL297:
 905:src/mcu_msg.c ****     i->val = 0;
 2638              		.loc 1 905 0
 2639 0009 C7431000 		movl	$0, 16(%rbx)
 2639      000000
 906:src/mcu_msg.c ****     i->next = NULL;
 2640              		.loc 1 906 0
 2641 0010 48C74318 		movq	$0, 24(%rbx)
 2641      00000000 
 907:src/mcu_msg.c **** }
 2642              		.loc 1 907 0
 2643 0018 5B       		popq	%rbx
 2644              	.LCFI105:
 2645              		.cfi_def_cfa_offset 8
 2646              	.LVL298:
 2647 0019 C3       		ret
 2648              		.cfi_endproc
 2649              	.LFE58:
 2651              		.section	.text.msg_wrap_destroy_float,"ax",@progbits
GAS LISTING /tmp/cc45SYiz.s 			page 75


 2652              		.globl	msg_wrap_destroy_float
 2654              	msg_wrap_destroy_float:
 2655              	.LFB59:
 908:src/mcu_msg.c **** 
 909:src/mcu_msg.c **** void msg_wrap_destroy_float(msg_wrap_float_t *f)
 910:src/mcu_msg.c **** {
 2656              		.loc 1 910 0
 2657              		.cfi_startproc
 2658              	.LVL299:
 2659 0000 53       		pushq	%rbx
 2660              	.LCFI106:
 2661              		.cfi_def_cfa_offset 16
 2662              		.cfi_offset 3, -16
 2663 0001 4889FB   		movq	%rdi, %rbx
 911:src/mcu_msg.c ****     msg_destroy_string(&f->id);
 2664              		.loc 1 911 0
 2665 0004 E8000000 		call	msg_destroy_string
 2665      00
 2666              	.LVL300:
 912:src/mcu_msg.c ****     f->val = 0.0;
 2667              		.loc 1 912 0
 2668 0009 C7431000 		movl	$0x00000000, 16(%rbx)
 2668      000000
 913:src/mcu_msg.c ****     f->next = NULL;
 2669              		.loc 1 913 0
 2670 0010 48C74318 		movq	$0, 24(%rbx)
 2670      00000000 
 914:src/mcu_msg.c ****     f->prec = 0;
 2671              		.loc 1 914 0
 2672 0018 C6431400 		movb	$0, 20(%rbx)
 915:src/mcu_msg.c **** }
 2673              		.loc 1 915 0
 2674 001c 5B       		popq	%rbx
 2675              	.LCFI107:
 2676              		.cfi_def_cfa_offset 8
 2677              	.LVL301:
 2678 001d C3       		ret
 2679              		.cfi_endproc
 2680              	.LFE59:
 2682              		.section	.text.msg_wrapper_init_msg,"ax",@progbits
 2683              		.globl	msg_wrapper_init_msg
 2685              	msg_wrapper_init_msg:
 2686              	.LFB60:
 916:src/mcu_msg.c **** 
 917:src/mcu_msg.c **** 
 918:src/mcu_msg.c **** 
 919:src/mcu_msg.c **** msg_wrap_t msg_wrapper_init_msg(char *msg_id)
 920:src/mcu_msg.c **** {
 2687              		.loc 1 920 0
 2688              		.cfi_startproc
 2689              	.LVL302:
 2690 0000 53       		pushq	%rbx
 2691              	.LCFI108:
 2692              		.cfi_def_cfa_offset 16
 2693              		.cfi_offset 3, -16
 2694 0001 4883EC20 		subq	$32, %rsp
 2695              	.LCFI109:
GAS LISTING /tmp/cc45SYiz.s 			page 76


 2696              		.cfi_def_cfa_offset 48
 2697 0005 4889FB   		movq	%rdi, %rbx
 921:src/mcu_msg.c ****     msg_wrap_t res;
 922:src/mcu_msg.c ****     res.id = msg_init_string(msg_id);
 2698              		.loc 1 922 0
 2699 0008 4889F7   		movq	%rsi, %rdi
 2700              	.LVL303:
 2701 000b E8000000 		call	msg_init_string
 2701      00
 2702              	.LVL304:
 923:src/mcu_msg.c ****     res.cmd_queue = NULL;
 2703              		.loc 1 923 0
 2704 0010 48C74424 		movq	$0, 24(%rsp)
 2704      18000000 
 2704      00
 924:src/mcu_msg.c ****     res.obj_queue = NULL;
 2705              		.loc 1 924 0
 2706 0019 48C74424 		movq	$0, 16(%rsp)
 2706      10000000 
 2706      00
 925:src/mcu_msg.c ****     return res;
 2707              		.loc 1 925 0
 2708 0022 488903   		movq	%rax, (%rbx)
 2709 0025 48895308 		movq	%rdx, 8(%rbx)
 2710 0029 488B4424 		movq	16(%rsp), %rax
 2710      10
 2711 002e 488B5424 		movq	24(%rsp), %rdx
 2711      18
 2712 0033 48894310 		movq	%rax, 16(%rbx)
 2713 0037 48895318 		movq	%rdx, 24(%rbx)
 926:src/mcu_msg.c **** }
 2714              		.loc 1 926 0
 2715 003b 4889D8   		movq	%rbx, %rax
 2716 003e 4883C420 		addq	$32, %rsp
 2717              	.LCFI110:
 2718              		.cfi_def_cfa_offset 16
 2719 0042 5B       		popq	%rbx
 2720              	.LCFI111:
 2721              		.cfi_def_cfa_offset 8
 2722              	.LVL305:
 2723 0043 C3       		ret
 2724              		.cfi_endproc
 2725              	.LFE60:
 2727              		.section	.text.msg_wrapper_init_cmd,"ax",@progbits
 2728              		.globl	msg_wrapper_init_cmd
 2730              	msg_wrapper_init_cmd:
 2731              	.LFB61:
 927:src/mcu_msg.c **** 
 928:src/mcu_msg.c **** 
 929:src/mcu_msg.c **** msg_wrap_cmd_t msg_wrapper_init_cmd(char *cmd)
 930:src/mcu_msg.c **** {
 2732              		.loc 1 930 0
 2733              		.cfi_startproc
 2734              	.LVL306:
 2735 0000 53       		pushq	%rbx
 2736              	.LCFI112:
 2737              		.cfi_def_cfa_offset 16
GAS LISTING /tmp/cc45SYiz.s 			page 77


 2738              		.cfi_offset 3, -16
 2739 0001 4883EC20 		subq	$32, %rsp
 2740              	.LCFI113:
 2741              		.cfi_def_cfa_offset 48
 2742 0005 4889FB   		movq	%rdi, %rbx
 931:src/mcu_msg.c ****     msg_wrap_cmd_t res;
 932:src/mcu_msg.c ****     res.cmd = msg_init_string(cmd);
 2743              		.loc 1 932 0
 2744 0008 4889F7   		movq	%rsi, %rdi
 2745              	.LVL307:
 2746 000b E8000000 		call	msg_init_string
 2746      00
 2747              	.LVL308:
 933:src/mcu_msg.c ****     res.next = NULL;
 934:src/mcu_msg.c ****     return res;
 2748              		.loc 1 934 0
 2749 0010 488903   		movq	%rax, (%rbx)
 2750 0013 48895308 		movq	%rdx, 8(%rbx)
 2751 0017 48C74310 		movq	$0, 16(%rbx)
 2751      00000000 
 935:src/mcu_msg.c **** }
 2752              		.loc 1 935 0
 2753 001f 4889D8   		movq	%rbx, %rax
 2754 0022 4883C420 		addq	$32, %rsp
 2755              	.LCFI114:
 2756              		.cfi_def_cfa_offset 16
 2757 0026 5B       		popq	%rbx
 2758              	.LCFI115:
 2759              		.cfi_def_cfa_offset 8
 2760              	.LVL309:
 2761 0027 C3       		ret
 2762              		.cfi_endproc
 2763              	.LFE61:
 2765              		.section	.text.msg_wrapper_init_obj,"ax",@progbits
 2766              		.globl	msg_wrapper_init_obj
 2768              	msg_wrapper_init_obj:
 2769              	.LFB62:
 936:src/mcu_msg.c **** 
 937:src/mcu_msg.c **** msg_wrap_obj_t msg_wrapper_init_obj(char *obj_id)
 938:src/mcu_msg.c **** {
 2770              		.loc 1 938 0
 2771              		.cfi_startproc
 2772              	.LVL310:
 2773 0000 53       		pushq	%rbx
 2774              	.LCFI116:
 2775              		.cfi_def_cfa_offset 16
 2776              		.cfi_offset 3, -16
 2777 0001 4883EC30 		subq	$48, %rsp
 2778              	.LCFI117:
 2779              		.cfi_def_cfa_offset 64
 2780 0005 4889FB   		movq	%rdi, %rbx
 939:src/mcu_msg.c ****     msg_wrap_obj_t res;
 940:src/mcu_msg.c ****     res.id = msg_init_string(obj_id);
 2781              		.loc 1 940 0
 2782 0008 4889F7   		movq	%rsi, %rdi
 2783              	.LVL311:
 2784 000b E8000000 		call	msg_init_string
GAS LISTING /tmp/cc45SYiz.s 			page 78


 2784      00
 2785              	.LVL312:
 941:src/mcu_msg.c ****     res.int_queue = NULL;
 2786              		.loc 1 941 0
 2787 0010 48C74424 		movq	$0, 16(%rsp)
 2787      10000000 
 2787      00
 942:src/mcu_msg.c ****     res.float_queue = NULL;
 2788              		.loc 1 942 0
 2789 0019 48C74424 		movq	$0, 24(%rsp)
 2789      18000000 
 2789      00
 943:src/mcu_msg.c ****     res.string_queue = NULL;
 2790              		.loc 1 943 0
 2791 0022 48C74424 		movq	$0, 32(%rsp)
 2791      20000000 
 2791      00
 944:src/mcu_msg.c ****     res.next = NULL;
 2792              		.loc 1 944 0
 2793 002b 48C74424 		movq	$0, 40(%rsp)
 2793      28000000 
 2793      00
 945:src/mcu_msg.c ****     return res;
 2794              		.loc 1 945 0
 2795 0034 488903   		movq	%rax, (%rbx)
 2796 0037 48895308 		movq	%rdx, 8(%rbx)
 2797 003b 488B4424 		movq	16(%rsp), %rax
 2797      10
 2798 0040 488B5424 		movq	24(%rsp), %rdx
 2798      18
 2799 0045 48894310 		movq	%rax, 16(%rbx)
 2800 0049 48895318 		movq	%rdx, 24(%rbx)
 2801 004d 488B4424 		movq	32(%rsp), %rax
 2801      20
 2802 0052 488B5424 		movq	40(%rsp), %rdx
 2802      28
 2803 0057 48894320 		movq	%rax, 32(%rbx)
 2804 005b 48895328 		movq	%rdx, 40(%rbx)
 946:src/mcu_msg.c **** }
 2805              		.loc 1 946 0
 2806 005f 4889D8   		movq	%rbx, %rax
 2807 0062 4883C430 		addq	$48, %rsp
 2808              	.LCFI118:
 2809              		.cfi_def_cfa_offset 16
 2810 0066 5B       		popq	%rbx
 2811              	.LCFI119:
 2812              		.cfi_def_cfa_offset 8
 2813              	.LVL313:
 2814 0067 C3       		ret
 2815              		.cfi_endproc
 2816              	.LFE62:
 2818              		.section	.text.msg_wrapper_init_string,"ax",@progbits
 2819              		.globl	msg_wrapper_init_string
 2821              	msg_wrapper_init_string:
 2822              	.LFB63:
 947:src/mcu_msg.c **** 
 948:src/mcu_msg.c **** msg_wrap_str_t msg_wrapper_init_string(char *id, char *content)
GAS LISTING /tmp/cc45SYiz.s 			page 79


 949:src/mcu_msg.c **** {
 2823              		.loc 1 949 0
 2824              		.cfi_startproc
 2825              	.LVL314:
 2826 0000 4156     		pushq	%r14
 2827              	.LCFI120:
 2828              		.cfi_def_cfa_offset 16
 2829              		.cfi_offset 14, -16
 2830 0002 4155     		pushq	%r13
 2831              	.LCFI121:
 2832              		.cfi_def_cfa_offset 24
 2833              		.cfi_offset 13, -24
 2834 0004 55       		pushq	%rbp
 2835              	.LCFI122:
 2836              		.cfi_def_cfa_offset 32
 2837              		.cfi_offset 6, -32
 2838 0005 53       		pushq	%rbx
 2839              	.LCFI123:
 2840              		.cfi_def_cfa_offset 40
 2841              		.cfi_offset 3, -40
 2842 0006 4883EC38 		subq	$56, %rsp
 2843              	.LCFI124:
 2844              		.cfi_def_cfa_offset 96
 2845 000a 4889FB   		movq	%rdi, %rbx
 2846 000d 4889D5   		movq	%rdx, %rbp
 950:src/mcu_msg.c ****     msg_wrap_str_t res;
 951:src/mcu_msg.c ****     res.id = msg_init_string(id);
 2847              		.loc 1 951 0
 2848 0010 4889F7   		movq	%rsi, %rdi
 2849              	.LVL315:
 2850 0013 E8000000 		call	msg_init_string
 2850      00
 2851              	.LVL316:
 2852 0018 4989C5   		movq	%rax, %r13
 2853 001b 4989D6   		movq	%rdx, %r14
 952:src/mcu_msg.c ****     res.content = msg_init_string(content);
 2854              		.loc 1 952 0
 2855 001e 4889EF   		movq	%rbp, %rdi
 2856 0021 E8000000 		call	msg_init_string
 2856      00
 2857              	.LVL317:
 953:src/mcu_msg.c ****     res.next = NULL;
 954:src/mcu_msg.c ****     return res;
 2858              		.loc 1 954 0
 2859 0026 4C892B   		movq	%r13, (%rbx)
 2860 0029 4C897308 		movq	%r14, 8(%rbx)
 2861 002d 48894310 		movq	%rax, 16(%rbx)
 2862 0031 48895318 		movq	%rdx, 24(%rbx)
 2863 0035 48C74320 		movq	$0, 32(%rbx)
 2863      00000000 
 955:src/mcu_msg.c **** }
 2864              		.loc 1 955 0
 2865 003d 4889D8   		movq	%rbx, %rax
 2866 0040 4883C438 		addq	$56, %rsp
 2867              	.LCFI125:
 2868              		.cfi_def_cfa_offset 40
 2869 0044 5B       		popq	%rbx
GAS LISTING /tmp/cc45SYiz.s 			page 80


 2870              	.LCFI126:
 2871              		.cfi_def_cfa_offset 32
 2872              	.LVL318:
 2873 0045 5D       		popq	%rbp
 2874              	.LCFI127:
 2875              		.cfi_def_cfa_offset 24
 2876              	.LVL319:
 2877 0046 415D     		popq	%r13
 2878              	.LCFI128:
 2879              		.cfi_def_cfa_offset 16
 2880 0048 415E     		popq	%r14
 2881              	.LCFI129:
 2882              		.cfi_def_cfa_offset 8
 2883 004a C3       		ret
 2884              		.cfi_endproc
 2885              	.LFE63:
 2887              		.section	.text.msg_wrapper_init_int,"ax",@progbits
 2888              		.globl	msg_wrapper_init_int
 2890              	msg_wrapper_init_int:
 2891              	.LFB64:
 956:src/mcu_msg.c **** 
 957:src/mcu_msg.c **** msg_wrap_int_t msg_wrapper_init_int(char *id, int val)
 958:src/mcu_msg.c **** {
 2892              		.loc 1 958 0
 2893              		.cfi_startproc
 2894              	.LVL320:
 2895 0000 55       		pushq	%rbp
 2896              	.LCFI130:
 2897              		.cfi_def_cfa_offset 16
 2898              		.cfi_offset 6, -16
 2899 0001 53       		pushq	%rbx
 2900              	.LCFI131:
 2901              		.cfi_def_cfa_offset 24
 2902              		.cfi_offset 3, -24
 2903 0002 4883EC28 		subq	$40, %rsp
 2904              	.LCFI132:
 2905              		.cfi_def_cfa_offset 64
 2906 0006 4889FB   		movq	%rdi, %rbx
 2907 0009 89D5     		movl	%edx, %ebp
 959:src/mcu_msg.c ****     msg_wrap_int_t res;
 960:src/mcu_msg.c ****     res.id = msg_init_string(id);
 2908              		.loc 1 960 0
 2909 000b 4889F7   		movq	%rsi, %rdi
 2910              	.LVL321:
 2911 000e E8000000 		call	msg_init_string
 2911      00
 2912              	.LVL322:
 961:src/mcu_msg.c ****     res.val = val;
 2913              		.loc 1 961 0
 2914 0013 896C2410 		movl	%ebp, 16(%rsp)
 962:src/mcu_msg.c ****     res.next = NULL;
 2915              		.loc 1 962 0
 2916 0017 48C74424 		movq	$0, 24(%rsp)
 2916      18000000 
 2916      00
 963:src/mcu_msg.c ****     return res;
 2917              		.loc 1 963 0
GAS LISTING /tmp/cc45SYiz.s 			page 81


 2918 0020 488903   		movq	%rax, (%rbx)
 2919 0023 48895308 		movq	%rdx, 8(%rbx)
 2920 0027 488B4424 		movq	16(%rsp), %rax
 2920      10
 2921 002c 488B5424 		movq	24(%rsp), %rdx
 2921      18
 2922 0031 48894310 		movq	%rax, 16(%rbx)
 2923 0035 48895318 		movq	%rdx, 24(%rbx)
 964:src/mcu_msg.c **** }
 2924              		.loc 1 964 0
 2925 0039 4889D8   		movq	%rbx, %rax
 2926 003c 4883C428 		addq	$40, %rsp
 2927              	.LCFI133:
 2928              		.cfi_def_cfa_offset 24
 2929 0040 5B       		popq	%rbx
 2930              	.LCFI134:
 2931              		.cfi_def_cfa_offset 16
 2932              	.LVL323:
 2933 0041 5D       		popq	%rbp
 2934              	.LCFI135:
 2935              		.cfi_def_cfa_offset 8
 2936              	.LVL324:
 2937 0042 C3       		ret
 2938              		.cfi_endproc
 2939              	.LFE64:
 2941              		.section	.text.msg_wrapper_init_float,"ax",@progbits
 2942              		.globl	msg_wrapper_init_float
 2944              	msg_wrapper_init_float:
 2945              	.LFB65:
 965:src/mcu_msg.c **** 
 966:src/mcu_msg.c **** msg_wrap_float_t msg_wrapper_init_float(char *id, float val, uint8_t prec)
 967:src/mcu_msg.c **** {
 2946              		.loc 1 967 0
 2947              		.cfi_startproc
 2948              	.LVL325:
 2949 0000 4154     		pushq	%r12
 2950              	.LCFI136:
 2951              		.cfi_def_cfa_offset 16
 2952              		.cfi_offset 12, -16
 2953 0002 55       		pushq	%rbp
 2954              	.LCFI137:
 2955              		.cfi_def_cfa_offset 24
 2956              		.cfi_offset 6, -24
 2957 0003 53       		pushq	%rbx
 2958              	.LCFI138:
 2959              		.cfi_def_cfa_offset 32
 2960              		.cfi_offset 3, -32
 2961 0004 4883EC20 		subq	$32, %rsp
 2962              	.LCFI139:
 2963              		.cfi_def_cfa_offset 64
 2964 0008 4889FB   		movq	%rdi, %rbx
 2965 000b 66410F7E 		movd	%xmm0, %r12d
 2965      C4
 2966 0010 89D5     		movl	%edx, %ebp
 968:src/mcu_msg.c ****     msg_wrap_float_t res;
 969:src/mcu_msg.c ****     res.id = msg_init_string(id);
 2967              		.loc 1 969 0
GAS LISTING /tmp/cc45SYiz.s 			page 82


 2968 0012 4889F7   		movq	%rsi, %rdi
 2969              	.LVL326:
 2970 0015 E8000000 		call	msg_init_string
 2970      00
 2971              	.LVL327:
 970:src/mcu_msg.c ****     res.val = val;
 2972              		.loc 1 970 0
 2973 001a 44896424 		movl	%r12d, 16(%rsp)
 2973      10
 971:src/mcu_msg.c ****     res.prec = prec;
 2974              		.loc 1 971 0
 2975 001f 40886C24 		movb	%bpl, 20(%rsp)
 2975      14
 972:src/mcu_msg.c ****     res.next = NULL;
 2976              		.loc 1 972 0
 2977 0024 48C74424 		movq	$0, 24(%rsp)
 2977      18000000 
 2977      00
 973:src/mcu_msg.c ****     return res;
 2978              		.loc 1 973 0
 2979 002d 488903   		movq	%rax, (%rbx)
 2980 0030 48895308 		movq	%rdx, 8(%rbx)
 2981 0034 488B4424 		movq	16(%rsp), %rax
 2981      10
 2982 0039 488B5424 		movq	24(%rsp), %rdx
 2982      18
 2983 003e 48894310 		movq	%rax, 16(%rbx)
 2984 0042 48895318 		movq	%rdx, 24(%rbx)
 974:src/mcu_msg.c **** }
 2985              		.loc 1 974 0
 2986 0046 4889D8   		movq	%rbx, %rax
 2987 0049 4883C420 		addq	$32, %rsp
 2988              	.LCFI140:
 2989              		.cfi_def_cfa_offset 32
 2990 004d 5B       		popq	%rbx
 2991              	.LCFI141:
 2992              		.cfi_def_cfa_offset 24
 2993              	.LVL328:
 2994 004e 5D       		popq	%rbp
 2995              	.LCFI142:
 2996              		.cfi_def_cfa_offset 16
 2997 004f 415C     		popq	%r12
 2998              	.LCFI143:
 2999              		.cfi_def_cfa_offset 8
 3000              	.LVL329:
 3001 0051 C3       		ret
 3002              		.cfi_endproc
 3003              	.LFE65:
 3005              		.section	.text.msg_wrapper_add_string_to_obj,"ax",@progbits
 3006              		.globl	msg_wrapper_add_string_to_obj
 3008              	msg_wrapper_add_string_to_obj:
 3009              	.LFB66:
 975:src/mcu_msg.c **** 
 976:src/mcu_msg.c **** 
 977:src/mcu_msg.c **** void msg_wrapper_add_string_to_obj(msg_wrap_obj_t *obj, msg_wrap_str_t *str)
 978:src/mcu_msg.c **** {
 3010              		.loc 1 978 0
GAS LISTING /tmp/cc45SYiz.s 			page 83


 3011              		.cfi_startproc
 3012              	.LVL330:
 979:src/mcu_msg.c ****     msg_wrap_str_t *strp;
 980:src/mcu_msg.c ****     if(obj->string_queue == NULL) { //empty
 3013              		.loc 1 980 0
 3014 0000 488B5720 		movq	32(%rdi), %rdx
 3015 0004 4885D2   		testq	%rdx, %rdx
 3016 0007 7510     		jne	.L243
 981:src/mcu_msg.c ****         obj->string_queue = str;
 3017              		.loc 1 981 0
 3018 0009 48897720 		movq	%rsi, 32(%rdi)
 982:src/mcu_msg.c ****         obj->string_queue->next = NULL;
 3019              		.loc 1 982 0
 3020 000d 48C74620 		movq	$0, 32(%rsi)
 3020      00000000 
 3021 0015 C3       		ret
 3022              	.LVL331:
 3023              	.L245:
 983:src/mcu_msg.c ****     } else {
 984:src/mcu_msg.c ****         strp = obj->string_queue;
 985:src/mcu_msg.c **** 
 986:src/mcu_msg.c ****         while(strp->next != NULL) 
 987:src/mcu_msg.c ****             strp = strp->next;
 3024              		.loc 1 987 0
 3025 0016 4889C2   		movq	%rax, %rdx
 3026              	.LVL332:
 3027              	.L243:
 986:src/mcu_msg.c ****             strp = strp->next;
 3028              		.loc 1 986 0
 3029 0019 488B4220 		movq	32(%rdx), %rax
 3030 001d 4885C0   		testq	%rax, %rax
 3031 0020 75F4     		jne	.L245
 988:src/mcu_msg.c ****         strp->next = str;
 3032              		.loc 1 988 0
 3033 0022 48897220 		movq	%rsi, 32(%rdx)
 989:src/mcu_msg.c ****         str->next = NULL;
 3034              		.loc 1 989 0
 3035 0026 48C74620 		movq	$0, 32(%rsi)
 3035      00000000 
 990:src/mcu_msg.c ****     }
 991:src/mcu_msg.c **** }
 3036              		.loc 1 991 0
 3037 002e C3       		ret
 3038              		.cfi_endproc
 3039              	.LFE66:
 3041              		.section	.text.msg_wrapper_rm_string_from_obj,"ax",@progbits
 3042              		.globl	msg_wrapper_rm_string_from_obj
 3044              	msg_wrapper_rm_string_from_obj:
 3045              	.LFB67:
 992:src/mcu_msg.c **** 
 993:src/mcu_msg.c **** 
 994:src/mcu_msg.c **** void msg_wrapper_rm_string_from_obj(msg_wrap_obj_t *obj, msg_wrap_str_t *str)
 995:src/mcu_msg.c **** {
 3046              		.loc 1 995 0
 3047              		.cfi_startproc
 3048              	.LVL333:
 996:src/mcu_msg.c ****     msg_wrap_str_t *sp, *prev;
GAS LISTING /tmp/cc45SYiz.s 			page 84


 997:src/mcu_msg.c ****     for(sp = obj->string_queue, prev = NULL; sp != NULL; sp = sp->next){
 3049              		.loc 1 997 0
 3050 0000 488B4720 		movq	32(%rdi), %rax
 3051              	.LVL334:
 3052 0004 BA000000 		movl	$0, %edx
 3052      00
 3053              	.LVL335:
 3054              	.L247:
 3055              		.loc 1 997 0 is_stmt 0 discriminator 1
 3056 0009 4885C0   		testq	%rax, %rax
 3057 000c 742E     		je	.L253
 998:src/mcu_msg.c ****         if(sp == str) { 
 3058              		.loc 1 998 0 is_stmt 1
 3059 000e 4839F0   		cmpq	%rsi, %rax
 3060 0011 7409     		je	.L254
 3061              	.LVL336:
 999:src/mcu_msg.c ****             if(prev == NULL) { // if p is the head of the queue, reinit the head
1000:src/mcu_msg.c ****                 obj->string_queue = str->next;
1001:src/mcu_msg.c ****             } else {
1002:src/mcu_msg.c ****                 prev->next = str->next; //skip the expected
1003:src/mcu_msg.c ****             }
1004:src/mcu_msg.c ****             str->next = NULL; // reset next
1005:src/mcu_msg.c ****             return;
1006:src/mcu_msg.c ****         }
1007:src/mcu_msg.c ****         prev = sp;
 3062              		.loc 1 1007 0 discriminator 2
 3063 0013 4889C2   		movq	%rax, %rdx
 997:src/mcu_msg.c ****         if(sp == str) { 
 3064              		.loc 1 997 0 discriminator 2
 3065 0016 488B4020 		movq	32(%rax), %rax
 3066              	.LVL337:
 3067 001a EBED     		jmp	.L247
 3068              	.L254:
 999:src/mcu_msg.c ****             if(prev == NULL) { // if p is the head of the queue, reinit the head
 3069              		.loc 1 999 0
 3070 001c 4885D2   		testq	%rdx, %rdx
 3071 001f 7411     		je	.L255
1002:src/mcu_msg.c ****             }
 3072              		.loc 1 1002 0
 3073 0021 488B4620 		movq	32(%rsi), %rax
 3074              	.LVL338:
 3075 0025 48894220 		movq	%rax, 32(%rdx)
 3076              	.L250:
1004:src/mcu_msg.c ****             return;
 3077              		.loc 1 1004 0
 3078 0029 48C74620 		movq	$0, 32(%rsi)
 3078      00000000 
1005:src/mcu_msg.c ****         }
 3079              		.loc 1 1005 0
 3080 0031 C3       		ret
 3081              	.LVL339:
 3082              	.L255:
1000:src/mcu_msg.c ****             } else {
 3083              		.loc 1 1000 0
 3084 0032 488B4620 		movq	32(%rsi), %rax
 3085              	.LVL340:
 3086 0036 48894720 		movq	%rax, 32(%rdi)
GAS LISTING /tmp/cc45SYiz.s 			page 85


 3087 003a EBED     		jmp	.L250
 3088              	.LVL341:
 3089              	.L253:
1008:src/mcu_msg.c ****     }
1009:src/mcu_msg.c **** }
 3090              		.loc 1 1009 0
 3091 003c F3C3     		rep ret
 3092              		.cfi_endproc
 3093              	.LFE67:
 3095              		.section	.text.msg_wrapper_add_int_to_obj,"ax",@progbits
 3096              		.globl	msg_wrapper_add_int_to_obj
 3098              	msg_wrapper_add_int_to_obj:
 3099              	.LFB68:
1010:src/mcu_msg.c **** 
1011:src/mcu_msg.c **** void msg_wrapper_add_int_to_obj(msg_wrap_obj_t *obj, msg_wrap_int_t *int_val)
1012:src/mcu_msg.c **** {
 3100              		.loc 1 1012 0
 3101              		.cfi_startproc
 3102              	.LVL342:
1013:src/mcu_msg.c ****     msg_wrap_int_t *ip;
1014:src/mcu_msg.c ****     if(obj->int_queue == NULL) { //first element
 3103              		.loc 1 1014 0
 3104 0000 488B5710 		movq	16(%rdi), %rdx
 3105 0004 4885D2   		testq	%rdx, %rdx
 3106 0007 7510     		jne	.L257
1015:src/mcu_msg.c ****         obj->int_queue = int_val;
 3107              		.loc 1 1015 0
 3108 0009 48897710 		movq	%rsi, 16(%rdi)
1016:src/mcu_msg.c ****         obj->int_queue->next = NULL;
 3109              		.loc 1 1016 0
 3110 000d 48C74618 		movq	$0, 24(%rsi)
 3110      00000000 
 3111 0015 C3       		ret
 3112              	.LVL343:
 3113              	.L259:
1017:src/mcu_msg.c ****     } else {
1018:src/mcu_msg.c ****         ip = obj->int_queue;
1019:src/mcu_msg.c **** 
1020:src/mcu_msg.c ****         while(ip->next != NULL) 
1021:src/mcu_msg.c ****             ip = ip->next;
 3114              		.loc 1 1021 0
 3115 0016 4889C2   		movq	%rax, %rdx
 3116              	.LVL344:
 3117              	.L257:
1020:src/mcu_msg.c ****             ip = ip->next;
 3118              		.loc 1 1020 0
 3119 0019 488B4218 		movq	24(%rdx), %rax
 3120 001d 4885C0   		testq	%rax, %rax
 3121 0020 75F4     		jne	.L259
1022:src/mcu_msg.c ****         ip->next = int_val;
 3122              		.loc 1 1022 0
 3123 0022 48897218 		movq	%rsi, 24(%rdx)
1023:src/mcu_msg.c ****         int_val->next = NULL;
 3124              		.loc 1 1023 0
 3125 0026 48C74618 		movq	$0, 24(%rsi)
 3125      00000000 
1024:src/mcu_msg.c ****     }
GAS LISTING /tmp/cc45SYiz.s 			page 86


1025:src/mcu_msg.c **** }
 3126              		.loc 1 1025 0
 3127 002e C3       		ret
 3128              		.cfi_endproc
 3129              	.LFE68:
 3131              		.section	.text.msg_wrapper_rm_int_from_obj,"ax",@progbits
 3132              		.globl	msg_wrapper_rm_int_from_obj
 3134              	msg_wrapper_rm_int_from_obj:
 3135              	.LFB69:
1026:src/mcu_msg.c **** 
1027:src/mcu_msg.c **** 
1028:src/mcu_msg.c **** void msg_wrapper_rm_int_from_obj(msg_wrap_obj_t *obj, msg_wrap_int_t *i)
1029:src/mcu_msg.c **** {
 3136              		.loc 1 1029 0
 3137              		.cfi_startproc
 3138              	.LVL345:
1030:src/mcu_msg.c ****     msg_wrap_int_t *ip, *prev;
1031:src/mcu_msg.c ****     for(ip = obj->int_queue, prev = NULL; ip != NULL; ip = ip->next){
 3139              		.loc 1 1031 0
 3140 0000 488B4710 		movq	16(%rdi), %rax
 3141              	.LVL346:
 3142 0004 BA000000 		movl	$0, %edx
 3142      00
 3143              	.LVL347:
 3144              	.L261:
 3145              		.loc 1 1031 0 is_stmt 0 discriminator 1
 3146 0009 4885C0   		testq	%rax, %rax
 3147 000c 742E     		je	.L267
1032:src/mcu_msg.c ****         if(ip == i) {
 3148              		.loc 1 1032 0 is_stmt 1
 3149 000e 4839F0   		cmpq	%rsi, %rax
 3150 0011 7409     		je	.L268
 3151              	.LVL348:
1033:src/mcu_msg.c ****             if(prev == NULL) { // if p is the head of the queue, reinit the head
1034:src/mcu_msg.c ****                 obj->int_queue = i->next;
1035:src/mcu_msg.c ****             } else {
1036:src/mcu_msg.c ****                 prev->next = i->next; //skip the expected
1037:src/mcu_msg.c ****             }
1038:src/mcu_msg.c ****             i->next = NULL; // reset next
1039:src/mcu_msg.c ****             return;
1040:src/mcu_msg.c ****         }
1041:src/mcu_msg.c ****         prev = ip;
 3152              		.loc 1 1041 0 discriminator 2
 3153 0013 4889C2   		movq	%rax, %rdx
1031:src/mcu_msg.c ****         if(ip == i) {
 3154              		.loc 1 1031 0 discriminator 2
 3155 0016 488B4018 		movq	24(%rax), %rax
 3156              	.LVL349:
 3157 001a EBED     		jmp	.L261
 3158              	.L268:
1033:src/mcu_msg.c ****             if(prev == NULL) { // if p is the head of the queue, reinit the head
 3159              		.loc 1 1033 0
 3160 001c 4885D2   		testq	%rdx, %rdx
 3161 001f 7411     		je	.L269
1036:src/mcu_msg.c ****             }
 3162              		.loc 1 1036 0
 3163 0021 488B4618 		movq	24(%rsi), %rax
GAS LISTING /tmp/cc45SYiz.s 			page 87


 3164              	.LVL350:
 3165 0025 48894218 		movq	%rax, 24(%rdx)
 3166              	.L264:
1038:src/mcu_msg.c ****             return;
 3167              		.loc 1 1038 0
 3168 0029 48C74618 		movq	$0, 24(%rsi)
 3168      00000000 
1039:src/mcu_msg.c ****         }
 3169              		.loc 1 1039 0
 3170 0031 C3       		ret
 3171              	.LVL351:
 3172              	.L269:
1034:src/mcu_msg.c ****             } else {
 3173              		.loc 1 1034 0
 3174 0032 488B4618 		movq	24(%rsi), %rax
 3175              	.LVL352:
 3176 0036 48894710 		movq	%rax, 16(%rdi)
 3177 003a EBED     		jmp	.L264
 3178              	.LVL353:
 3179              	.L267:
1042:src/mcu_msg.c ****     }
1043:src/mcu_msg.c **** }
 3180              		.loc 1 1043 0
 3181 003c F3C3     		rep ret
 3182              		.cfi_endproc
 3183              	.LFE69:
 3185              		.section	.text.msg_wrapper_add_float_to_obj,"ax",@progbits
 3186              		.globl	msg_wrapper_add_float_to_obj
 3188              	msg_wrapper_add_float_to_obj:
 3189              	.LFB70:
1044:src/mcu_msg.c **** 
1045:src/mcu_msg.c **** void msg_wrapper_add_float_to_obj(msg_wrap_obj_t *obj, msg_wrap_float_t *float_val)
1046:src/mcu_msg.c **** {
 3190              		.loc 1 1046 0
 3191              		.cfi_startproc
 3192              	.LVL354:
1047:src/mcu_msg.c ****     msg_wrap_float_t *fp;
1048:src/mcu_msg.c ****     if(obj->float_queue == NULL) { //first element
 3193              		.loc 1 1048 0
 3194 0000 488B5718 		movq	24(%rdi), %rdx
 3195 0004 4885D2   		testq	%rdx, %rdx
 3196 0007 7510     		jne	.L271
1049:src/mcu_msg.c ****         obj->float_queue = float_val;
 3197              		.loc 1 1049 0
 3198 0009 48897718 		movq	%rsi, 24(%rdi)
1050:src/mcu_msg.c ****         obj->float_queue->next = NULL;
 3199              		.loc 1 1050 0
 3200 000d 48C74618 		movq	$0, 24(%rsi)
 3200      00000000 
 3201 0015 C3       		ret
 3202              	.LVL355:
 3203              	.L273:
1051:src/mcu_msg.c ****     } else {
1052:src/mcu_msg.c ****         fp = obj->float_queue;
1053:src/mcu_msg.c **** 
1054:src/mcu_msg.c ****         while(fp->next != NULL) 
1055:src/mcu_msg.c ****             fp = fp->next;
GAS LISTING /tmp/cc45SYiz.s 			page 88


 3204              		.loc 1 1055 0
 3205 0016 4889C2   		movq	%rax, %rdx
 3206              	.LVL356:
 3207              	.L271:
1054:src/mcu_msg.c ****             fp = fp->next;
 3208              		.loc 1 1054 0
 3209 0019 488B4218 		movq	24(%rdx), %rax
 3210 001d 4885C0   		testq	%rax, %rax
 3211 0020 75F4     		jne	.L273
1056:src/mcu_msg.c ****         fp->next = float_val;
 3212              		.loc 1 1056 0
 3213 0022 48897218 		movq	%rsi, 24(%rdx)
1057:src/mcu_msg.c ****         float_val->next = NULL;
 3214              		.loc 1 1057 0
 3215 0026 48C74618 		movq	$0, 24(%rsi)
 3215      00000000 
1058:src/mcu_msg.c ****     }
1059:src/mcu_msg.c **** }
 3216              		.loc 1 1059 0
 3217 002e C3       		ret
 3218              		.cfi_endproc
 3219              	.LFE70:
 3221              		.section	.text.msg_wrapper_rm_float_from_obj,"ax",@progbits
 3222              		.globl	msg_wrapper_rm_float_from_obj
 3224              	msg_wrapper_rm_float_from_obj:
 3225              	.LFB71:
1060:src/mcu_msg.c **** 
1061:src/mcu_msg.c **** 
1062:src/mcu_msg.c **** void msg_wrapper_rm_float_from_obj(msg_wrap_obj_t *obj, msg_wrap_float_t *f)
1063:src/mcu_msg.c **** {
 3226              		.loc 1 1063 0
 3227              		.cfi_startproc
 3228              	.LVL357:
1064:src/mcu_msg.c ****     msg_wrap_float_t *fp, *prev;
1065:src/mcu_msg.c ****     for(fp = obj->float_queue, prev = NULL; fp != NULL; fp = fp->next){
 3229              		.loc 1 1065 0
 3230 0000 488B4718 		movq	24(%rdi), %rax
 3231              	.LVL358:
 3232 0004 BA000000 		movl	$0, %edx
 3232      00
 3233              	.LVL359:
 3234              	.L275:
 3235              		.loc 1 1065 0 is_stmt 0 discriminator 1
 3236 0009 4885C0   		testq	%rax, %rax
 3237 000c 742E     		je	.L281
1066:src/mcu_msg.c ****         if(fp == f) {
 3238              		.loc 1 1066 0 is_stmt 1
 3239 000e 4839F0   		cmpq	%rsi, %rax
 3240 0011 7409     		je	.L282
 3241              	.LVL360:
1067:src/mcu_msg.c ****             if(prev == NULL) { // if p is the head of the queue, reinit the head
1068:src/mcu_msg.c ****                 obj->float_queue = f->next;
1069:src/mcu_msg.c ****             } else {
1070:src/mcu_msg.c ****                 prev->next = f->next; //skip the expected
1071:src/mcu_msg.c ****             }
1072:src/mcu_msg.c ****             f->next = NULL; // reset next
1073:src/mcu_msg.c ****             return;
GAS LISTING /tmp/cc45SYiz.s 			page 89


1074:src/mcu_msg.c ****         }
1075:src/mcu_msg.c ****         prev = fp;
 3242              		.loc 1 1075 0 discriminator 2
 3243 0013 4889C2   		movq	%rax, %rdx
1065:src/mcu_msg.c ****         if(fp == f) {
 3244              		.loc 1 1065 0 discriminator 2
 3245 0016 488B4018 		movq	24(%rax), %rax
 3246              	.LVL361:
 3247 001a EBED     		jmp	.L275
 3248              	.L282:
1067:src/mcu_msg.c ****             if(prev == NULL) { // if p is the head of the queue, reinit the head
 3249              		.loc 1 1067 0
 3250 001c 4885D2   		testq	%rdx, %rdx
 3251 001f 7411     		je	.L283
1070:src/mcu_msg.c ****             }
 3252              		.loc 1 1070 0
 3253 0021 488B4618 		movq	24(%rsi), %rax
 3254              	.LVL362:
 3255 0025 48894218 		movq	%rax, 24(%rdx)
 3256              	.L278:
1072:src/mcu_msg.c ****             return;
 3257              		.loc 1 1072 0
 3258 0029 48C74618 		movq	$0, 24(%rsi)
 3258      00000000 
1073:src/mcu_msg.c ****         }
 3259              		.loc 1 1073 0
 3260 0031 C3       		ret
 3261              	.LVL363:
 3262              	.L283:
1068:src/mcu_msg.c ****             } else {
 3263              		.loc 1 1068 0
 3264 0032 488B4618 		movq	24(%rsi), %rax
 3265              	.LVL364:
 3266 0036 48894718 		movq	%rax, 24(%rdi)
 3267 003a EBED     		jmp	.L278
 3268              	.LVL365:
 3269              	.L281:
1076:src/mcu_msg.c ****     }
1077:src/mcu_msg.c **** }
 3270              		.loc 1 1077 0
 3271 003c F3C3     		rep ret
 3272              		.cfi_endproc
 3273              	.LFE71:
 3275              		.section	.text.msg_wrapper_add_object_to_msg,"ax",@progbits
 3276              		.globl	msg_wrapper_add_object_to_msg
 3278              	msg_wrapper_add_object_to_msg:
 3279              	.LFB72:
1078:src/mcu_msg.c **** 
1079:src/mcu_msg.c **** void msg_wrapper_add_object_to_msg(msg_wrap_t *msg, msg_wrap_obj_t *obj)
1080:src/mcu_msg.c **** {
 3280              		.loc 1 1080 0
 3281              		.cfi_startproc
 3282              	.LVL366:
1081:src/mcu_msg.c ****     msg_wrap_obj_t *op;
1082:src/mcu_msg.c ****     if(msg->obj_queue == NULL) { //if empty 
 3283              		.loc 1 1082 0
 3284 0000 488B5710 		movq	16(%rdi), %rdx
GAS LISTING /tmp/cc45SYiz.s 			page 90


 3285 0004 4885D2   		testq	%rdx, %rdx
 3286 0007 7510     		jne	.L285
1083:src/mcu_msg.c ****         msg->obj_queue = obj;
 3287              		.loc 1 1083 0
 3288 0009 48897710 		movq	%rsi, 16(%rdi)
1084:src/mcu_msg.c ****         msg->obj_queue->next = NULL;
 3289              		.loc 1 1084 0
 3290 000d 48C74628 		movq	$0, 40(%rsi)
 3290      00000000 
 3291 0015 C3       		ret
 3292              	.LVL367:
 3293              	.L287:
1085:src/mcu_msg.c ****     } else {
1086:src/mcu_msg.c ****         op = msg->obj_queue;
1087:src/mcu_msg.c ****         while(op->next != NULL)
1088:src/mcu_msg.c ****             op = op->next;
 3294              		.loc 1 1088 0
 3295 0016 4889C2   		movq	%rax, %rdx
 3296              	.LVL368:
 3297              	.L285:
1087:src/mcu_msg.c ****             op = op->next;
 3298              		.loc 1 1087 0
 3299 0019 488B4228 		movq	40(%rdx), %rax
 3300 001d 4885C0   		testq	%rax, %rax
 3301 0020 75F4     		jne	.L287
1089:src/mcu_msg.c ****         op->next = obj;
 3302              		.loc 1 1089 0
 3303 0022 48897228 		movq	%rsi, 40(%rdx)
1090:src/mcu_msg.c ****         obj->next = NULL;
 3304              		.loc 1 1090 0
 3305 0026 48C74628 		movq	$0, 40(%rsi)
 3305      00000000 
1091:src/mcu_msg.c ****     }
1092:src/mcu_msg.c **** }
 3306              		.loc 1 1092 0
 3307 002e C3       		ret
 3308              		.cfi_endproc
 3309              	.LFE72:
 3311              		.section	.text.msg_wrapper_rm_obj_from_msg,"ax",@progbits
 3312              		.globl	msg_wrapper_rm_obj_from_msg
 3314              	msg_wrapper_rm_obj_from_msg:
 3315              	.LFB73:
1093:src/mcu_msg.c **** 
1094:src/mcu_msg.c **** void msg_wrapper_rm_obj_from_msg(msg_wrap_t *msg, msg_wrap_obj_t *obj)
1095:src/mcu_msg.c **** {
 3316              		.loc 1 1095 0
 3317              		.cfi_startproc
 3318              	.LVL369:
1096:src/mcu_msg.c ****     msg_wrap_obj_t *op, *prev;
1097:src/mcu_msg.c ****     for(op = msg->obj_queue, prev = NULL; op != NULL; op = op->next){
 3319              		.loc 1 1097 0
 3320 0000 488B4710 		movq	16(%rdi), %rax
 3321              	.LVL370:
 3322 0004 BA000000 		movl	$0, %edx
 3322      00
 3323              	.LVL371:
 3324              	.L289:
GAS LISTING /tmp/cc45SYiz.s 			page 91


 3325              		.loc 1 1097 0 is_stmt 0 discriminator 1
 3326 0009 4885C0   		testq	%rax, %rax
 3327 000c 742E     		je	.L295
1098:src/mcu_msg.c ****         if(op == obj) {
 3328              		.loc 1 1098 0 is_stmt 1
 3329 000e 4839F0   		cmpq	%rsi, %rax
 3330 0011 7409     		je	.L296
 3331              	.LVL372:
1099:src/mcu_msg.c ****             if(prev == NULL) { // if p is the head of the queue, reinit the head
1100:src/mcu_msg.c ****                 msg->obj_queue = obj->next;
1101:src/mcu_msg.c ****             } else {
1102:src/mcu_msg.c ****                 prev->next = obj->next; //skip the expected
1103:src/mcu_msg.c ****             }
1104:src/mcu_msg.c ****             obj->next = NULL; // reset next
1105:src/mcu_msg.c ****             return;
1106:src/mcu_msg.c ****         }
1107:src/mcu_msg.c ****         prev = op;
 3332              		.loc 1 1107 0 discriminator 2
 3333 0013 4889C2   		movq	%rax, %rdx
1097:src/mcu_msg.c ****         if(op == obj) {
 3334              		.loc 1 1097 0 discriminator 2
 3335 0016 488B4028 		movq	40(%rax), %rax
 3336              	.LVL373:
 3337 001a EBED     		jmp	.L289
 3338              	.L296:
1099:src/mcu_msg.c ****             if(prev == NULL) { // if p is the head of the queue, reinit the head
 3339              		.loc 1 1099 0
 3340 001c 4885D2   		testq	%rdx, %rdx
 3341 001f 7411     		je	.L297
1102:src/mcu_msg.c ****             }
 3342              		.loc 1 1102 0
 3343 0021 488B4628 		movq	40(%rsi), %rax
 3344              	.LVL374:
 3345 0025 48894228 		movq	%rax, 40(%rdx)
 3346              	.L292:
1104:src/mcu_msg.c ****             return;
 3347              		.loc 1 1104 0
 3348 0029 48C74628 		movq	$0, 40(%rsi)
 3348      00000000 
1105:src/mcu_msg.c ****         }
 3349              		.loc 1 1105 0
 3350 0031 C3       		ret
 3351              	.LVL375:
 3352              	.L297:
1100:src/mcu_msg.c ****             } else {
 3353              		.loc 1 1100 0
 3354 0032 488B4628 		movq	40(%rsi), %rax
 3355              	.LVL376:
 3356 0036 48894710 		movq	%rax, 16(%rdi)
 3357 003a EBED     		jmp	.L292
 3358              	.LVL377:
 3359              	.L295:
1108:src/mcu_msg.c ****     }    
1109:src/mcu_msg.c **** }
 3360              		.loc 1 1109 0
 3361 003c F3C3     		rep ret
 3362              		.cfi_endproc
GAS LISTING /tmp/cc45SYiz.s 			page 92


 3363              	.LFE73:
 3365              		.section	.text.msg_wrapper_add_cmd_to_msg,"ax",@progbits
 3366              		.globl	msg_wrapper_add_cmd_to_msg
 3368              	msg_wrapper_add_cmd_to_msg:
 3369              	.LFB74:
1110:src/mcu_msg.c **** 
1111:src/mcu_msg.c **** void msg_wrapper_add_cmd_to_msg(msg_wrap_t *msg, msg_wrap_cmd_t *cmd)
1112:src/mcu_msg.c **** {
 3370              		.loc 1 1112 0
 3371              		.cfi_startproc
 3372              	.LVL378:
1113:src/mcu_msg.c ****     msg_wrap_cmd_t *cp;
1114:src/mcu_msg.c ****     if(msg->cmd_queue == NULL) { //if empty 
 3373              		.loc 1 1114 0
 3374 0000 488B5718 		movq	24(%rdi), %rdx
 3375 0004 4885D2   		testq	%rdx, %rdx
 3376 0007 7510     		jne	.L299
1115:src/mcu_msg.c ****         msg->cmd_queue = cmd;
 3377              		.loc 1 1115 0
 3378 0009 48897718 		movq	%rsi, 24(%rdi)
1116:src/mcu_msg.c ****         msg->cmd_queue->next = NULL;
 3379              		.loc 1 1116 0
 3380 000d 48C74610 		movq	$0, 16(%rsi)
 3380      00000000 
 3381 0015 C3       		ret
 3382              	.LVL379:
 3383              	.L301:
1117:src/mcu_msg.c ****     } else {
1118:src/mcu_msg.c ****         cp = msg->cmd_queue;
1119:src/mcu_msg.c ****         while(cp->next != NULL)
1120:src/mcu_msg.c ****             cp = cp->next;
 3384              		.loc 1 1120 0
 3385 0016 4889C2   		movq	%rax, %rdx
 3386              	.LVL380:
 3387              	.L299:
1119:src/mcu_msg.c ****             cp = cp->next;
 3388              		.loc 1 1119 0
 3389 0019 488B4210 		movq	16(%rdx), %rax
 3390 001d 4885C0   		testq	%rax, %rax
 3391 0020 75F4     		jne	.L301
1121:src/mcu_msg.c ****         cp->next = cmd;
 3392              		.loc 1 1121 0
 3393 0022 48897210 		movq	%rsi, 16(%rdx)
1122:src/mcu_msg.c ****         cmd->next = NULL;
 3394              		.loc 1 1122 0
 3395 0026 48C74610 		movq	$0, 16(%rsi)
 3395      00000000 
1123:src/mcu_msg.c ****     }
1124:src/mcu_msg.c **** }
 3396              		.loc 1 1124 0
 3397 002e C3       		ret
 3398              		.cfi_endproc
 3399              	.LFE74:
 3401              		.section	.text.msg_wrapper_rm_cmd_from_msg,"ax",@progbits
 3402              		.globl	msg_wrapper_rm_cmd_from_msg
 3404              	msg_wrapper_rm_cmd_from_msg:
 3405              	.LFB75:
GAS LISTING /tmp/cc45SYiz.s 			page 93


1125:src/mcu_msg.c **** 
1126:src/mcu_msg.c **** void msg_wrapper_rm_cmd_from_msg(msg_wrap_t *msg, msg_wrap_cmd_t *cmd)
1127:src/mcu_msg.c **** {
 3406              		.loc 1 1127 0
 3407              		.cfi_startproc
 3408              	.LVL381:
1128:src/mcu_msg.c ****     msg_wrap_cmd_t *cp, *prev;
1129:src/mcu_msg.c ****     for(cp = msg->cmd_queue, prev = NULL; cp != NULL; cp = cp->next){
 3409              		.loc 1 1129 0
 3410 0000 488B4718 		movq	24(%rdi), %rax
 3411              	.LVL382:
 3412 0004 BA000000 		movl	$0, %edx
 3412      00
 3413              	.LVL383:
 3414              	.L303:
 3415              		.loc 1 1129 0 is_stmt 0 discriminator 1
 3416 0009 4885C0   		testq	%rax, %rax
 3417 000c 742E     		je	.L309
1130:src/mcu_msg.c ****         if(cp == cmd) {
 3418              		.loc 1 1130 0 is_stmt 1
 3419 000e 4839F0   		cmpq	%rsi, %rax
 3420 0011 7409     		je	.L310
 3421              	.LVL384:
1131:src/mcu_msg.c ****             if(prev == NULL) { // if p is the head of the queue, reinit the head
1132:src/mcu_msg.c ****                 msg->cmd_queue = cmd->next;
1133:src/mcu_msg.c ****             } else {
1134:src/mcu_msg.c ****                 prev->next = cmd->next; //skip the expected
1135:src/mcu_msg.c ****             }
1136:src/mcu_msg.c ****             cmd->next = NULL; // reset next
1137:src/mcu_msg.c ****             return;
1138:src/mcu_msg.c ****         }
1139:src/mcu_msg.c ****         prev = cp;
 3422              		.loc 1 1139 0 discriminator 2
 3423 0013 4889C2   		movq	%rax, %rdx
1129:src/mcu_msg.c ****         if(cp == cmd) {
 3424              		.loc 1 1129 0 discriminator 2
 3425 0016 488B4010 		movq	16(%rax), %rax
 3426              	.LVL385:
 3427 001a EBED     		jmp	.L303
 3428              	.L310:
1131:src/mcu_msg.c ****             if(prev == NULL) { // if p is the head of the queue, reinit the head
 3429              		.loc 1 1131 0
 3430 001c 4885D2   		testq	%rdx, %rdx
 3431 001f 7411     		je	.L311
1134:src/mcu_msg.c ****             }
 3432              		.loc 1 1134 0
 3433 0021 488B4610 		movq	16(%rsi), %rax
 3434              	.LVL386:
 3435 0025 48894210 		movq	%rax, 16(%rdx)
 3436              	.L306:
1136:src/mcu_msg.c ****             return;
 3437              		.loc 1 1136 0
 3438 0029 48C74610 		movq	$0, 16(%rsi)
 3438      00000000 
1137:src/mcu_msg.c ****         }
 3439              		.loc 1 1137 0
 3440 0031 C3       		ret
GAS LISTING /tmp/cc45SYiz.s 			page 94


 3441              	.LVL387:
 3442              	.L311:
1132:src/mcu_msg.c ****             } else {
 3443              		.loc 1 1132 0
 3444 0032 488B4610 		movq	16(%rsi), %rax
 3445              	.LVL388:
 3446 0036 48894718 		movq	%rax, 24(%rdi)
 3447 003a EBED     		jmp	.L306
 3448              	.LVL389:
 3449              	.L309:
1140:src/mcu_msg.c ****     }    
1141:src/mcu_msg.c **** }
 3450              		.loc 1 1141 0
 3451 003c F3C3     		rep ret
 3452              		.cfi_endproc
 3453              	.LFE75:
 3455              		.section	.bss.__msg_putc,"aw",@nobits
 3456              		.align 8
 3459              	__msg_putc:
 3460 0000 00000000 		.zero	8
 3460      00000000 
 3461              		.section	.rodata.cst16,"aM",@progbits,16
 3462              		.align 16
 3463              	.LC1:
 3464 0000 00000080 		.long	2147483648
 3465 0004 00000000 		.long	0
 3466 0008 00000000 		.long	0
 3467 000c 00000000 		.long	0
 3468              		.section	.rodata.cst4,"aM",@progbits,4
 3469              		.align 4
 3470              	.LC3:
 3471 0000 CDCCCC3D 		.long	1036831949
 3472              		.align 4
 3473              	.LC4:
 3474 0004 00002041 		.long	1092616192
 3475              		.text
 3476              	.Letext0:
 3477              		.file 3 "/usr/lib/gcc/x86_64-linux-gnu/7/include/stddef.h"
 3478              		.file 4 "/usr/include/x86_64-linux-gnu/bits/types.h"
 3479              		.file 5 "/usr/include/x86_64-linux-gnu/bits/libio.h"
 3480              		.file 6 "/usr/include/stdio.h"
 3481              		.file 7 "/usr/include/x86_64-linux-gnu/bits/sys_errlist.h"
 3482              		.file 8 "/usr/include/x86_64-linux-gnu/bits/stdint-intn.h"
 3483              		.file 9 "/usr/include/x86_64-linux-gnu/bits/stdint-uintn.h"
 3484              		.file 10 "inc/mcu_msg_cfg.h"
 3485              		.file 11 "inc/mcu_msg.h"
 3486              		.file 12 "<built-in>"
GAS LISTING /tmp/cc45SYiz.s 			page 95


DEFINED SYMBOLS
                            *ABS*:0000000000000000 mcu_msg.c
     /tmp/cc45SYiz.s:6      .text.__str_len:0000000000000000 __str_len
     /tmp/cc45SYiz.s:35     .text.__skip_internal_str:0000000000000000 __skip_internal_str
     /tmp/cc45SYiz.s:92     .text.__msg_print_int:0000000000000000 __msg_print_int
     /tmp/cc45SYiz.s:3459   .bss.__msg_putc:0000000000000000 __msg_putc
     /tmp/cc45SYiz.s:210    .text.__msg_print_float:0000000000000000 __msg_print_float
     /tmp/cc45SYiz.s:295    .text.__msg_print_str:0000000000000000 __msg_print_str
     /tmp/cc45SYiz.s:356    .text.__msg_print:0000000000000000 __msg_print
     /tmp/cc45SYiz.s:378    .text.__msg_wrapper_print_obj:0000000000000000 __msg_wrapper_print_obj
     /tmp/cc45SYiz.s:628    .text.__msg_wrapper_print_msg:0000000000000000 __msg_wrapper_print_msg
     /tmp/cc45SYiz.s:768    .text.msg_destroy_string:0000000000000000 msg_destroy_string
     /tmp/cc45SYiz.s:784    .text.__find_keyword:0000000000000000 __find_keyword
     /tmp/cc45SYiz.s:1180   .text.__find_val:0000000000000000 __find_val
     /tmp/cc45SYiz.s:1461   .text.msg_destroy:0000000000000000 msg_destroy
     /tmp/cc45SYiz.s:1490   .text.msg_destroy_obj:0000000000000000 msg_destroy_obj
     /tmp/cc45SYiz.s:1519   .text.msg_destroy_cmd:0000000000000000 msg_destroy_cmd
     /tmp/cc45SYiz.s:1535   .text.msg_init_string:0000000000000000 msg_init_string
     /tmp/cc45SYiz.s:1564   .text.msg_get:0000000000000000 msg_get
     /tmp/cc45SYiz.s:1717   .text.msg_parser_get_obj:0000000000000000 msg_parser_get_obj
     /tmp/cc45SYiz.s:1866   .text.msg_parser_get_cmd:0000000000000000 msg_parser_get_cmd
     /tmp/cc45SYiz.s:1894   .text.msg_parser_get_int:0000000000000000 msg_parser_get_int
     /tmp/cc45SYiz.s:2067   .text.msg_parser_get_float:0000000000000000 msg_parser_get_float
     /tmp/cc45SYiz.s:2331   .text.msg_parser_get_string:0000000000000000 msg_parser_get_string
     /tmp/cc45SYiz.s:2456   .text.msg_hnd_create:0000000000000000 msg_hnd_create
     /tmp/cc45SYiz.s:2505   .text.msg_wrap_destroy:0000000000000000 msg_wrap_destroy
     /tmp/cc45SYiz.s:2534   .text.msg_wrap_destroy_obj:0000000000000000 msg_wrap_destroy_obj
     /tmp/cc45SYiz.s:2567   .text.msg_wrap_destroy_cmd:0000000000000000 msg_wrap_destroy_cmd
     /tmp/cc45SYiz.s:2594   .text.msg_wrap_destroy_str:0000000000000000 msg_wrap_destroy_str
     /tmp/cc45SYiz.s:2625   .text.msg_wrap_destroy_int:0000000000000000 msg_wrap_destroy_int
     /tmp/cc45SYiz.s:2654   .text.msg_wrap_destroy_float:0000000000000000 msg_wrap_destroy_float
     /tmp/cc45SYiz.s:2685   .text.msg_wrapper_init_msg:0000000000000000 msg_wrapper_init_msg
     /tmp/cc45SYiz.s:2730   .text.msg_wrapper_init_cmd:0000000000000000 msg_wrapper_init_cmd
     /tmp/cc45SYiz.s:2768   .text.msg_wrapper_init_obj:0000000000000000 msg_wrapper_init_obj
     /tmp/cc45SYiz.s:2821   .text.msg_wrapper_init_string:0000000000000000 msg_wrapper_init_string
     /tmp/cc45SYiz.s:2890   .text.msg_wrapper_init_int:0000000000000000 msg_wrapper_init_int
     /tmp/cc45SYiz.s:2944   .text.msg_wrapper_init_float:0000000000000000 msg_wrapper_init_float
     /tmp/cc45SYiz.s:3008   .text.msg_wrapper_add_string_to_obj:0000000000000000 msg_wrapper_add_string_to_obj
     /tmp/cc45SYiz.s:3044   .text.msg_wrapper_rm_string_from_obj:0000000000000000 msg_wrapper_rm_string_from_obj
     /tmp/cc45SYiz.s:3098   .text.msg_wrapper_add_int_to_obj:0000000000000000 msg_wrapper_add_int_to_obj
     /tmp/cc45SYiz.s:3134   .text.msg_wrapper_rm_int_from_obj:0000000000000000 msg_wrapper_rm_int_from_obj
     /tmp/cc45SYiz.s:3188   .text.msg_wrapper_add_float_to_obj:0000000000000000 msg_wrapper_add_float_to_obj
     /tmp/cc45SYiz.s:3224   .text.msg_wrapper_rm_float_from_obj:0000000000000000 msg_wrapper_rm_float_from_obj
     /tmp/cc45SYiz.s:3278   .text.msg_wrapper_add_object_to_msg:0000000000000000 msg_wrapper_add_object_to_msg
     /tmp/cc45SYiz.s:3314   .text.msg_wrapper_rm_obj_from_msg:0000000000000000 msg_wrapper_rm_obj_from_msg
     /tmp/cc45SYiz.s:3368   .text.msg_wrapper_add_cmd_to_msg:0000000000000000 msg_wrapper_add_cmd_to_msg
     /tmp/cc45SYiz.s:3404   .text.msg_wrapper_rm_cmd_from_msg:0000000000000000 msg_wrapper_rm_cmd_from_msg
     /tmp/cc45SYiz.s:3463   .rodata.cst16:0000000000000000 .LC1
     /tmp/cc45SYiz.s:624    .rodata.__msg_wrapper_print_msg.str1.1:0000000000000000 .LC2
     /tmp/cc45SYiz.s:3470   .rodata.cst4:0000000000000000 .LC3
     /tmp/cc45SYiz.s:3473   .rodata.cst4:0000000000000004 .LC4

UNDEFINED SYMBOLS
_GLOBAL_OFFSET_TABLE_
puts
__stack_chk_fail
