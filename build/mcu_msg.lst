GAS LISTING /tmp/ccXtVIbK.s 			page 1


   1              		.file	"mcu_msg.c"
   2              		.text
   3              	.Ltext0:
   4              		.section	.text.__str_len,"ax",@progbits
   6              	__str_len:
   7              	.LFB33:
   8              		.file 1 "src/mcu_msg.c"
   1:src/mcu_msg.c **** /**
   2:src/mcu_msg.c ****  * @file msg_parser.c
   3:src/mcu_msg.c ****  * @author Istvan Milak (istvan.milak@gmail.com)
   4:src/mcu_msg.c ****  * @brief Simple message parser for embedded applications, eg serial comm
   5:src/mcu_msg.c ****  * @version 0.1
   6:src/mcu_msg.c ****  * @date 2019-12-15
   7:src/mcu_msg.c ****  * 
   8:src/mcu_msg.c ****  * @copyright Copyright (c) 2019
   9:src/mcu_msg.c ****  * 
  10:src/mcu_msg.c ****  */
  11:src/mcu_msg.c **** #include <stdio.h>
  12:src/mcu_msg.c **** #include "mcu_msg.h"
  13:src/mcu_msg.c **** 
  14:src/mcu_msg.c **** /*Control chars*/
  15:src/mcu_msg.c **** #define __CTRL_MSG_FLAG           '#'
  16:src/mcu_msg.c **** #define __CTRL_START_MSG          '{'
  17:src/mcu_msg.c **** #define __CTRL_STOP_MSG           '}'
  18:src/mcu_msg.c **** #define __CTRL_START_OBJ          '('
  19:src/mcu_msg.c **** #define __CTRL_STOP_OBJ           ')'
  20:src/mcu_msg.c **** #define __CTRL_OBJ_FLAG           '@'
  21:src/mcu_msg.c **** #define __CTRL_KEY_FLAG           '$'
  22:src/mcu_msg.c **** #define __CTRL_KEY_SEP            ';'
  23:src/mcu_msg.c **** #define __CTRL_KEY_EQU            '='
  24:src/mcu_msg.c **** #define __CTRL_CMD_START_FLAG     '<'
  25:src/mcu_msg.c **** #define __CTRL_CMD_STOP_FLAG      '>'
  26:src/mcu_msg.c **** 
  27:src/mcu_msg.c **** 
  28:src/mcu_msg.c **** /*putchar implementation: must be implemented for printing to UART or other output*/
  29:src/mcu_msg.c **** static int (*__msg_putc)(char) = NULL; 
  30:src/mcu_msg.c **** 
  31:src/mcu_msg.c **** /*Static function declarations*/
  32:src/mcu_msg.c **** static inline uint8_t   __is_ctrl_char(char c);
  33:src/mcu_msg.c **** static inline uint8_t   __is_whitespace(char c);
  34:src/mcu_msg.c **** static msg_size_t       __str_len(char *str);
  35:src/mcu_msg.c **** static inline uint8_t   __is_p_in_str(msg_str_t str, char *p);
  36:src/mcu_msg.c **** static char*            __skip_internal_str(char *start);
  37:src/mcu_msg.c **** static msg_str_t        __find_keyword(msg_str_t str, char *keyword, char flagc, char stopc);
  38:src/mcu_msg.c **** static msg_str_t        __find_val(msg_obj_t obj, char *key);
  39:src/mcu_msg.c **** static void             __msg_str_copy_to_chr_arr(char *dest, msg_str_t source);
  40:src/mcu_msg.c **** static void             __msg_str_copy(msg_str_t dest, msg_str_t source);
  41:src/mcu_msg.c **** static void             __msg_print_int(int i);
  42:src/mcu_msg.c **** static void             __msg_print_float(float f, uint8_t prec);
  43:src/mcu_msg.c **** static void             __msg_print_str(msg_str_t str);
  44:src/mcu_msg.c **** static inline char      __define_qmark(msg_str_t str);
  45:src/mcu_msg.c **** 
  46:src/mcu_msg.c **** #if MCU_MSG_USE_WRAPPER
  47:src/mcu_msg.c **** static inline void      __msg_wrapper_print_obj(msg_wrap_obj_t obj);
  48:src/mcu_msg.c **** static inline void      __msg_wrapper_print_cmd(msg_wrap_cmd_t cmd);
  49:src/mcu_msg.c **** static void             __msg_wrapper_print_msg(msg_wrap_t msg);
  50:src/mcu_msg.c **** static char*            __msg_wrapper_print_msg_to_buff(msg_wrap_t msg, char *buff, msg_size_t buf_
GAS LISTING /tmp/ccXtVIbK.s 			page 2


  51:src/mcu_msg.c **** #endif
  52:src/mcu_msg.c **** 
  53:src/mcu_msg.c **** 
  54:src/mcu_msg.c **** /////////////////////////////////////////////////////////////////////////////////////////////
  55:src/mcu_msg.c **** //                                      Parser functions                                   //
  56:src/mcu_msg.c **** /////////////////////////////////////////////////////////////////////////////////////////////
  57:src/mcu_msg.c **** 
  58:src/mcu_msg.c **** /*destroy string*/
  59:src/mcu_msg.c **** void msg_destroy_string(msg_str_t *str)
  60:src/mcu_msg.c **** {
  61:src/mcu_msg.c ****     str->s = NULL;
  62:src/mcu_msg.c ****     str->len = 0;
  63:src/mcu_msg.c **** }
  64:src/mcu_msg.c **** 
  65:src/mcu_msg.c **** /*destroy message*/
  66:src/mcu_msg.c **** void msg_destroy(msg_t *msg)
  67:src/mcu_msg.c **** {
  68:src/mcu_msg.c ****     msg_destroy_string(&msg->id);
  69:src/mcu_msg.c ****     msg_destroy_string(&msg->content);
  70:src/mcu_msg.c **** }
  71:src/mcu_msg.c **** 
  72:src/mcu_msg.c **** 
  73:src/mcu_msg.c **** /*destroy object*/
  74:src/mcu_msg.c **** void msg_destroy_obj(msg_obj_t *obj)
  75:src/mcu_msg.c **** {
  76:src/mcu_msg.c ****     msg_destroy_string(&obj->id);
  77:src/mcu_msg.c ****     msg_destroy_string(&obj->content);
  78:src/mcu_msg.c **** }
  79:src/mcu_msg.c **** 
  80:src/mcu_msg.c **** msg_str_t msg_init_string(char *str)
  81:src/mcu_msg.c **** {
  82:src/mcu_msg.c ****     // printf(">>\n");
  83:src/mcu_msg.c ****     msg_str_t res;
  84:src/mcu_msg.c ****     res.s = str;
  85:src/mcu_msg.c ****     res.len = __str_len(res.s);
  86:src/mcu_msg.c ****     return res;
  87:src/mcu_msg.c **** }
  88:src/mcu_msg.c **** 
  89:src/mcu_msg.c **** /**
  90:src/mcu_msg.c ****  * @brief Argument char is control char or not
  91:src/mcu_msg.c ****  * 
  92:src/mcu_msg.c ****  * @param c char
  93:src/mcu_msg.c ****  * @return uint8_t comparison result
  94:src/mcu_msg.c ****  */
  95:src/mcu_msg.c **** static inline uint8_t __is_ctrl_char(char c)
  96:src/mcu_msg.c **** {
  97:src/mcu_msg.c ****     switch(c) {
  98:src/mcu_msg.c ****         case __CTRL_MSG_FLAG:
  99:src/mcu_msg.c ****         case __CTRL_START_MSG:
 100:src/mcu_msg.c ****         case __CTRL_STOP_MSG:
 101:src/mcu_msg.c ****         case __CTRL_START_OBJ:
 102:src/mcu_msg.c ****         case __CTRL_STOP_OBJ:
 103:src/mcu_msg.c ****         case __CTRL_OBJ_FLAG:
 104:src/mcu_msg.c ****         case __CTRL_KEY_FLAG:
 105:src/mcu_msg.c ****         case __CTRL_KEY_SEP:
 106:src/mcu_msg.c ****         case __CTRL_KEY_EQU:
 107:src/mcu_msg.c ****         case __CTRL_CMD_START_FLAG:
GAS LISTING /tmp/ccXtVIbK.s 			page 3


 108:src/mcu_msg.c ****         case __CTRL_CMD_STOP_FLAG:
 109:src/mcu_msg.c ****             return 1;
 110:src/mcu_msg.c ****         default:
 111:src/mcu_msg.c ****             return 0;
 112:src/mcu_msg.c ****     }
 113:src/mcu_msg.c **** }
 114:src/mcu_msg.c **** 
 115:src/mcu_msg.c **** /**
 116:src/mcu_msg.c ****  * @brief Char is a whitespace
 117:src/mcu_msg.c ****  * 
 118:src/mcu_msg.c ****  * @param c char
 119:src/mcu_msg.c ****  * @return uint8_t comparison result
 120:src/mcu_msg.c ****  */
 121:src/mcu_msg.c **** static inline uint8_t __is_whitespace(char c)
 122:src/mcu_msg.c **** {
 123:src/mcu_msg.c ****     switch(c) {
 124:src/mcu_msg.c ****         case  ' ':
 125:src/mcu_msg.c ****         case '\t':
 126:src/mcu_msg.c ****         case '\n':
 127:src/mcu_msg.c ****         case '\v':
 128:src/mcu_msg.c ****         case '\f':
 129:src/mcu_msg.c ****         case '\r':
 130:src/mcu_msg.c ****             return 1;
 131:src/mcu_msg.c ****         default:
 132:src/mcu_msg.c ****             return 0;
 133:src/mcu_msg.c ****     }
 134:src/mcu_msg.c **** }
 135:src/mcu_msg.c **** 
 136:src/mcu_msg.c **** /**
 137:src/mcu_msg.c ****  * @brief Argument char is valid keyword char or not
 138:src/mcu_msg.c ****  * 
 139:src/mcu_msg.c ****  * @param c char
 140:src/mcu_msg.c ****  * @return uint8_t comparison result
 141:src/mcu_msg.c ****  */
 142:src/mcu_msg.c **** 
 143:src/mcu_msg.c **** #define is_valid_keyword_char(c)        ((c == '_') || (c >= 'a' && c <= 'z') || (c >= 'A' && c <= 
 144:src/mcu_msg.c ****                                         (c >= '0' && c <= '9'))
 145:src/mcu_msg.c **** 
 146:src/mcu_msg.c **** /**
 147:src/mcu_msg.c ****  * @brief strlen implementation for internal usage
 148:src/mcu_msg.c ****  * 
 149:src/mcu_msg.c ****  * @param str string 
 150:src/mcu_msg.c ****  * @return msg_size_t length of string 
 151:src/mcu_msg.c ****  */
 152:src/mcu_msg.c **** static msg_size_t __str_len(char *str)
 153:src/mcu_msg.c **** {
   9              		.loc 1 153 0
  10              		.cfi_startproc
  11              	.LVL0:
 154:src/mcu_msg.c ****     char *p = str;
  12              		.loc 1 154 0
  13 0000 4889F8   		movq	%rdi, %rax
 155:src/mcu_msg.c ****     while(*p)
  14              		.loc 1 155 0
  15 0003 EB04     		jmp	.L2
  16              	.LVL1:
  17              	.L3:
GAS LISTING /tmp/ccXtVIbK.s 			page 4


 156:src/mcu_msg.c ****         p++;
  18              		.loc 1 156 0
  19 0005 4883C001 		addq	$1, %rax
  20              	.LVL2:
  21              	.L2:
 155:src/mcu_msg.c ****     while(*p)
  22              		.loc 1 155 0
  23 0009 803800   		cmpb	$0, (%rax)
  24 000c 75F7     		jne	.L3
 157:src/mcu_msg.c ****     return (p - str);
  25              		.loc 1 157 0
  26 000e 4829F8   		subq	%rdi, %rax
  27              	.LVL3:
 158:src/mcu_msg.c **** }
  28              		.loc 1 158 0
  29 0011 C3       		ret
  30              		.cfi_endproc
  31              	.LFE33:
  33              		.section	.text.__skip_internal_str,"ax",@progbits
  35              	__skip_internal_str:
  36              	.LFB35:
 159:src/mcu_msg.c **** 
 160:src/mcu_msg.c **** /**
 161:src/mcu_msg.c ****  * @brief Deciding char pointer is in the string buffer or not
 162:src/mcu_msg.c ****  * 
 163:src/mcu_msg.c ****  * @param str string buffer with start pointer and length
 164:src/mcu_msg.c ****  * @param p current pointer
 165:src/mcu_msg.c ****  * @return uint8_t return boole result
 166:src/mcu_msg.c ****  */
 167:src/mcu_msg.c **** static inline uint8_t __is_p_in_str(msg_str_t str, char *p)
 168:src/mcu_msg.c **** {
 169:src/mcu_msg.c ****     return ((p - str.s) < str.len);
 170:src/mcu_msg.c **** }
 171:src/mcu_msg.c **** 
 172:src/mcu_msg.c **** /**
 173:src/mcu_msg.c ****  * @brief Skiping internal string from start qoution mark to end qmark
 174:src/mcu_msg.c ****  * 
 175:src/mcu_msg.c ****  * @param start start pointer
 176:src/mcu_msg.c ****  * @return char* return end pointer
 177:src/mcu_msg.c ****  */
 178:src/mcu_msg.c **** static char *__skip_internal_str(char *start)
 179:src/mcu_msg.c **** {
  37              		.loc 1 179 0
  38              		.cfi_startproc
  39              	.LVL4:
 180:src/mcu_msg.c ****     char *p = start;
 181:src/mcu_msg.c ****     char qmark = *start;
  40              		.loc 1 181 0
  41 0000 0FB60F   		movzbl	(%rdi), %ecx
  42              	.LVL5:
 182:src/mcu_msg.c ****     if((qmark != '\'' && qmark != '"')) return NULL;
  43              		.loc 1 182 0
  44 0003 80F927   		cmpb	$39, %cl
  45 0006 0F95C2   		setne	%dl
  46 0009 80F922   		cmpb	$34, %cl
  47 000c 0F95C0   		setne	%al
  48 000f 84C2     		testb	%al, %dl
GAS LISTING /tmp/ccXtVIbK.s 			page 5


  49 0011 751E     		jne	.L9
 183:src/mcu_msg.c ****     ++p;
  50              		.loc 1 183 0
  51 0013 488D4701 		leaq	1(%rdi), %rax
  52              	.LVL6:
 184:src/mcu_msg.c ****     while(*p && (*p != qmark)) {
  53              		.loc 1 184 0
  54 0017 EB04     		jmp	.L6
  55              	.L8:
 185:src/mcu_msg.c ****         p++;
  56              		.loc 1 185 0
  57 0019 4883C001 		addq	$1, %rax
  58              	.LVL7:
  59              	.L6:
 184:src/mcu_msg.c ****     while(*p && (*p != qmark)) {
  60              		.loc 1 184 0
  61 001d 0FB610   		movzbl	(%rax), %edx
  62 0020 84D2     		testb	%dl, %dl
  63 0022 7404     		je	.L7
 184:src/mcu_msg.c ****     while(*p && (*p != qmark)) {
  64              		.loc 1 184 0 is_stmt 0 discriminator 1
  65 0024 38CA     		cmpb	%cl, %dl
  66 0026 75F1     		jne	.L8
  67              	.L7:
 186:src/mcu_msg.c ****     }
 187:src/mcu_msg.c ****     
 188:src/mcu_msg.c ****     return *p ? ++p : NULL;
  68              		.loc 1 188 0 is_stmt 1
  69 0028 84D2     		testb	%dl, %dl
  70 002a 740B     		je	.L10
  71              		.loc 1 188 0 is_stmt 0 discriminator 1
  72 002c 4883C001 		addq	$1, %rax
  73              	.LVL8:
  74 0030 C3       		ret
  75              	.LVL9:
  76              	.L9:
 182:src/mcu_msg.c ****     ++p;
  77              		.loc 1 182 0 is_stmt 1
  78 0031 B8000000 		movl	$0, %eax
  78      00
  79 0036 C3       		ret
  80              	.LVL10:
  81              	.L10:
  82              		.loc 1 188 0
  83 0037 B8000000 		movl	$0, %eax
  83      00
  84              	.LVL11:
 189:src/mcu_msg.c **** }
  85              		.loc 1 189 0
  86 003c C3       		ret
  87              		.cfi_endproc
  88              	.LFE35:
  90              		.section	.text.__msg_str_copy_to_chr_arr,"ax",@progbits
  92              	__msg_str_copy_to_chr_arr:
  93              	.LFB44:
 190:src/mcu_msg.c **** 
 191:src/mcu_msg.c **** /**
GAS LISTING /tmp/ccXtVIbK.s 			page 6


 192:src/mcu_msg.c ****  * @brief find the position of the keyword int message string (first occurance)
 193:src/mcu_msg.c ****  * if the keyword found in the message string, the next (none space) char must be stopc
 194:src/mcu_msg.c ****  * @param str source string
 195:src/mcu_msg.c ****  * @param keyword keword has to be found
 196:src/mcu_msg.c ****  * @param flagc flag, eg. '@', '$'
 197:src/mcu_msg.c ****  * @param stopc stop character eg. '(', '='
 198:src/mcu_msg.c ****  * @return msg_str_t location and size of the keyword (whitout flag) or NULL if keyword not found
 199:src/mcu_msg.c ****  */
 200:src/mcu_msg.c **** static msg_str_t __find_keyword(msg_str_t str, char *keyword, char flagc, char stopc)
 201:src/mcu_msg.c **** {
 202:src/mcu_msg.c **** 
 203:src/mcu_msg.c ****     msg_str_t res;
 204:src/mcu_msg.c ****     char *p = str.s;
 205:src/mcu_msg.c ****     uint8_t equal;
 206:src/mcu_msg.c ****     msg_size_t i;
 207:src/mcu_msg.c ****     res.len = __str_len(keyword);
 208:src/mcu_msg.c ****     while(__is_p_in_str(str, p) && *p) {
 209:src/mcu_msg.c ****         if(*p == '\'' || *p == '"') { //skip internal strings
 210:src/mcu_msg.c ****             p = __skip_internal_str(p);
 211:src/mcu_msg.c ****         }
 212:src/mcu_msg.c ****         if(__is_p_in_str(str, p)  && *p == flagc) { // if flag char detected start the analization
 213:src/mcu_msg.c ****             res.s = p + 1;
 214:src/mcu_msg.c ****             equal = 1;
 215:src/mcu_msg.c ****             for(i = 0; __is_p_in_str(str, res.s + i) && i < res.len; i++) { // if not equal during 
 216:src/mcu_msg.c ****                 if((*(res.s + i) != *(keyword + i)) || __is_ctrl_char(*(res.s + i)) || 
 217:src/mcu_msg.c ****                                     !is_valid_keyword_char(*(res.s + i))) {
 218:src/mcu_msg.c ****                     equal = 0;
 219:src/mcu_msg.c ****                     break;
 220:src/mcu_msg.c ****                 }
 221:src/mcu_msg.c ****             }
 222:src/mcu_msg.c ****             while(__is_p_in_str(str, res.s + i) && __is_whitespace(*(res.s + i))) i++; //skip space
 223:src/mcu_msg.c ****             if(equal && *(res.s + i) == stopc) { //if the stop char is the next, whitout spaces, re
 224:src/mcu_msg.c ****                 return res;
 225:src/mcu_msg.c ****             } else {
 226:src/mcu_msg.c ****                 p = res.s + i; // if not matched, return continue the iteration from last checked c
 227:src/mcu_msg.c ****             }
 228:src/mcu_msg.c ****         }
 229:src/mcu_msg.c ****         p++;
 230:src/mcu_msg.c ****     }
 231:src/mcu_msg.c ****     // if not found (loop finished whitout match) return with a destroyed string
 232:src/mcu_msg.c ****     msg_destroy_string(&res);
 233:src/mcu_msg.c ****     return res;
 234:src/mcu_msg.c **** }
 235:src/mcu_msg.c **** 
 236:src/mcu_msg.c **** 
 237:src/mcu_msg.c **** /**
 238:src/mcu_msg.c ****  * @brief Getting the value start position for particular key in message object
 239:src/mcu_msg.c ****  * 
 240:src/mcu_msg.c ****  * @param obj message object
 241:src/mcu_msg.c ****  * @param key key for search
 242:src/mcu_msg.c ****  * @return char* location of the value start point or NULL if the key was not found
 243:src/mcu_msg.c ****  */
 244:src/mcu_msg.c **** 
 245:src/mcu_msg.c **** static msg_str_t __find_val(msg_obj_t obj, char *key)
 246:src/mcu_msg.c **** {
 247:src/mcu_msg.c ****     msg_str_t res  = __find_keyword(obj.content, key, __CTRL_KEY_FLAG, __CTRL_KEY_EQU); //object st
 248:src/mcu_msg.c ****     char *p;
GAS LISTING /tmp/ccXtVIbK.s 			page 7


 249:src/mcu_msg.c ****     if(res.s == NULL) { //if keyword not found, return with NULLs and 0 lengths
 250:src/mcu_msg.c ****         msg_destroy_string(&res);
 251:src/mcu_msg.c ****         return res;
 252:src/mcu_msg.c ****     }
 253:src/mcu_msg.c ****     if(*res.s != __CTRL_KEY_EQU) { // move pointer to 'equal'
 254:src/mcu_msg.c ****         while(__is_p_in_str(obj.content, res.s + 1) && *res.s != __CTRL_KEY_EQU) res.s++;
 255:src/mcu_msg.c ****     }
 256:src/mcu_msg.c ****     res.s++;
 257:src/mcu_msg.c ****     while(__is_p_in_str(obj.content, res.s) && __is_whitespace(*res.s)) res.s++; //skip spaces afte
 258:src/mcu_msg.c **** 
 259:src/mcu_msg.c ****     p = res.s;
 260:src/mcu_msg.c ****     while(__is_p_in_str(obj.content, p) && !__is_whitespace(*p) && !__is_ctrl_char(*p)) p++; //calc
 261:src/mcu_msg.c ****     res.len = p - res.s;
 262:src/mcu_msg.c **** 
 263:src/mcu_msg.c ****     return res;
 264:src/mcu_msg.c **** }
 265:src/mcu_msg.c **** 
 266:src/mcu_msg.c **** 
 267:src/mcu_msg.c **** /*get message*/
 268:src/mcu_msg.c **** msg_t msg_get(char *raw_str, char *id, msg_size_t len)
 269:src/mcu_msg.c **** {
 270:src/mcu_msg.c ****     msg_t res;
 271:src/mcu_msg.c ****     res.content.s = raw_str;
 272:src/mcu_msg.c ****     res.content.len = len;
 273:src/mcu_msg.c ****     res.id = __find_keyword(res.content, id, __CTRL_MSG_FLAG, __CTRL_START_MSG); //object start wit
 274:src/mcu_msg.c ****     char *p;
 275:src/mcu_msg.c ****     if(res.id.s == NULL) { //if keyword not found, return with NULLs and 0 lengths
 276:src/mcu_msg.c ****         msg_destroy(&res);
 277:src/mcu_msg.c ****         return res;
 278:src/mcu_msg.c ****     }
 279:src/mcu_msg.c ****     p = res.id.s + res.id.len; //init pointer to end of the id
 280:src/mcu_msg.c ****     if (*p != __CTRL_START_MSG) { // if the next char is not START_MSG, move to the start flag
 281:src/mcu_msg.c ****         while(__is_p_in_str(res.content, p + 1) && *p != __CTRL_START_MSG) p++;
 282:src/mcu_msg.c ****     }
 283:src/mcu_msg.c ****     res.content.s = ++p; // set content string pointer to the current pos
 284:src/mcu_msg.c ****     while(__is_p_in_str(res.content, p) && *p != __CTRL_STOP_MSG) { //calc length
 285:src/mcu_msg.c ****         p++;
 286:src/mcu_msg.c ****     }
 287:src/mcu_msg.c ****     res.content.len = p - res.content.s;
 288:src/mcu_msg.c ****     return res;
 289:src/mcu_msg.c **** }
 290:src/mcu_msg.c **** 
 291:src/mcu_msg.c **** 
 292:src/mcu_msg.c **** 
 293:src/mcu_msg.c **** msg_obj_t msg_parser_get_obj(msg_t msg, char *id)
 294:src/mcu_msg.c **** {
 295:src/mcu_msg.c ****     msg_obj_t res;
 296:src/mcu_msg.c ****     res.id = __find_keyword(msg.content, id, __CTRL_OBJ_FLAG, __CTRL_START_OBJ); //object start wit
 297:src/mcu_msg.c ****     char *p;
 298:src/mcu_msg.c ****     if(res.id.s == NULL) { //if keyword not found, return with NULLs and 0 lengths
 299:src/mcu_msg.c ****         msg_destroy_obj(&res);
 300:src/mcu_msg.c ****         return res;
 301:src/mcu_msg.c ****     }
 302:src/mcu_msg.c **** 
 303:src/mcu_msg.c ****     p = res.id.s + res.id.len;
 304:src/mcu_msg.c ****     if (*p != __CTRL_START_OBJ) {
 305:src/mcu_msg.c ****         while(__is_p_in_str(msg.content, p + 1) && *p != __CTRL_START_OBJ) p++;
GAS LISTING /tmp/ccXtVIbK.s 			page 8


 306:src/mcu_msg.c ****     }
 307:src/mcu_msg.c ****     res.content.s = ++p;
 308:src/mcu_msg.c ****     while(__is_p_in_str(msg.content, p) && *p != __CTRL_STOP_OBJ) {
 309:src/mcu_msg.c ****         p++;
 310:src/mcu_msg.c ****     }
 311:src/mcu_msg.c ****     res.content.len = p - res.content.s;
 312:src/mcu_msg.c ****     return res;
 313:src/mcu_msg.c **** }
 314:src/mcu_msg.c **** 
 315:src/mcu_msg.c **** msg_cmd_t msg_parser_get_cmd(msg_t msg, char *cmd_id)
 316:src/mcu_msg.c **** {
 317:src/mcu_msg.c ****     msg_cmd_t res;
 318:src/mcu_msg.c ****     // return with the find result
 319:src/mcu_msg.c ****     res.cmd = __find_keyword(msg.content, cmd_id, __CTRL_CMD_START_FLAG, __CTRL_CMD_STOP_FLAG);
 320:src/mcu_msg.c ****     return res;
 321:src/mcu_msg.c **** }
 322:src/mcu_msg.c **** 
 323:src/mcu_msg.c **** int8_t msg_parser_get_int(int *res_val, msg_obj_t obj, char *key)
 324:src/mcu_msg.c **** {
 325:src/mcu_msg.c ****     msg_str_t sval = __find_val(obj, key);
 326:src/mcu_msg.c ****     msg_size_t i;
 327:src/mcu_msg.c ****     unsigned m = 1;
 328:src/mcu_msg.c ****     int sign = 1;
 329:src/mcu_msg.c ****     int8_t res = 0; // result of function
 330:src/mcu_msg.c **** 
 331:src/mcu_msg.c ****     if(sval.s == NULL)  //key nout found
 332:src/mcu_msg.c ****         return -1;
 333:src/mcu_msg.c **** 
 334:src/mcu_msg.c **** 
 335:src/mcu_msg.c ****     switch(*sval.s) { //if the sign is defined, set the sign variable and increment the pointer
 336:src/mcu_msg.c ****         case '+':
 337:src/mcu_msg.c ****             sign = 1;
 338:src/mcu_msg.c ****             sval.s++;
 339:src/mcu_msg.c ****         break;
 340:src/mcu_msg.c ****         
 341:src/mcu_msg.c ****         case '-':
 342:src/mcu_msg.c ****             sign = -1;
 343:src/mcu_msg.c ****             sval.s++;
 344:src/mcu_msg.c ****         break;
 345:src/mcu_msg.c ****         
 346:src/mcu_msg.c ****         default:
 347:src/mcu_msg.c ****         break;
 348:src/mcu_msg.c ****     }
 349:src/mcu_msg.c **** 
 350:src/mcu_msg.c ****     for(i = 0; __is_p_in_str(obj.content, sval.s) && !__is_whitespace(*sval.s) && *sval.s != __CTRL
 351:src/mcu_msg.c ****         if(*sval.s < '0' || *sval.s > '9') {    // if non valid number, return with error
 352:src/mcu_msg.c ****             return -1;
 353:src/mcu_msg.c ****         }
 354:src/mcu_msg.c ****     }
 355:src/mcu_msg.c **** 
 356:src/mcu_msg.c ****     *res_val = 0;
 357:src/mcu_msg.c ****     --sval.s;
 358:src/mcu_msg.c ****     while(i--) { //convert value to integer
 359:src/mcu_msg.c ****         *res_val += (*sval.s-- - '0') * m;
 360:src/mcu_msg.c ****         m *= 10;
 361:src/mcu_msg.c ****         res++;
 362:src/mcu_msg.c ****     }
GAS LISTING /tmp/ccXtVIbK.s 			page 9


 363:src/mcu_msg.c ****     
 364:src/mcu_msg.c ****     *res_val *= sign; //corrigate with the sign
 365:src/mcu_msg.c **** 
 366:src/mcu_msg.c ****     return res; // return with the digit count, if correct
 367:src/mcu_msg.c **** }
 368:src/mcu_msg.c **** 
 369:src/mcu_msg.c **** 
 370:src/mcu_msg.c **** int8_t msg_parser_get_float(float *res_val, msg_obj_t obj, char *key)
 371:src/mcu_msg.c **** {
 372:src/mcu_msg.c ****     msg_str_t sval = __find_val(obj, key);
 373:src/mcu_msg.c ****     char *pf;
 374:src/mcu_msg.c ****     msg_size_t i;
 375:src/mcu_msg.c ****     unsigned m = 1;
 376:src/mcu_msg.c ****     float mf = 0.1;
 377:src/mcu_msg.c ****     int sign = 1;
 378:src/mcu_msg.c ****     int8_t res = 0; // result of function
 379:src/mcu_msg.c **** 
 380:src/mcu_msg.c ****     if(sval.s == NULL)  //key nout found
 381:src/mcu_msg.c ****         return -1;
 382:src/mcu_msg.c **** 
 383:src/mcu_msg.c **** 
 384:src/mcu_msg.c ****     switch(*sval.s) { //if the sign is defined, set the sign variable and increment the pointer
 385:src/mcu_msg.c ****         case '+':
 386:src/mcu_msg.c ****             sign = 1;
 387:src/mcu_msg.c ****             sval.s++;
 388:src/mcu_msg.c ****         break;
 389:src/mcu_msg.c ****         
 390:src/mcu_msg.c ****         case '-':
 391:src/mcu_msg.c ****             sign = -1;
 392:src/mcu_msg.c ****             sval.s++;
 393:src/mcu_msg.c ****         break;
 394:src/mcu_msg.c ****         
 395:src/mcu_msg.c ****         default:
 396:src/mcu_msg.c ****         break;
 397:src/mcu_msg.c ****     }
 398:src/mcu_msg.c **** 
 399:src/mcu_msg.c ****     //move p to dec separator or end of the value
 400:src/mcu_msg.c ****     for(i = 0; __is_p_in_str(obj.content, sval.s) && !__is_whitespace(*sval.s) && *sval.s != __CTRL
 401:src/mcu_msg.c ****         if((*sval.s < '0' || *sval.s > '9')) {    // if non valid number, return with error
 402:src/mcu_msg.c ****             return -1;
 403:src/mcu_msg.c ****         }
 404:src/mcu_msg.c ****     }
 405:src/mcu_msg.c **** 
 406:src/mcu_msg.c ****     *res_val = 0.0;
 407:src/mcu_msg.c ****     
 408:src/mcu_msg.c ****     if(*sval.s == '.') {
 409:src/mcu_msg.c ****         pf = sval.s + 1;
 410:src/mcu_msg.c ****         res++;
 411:src/mcu_msg.c ****     } else {
 412:src/mcu_msg.c ****         pf = NULL;
 413:src/mcu_msg.c ****     }
 414:src/mcu_msg.c **** 
 415:src/mcu_msg.c ****     --sval.s;
 416:src/mcu_msg.c ****     while(i--) { // convert integer part
 417:src/mcu_msg.c ****         *res_val += (*sval.s-- - '0') * m;
 418:src/mcu_msg.c ****         m *= 10;
 419:src/mcu_msg.c ****         res++;
GAS LISTING /tmp/ccXtVIbK.s 			page 10


 420:src/mcu_msg.c ****     }
 421:src/mcu_msg.c ****     
 422:src/mcu_msg.c ****     // calculate floating point section after '.' (if there is)
 423:src/mcu_msg.c ****     for(; pf != NULL && __is_p_in_str(obj.content, pf) && !__is_whitespace(*pf) && *pf != __CTRL_KE
 424:src/mcu_msg.c ****         if(*pf < '0' || *pf > '9') {    // if non valid number, return with error
 425:src/mcu_msg.c ****             return -1;
 426:src/mcu_msg.c ****         }
 427:src/mcu_msg.c ****         *res_val += (*pf - '0') * mf;
 428:src/mcu_msg.c ****         mf /= 10;
 429:src/mcu_msg.c ****         res++; 
 430:src/mcu_msg.c ****     }
 431:src/mcu_msg.c **** 
 432:src/mcu_msg.c ****     *res_val *= sign; //corrigate with the sign
 433:src/mcu_msg.c **** 
 434:src/mcu_msg.c ****     return res; // return with the digit count + '.' separator, if correct
 435:src/mcu_msg.c **** }
 436:src/mcu_msg.c **** 
 437:src/mcu_msg.c **** 
 438:src/mcu_msg.c **** 
 439:src/mcu_msg.c **** msg_str_t msg_parser_get_string(msg_obj_t obj, char *key)
 440:src/mcu_msg.c **** {
 441:src/mcu_msg.c ****     msg_str_t res = __find_val(obj, key);
 442:src/mcu_msg.c ****     char qmark;
 443:src/mcu_msg.c ****     char *p;
 444:src/mcu_msg.c **** 
 445:src/mcu_msg.c ****     if(res.s == NULL) {
 446:src/mcu_msg.c ****         msg_destroy_string(&res);
 447:src/mcu_msg.c ****         return res;
 448:src/mcu_msg.c ****     }
 449:src/mcu_msg.c ****         
 450:src/mcu_msg.c ****     qmark = *res.s;
 451:src/mcu_msg.c **** 
 452:src/mcu_msg.c ****     if(qmark != '\'' && qmark != '"') { // qmark not found, this is not a string
 453:src/mcu_msg.c ****         msg_destroy_string(&res);
 454:src/mcu_msg.c ****         return res;
 455:src/mcu_msg.c ****     }
 456:src/mcu_msg.c **** 
 457:src/mcu_msg.c ****     p = ++res.s;
 458:src/mcu_msg.c ****     while(__is_p_in_str(obj.content, p) && *p != qmark) { // calc len
 459:src/mcu_msg.c ****         p++;
 460:src/mcu_msg.c ****     }
 461:src/mcu_msg.c ****     res.len = p - res.s;
 462:src/mcu_msg.c ****     return res;
 463:src/mcu_msg.c **** }
 464:src/mcu_msg.c **** 
 465:src/mcu_msg.c **** /**
 466:src/mcu_msg.c ****  * @brief Default string copy to char array
 467:src/mcu_msg.c ****  * 
 468:src/mcu_msg.c ****  * @param dest destination char array
 469:src/mcu_msg.c ****  * @param source source string type
 470:src/mcu_msg.c ****  */
 471:src/mcu_msg.c **** static void __msg_str_copy_to_chr_arr(char *dest, msg_str_t source)
 472:src/mcu_msg.c **** {
  94              		.loc 1 472 0
  95              		.cfi_startproc
  96              	.LVL12:
 473:src/mcu_msg.c ****     msg_size_t i;
GAS LISTING /tmp/ccXtVIbK.s 			page 11


 474:src/mcu_msg.c ****     for(i = 0; i < source.len; *(dest + i) = *(source.s + i), i++);
  97              		.loc 1 474 0
  98 0000 B8000000 		movl	$0, %eax
  98      00
  99 0005 EB0F     		jmp	.L12
 100              	.LVL13:
 101              	.L13:
 102              		.loc 1 474 0 is_stmt 0 discriminator 3
 103 0007 0FB7C8   		movzwl	%ax, %ecx
 104 000a 440FB604 		movzbl	(%rsi,%rcx), %r8d
 104      0E
 105 000f 4488040F 		movb	%r8b, (%rdi,%rcx)
 106 0013 83C001   		addl	$1, %eax
 107              	.LVL14:
 108              	.L12:
 109              		.loc 1 474 0 discriminator 1
 110 0016 6639C2   		cmpw	%ax, %dx
 111 0019 77EC     		ja	.L13
 475:src/mcu_msg.c **** }
 112              		.loc 1 475 0 is_stmt 1
 113 001b F3C3     		rep ret
 114              		.cfi_endproc
 115              	.LFE44:
 117              		.section	.text.__msg_str_copy,"ax",@progbits
 119              	__msg_str_copy:
 120              	.LFB45:
 476:src/mcu_msg.c **** 
 477:src/mcu_msg.c **** /**
 478:src/mcu_msg.c ****  * @brief Default string copy to string type
 479:src/mcu_msg.c ****  * 
 480:src/mcu_msg.c ****  * @param dest destination string type
 481:src/mcu_msg.c ****  * @param source source string type
 482:src/mcu_msg.c ****  */
 483:src/mcu_msg.c **** static void __msg_str_copy(msg_str_t dest, msg_str_t source)
 484:src/mcu_msg.c **** {
 121              		.loc 1 484 0
 122              		.cfi_startproc
 123              	.LVL15:
 485:src/mcu_msg.c ****     msg_size_t i;
 486:src/mcu_msg.c ****     for(i = 0, dest.len = source.len; i < source.len; *(dest.s + i) = *(source.s + i), i++);
 124              		.loc 1 486 0
 125 0000 B8000000 		movl	$0, %eax
 125      00
 126 0005 EB0F     		jmp	.L15
 127              	.LVL16:
 128              	.L16:
 129              		.loc 1 486 0 is_stmt 0 discriminator 3
 130 0007 0FB7F0   		movzwl	%ax, %esi
 131              	.LVL17:
 132 000a 440FB604 		movzbl	(%rdx,%rsi), %r8d
 132      32
 133 000f 44880437 		movb	%r8b, (%rdi,%rsi)
 134 0013 83C001   		addl	$1, %eax
 135              	.LVL18:
 136              	.L15:
 137              		.loc 1 486 0 discriminator 1
 138 0016 6639C1   		cmpw	%ax, %cx
GAS LISTING /tmp/ccXtVIbK.s 			page 12


 139 0019 77EC     		ja	.L16
 487:src/mcu_msg.c **** }
 140              		.loc 1 487 0 is_stmt 1
 141 001b F3C3     		rep ret
 142              		.cfi_endproc
 143              	.LFE45:
 145              		.section	.text.__msg_print_int,"ax",@progbits
 147              	__msg_print_int:
 148              	.LFB46:
 488:src/mcu_msg.c **** 
 489:src/mcu_msg.c **** static void __msg_print_int(int i)
 490:src/mcu_msg.c **** {
 149              		.loc 1 490 0
 150              		.cfi_startproc
 151              	.LVL19:
 152 0000 4155     		pushq	%r13
 153              	.LCFI0:
 154              		.cfi_def_cfa_offset 16
 155              		.cfi_offset 13, -16
 156 0002 4154     		pushq	%r12
 157              	.LCFI1:
 158              		.cfi_def_cfa_offset 24
 159              		.cfi_offset 12, -24
 160 0004 55       		pushq	%rbp
 161              	.LCFI2:
 162              		.cfi_def_cfa_offset 32
 163              		.cfi_offset 6, -32
 164 0005 53       		pushq	%rbx
 165              	.LCFI3:
 166              		.cfi_def_cfa_offset 40
 167              		.cfi_offset 3, -40
 168 0006 4883EC08 		subq	$8, %rsp
 169              	.LCFI4:
 170              		.cfi_def_cfa_offset 48
 491:src/mcu_msg.c ****     int8_t sign = i < 0 ? -1 : 1;
 171              		.loc 1 491 0
 172 000a 85FF     		testl	%edi, %edi
 173 000c 782A     		js	.L33
 174 000e 41BD0100 		movl	$1, %r13d
 174      0000
 175              	.L18:
 176              	.LVL20:
 492:src/mcu_msg.c ****     //                     int32->2147483647  int16:32767
 493:src/mcu_msg.c ****     long div;
 494:src/mcu_msg.c ****     char dig;
 495:src/mcu_msg.c **** 
 496:src/mcu_msg.c ****     if(!__msg_putc) //if function pointer is NULL, return
 177              		.loc 1 496 0 discriminator 4
 178 0014 488B0500 		movq	__msg_putc(%rip), %rax
 178      000000
 179 001b 4885C0   		testq	%rax, %rax
 180 001e 740D     		je	.L17
 181 0020 89FD     		movl	%edi, %ebp
 497:src/mcu_msg.c ****         return;
 498:src/mcu_msg.c ****     if(!i) {
 182              		.loc 1 498 0
 183 0022 85FF     		testl	%edi, %edi
GAS LISTING /tmp/ccXtVIbK.s 			page 13


 184 0024 751A     		jne	.L20
 499:src/mcu_msg.c ****         __msg_putc('0');
 185              		.loc 1 499 0
 186 0026 BF300000 		movl	$48, %edi
 186      00
 187              	.LVL21:
 188 002b FFD0     		call	*%rax
 189              	.LVL22:
 190              	.L17:
 500:src/mcu_msg.c ****         return;
 501:src/mcu_msg.c ****     }
 502:src/mcu_msg.c **** 
 503:src/mcu_msg.c ****     switch(sign) {
 504:src/mcu_msg.c ****         case -1: div = sizeof(int) >= 4 ? -1000000000L : -10000L; __msg_putc('-'); break;
 505:src/mcu_msg.c ****         default: div = sizeof(int) >= 4 ?  1000000000L :  10000L; break;
 506:src/mcu_msg.c ****     }
 507:src/mcu_msg.c ****     while(div) {
 508:src/mcu_msg.c ****         if(sign == -1 ? (i > div) : (i < div)) {
 509:src/mcu_msg.c ****             div /= 10;
 510:src/mcu_msg.c ****             continue;
 511:src/mcu_msg.c ****         }
 512:src/mcu_msg.c ****         dig = '0' + ((i / div) % 10);
 513:src/mcu_msg.c ****         __msg_putc(dig);
 514:src/mcu_msg.c ****         div /= 10;
 515:src/mcu_msg.c ****     }
 516:src/mcu_msg.c ****     
 517:src/mcu_msg.c **** }
 191              		.loc 1 517 0
 192 002d 4883C408 		addq	$8, %rsp
 193              	.LCFI5:
 194              		.cfi_remember_state
 195              		.cfi_def_cfa_offset 40
 196 0031 5B       		popq	%rbx
 197              	.LCFI6:
 198              		.cfi_def_cfa_offset 32
 199 0032 5D       		popq	%rbp
 200              	.LCFI7:
 201              		.cfi_def_cfa_offset 24
 202 0033 415C     		popq	%r12
 203              	.LCFI8:
 204              		.cfi_def_cfa_offset 16
 205 0035 415D     		popq	%r13
 206              	.LCFI9:
 207              		.cfi_def_cfa_offset 8
 208              	.LVL23:
 209 0037 C3       		ret
 210              	.LVL24:
 211              	.L33:
 212              	.LCFI10:
 213              		.cfi_restore_state
 491:src/mcu_msg.c ****     //                     int32->2147483647  int16:32767
 214              		.loc 1 491 0
 215 0038 41BDFFFF 		movl	$-1, %r13d
 215      FFFF
 216 003e EBD4     		jmp	.L18
 217              	.LVL25:
 218              	.L20:
GAS LISTING /tmp/ccXtVIbK.s 			page 14


 503:src/mcu_msg.c ****         case -1: div = sizeof(int) >= 4 ? -1000000000L : -10000L; __msg_putc('-'); break;
 219              		.loc 1 503 0
 220 0040 4180FDFF 		cmpb	$-1, %r13b
 221 0044 0F85AB00 		jne	.L31
 221      0000
 222              	.LVL26:
 504:src/mcu_msg.c ****         default: div = sizeof(int) >= 4 ?  1000000000L :  10000L; break;
 223              		.loc 1 504 0
 224 004a BF2D0000 		movl	$45, %edi
 224      00
 225              	.LVL27:
 226 004f FFD0     		call	*%rax
 227              	.LVL28:
 228 0051 48C7C300 		movq	$-1000000000, %rbx
 228      3665C4
 229 0058 EB61     		jmp	.L27
 230              	.LVL29:
 231              	.L35:
 508:src/mcu_msg.c ****             div /= 10;
 232              		.loc 1 508 0 discriminator 1
 233 005a 4863C5   		movslq	%ebp, %rax
 234 005d 4839D8   		cmpq	%rbx, %rax
 235 0060 0F9FC0   		setg	%al
 236              	.L24:
 508:src/mcu_msg.c ****             div /= 10;
 237              		.loc 1 508 0 is_stmt 0 discriminator 4
 238 0063 84C0     		testb	%al, %al
 239 0065 756E     		jne	.L34
 512:src/mcu_msg.c ****         __msg_putc(dig);
 240              		.loc 1 512 0 is_stmt 1
 241 0067 4863C5   		movslq	%ebp, %rax
 242 006a 4899     		cqto
 243 006c 48F7FB   		idivq	%rbx
 244 006f 4889C1   		movq	%rax, %rcx
 245 0072 49BC6766 		movabsq	$7378697629483820647, %r12
 245      66666666 
 245      6666
 246 007c 49F7EC   		imulq	%r12
 247 007f 48C1FA02 		sarq	$2, %rdx
 248 0083 4889C8   		movq	%rcx, %rax
 249 0086 48C1F83F 		sarq	$63, %rax
 250 008a 4829C2   		subq	%rax, %rdx
 251 008d 488D1492 		leaq	(%rdx,%rdx,4), %rdx
 252 0091 488D0412 		leaq	(%rdx,%rdx), %rax
 253 0095 4829C1   		subq	%rax, %rcx
 254 0098 4889CA   		movq	%rcx, %rdx
 255 009b 83C230   		addl	$48, %edx
 256              	.LVL30:
 513:src/mcu_msg.c ****         div /= 10;
 257              		.loc 1 513 0
 258 009e 0FBEFA   		movsbl	%dl, %edi
 259 00a1 FF150000 		call	*__msg_putc(%rip)
 259      0000
 260              	.LVL31:
 514:src/mcu_msg.c ****     }
 261              		.loc 1 514 0
 262 00a7 4889D8   		movq	%rbx, %rax
GAS LISTING /tmp/ccXtVIbK.s 			page 15


 263 00aa 49F7EC   		imulq	%r12
 264 00ad 48C1FA02 		sarq	$2, %rdx
 265 00b1 48C1FB3F 		sarq	$63, %rbx
 266              	.LVL32:
 267 00b5 4829DA   		subq	%rbx, %rdx
 268 00b8 4889D3   		movq	%rdx, %rbx
 269              	.LVL33:
 270              	.L27:
 507:src/mcu_msg.c ****         if(sign == -1 ? (i > div) : (i < div)) {
 271              		.loc 1 507 0 discriminator 1
 272 00bb 4885DB   		testq	%rbx, %rbx
 273 00be 0F8469FF 		je	.L17
 273      FFFF
 508:src/mcu_msg.c ****             div /= 10;
 274              		.loc 1 508 0
 275 00c4 4180FDFF 		cmpb	$-1, %r13b
 276 00c8 7490     		je	.L35
 508:src/mcu_msg.c ****             div /= 10;
 277              		.loc 1 508 0 is_stmt 0 discriminator 2
 278 00ca 4863C5   		movslq	%ebp, %rax
 279 00cd 4839D8   		cmpq	%rbx, %rax
 280 00d0 0F9CC0   		setl	%al
 281 00d3 EB8E     		jmp	.L24
 282              	.L34:
 509:src/mcu_msg.c ****             continue;
 283              		.loc 1 509 0 is_stmt 1
 284 00d5 48BA6766 		movabsq	$7378697629483820647, %rdx
 284      66666666 
 284      6666
 285 00df 4889D8   		movq	%rbx, %rax
 286 00e2 48F7EA   		imulq	%rdx
 287 00e5 48C1FA02 		sarq	$2, %rdx
 288 00e9 48C1FB3F 		sarq	$63, %rbx
 289              	.LVL34:
 290 00ed 4829DA   		subq	%rbx, %rdx
 291 00f0 4889D3   		movq	%rdx, %rbx
 292              	.LVL35:
 510:src/mcu_msg.c ****         }
 293              		.loc 1 510 0
 294 00f3 EBC6     		jmp	.L27
 295              	.LVL36:
 296              	.L31:
 505:src/mcu_msg.c ****     }
 297              		.loc 1 505 0
 298 00f5 BB00CA9A 		movl	$1000000000, %ebx
 298      3B
 299 00fa EBBF     		jmp	.L27
 300              		.cfi_endproc
 301              	.LFE46:
 303              		.section	.text.__msg_print_float,"ax",@progbits
 305              	__msg_print_float:
 306              	.LFB47:
 518:src/mcu_msg.c **** 
 519:src/mcu_msg.c **** static void __msg_print_float(float f, uint8_t prec)
 520:src/mcu_msg.c **** {
 307              		.loc 1 520 0
 308              		.cfi_startproc
GAS LISTING /tmp/ccXtVIbK.s 			page 16


 309              	.LVL37:
 310 0000 4154     		pushq	%r12
 311              	.LCFI11:
 312              		.cfi_def_cfa_offset 16
 313              		.cfi_offset 12, -16
 314 0002 55       		pushq	%rbp
 315              	.LCFI12:
 316              		.cfi_def_cfa_offset 24
 317              		.cfi_offset 6, -24
 318 0003 53       		pushq	%rbx
 319              	.LCFI13:
 320              		.cfi_def_cfa_offset 32
 321              		.cfi_offset 3, -32
 322 0004 4883EC10 		subq	$16, %rsp
 323              	.LCFI14:
 324              		.cfi_def_cfa_offset 48
 325 0008 4189FC   		movl	%edi, %r12d
 521:src/mcu_msg.c ****     int i_part = f;
 326              		.loc 1 521 0
 327 000b F30F2CF8 		cvttss2si	%xmm0, %edi
 328              	.LVL38:
 522:src/mcu_msg.c ****     float f_part = f - i_part;
 329              		.loc 1 522 0
 330 000f 660FEFC9 		pxor	%xmm1, %xmm1
 331 0013 F30F2ACF 		cvtsi2ss	%edi, %xmm1
 332 0017 0F28D8   		movaps	%xmm0, %xmm3
 333 001a F30F5CD9 		subss	%xmm1, %xmm3
 334 001e F30F115C 		movss	%xmm3, 12(%rsp)
 334      240C
 335              	.LVL39:
 523:src/mcu_msg.c ****     long mul = f < 0.0 ? -10 : 10;
 336              		.loc 1 523 0
 337 0024 660FEFC9 		pxor	%xmm1, %xmm1
 338 0028 0F2EC8   		ucomiss	%xmm0, %xmm1
 339 002b 7742     		ja	.L49
 340 002d BB0A0000 		movl	$10, %ebx
 340      00
 341              	.L37:
 342              	.LVL40:
 524:src/mcu_msg.c ****     uint8_t j;
 525:src/mcu_msg.c ****     char dig;
 526:src/mcu_msg.c ****     if(!__msg_putc) //if function pointer is NULL, return
 343              		.loc 1 526 0 discriminator 4
 344 0032 488B0500 		movq	__msg_putc(%rip), %rax
 344      000000
 345 0039 4885C0   		testq	%rax, %rax
 346 003c 0F849900 		je	.L36
 346      0000
 527:src/mcu_msg.c ****         return;
 528:src/mcu_msg.c **** 
 529:src/mcu_msg.c ****     if(!i_part) {
 347              		.loc 1 529 0
 348 0042 85FF     		testl	%edi, %edi
 349 0044 7532     		jne	.L40
 530:src/mcu_msg.c ****         if(mul < 0) __msg_putc('-');
 350              		.loc 1 530 0
 351 0046 4885DB   		testq	%rbx, %rbx
GAS LISTING /tmp/ccXtVIbK.s 			page 17


 352 0049 7907     		jns	.L41
 353              		.loc 1 530 0 is_stmt 0 discriminator 1
 354 004b BF2D0000 		movl	$45, %edi
 354      00
 355              	.LVL41:
 356 0050 FFD0     		call	*%rax
 357              	.LVL42:
 358              	.L41:
 531:src/mcu_msg.c ****         __msg_putc('0');
 359              		.loc 1 531 0 is_stmt 1
 360 0052 BF300000 		movl	$48, %edi
 360      00
 361 0057 FF150000 		call	*__msg_putc(%rip)
 361      0000
 362              	.LVL43:
 363              	.L42:
 532:src/mcu_msg.c ****     } else {
 533:src/mcu_msg.c ****         __msg_print_int(i_part);  
 534:src/mcu_msg.c ****     }
 535:src/mcu_msg.c ****       
 536:src/mcu_msg.c ****     __msg_putc('.');
 364              		.loc 1 536 0
 365 005d BF2E0000 		movl	$46, %edi
 365      00
 366 0062 FF150000 		call	*__msg_putc(%rip)
 366      0000
 367              	.LVL44:
 537:src/mcu_msg.c ****     for(j = 0; j < prec; mul *= 10, j++) {
 368              		.loc 1 537 0
 369 0068 BD000000 		movl	$0, %ebp
 369      00
 370 006d EB67     		jmp	.L43
 371              	.LVL45:
 372              	.L49:
 523:src/mcu_msg.c ****     uint8_t j;
 373              		.loc 1 523 0
 374 006f 48C7C3F6 		movq	$-10, %rbx
 374      FFFFFF
 375 0076 EBBA     		jmp	.L37
 376              	.LVL46:
 377              	.L40:
 533:src/mcu_msg.c ****     }
 378              		.loc 1 533 0
 379 0078 E8000000 		call	__msg_print_int
 379      00
 380              	.LVL47:
 381 007d EBDE     		jmp	.L42
 382              	.LVL48:
 383              	.L44:
 538:src/mcu_msg.c ****         dig = '0' + ((long)(f_part * mul) % 10);
 384              		.loc 1 538 0 discriminator 3
 385 007f 660FEFC0 		pxor	%xmm0, %xmm0
 386 0083 F3480F2A 		cvtsi2ssq	%rbx, %xmm0
 386      C3
 387 0088 F30F5944 		mulss	12(%rsp), %xmm0
 387      240C
 388 008e F3480F2C 		cvttss2siq	%xmm0, %rcx
GAS LISTING /tmp/ccXtVIbK.s 			page 18


 388      C8
 389 0093 48BA6766 		movabsq	$7378697629483820647, %rdx
 389      66666666 
 389      6666
 390 009d 4889C8   		movq	%rcx, %rax
 391 00a0 48F7EA   		imulq	%rdx
 392 00a3 48C1FA02 		sarq	$2, %rdx
 393 00a7 4889C8   		movq	%rcx, %rax
 394 00aa 48C1F83F 		sarq	$63, %rax
 395 00ae 4829C2   		subq	%rax, %rdx
 396 00b1 488D1492 		leaq	(%rdx,%rdx,4), %rdx
 397 00b5 488D0412 		leaq	(%rdx,%rdx), %rax
 398 00b9 4829C1   		subq	%rax, %rcx
 399 00bc 4889CA   		movq	%rcx, %rdx
 400 00bf 83C230   		addl	$48, %edx
 401              	.LVL49:
 539:src/mcu_msg.c ****         __msg_putc(dig);
 402              		.loc 1 539 0 discriminator 3
 403 00c2 0FBEFA   		movsbl	%dl, %edi
 404 00c5 FF150000 		call	*__msg_putc(%rip)
 404      0000
 405              	.LVL50:
 537:src/mcu_msg.c ****         dig = '0' + ((long)(f_part * mul) % 10);
 406              		.loc 1 537 0 discriminator 3
 407 00cb 488D049B 		leaq	(%rbx,%rbx,4), %rax
 408 00cf 488D1C00 		leaq	(%rax,%rax), %rbx
 409              	.LVL51:
 410 00d3 83C501   		addl	$1, %ebp
 411              	.LVL52:
 412              	.L43:
 537:src/mcu_msg.c ****         dig = '0' + ((long)(f_part * mul) % 10);
 413              		.loc 1 537 0 is_stmt 0 discriminator 1
 414 00d6 4438E5   		cmpb	%r12b, %bpl
 415 00d9 72A4     		jb	.L44
 416              	.LVL53:
 417              	.L36:
 540:src/mcu_msg.c ****     }
 541:src/mcu_msg.c **** }
 418              		.loc 1 541 0 is_stmt 1
 419 00db 4883C410 		addq	$16, %rsp
 420              	.LCFI15:
 421              		.cfi_def_cfa_offset 32
 422 00df 5B       		popq	%rbx
 423              	.LCFI16:
 424              		.cfi_def_cfa_offset 24
 425              	.LVL54:
 426 00e0 5D       		popq	%rbp
 427              	.LCFI17:
 428              		.cfi_def_cfa_offset 16
 429 00e1 415C     		popq	%r12
 430              	.LCFI18:
 431              		.cfi_def_cfa_offset 8
 432              	.LVL55:
 433 00e3 C3       		ret
 434              		.cfi_endproc
 435              	.LFE47:
 437              		.section	.text.__msg_print_str,"ax",@progbits
GAS LISTING /tmp/ccXtVIbK.s 			page 19


 439              	__msg_print_str:
 440              	.LFB48:
 542:src/mcu_msg.c **** 
 543:src/mcu_msg.c **** static void __msg_print_str(msg_str_t str)
 544:src/mcu_msg.c **** {
 441              		.loc 1 544 0
 442              		.cfi_startproc
 443              	.LVL56:
 545:src/mcu_msg.c ****     msg_size_t i;
 546:src/mcu_msg.c ****     if(!__msg_putc) { //if function pointer is NULL, return
 444              		.loc 1 546 0
 445 0000 48833D00 		cmpq	$0, __msg_putc(%rip)
 445      00000000 
 446 0008 742C     		je	.L55
 544:src/mcu_msg.c ****     msg_size_t i;
 447              		.loc 1 544 0
 448 000a 4154     		pushq	%r12
 449              	.LCFI19:
 450              		.cfi_def_cfa_offset 16
 451              		.cfi_offset 12, -16
 452 000c 55       		pushq	%rbp
 453              	.LCFI20:
 454              		.cfi_def_cfa_offset 24
 455              		.cfi_offset 6, -24
 456 000d 53       		pushq	%rbx
 457              	.LCFI21:
 458              		.cfi_def_cfa_offset 32
 459              		.cfi_offset 3, -32
 460 000e 4989FC   		movq	%rdi, %r12
 461 0011 4889F5   		movq	%rsi, %rbp
 547:src/mcu_msg.c ****         return;
 548:src/mcu_msg.c ****     }
 549:src/mcu_msg.c ****     for(i = 0; i < str.len; __msg_putc(*(str.s + i)), i++);
 462              		.loc 1 549 0
 463 0014 BB000000 		movl	$0, %ebx
 463      00
 464 0019 EB11     		jmp	.L52
 465              	.LVL57:
 466              	.L53:
 467              		.loc 1 549 0 is_stmt 0 discriminator 3
 468 001b 0FB7C3   		movzwl	%bx, %eax
 469 001e 410FBE3C 		movsbl	(%r12,%rax), %edi
 469      04
 470 0023 FF150000 		call	*__msg_putc(%rip)
 470      0000
 471              	.LVL58:
 472 0029 83C301   		addl	$1, %ebx
 473              	.LVL59:
 474              	.L52:
 475              		.loc 1 549 0 discriminator 1
 476 002c 6639DD   		cmpw	%bx, %bp
 477 002f 77EA     		ja	.L53
 550:src/mcu_msg.c **** }
 478              		.loc 1 550 0 is_stmt 1
 479 0031 5B       		popq	%rbx
 480              	.LCFI22:
 481              		.cfi_def_cfa_offset 24
GAS LISTING /tmp/ccXtVIbK.s 			page 20


 482              	.LVL60:
 483 0032 5D       		popq	%rbp
 484              	.LCFI23:
 485              		.cfi_def_cfa_offset 16
 486 0033 415C     		popq	%r12
 487              	.LCFI24:
 488              		.cfi_def_cfa_offset 8
 489 0035 C3       		ret
 490              	.L55:
 491              		.cfi_restore 3
 492              		.cfi_restore 6
 493              		.cfi_restore 12
 494 0036 F3C3     		rep ret
 495              		.cfi_endproc
 496              	.LFE48:
 498              		.section	.text.__msg_wrapper_print_obj,"ax",@progbits
 500              	__msg_wrapper_print_obj:
 501              	.LFB52:
 551:src/mcu_msg.c **** 
 552:src/mcu_msg.c **** /**
 553:src/mcu_msg.c ****  * @brief Create string handler and set the basic functions
 554:src/mcu_msg.c ****  * 
 555:src/mcu_msg.c ****  * @param putc expected print function, set to NULL if you don't need the print feature
 556:src/mcu_msg.c ****  * @return msg_string_hnd_t handler
 557:src/mcu_msg.c ****  */
 558:src/mcu_msg.c **** msg_string_hnd_t msg_string_hnd_create(int (*putc)(char))
 559:src/mcu_msg.c **** {
 560:src/mcu_msg.c ****     msg_string_hnd_t hnd;
 561:src/mcu_msg.c ****     __msg_putc = putc;            // init putchar
 562:src/mcu_msg.c ****     hnd.copy_to_chr_arr = __msg_str_copy_to_chr_arr;
 563:src/mcu_msg.c ****     hnd.copy = __msg_str_copy;
 564:src/mcu_msg.c ****     hnd.print = __msg_print_str;
 565:src/mcu_msg.c ****     return hnd;
 566:src/mcu_msg.c **** }
 567:src/mcu_msg.c **** 
 568:src/mcu_msg.c **** static inline char __define_qmark(msg_str_t str)
 569:src/mcu_msg.c **** {
 570:src/mcu_msg.c ****     char *p = str.s;
 571:src/mcu_msg.c ****     while(__is_p_in_str(str, p) && *p) {
 572:src/mcu_msg.c ****         switch(*p) {
 573:src/mcu_msg.c ****             case '"' :  return '\'';
 574:src/mcu_msg.c ****             case '\'' : return '"';
 575:src/mcu_msg.c ****             default: break;
 576:src/mcu_msg.c ****         }
 577:src/mcu_msg.c ****         p++;
 578:src/mcu_msg.c ****     }
 579:src/mcu_msg.c ****     return '"'; // default
 580:src/mcu_msg.c **** }
 581:src/mcu_msg.c **** 
 582:src/mcu_msg.c **** /////////////////////////////////////////////////////////////////////////////////////////////
 583:src/mcu_msg.c **** //                                     Wrapper functions                                   //
 584:src/mcu_msg.c **** /////////////////////////////////////////////////////////////////////////////////////////////
 585:src/mcu_msg.c **** #if MCU_MSG_USE_WRAPPER
 586:src/mcu_msg.c **** 
 587:src/mcu_msg.c **** msg_wrap_hnd_t msg_wrapper_hnd_create(int (*putc)(char))
 588:src/mcu_msg.c **** {
 589:src/mcu_msg.c ****     msg_wrap_hnd_t hnd;
GAS LISTING /tmp/ccXtVIbK.s 			page 21


 590:src/mcu_msg.c ****     __msg_putc = putc; // init putchar
 591:src/mcu_msg.c ****     hnd.print = __msg_wrapper_print_msg;
 592:src/mcu_msg.c ****     hnd.print_to_buff = __msg_wrapper_print_msg_to_buff;
 593:src/mcu_msg.c ****     hnd.print_obj = __msg_wrapper_print_obj;
 594:src/mcu_msg.c ****     hnd.print_cmd = __msg_wrapper_print_cmd;
 595:src/mcu_msg.c ****     return hnd;
 596:src/mcu_msg.c **** }
 597:src/mcu_msg.c **** 
 598:src/mcu_msg.c **** #define __print_key_equ(key_str)        __msg_putc(__CTRL_KEY_FLAG); \
 599:src/mcu_msg.c ****                                         __msg_print_str(key_str);   \
 600:src/mcu_msg.c ****                                         __msg_putc(__CTRL_KEY_EQU)
 601:src/mcu_msg.c **** 
 602:src/mcu_msg.c **** 
 603:src/mcu_msg.c **** static inline void __msg_wrapper_print_obj(msg_wrap_obj_t obj)
 604:src/mcu_msg.c **** {
 502              		.loc 1 604 0
 503              		.cfi_startproc
 504 0000 4154     		pushq	%r12
 505              	.LCFI25:
 506              		.cfi_def_cfa_offset 16
 507              		.cfi_offset 12, -16
 508 0002 55       		pushq	%rbp
 509              	.LCFI26:
 510              		.cfi_def_cfa_offset 24
 511              		.cfi_offset 6, -24
 512 0003 53       		pushq	%rbx
 513              	.LCFI27:
 514              		.cfi_def_cfa_offset 32
 515              		.cfi_offset 3, -32
 605:src/mcu_msg.c ****     msg_wrap_str_t *sp;
 606:src/mcu_msg.c ****     msg_wrap_int_t *ip;
 607:src/mcu_msg.c ****     msg_wrap_float_t *fp;
 608:src/mcu_msg.c ****     
 609:src/mcu_msg.c ****     __msg_putc(__CTRL_OBJ_FLAG);
 516              		.loc 1 609 0
 517 0004 BF400000 		movl	$64, %edi
 517      00
 518 0009 FF150000 		call	*__msg_putc(%rip)
 518      0000
 519              	.LVL61:
 610:src/mcu_msg.c ****     __msg_print_str(obj.id);
 520              		.loc 1 610 0
 521 000f 488B7C24 		movq	32(%rsp), %rdi
 521      20
 522 0014 488B7424 		movq	40(%rsp), %rsi
 522      28
 523 0019 E8000000 		call	__msg_print_str
 523      00
 524              	.LVL62:
 611:src/mcu_msg.c ****     __msg_putc(__CTRL_START_OBJ);
 525              		.loc 1 611 0
 526 001e BF280000 		movl	$40, %edi
 526      00
 527 0023 FF150000 		call	*__msg_putc(%rip)
 527      0000
 528              	.LVL63:
 612:src/mcu_msg.c ****     char qmark;
GAS LISTING /tmp/ccXtVIbK.s 			page 22


 613:src/mcu_msg.c **** 
 614:src/mcu_msg.c ****     // print integers
 615:src/mcu_msg.c ****     for(ip = obj.int_queue; ip != NULL; ip = ip->next) {
 529              		.loc 1 615 0
 530 0029 4C8B6424 		movq	48(%rsp), %r12
 530      30
 531              	.LVL64:
 532 002e 4C89E3   		movq	%r12, %rbx
 533 0031 EB04     		jmp	.L59
 534              	.LVL65:
 535              	.L60:
 536              		.loc 1 615 0 is_stmt 0 discriminator 2
 537 0033 488B5B18 		movq	24(%rbx), %rbx
 538              	.LVL66:
 539              	.L59:
 540              		.loc 1 615 0 discriminator 1
 541 0037 4885DB   		testq	%rbx, %rbx
 542 003a 743E     		je	.L79
 616:src/mcu_msg.c ****         __print_key_equ(ip->id);
 543              		.loc 1 616 0 is_stmt 1
 544 003c BF240000 		movl	$36, %edi
 544      00
 545 0041 FF150000 		call	*__msg_putc(%rip)
 545      0000
 546              	.LVL67:
 547 0047 488B3B   		movq	(%rbx), %rdi
 548 004a 488B7308 		movq	8(%rbx), %rsi
 549 004e E8000000 		call	__msg_print_str
 549      00
 550              	.LVL68:
 551 0053 BF3D0000 		movl	$61, %edi
 551      00
 552 0058 FF150000 		call	*__msg_putc(%rip)
 552      0000
 553              	.LVL69:
 617:src/mcu_msg.c ****         __msg_print_int(ip->val);
 554              		.loc 1 617 0
 555 005e 8B7B10   		movl	16(%rbx), %edi
 556 0061 E8000000 		call	__msg_print_int
 556      00
 557              	.LVL70:
 618:src/mcu_msg.c ****         if(ip->next != NULL) __msg_putc(__CTRL_KEY_SEP);
 558              		.loc 1 618 0
 559 0066 48837B18 		cmpq	$0, 24(%rbx)
 559      00
 560 006b 74C6     		je	.L60
 561              		.loc 1 618 0 is_stmt 0 discriminator 1
 562 006d BF3B0000 		movl	$59, %edi
 562      00
 563 0072 FF150000 		call	*__msg_putc(%rip)
 563      0000
 564              	.LVL71:
 565 0078 EBB9     		jmp	.L60
 566              	.L79:
 619:src/mcu_msg.c ****     }
 620:src/mcu_msg.c **** 
 621:src/mcu_msg.c ****     // print floats
GAS LISTING /tmp/ccXtVIbK.s 			page 23


 622:src/mcu_msg.c ****     if(obj.float_queue != NULL && obj.int_queue != NULL) __msg_putc(__CTRL_KEY_SEP);
 567              		.loc 1 622 0 is_stmt 1
 568 007a 488B6C24 		movq	56(%rsp), %rbp
 568      38
 569 007f 4885ED   		testq	%rbp, %rbp
 570 0082 7410     		je	.L62
 571              		.loc 1 622 0 is_stmt 0 discriminator 1
 572 0084 4D85E4   		testq	%r12, %r12
 573 0087 740B     		je	.L62
 574              		.loc 1 622 0 discriminator 2
 575 0089 BF3B0000 		movl	$59, %edi
 575      00
 576 008e FF150000 		call	*__msg_putc(%rip)
 576      0000
 577              	.LVL72:
 578              	.L62:
 615:src/mcu_msg.c ****         __print_key_equ(ip->id);
 579              		.loc 1 615 0 is_stmt 1 discriminator 1
 580 0094 4889EB   		movq	%rbp, %rbx
 581              	.LVL73:
 582 0097 EB04     		jmp	.L63
 583              	.LVL74:
 584              	.L64:
 623:src/mcu_msg.c ****     for(fp = obj.float_queue; fp != NULL; fp = fp->next) {
 585              		.loc 1 623 0 discriminator 2
 586 0099 488B5B18 		movq	24(%rbx), %rbx
 587              	.LVL75:
 588              	.L63:
 589              		.loc 1 623 0 is_stmt 0 discriminator 1
 590 009d 4885DB   		testq	%rbx, %rbx
 591 00a0 7444     		je	.L80
 624:src/mcu_msg.c ****         __print_key_equ(fp->id);
 592              		.loc 1 624 0 is_stmt 1
 593 00a2 BF240000 		movl	$36, %edi
 593      00
 594 00a7 FF150000 		call	*__msg_putc(%rip)
 594      0000
 595              	.LVL76:
 596 00ad 488B3B   		movq	(%rbx), %rdi
 597 00b0 488B7308 		movq	8(%rbx), %rsi
 598 00b4 E8000000 		call	__msg_print_str
 598      00
 599              	.LVL77:
 600 00b9 BF3D0000 		movl	$61, %edi
 600      00
 601 00be FF150000 		call	*__msg_putc(%rip)
 601      0000
 602              	.LVL78:
 625:src/mcu_msg.c ****         __msg_print_float(fp->val, fp->prec);
 603              		.loc 1 625 0
 604 00c4 0FB67B14 		movzbl	20(%rbx), %edi
 605 00c8 F30F1043 		movss	16(%rbx), %xmm0
 605      10
 606 00cd E8000000 		call	__msg_print_float
 606      00
 607              	.LVL79:
 626:src/mcu_msg.c ****         if(fp->next != NULL) __msg_putc(__CTRL_KEY_SEP);
GAS LISTING /tmp/ccXtVIbK.s 			page 24


 608              		.loc 1 626 0
 609 00d2 48837B18 		cmpq	$0, 24(%rbx)
 609      00
 610 00d7 74C0     		je	.L64
 611              		.loc 1 626 0 is_stmt 0 discriminator 1
 612 00d9 BF3B0000 		movl	$59, %edi
 612      00
 613 00de FF150000 		call	*__msg_putc(%rip)
 613      0000
 614              	.LVL80:
 615 00e4 EBB3     		jmp	.L64
 616              	.L80:
 627:src/mcu_msg.c ****     }
 628:src/mcu_msg.c **** 
 629:src/mcu_msg.c ****     // print strings
 630:src/mcu_msg.c ****     if(obj.string_queue != NULL && obj.float_queue != NULL) __msg_putc(__CTRL_KEY_SEP);
 617              		.loc 1 630 0 is_stmt 1
 618 00e6 488B5C24 		movq	64(%rsp), %rbx
 618      40
 619              	.LVL81:
 620 00eb 4885DB   		testq	%rbx, %rbx
 621 00ee 744E     		je	.L67
 622              		.loc 1 630 0 is_stmt 0 discriminator 1
 623 00f0 4885ED   		testq	%rbp, %rbp
 624 00f3 7449     		je	.L67
 625              		.loc 1 630 0 discriminator 2
 626 00f5 BF3B0000 		movl	$59, %edi
 626      00
 627 00fa FF150000 		call	*__msg_putc(%rip)
 627      0000
 628              	.LVL82:
 629 0100 EB3C     		jmp	.L67
 630              	.LVL83:
 631              	.L70:
 632              	.LBB58:
 633              	.LBB59:
 573:src/mcu_msg.c ****             case '\'' : return '"';
 634              		.loc 1 573 0 is_stmt 1
 635 0102 BD270000 		movl	$39, %ebp
 635      00
 636              	.L71:
 637              	.LVL84:
 638              	.LBE59:
 639              	.LBE58:
 631:src/mcu_msg.c ****     for(sp = obj.string_queue; sp != NULL; sp = sp->next) {
 632:src/mcu_msg.c ****         __print_key_equ(sp->id);
 633:src/mcu_msg.c ****         qmark = __define_qmark(sp->content);
 634:src/mcu_msg.c ****         __msg_putc(qmark);
 640              		.loc 1 634 0
 641 0107 400FBEED 		movsbl	%bpl, %ebp
 642 010b 89EF     		movl	%ebp, %edi
 643 010d FF150000 		call	*__msg_putc(%rip)
 643      0000
 644              	.LVL85:
 635:src/mcu_msg.c ****         __msg_print_str(sp->content);
 645              		.loc 1 635 0
 646 0113 488B7B10 		movq	16(%rbx), %rdi
GAS LISTING /tmp/ccXtVIbK.s 			page 25


 647 0117 488B7318 		movq	24(%rbx), %rsi
 648 011b E8000000 		call	__msg_print_str
 648      00
 649              	.LVL86:
 636:src/mcu_msg.c ****         __msg_putc(qmark);
 650              		.loc 1 636 0
 651 0120 89EF     		movl	%ebp, %edi
 652 0122 FF150000 		call	*__msg_putc(%rip)
 652      0000
 653              	.LVL87:
 637:src/mcu_msg.c ****         if(sp->next != NULL) __msg_putc(__CTRL_KEY_SEP);
 654              		.loc 1 637 0
 655 0128 48837B20 		cmpq	$0, 32(%rbx)
 655      00
 656 012d 740B     		je	.L73
 657              		.loc 1 637 0 is_stmt 0 discriminator 1
 658 012f BF3B0000 		movl	$59, %edi
 658      00
 659 0134 FF150000 		call	*__msg_putc(%rip)
 659      0000
 660              	.LVL88:
 661              	.L73:
 631:src/mcu_msg.c ****         __print_key_equ(sp->id);
 662              		.loc 1 631 0 is_stmt 1 discriminator 2
 663 013a 488B5B20 		movq	32(%rbx), %rbx
 664              	.LVL89:
 665              	.L67:
 631:src/mcu_msg.c ****         __print_key_equ(sp->id);
 666              		.loc 1 631 0 is_stmt 0 discriminator 1
 667 013e 4885DB   		testq	%rbx, %rbx
 668 0141 7472     		je	.L81
 632:src/mcu_msg.c ****         qmark = __define_qmark(sp->content);
 669              		.loc 1 632 0 is_stmt 1
 670 0143 BF240000 		movl	$36, %edi
 670      00
 671 0148 FF150000 		call	*__msg_putc(%rip)
 671      0000
 672              	.LVL90:
 673 014e 488B3B   		movq	(%rbx), %rdi
 674 0151 488B7308 		movq	8(%rbx), %rsi
 675 0155 E8000000 		call	__msg_print_str
 675      00
 676              	.LVL91:
 677 015a BF3D0000 		movl	$61, %edi
 677      00
 678 015f FF150000 		call	*__msg_putc(%rip)
 678      0000
 679              	.LVL92:
 680 0165 488B4B10 		movq	16(%rbx), %rcx
 681 0169 488B7B18 		movq	24(%rbx), %rdi
 682              	.LBB63:
 683              	.LBB62:
 570:src/mcu_msg.c ****     while(__is_p_in_str(str, p) && *p) {
 684              		.loc 1 570 0
 685 016d 4889CA   		movq	%rcx, %rdx
 686              	.LVL93:
 687              	.L68:
GAS LISTING /tmp/ccXtVIbK.s 			page 26


 688              	.LBB60:
 689              	.LBB61:
 169:src/mcu_msg.c **** }
 690              		.loc 1 169 0
 691 0170 4889D6   		movq	%rdx, %rsi
 692 0173 4829CE   		subq	%rcx, %rsi
 693 0176 0FB7C7   		movzwl	%di, %eax
 694              	.LVL94:
 695              	.LBE61:
 696              	.LBE60:
 571:src/mcu_msg.c ****         switch(*p) {
 697              		.loc 1 571 0
 698 0179 4839C6   		cmpq	%rax, %rsi
 699 017c 7D2D     		jge	.L76
 700 017e 0FB602   		movzbl	(%rdx), %eax
 701 0181 84C0     		testb	%al, %al
 702 0183 7412     		je	.L82
 572:src/mcu_msg.c ****             case '"' :  return '\'';
 703              		.loc 1 572 0
 704 0185 3C22     		cmpb	$34, %al
 705 0187 0F8475FF 		je	.L70
 705      FFFF
 706 018d 3C27     		cmpb	$39, %al
 707 018f 7410     		je	.L75
 577:src/mcu_msg.c ****     }
 708              		.loc 1 577 0
 709 0191 4883C201 		addq	$1, %rdx
 710              	.LVL95:
 711 0195 EBD9     		jmp	.L68
 712              	.L82:
 579:src/mcu_msg.c **** }
 713              		.loc 1 579 0
 714 0197 BD220000 		movl	$34, %ebp
 714      00
 715 019c E966FFFF 		jmp	.L71
 715      FF
 716              	.L75:
 574:src/mcu_msg.c ****             default: break;
 717              		.loc 1 574 0
 718 01a1 BD220000 		movl	$34, %ebp
 718      00
 719 01a6 E95CFFFF 		jmp	.L71
 719      FF
 720              	.L76:
 579:src/mcu_msg.c **** }
 721              		.loc 1 579 0
 722 01ab BD220000 		movl	$34, %ebp
 722      00
 723 01b0 E952FFFF 		jmp	.L71
 723      FF
 724              	.LVL96:
 725              	.L81:
 726              	.LBE62:
 727              	.LBE63:
 638:src/mcu_msg.c ****     }
 639:src/mcu_msg.c **** 
 640:src/mcu_msg.c ****     __msg_putc(__CTRL_STOP_OBJ);
GAS LISTING /tmp/ccXtVIbK.s 			page 27


 728              		.loc 1 640 0
 729 01b5 BF290000 		movl	$41, %edi
 729      00
 730 01ba FF150000 		call	*__msg_putc(%rip)
 730      0000
 731              	.LVL97:
 641:src/mcu_msg.c **** }
 732              		.loc 1 641 0
 733 01c0 5B       		popq	%rbx
 734              	.LCFI28:
 735              		.cfi_def_cfa_offset 24
 736              	.LVL98:
 737 01c1 5D       		popq	%rbp
 738              	.LCFI29:
 739              		.cfi_def_cfa_offset 16
 740 01c2 415C     		popq	%r12
 741              	.LCFI30:
 742              		.cfi_def_cfa_offset 8
 743 01c4 C3       		ret
 744              		.cfi_endproc
 745              	.LFE52:
 747              		.section	.text.__msg_wrapper_print_cmd,"ax",@progbits
 749              	__msg_wrapper_print_cmd:
 750              	.LFB53:
 642:src/mcu_msg.c **** 
 643:src/mcu_msg.c **** static inline void __msg_wrapper_print_cmd(msg_wrap_cmd_t cmd)
 644:src/mcu_msg.c **** {
 751              		.loc 1 644 0
 752              		.cfi_startproc
 753 0000 4883EC08 		subq	$8, %rsp
 754              	.LCFI31:
 755              		.cfi_def_cfa_offset 16
 645:src/mcu_msg.c ****     if(cmd.cmd.s != NULL) {
 756              		.loc 1 645 0
 757 0004 48837C24 		cmpq	$0, 16(%rsp)
 757      1000
 758 000a 7425     		je	.L83
 646:src/mcu_msg.c ****         __msg_putc(__CTRL_CMD_START_FLAG);
 759              		.loc 1 646 0
 760 000c BF3C0000 		movl	$60, %edi
 760      00
 761 0011 FF150000 		call	*__msg_putc(%rip)
 761      0000
 762              	.LVL99:
 647:src/mcu_msg.c ****         __msg_print_str(cmd.cmd);
 763              		.loc 1 647 0
 764 0017 488B7C24 		movq	16(%rsp), %rdi
 764      10
 765 001c 488B7424 		movq	24(%rsp), %rsi
 765      18
 766 0021 E8000000 		call	__msg_print_str
 766      00
 767              	.LVL100:
 648:src/mcu_msg.c ****         __msg_putc(__CTRL_CMD_STOP_FLAG);
 768              		.loc 1 648 0
 769 0026 BF3E0000 		movl	$62, %edi
 769      00
GAS LISTING /tmp/ccXtVIbK.s 			page 28


 770 002b FF150000 		call	*__msg_putc(%rip)
 770      0000
 771              	.LVL101:
 772              	.L83:
 649:src/mcu_msg.c ****     }
 650:src/mcu_msg.c **** }
 773              		.loc 1 650 0
 774 0031 4883C408 		addq	$8, %rsp
 775              	.LCFI32:
 776              		.cfi_def_cfa_offset 8
 777 0035 C3       		ret
 778              		.cfi_endproc
 779              	.LFE53:
 781              		.section	.text.__msg_wrapper_print_msg_to_buff,"ax",@progbits
 783              	__msg_wrapper_print_msg_to_buff:
 784              	.LFB55:
 651:src/mcu_msg.c **** 
 652:src/mcu_msg.c **** 
 653:src/mcu_msg.c **** static void __msg_wrapper_print_msg(msg_wrap_t msg)
 654:src/mcu_msg.c **** {
 655:src/mcu_msg.c ****     msg_wrap_obj_t *pobj;
 656:src/mcu_msg.c ****     msg_wrap_cmd_t *pcmd;
 657:src/mcu_msg.c **** 
 658:src/mcu_msg.c ****     if(!__msg_putc || msg.id.s == NULL) // return if putchar not implemented
 659:src/mcu_msg.c ****         return;
 660:src/mcu_msg.c ****     __msg_putc(__CTRL_MSG_FLAG);
 661:src/mcu_msg.c ****     __msg_print_str(msg.id);
 662:src/mcu_msg.c ****     __msg_putc(__CTRL_START_MSG);
 663:src/mcu_msg.c ****     
 664:src/mcu_msg.c ****     pcmd = msg.cmd_queue;
 665:src/mcu_msg.c ****     while(pcmd != NULL) {
 666:src/mcu_msg.c ****         __msg_wrapper_print_cmd(*pcmd);
 667:src/mcu_msg.c ****         pcmd = pcmd->next;   
 668:src/mcu_msg.c ****     }
 669:src/mcu_msg.c ****     pobj = msg.obj_queue;
 670:src/mcu_msg.c ****     while(pobj != NULL) {
 671:src/mcu_msg.c ****         __msg_wrapper_print_obj(*pobj);
 672:src/mcu_msg.c ****         pobj = pobj->next;   
 673:src/mcu_msg.c ****     }
 674:src/mcu_msg.c ****     __msg_putc(__CTRL_STOP_MSG);
 675:src/mcu_msg.c **** }
 676:src/mcu_msg.c **** 
 677:src/mcu_msg.c **** 
 678:src/mcu_msg.c **** static char* __msg_wrapper_print_msg_to_buff(msg_wrap_t msg, char *buff, msg_size_t buf_size)
 679:src/mcu_msg.c **** {
 785              		.loc 1 679 0
 786              		.cfi_startproc
 787              	.LVL102:
 680:src/mcu_msg.c ****     return NULL;
 681:src/mcu_msg.c **** }
 788              		.loc 1 681 0
 789 0000 B8000000 		movl	$0, %eax
 789      00
 790 0005 C3       		ret
 791              		.cfi_endproc
 792              	.LFE55:
 794              		.section	.text.__msg_wrapper_print_msg,"ax",@progbits
GAS LISTING /tmp/ccXtVIbK.s 			page 29


 796              	__msg_wrapper_print_msg:
 797              	.LFB54:
 654:src/mcu_msg.c ****     msg_wrap_obj_t *pobj;
 798              		.loc 1 654 0
 799              		.cfi_startproc
 658:src/mcu_msg.c ****         return;
 800              		.loc 1 658 0
 801 0000 488B0500 		movq	__msg_putc(%rip), %rax
 801      000000
 802 0007 4885C0   		testq	%rax, %rax
 803 000a 0F84C102 		je	.L114
 803      0000
 654:src/mcu_msg.c ****     msg_wrap_obj_t *pobj;
 804              		.loc 1 654 0 discriminator 1
 805 0010 4155     		pushq	%r13
 806              	.LCFI33:
 807              		.cfi_def_cfa_offset 16
 808              		.cfi_offset 13, -16
 809 0012 4154     		pushq	%r12
 810              	.LCFI34:
 811              		.cfi_def_cfa_offset 24
 812              		.cfi_offset 12, -24
 813 0014 55       		pushq	%rbp
 814              	.LCFI35:
 815              		.cfi_def_cfa_offset 32
 816              		.cfi_offset 6, -32
 817 0015 53       		pushq	%rbx
 818              	.LCFI36:
 819              		.cfi_def_cfa_offset 40
 820              		.cfi_offset 3, -40
 821 0016 4883EC58 		subq	$88, %rsp
 822              	.LCFI37:
 823              		.cfi_def_cfa_offset 128
 658:src/mcu_msg.c ****         return;
 824              		.loc 1 658 0 discriminator 1
 825 001a 4883BC24 		cmpq	$0, 128(%rsp)
 825      80000000 
 825      00
 826 0023 0F849D02 		je	.L87
 826      0000
 660:src/mcu_msg.c ****     __msg_print_str(msg.id);
 827              		.loc 1 660 0
 828 0029 BF230000 		movl	$35, %edi
 828      00
 829 002e FFD0     		call	*%rax
 830              	.LVL103:
 661:src/mcu_msg.c ****     __msg_putc(__CTRL_START_MSG);
 831              		.loc 1 661 0
 832 0030 488BBC24 		movq	128(%rsp), %rdi
 832      80000000 
 833 0038 488BB424 		movq	136(%rsp), %rsi
 833      88000000 
 834 0040 E8000000 		call	__msg_print_str
 834      00
 835              	.LVL104:
 662:src/mcu_msg.c ****     
 836              		.loc 1 662 0
GAS LISTING /tmp/ccXtVIbK.s 			page 30


 837 0045 BF7B0000 		movl	$123, %edi
 837      00
 838 004a FF150000 		call	*__msg_putc(%rip)
 838      0000
 839              	.LVL105:
 664:src/mcu_msg.c ****     while(pcmd != NULL) {
 840              		.loc 1 664 0
 841 0050 488B9C24 		movq	152(%rsp), %rbx
 841      98000000 
 842              	.LVL106:
 665:src/mcu_msg.c ****         __msg_wrapper_print_cmd(*pcmd);
 843              		.loc 1 665 0
 844 0058 EB04     		jmp	.L89
 845              	.L90:
 667:src/mcu_msg.c ****     }
 846              		.loc 1 667 0
 847 005a 488B5B10 		movq	16(%rbx), %rbx
 848              	.LVL107:
 849              	.L89:
 665:src/mcu_msg.c ****         __msg_wrapper_print_cmd(*pcmd);
 850              		.loc 1 665 0
 851 005e 4885DB   		testq	%rbx, %rbx
 852 0061 7447     		je	.L117
 853 0063 488B03   		movq	(%rbx), %rax
 854 0066 488B4B08 		movq	8(%rbx), %rcx
 855 006a 4889C2   		movq	%rax, %rdx
 856 006d 48890424 		movq	%rax, (%rsp)
 857 0071 48894C24 		movq	%rcx, 8(%rsp)
 857      08
 858 0076 488B4310 		movq	16(%rbx), %rax
 859 007a 48894424 		movq	%rax, 16(%rsp)
 859      10
 860              	.LBB72:
 861              	.LBB73:
 645:src/mcu_msg.c ****         __msg_putc(__CTRL_CMD_START_FLAG);
 862              		.loc 1 645 0
 863 007f 4885D2   		testq	%rdx, %rdx
 864 0082 74D6     		je	.L90
 646:src/mcu_msg.c ****         __msg_print_str(cmd.cmd);
 865              		.loc 1 646 0
 866 0084 BF3C0000 		movl	$60, %edi
 866      00
 867 0089 FF150000 		call	*__msg_putc(%rip)
 867      0000
 868              	.LVL108:
 647:src/mcu_msg.c ****         __msg_putc(__CTRL_CMD_STOP_FLAG);
 869              		.loc 1 647 0
 870 008f 488B3C24 		movq	(%rsp), %rdi
 871 0093 488B7424 		movq	8(%rsp), %rsi
 871      08
 872 0098 E8000000 		call	__msg_print_str
 872      00
 873              	.LVL109:
 648:src/mcu_msg.c ****     }
 874              		.loc 1 648 0
 875 009d BF3E0000 		movl	$62, %edi
 875      00
GAS LISTING /tmp/ccXtVIbK.s 			page 31


 876 00a2 FF150000 		call	*__msg_putc(%rip)
 876      0000
 877              	.LVL110:
 878 00a8 EBB0     		jmp	.L90
 879              	.L117:
 880              	.LBE73:
 881              	.LBE72:
 669:src/mcu_msg.c ****     while(pobj != NULL) {
 882              		.loc 1 669 0
 883 00aa 4C8BA424 		movq	144(%rsp), %r12
 883      90000000 
 884              	.LVL111:
 670:src/mcu_msg.c ****         __msg_wrapper_print_obj(*pobj);
 885              		.loc 1 670 0
 886 00b2 E9920100 		jmp	.L92
 886      00
 887              	.LVL112:
 888              	.L94:
 889              	.LBB74:
 890              	.LBB75:
 615:src/mcu_msg.c ****         __print_key_equ(ip->id);
 891              		.loc 1 615 0
 892 00b7 488B5B18 		movq	24(%rbx), %rbx
 893              	.LVL113:
 894              	.L93:
 895 00bb 4885DB   		testq	%rbx, %rbx
 896 00be 743E     		je	.L118
 616:src/mcu_msg.c ****         __msg_print_int(ip->val);
 897              		.loc 1 616 0
 898 00c0 BF240000 		movl	$36, %edi
 898      00
 899 00c5 FF150000 		call	*__msg_putc(%rip)
 899      0000
 900              	.LVL114:
 901 00cb 488B3B   		movq	(%rbx), %rdi
 902 00ce 488B7308 		movq	8(%rbx), %rsi
 903 00d2 E8000000 		call	__msg_print_str
 903      00
 904              	.LVL115:
 905 00d7 BF3D0000 		movl	$61, %edi
 905      00
 906 00dc FF150000 		call	*__msg_putc(%rip)
 906      0000
 907              	.LVL116:
 617:src/mcu_msg.c ****         if(ip->next != NULL) __msg_putc(__CTRL_KEY_SEP);
 908              		.loc 1 617 0
 909 00e2 8B7B10   		movl	16(%rbx), %edi
 910 00e5 E8000000 		call	__msg_print_int
 910      00
 911              	.LVL117:
 618:src/mcu_msg.c ****     }
 912              		.loc 1 618 0
 913 00ea 48837B18 		cmpq	$0, 24(%rbx)
 913      00
 914 00ef 74C6     		je	.L94
 915 00f1 BF3B0000 		movl	$59, %edi
 915      00
GAS LISTING /tmp/ccXtVIbK.s 			page 32


 916 00f6 FF150000 		call	*__msg_putc(%rip)
 916      0000
 917              	.LVL118:
 918 00fc EBB9     		jmp	.L94
 919              	.L118:
 622:src/mcu_msg.c ****     for(fp = obj.float_queue; fp != NULL; fp = fp->next) {
 920              		.loc 1 622 0
 921 00fe 488B6C24 		movq	56(%rsp), %rbp
 921      38
 922 0103 4885ED   		testq	%rbp, %rbp
 923 0106 7410     		je	.L96
 924 0108 4D85ED   		testq	%r13, %r13
 925 010b 740B     		je	.L96
 926 010d BF3B0000 		movl	$59, %edi
 926      00
 927 0112 FF150000 		call	*__msg_putc(%rip)
 927      0000
 928              	.LVL119:
 929              	.L96:
 615:src/mcu_msg.c ****         __print_key_equ(ip->id);
 930              		.loc 1 615 0
 931 0118 4889EB   		movq	%rbp, %rbx
 932              	.LVL120:
 933 011b EB04     		jmp	.L97
 934              	.LVL121:
 935              	.L98:
 623:src/mcu_msg.c ****         __print_key_equ(fp->id);
 936              		.loc 1 623 0
 937 011d 488B5B18 		movq	24(%rbx), %rbx
 938              	.LVL122:
 939              	.L97:
 940 0121 4885DB   		testq	%rbx, %rbx
 941 0124 7444     		je	.L119
 624:src/mcu_msg.c ****         __msg_print_float(fp->val, fp->prec);
 942              		.loc 1 624 0
 943 0126 BF240000 		movl	$36, %edi
 943      00
 944 012b FF150000 		call	*__msg_putc(%rip)
 944      0000
 945              	.LVL123:
 946 0131 488B3B   		movq	(%rbx), %rdi
 947 0134 488B7308 		movq	8(%rbx), %rsi
 948 0138 E8000000 		call	__msg_print_str
 948      00
 949              	.LVL124:
 950 013d BF3D0000 		movl	$61, %edi
 950      00
 951 0142 FF150000 		call	*__msg_putc(%rip)
 951      0000
 952              	.LVL125:
 625:src/mcu_msg.c ****         if(fp->next != NULL) __msg_putc(__CTRL_KEY_SEP);
 953              		.loc 1 625 0
 954 0148 0FB67B14 		movzbl	20(%rbx), %edi
 955 014c F30F1043 		movss	16(%rbx), %xmm0
 955      10
 956 0151 E8000000 		call	__msg_print_float
 956      00
GAS LISTING /tmp/ccXtVIbK.s 			page 33


 957              	.LVL126:
 626:src/mcu_msg.c ****     }
 958              		.loc 1 626 0
 959 0156 48837B18 		cmpq	$0, 24(%rbx)
 959      00
 960 015b 74C0     		je	.L98
 961 015d BF3B0000 		movl	$59, %edi
 961      00
 962 0162 FF150000 		call	*__msg_putc(%rip)
 962      0000
 963              	.LVL127:
 964 0168 EBB3     		jmp	.L98
 965              	.L119:
 630:src/mcu_msg.c ****     for(sp = obj.string_queue; sp != NULL; sp = sp->next) {
 966              		.loc 1 630 0
 967 016a 488B5C24 		movq	64(%rsp), %rbx
 967      40
 968              	.LVL128:
 969 016f 4885DB   		testq	%rbx, %rbx
 970 0172 744E     		je	.L101
 971 0174 4885ED   		testq	%rbp, %rbp
 972 0177 7449     		je	.L101
 973 0179 BF3B0000 		movl	$59, %edi
 973      00
 974 017e FF150000 		call	*__msg_putc(%rip)
 974      0000
 975              	.LVL129:
 976 0184 EB3C     		jmp	.L101
 977              	.LVL130:
 978              	.L104:
 979              	.LBB76:
 980              	.LBB77:
 573:src/mcu_msg.c ****             case '\'' : return '"';
 981              		.loc 1 573 0
 982 0186 BD270000 		movl	$39, %ebp
 982      00
 983              	.L105:
 984              	.LVL131:
 985              	.LBE77:
 986              	.LBE76:
 634:src/mcu_msg.c ****         __msg_print_str(sp->content);
 987              		.loc 1 634 0
 988 018b 400FBEED 		movsbl	%bpl, %ebp
 989 018f 89EF     		movl	%ebp, %edi
 990 0191 FF150000 		call	*__msg_putc(%rip)
 990      0000
 991              	.LVL132:
 635:src/mcu_msg.c ****         __msg_putc(qmark);
 992              		.loc 1 635 0
 993 0197 488B7B10 		movq	16(%rbx), %rdi
 994 019b 488B7318 		movq	24(%rbx), %rsi
 995 019f E8000000 		call	__msg_print_str
 995      00
 996              	.LVL133:
 636:src/mcu_msg.c ****         if(sp->next != NULL) __msg_putc(__CTRL_KEY_SEP);
 997              		.loc 1 636 0
 998 01a4 89EF     		movl	%ebp, %edi
GAS LISTING /tmp/ccXtVIbK.s 			page 34


 999 01a6 FF150000 		call	*__msg_putc(%rip)
 999      0000
 1000              	.LVL134:
 637:src/mcu_msg.c ****     }
 1001              		.loc 1 637 0
 1002 01ac 48837B20 		cmpq	$0, 32(%rbx)
 1002      00
 1003 01b1 740B     		je	.L107
 1004 01b3 BF3B0000 		movl	$59, %edi
 1004      00
 1005 01b8 FF150000 		call	*__msg_putc(%rip)
 1005      0000
 1006              	.LVL135:
 1007              	.L107:
 631:src/mcu_msg.c ****         __print_key_equ(sp->id);
 1008              		.loc 1 631 0
 1009 01be 488B5B20 		movq	32(%rbx), %rbx
 1010              	.LVL136:
 1011              	.L101:
 1012 01c2 4885DB   		testq	%rbx, %rbx
 1013 01c5 7472     		je	.L120
 632:src/mcu_msg.c ****         qmark = __define_qmark(sp->content);
 1014              		.loc 1 632 0
 1015 01c7 BF240000 		movl	$36, %edi
 1015      00
 1016 01cc FF150000 		call	*__msg_putc(%rip)
 1016      0000
 1017              	.LVL137:
 1018 01d2 488B3B   		movq	(%rbx), %rdi
 1019 01d5 488B7308 		movq	8(%rbx), %rsi
 1020 01d9 E8000000 		call	__msg_print_str
 1020      00
 1021              	.LVL138:
 1022 01de BF3D0000 		movl	$61, %edi
 1022      00
 1023 01e3 FF150000 		call	*__msg_putc(%rip)
 1023      0000
 1024              	.LVL139:
 1025 01e9 488B4B10 		movq	16(%rbx), %rcx
 1026 01ed 488B7B18 		movq	24(%rbx), %rdi
 1027              	.LBB81:
 1028              	.LBB80:
 570:src/mcu_msg.c ****     while(__is_p_in_str(str, p) && *p) {
 1029              		.loc 1 570 0
 1030 01f1 4889CA   		movq	%rcx, %rdx
 1031              	.LVL140:
 1032              	.L102:
 1033              	.LBB78:
 1034              	.LBB79:
 169:src/mcu_msg.c **** }
 1035              		.loc 1 169 0
 1036 01f4 4889D6   		movq	%rdx, %rsi
 1037 01f7 4829CE   		subq	%rcx, %rsi
 1038 01fa 0FB7C7   		movzwl	%di, %eax
 1039              	.LVL141:
 1040              	.LBE79:
 1041              	.LBE78:
GAS LISTING /tmp/ccXtVIbK.s 			page 35


 571:src/mcu_msg.c ****         switch(*p) {
 1042              		.loc 1 571 0
 1043 01fd 4839C6   		cmpq	%rax, %rsi
 1044 0200 7D2D     		jge	.L111
 1045 0202 0FB602   		movzbl	(%rdx), %eax
 1046 0205 84C0     		testb	%al, %al
 1047 0207 7412     		je	.L121
 572:src/mcu_msg.c ****             case '"' :  return '\'';
 1048              		.loc 1 572 0
 1049 0209 3C22     		cmpb	$34, %al
 1050 020b 0F8475FF 		je	.L104
 1050      FFFF
 1051 0211 3C27     		cmpb	$39, %al
 1052 0213 7410     		je	.L110
 577:src/mcu_msg.c ****     }
 1053              		.loc 1 577 0
 1054 0215 4883C201 		addq	$1, %rdx
 1055              	.LVL142:
 1056 0219 EBD9     		jmp	.L102
 1057              	.L121:
 579:src/mcu_msg.c **** }
 1058              		.loc 1 579 0
 1059 021b BD220000 		movl	$34, %ebp
 1059      00
 1060 0220 E966FFFF 		jmp	.L105
 1060      FF
 1061              	.L110:
 574:src/mcu_msg.c ****             default: break;
 1062              		.loc 1 574 0
 1063 0225 BD220000 		movl	$34, %ebp
 1063      00
 1064 022a E95CFFFF 		jmp	.L105
 1064      FF
 1065              	.L111:
 579:src/mcu_msg.c **** }
 1066              		.loc 1 579 0
 1067 022f BD220000 		movl	$34, %ebp
 1067      00
 1068 0234 E952FFFF 		jmp	.L105
 1068      FF
 1069              	.LVL143:
 1070              	.L120:
 1071              	.LBE80:
 1072              	.LBE81:
 640:src/mcu_msg.c **** }
 1073              		.loc 1 640 0
 1074 0239 BF290000 		movl	$41, %edi
 1074      00
 1075 023e FF150000 		call	*__msg_putc(%rip)
 1075      0000
 1076              	.LVL144:
 1077              	.LBE75:
 1078              	.LBE74:
 672:src/mcu_msg.c ****     }
 1079              		.loc 1 672 0
 1080 0244 4D8B6424 		movq	40(%r12), %r12
 1080      28
GAS LISTING /tmp/ccXtVIbK.s 			page 36


 1081              	.LVL145:
 1082              	.L92:
 670:src/mcu_msg.c ****         __msg_wrapper_print_obj(*pobj);
 1083              		.loc 1 670 0
 1084 0249 4D85E4   		testq	%r12, %r12
 1085 024c 746D     		je	.L122
 1086 024e 498B0424 		movq	(%r12), %rax
 1087 0252 498B5424 		movq	8(%r12), %rdx
 1087      08
 1088 0257 48894424 		movq	%rax, 32(%rsp)
 1088      20
 1089 025c 48895424 		movq	%rdx, 40(%rsp)
 1089      28
 1090 0261 498B4424 		movq	16(%r12), %rax
 1090      10
 1091 0266 498B5424 		movq	24(%r12), %rdx
 1091      18
 1092 026b 48894424 		movq	%rax, 48(%rsp)
 1092      30
 1093 0270 48895424 		movq	%rdx, 56(%rsp)
 1093      38
 1094 0275 498B4424 		movq	32(%r12), %rax
 1094      20
 1095 027a 498B5424 		movq	40(%r12), %rdx
 1095      28
 1096 027f 48894424 		movq	%rax, 64(%rsp)
 1096      40
 1097 0284 48895424 		movq	%rdx, 72(%rsp)
 1097      48
 1098              	.LBB83:
 1099              	.LBB82:
 609:src/mcu_msg.c ****     __msg_print_str(obj.id);
 1100              		.loc 1 609 0
 1101 0289 BF400000 		movl	$64, %edi
 1101      00
 1102 028e FF150000 		call	*__msg_putc(%rip)
 1102      0000
 1103              	.LVL146:
 610:src/mcu_msg.c ****     __msg_putc(__CTRL_START_OBJ);
 1104              		.loc 1 610 0
 1105 0294 488B7C24 		movq	32(%rsp), %rdi
 1105      20
 1106 0299 488B7424 		movq	40(%rsp), %rsi
 1106      28
 1107 029e E8000000 		call	__msg_print_str
 1107      00
 1108              	.LVL147:
 611:src/mcu_msg.c ****     char qmark;
 1109              		.loc 1 611 0
 1110 02a3 BF280000 		movl	$40, %edi
 1110      00
 1111 02a8 FF150000 		call	*__msg_putc(%rip)
 1111      0000
 1112              	.LVL148:
 615:src/mcu_msg.c ****         __print_key_equ(ip->id);
 1113              		.loc 1 615 0
 1114 02ae 4C8B6C24 		movq	48(%rsp), %r13
GAS LISTING /tmp/ccXtVIbK.s 			page 37


 1114      30
 1115              	.LVL149:
 1116 02b3 4C89EB   		movq	%r13, %rbx
 1117 02b6 E900FEFF 		jmp	.L93
 1117      FF
 1118              	.LVL150:
 1119              	.L122:
 1120              	.LBE82:
 1121              	.LBE83:
 674:src/mcu_msg.c **** }
 1122              		.loc 1 674 0
 1123 02bb BF7D0000 		movl	$125, %edi
 1123      00
 1124 02c0 FF150000 		call	*__msg_putc(%rip)
 1124      0000
 1125              	.LVL151:
 1126              	.L87:
 675:src/mcu_msg.c **** 
 1127              		.loc 1 675 0
 1128 02c6 4883C458 		addq	$88, %rsp
 1129              	.LCFI38:
 1130              		.cfi_def_cfa_offset 40
 1131 02ca 5B       		popq	%rbx
 1132              	.LCFI39:
 1133              		.cfi_def_cfa_offset 32
 1134 02cb 5D       		popq	%rbp
 1135              	.LCFI40:
 1136              		.cfi_def_cfa_offset 24
 1137 02cc 415C     		popq	%r12
 1138              	.LCFI41:
 1139              		.cfi_def_cfa_offset 16
 1140 02ce 415D     		popq	%r13
 1141              	.LCFI42:
 1142              		.cfi_def_cfa_offset 8
 1143 02d0 C3       		ret
 1144              	.L114:
 1145              		.cfi_restore 3
 1146              		.cfi_restore 6
 1147              		.cfi_restore 12
 1148              		.cfi_restore 13
 1149 02d1 F3C3     		rep ret
 1150              		.cfi_endproc
 1151              	.LFE54:
 1153              		.section	.text.msg_destroy_string,"ax",@progbits
 1154              		.globl	msg_destroy_string
 1156              	msg_destroy_string:
 1157              	.LFB27:
  60:src/mcu_msg.c ****     str->s = NULL;
 1158              		.loc 1 60 0
 1159              		.cfi_startproc
 1160              	.LVL152:
  61:src/mcu_msg.c ****     str->len = 0;
 1161              		.loc 1 61 0
 1162 0000 48C70700 		movq	$0, (%rdi)
 1162      000000
  62:src/mcu_msg.c **** }
 1163              		.loc 1 62 0
GAS LISTING /tmp/ccXtVIbK.s 			page 38


 1164 0007 66C74708 		movw	$0, 8(%rdi)
 1164      0000
  63:src/mcu_msg.c **** 
 1165              		.loc 1 63 0
 1166 000d C3       		ret
 1167              		.cfi_endproc
 1168              	.LFE27:
 1170              		.section	.text.__find_keyword,"ax",@progbits
 1172              	__find_keyword:
 1173              	.LFB36:
 201:src/mcu_msg.c **** 
 1174              		.loc 1 201 0
 1175              		.cfi_startproc
 1176              	.LVL153:
 1177 0000 4157     		pushq	%r15
 1178              	.LCFI43:
 1179              		.cfi_def_cfa_offset 16
 1180              		.cfi_offset 15, -16
 1181 0002 4156     		pushq	%r14
 1182              	.LCFI44:
 1183              		.cfi_def_cfa_offset 24
 1184              		.cfi_offset 14, -24
 1185 0004 4155     		pushq	%r13
 1186              	.LCFI45:
 1187              		.cfi_def_cfa_offset 32
 1188              		.cfi_offset 13, -32
 1189 0006 4154     		pushq	%r12
 1190              	.LCFI46:
 1191              		.cfi_def_cfa_offset 40
 1192              		.cfi_offset 12, -40
 1193 0008 55       		pushq	%rbp
 1194              	.LCFI47:
 1195              		.cfi_def_cfa_offset 48
 1196              		.cfi_offset 6, -48
 1197 0009 53       		pushq	%rbx
 1198              	.LCFI48:
 1199              		.cfi_def_cfa_offset 56
 1200              		.cfi_offset 3, -56
 1201 000a 4883EC38 		subq	$56, %rsp
 1202              	.LCFI49:
 1203              		.cfi_def_cfa_offset 112
 1204 000e 4989FC   		movq	%rdi, %r12
 1205 0011 4889F5   		movq	%rsi, %rbp
 1206 0014 4989D6   		movq	%rdx, %r14
 1207 0017 4189CF   		movl	%ecx, %r15d
 1208 001a 44884424 		movb	%r8b, 15(%rsp)
 1208      0F
 201:src/mcu_msg.c **** 
 1209              		.loc 1 201 0
 1210 001f 64488B04 		movq	%fs:40, %rax
 1210      25280000 
 1210      00
 1211 0028 48894424 		movq	%rax, 40(%rsp)
 1211      28
 1212 002d 31C0     		xorl	%eax, %eax
 204:src/mcu_msg.c ****     uint8_t equal;
 1213              		.loc 1 204 0
GAS LISTING /tmp/ccXtVIbK.s 			page 39


 1214 002f 4889FB   		movq	%rdi, %rbx
 1215              	.LVL154:
 207:src/mcu_msg.c ****     while(__is_p_in_str(str, p) && *p) {
 1216              		.loc 1 207 0
 1217 0032 4889D7   		movq	%rdx, %rdi
 1218              	.LVL155:
 1219 0035 E8000000 		call	__str_len
 1219      00
 1220              	.LVL156:
 1221 003a 4189C5   		movl	%eax, %r13d
 1222 003d 66894424 		movw	%ax, 24(%rsp)
 1222      18
 208:src/mcu_msg.c ****         if(*p == '\'' || *p == '"') { //skip internal strings
 1223              		.loc 1 208 0
 1224 0042 E9D50000 		jmp	.L125
 1224      00
 1225              	.L148:
 210:src/mcu_msg.c ****         }
 1226              		.loc 1 210 0
 1227 0047 4889DF   		movq	%rbx, %rdi
 1228 004a E8000000 		call	__skip_internal_str
 1228      00
 1229              	.LVL157:
 1230 004f 4889C3   		movq	%rax, %rbx
 1231              	.LVL158:
 1232 0052 E9EC0000 		jmp	.L126
 1232      00
 1233              	.LVL159:
 1234              	.L130:
 217:src/mcu_msg.c ****                     equal = 0;
 1235              		.loc 1 217 0
 1236 0057 8D4A9F   		leal	-97(%rdx), %ecx
 1237 005a 80F919   		cmpb	$25, %cl
 1238 005d 400F97C7 		seta	%dil
 1239 0061 80FA5F   		cmpb	$95, %dl
 1240 0064 0F95C1   		setne	%cl
 216:src/mcu_msg.c ****                                     !is_valid_keyword_char(*(res.s + i))) {
 1241              		.loc 1 216 0
 1242 0067 4084CF   		testb	%cl, %dil
 1243 006a 7410     		je	.L132
 217:src/mcu_msg.c ****                     equal = 0;
 1244              		.loc 1 217 0
 1245 006c 8D4ABF   		leal	-65(%rdx), %ecx
 1246 006f 80F919   		cmpb	$25, %cl
 1247 0072 7608     		jbe	.L132
 217:src/mcu_msg.c ****                     equal = 0;
 1248              		.loc 1 217 0 is_stmt 0 discriminator 1
 1249 0074 83EA30   		subl	$48, %edx
 1250 0077 80FA09   		cmpb	$9, %dl
 1251 007a 7757     		ja	.L143
 1252              	.L132:
 215:src/mcu_msg.c ****                 if((*(res.s + i) != *(keyword + i)) || __is_ctrl_char(*(res.s + i)) || 
 1253              		.loc 1 215 0 is_stmt 1 discriminator 2
 1254 007c 83C001   		addl	$1, %eax
 1255              	.LVL160:
 1256              	.L128:
 215:src/mcu_msg.c ****                 if((*(res.s + i) != *(keyword + i)) || __is_ctrl_char(*(res.s + i)) || 
GAS LISTING /tmp/ccXtVIbK.s 			page 40


 1257              		.loc 1 215 0 is_stmt 0 discriminator 1
 1258 007f 0FB7C8   		movzwl	%ax, %ecx
 1259 0082 488D140E 		leaq	(%rsi,%rcx), %rdx
 1260              	.LVL161:
 1261              	.LBB84:
 1262              	.LBB85:
 169:src/mcu_msg.c **** }
 1263              		.loc 1 169 0 is_stmt 1 discriminator 1
 1264 0086 4989D0   		movq	%rdx, %r8
 1265 0089 4D29E0   		subq	%r12, %r8
 1266 008c 0FB7FD   		movzwl	%bp, %edi
 1267              	.LVL162:
 1268              	.LBE85:
 1269              	.LBE84:
 215:src/mcu_msg.c ****                 if((*(res.s + i) != *(keyword + i)) || __is_ctrl_char(*(res.s + i)) || 
 1270              		.loc 1 215 0 discriminator 1
 1271 008f 4939F8   		cmpq	%rdi, %r8
 1272 0092 7D46     		jge	.L144
 215:src/mcu_msg.c ****                 if((*(res.s + i) != *(keyword + i)) || __is_ctrl_char(*(res.s + i)) || 
 1273              		.loc 1 215 0 is_stmt 0 discriminator 3
 1274 0094 664139C5 		cmpw	%ax, %r13w
 1275 0098 7624     		jbe	.L146
 216:src/mcu_msg.c ****                                     !is_valid_keyword_char(*(res.s + i))) {
 1276              		.loc 1 216 0 is_stmt 1
 1277 009a 0FB612   		movzbl	(%rdx), %edx
 1278 009d 413A140E 		cmpb	(%r14,%rcx), %dl
 1279 00a1 7522     		jne	.L141
 1280              	.LVL163:
 1281              	.LBB86:
 1282              	.LBB87:
  97:src/mcu_msg.c ****         case __CTRL_MSG_FLAG:
 1283              		.loc 1 97 0 discriminator 1
 1284 00a3 8D4ADD   		leal	-35(%rdx), %ecx
 1285 00a6 80F95A   		cmpb	$90, %cl
 1286 00a9 77AC     		ja	.L130
 1287 00ab 0FB6C9   		movzbl	%cl, %ecx
 1288 00ae 488D3D00 		leaq	.L131(%rip), %rdi
 1288      000000
 1289 00b5 48630C8F 		movslq	(%rdi,%rcx,4), %rcx
 1290 00b9 4801F9   		addq	%rdi, %rcx
 1291 00bc FFE1     		jmp	*%rcx
 1292              		.section	.rodata.__find_keyword,"a",@progbits
 1293              		.align 4
 1294              		.align 4
 1295              	.L131:
 1296 0000 00000000 		.long	.L142-.L131
 1297 0004 00000000 		.long	.L142-.L131
 1298 0008 00000000 		.long	.L130-.L131
 1299 000c 00000000 		.long	.L130-.L131
 1300 0010 00000000 		.long	.L130-.L131
 1301 0014 00000000 		.long	.L142-.L131
 1302 0018 00000000 		.long	.L142-.L131
 1303 001c 00000000 		.long	.L130-.L131
 1304 0020 00000000 		.long	.L130-.L131
 1305 0024 00000000 		.long	.L130-.L131
 1306 0028 00000000 		.long	.L130-.L131
 1307 002c 00000000 		.long	.L130-.L131
GAS LISTING /tmp/ccXtVIbK.s 			page 41


 1308 0030 00000000 		.long	.L130-.L131
 1309 0034 00000000 		.long	.L130-.L131
 1310 0038 00000000 		.long	.L130-.L131
 1311 003c 00000000 		.long	.L130-.L131
 1312 0040 00000000 		.long	.L130-.L131
 1313 0044 00000000 		.long	.L130-.L131
 1314 0048 00000000 		.long	.L130-.L131
 1315 004c 00000000 		.long	.L130-.L131
 1316 0050 00000000 		.long	.L130-.L131
 1317 0054 00000000 		.long	.L130-.L131
 1318 0058 00000000 		.long	.L130-.L131
 1319 005c 00000000 		.long	.L130-.L131
 1320 0060 00000000 		.long	.L142-.L131
 1321 0064 00000000 		.long	.L142-.L131
 1322 0068 00000000 		.long	.L142-.L131
 1323 006c 00000000 		.long	.L142-.L131
 1324 0070 00000000 		.long	.L130-.L131
 1325 0074 00000000 		.long	.L142-.L131
 1326 0078 00000000 		.long	.L130-.L131
 1327 007c 00000000 		.long	.L130-.L131
 1328 0080 00000000 		.long	.L130-.L131
 1329 0084 00000000 		.long	.L130-.L131
 1330 0088 00000000 		.long	.L130-.L131
 1331 008c 00000000 		.long	.L130-.L131
 1332 0090 00000000 		.long	.L130-.L131
 1333 0094 00000000 		.long	.L130-.L131
 1334 0098 00000000 		.long	.L130-.L131
 1335 009c 00000000 		.long	.L130-.L131
 1336 00a0 00000000 		.long	.L130-.L131
 1337 00a4 00000000 		.long	.L130-.L131
 1338 00a8 00000000 		.long	.L130-.L131
 1339 00ac 00000000 		.long	.L130-.L131
 1340 00b0 00000000 		.long	.L130-.L131
 1341 00b4 00000000 		.long	.L130-.L131
 1342 00b8 00000000 		.long	.L130-.L131
 1343 00bc 00000000 		.long	.L130-.L131
 1344 00c0 00000000 		.long	.L130-.L131
 1345 00c4 00000000 		.long	.L130-.L131
 1346 00c8 00000000 		.long	.L130-.L131
 1347 00cc 00000000 		.long	.L130-.L131
 1348 00d0 00000000 		.long	.L130-.L131
 1349 00d4 00000000 		.long	.L130-.L131
 1350 00d8 00000000 		.long	.L130-.L131
 1351 00dc 00000000 		.long	.L130-.L131
 1352 00e0 00000000 		.long	.L130-.L131
 1353 00e4 00000000 		.long	.L130-.L131
 1354 00e8 00000000 		.long	.L130-.L131
 1355 00ec 00000000 		.long	.L130-.L131
 1356 00f0 00000000 		.long	.L130-.L131
 1357 00f4 00000000 		.long	.L130-.L131
 1358 00f8 00000000 		.long	.L130-.L131
 1359 00fc 00000000 		.long	.L130-.L131
 1360 0100 00000000 		.long	.L130-.L131
 1361 0104 00000000 		.long	.L130-.L131
 1362 0108 00000000 		.long	.L130-.L131
 1363 010c 00000000 		.long	.L130-.L131
 1364 0110 00000000 		.long	.L130-.L131
GAS LISTING /tmp/ccXtVIbK.s 			page 42


 1365 0114 00000000 		.long	.L130-.L131
 1366 0118 00000000 		.long	.L130-.L131
 1367 011c 00000000 		.long	.L130-.L131
 1368 0120 00000000 		.long	.L130-.L131
 1369 0124 00000000 		.long	.L130-.L131
 1370 0128 00000000 		.long	.L130-.L131
 1371 012c 00000000 		.long	.L130-.L131
 1372 0130 00000000 		.long	.L130-.L131
 1373 0134 00000000 		.long	.L130-.L131
 1374 0138 00000000 		.long	.L130-.L131
 1375 013c 00000000 		.long	.L130-.L131
 1376 0140 00000000 		.long	.L130-.L131
 1377 0144 00000000 		.long	.L130-.L131
 1378 0148 00000000 		.long	.L130-.L131
 1379 014c 00000000 		.long	.L130-.L131
 1380 0150 00000000 		.long	.L130-.L131
 1381 0154 00000000 		.long	.L130-.L131
 1382 0158 00000000 		.long	.L130-.L131
 1383 015c 00000000 		.long	.L130-.L131
 1384 0160 00000000 		.long	.L142-.L131
 1385 0164 00000000 		.long	.L130-.L131
 1386 0168 00000000 		.long	.L142-.L131
 1387              		.section	.text.__find_keyword
 1388              	.LVL164:
 1389              	.L146:
 1390              	.LBE87:
 1391              	.LBE86:
 214:src/mcu_msg.c ****             for(i = 0; __is_p_in_str(str, res.s + i) && i < res.len; i++) { // if not equal during 
 1392              		.loc 1 214 0
 1393 00be BF010000 		movl	$1, %edi
 1393      00
 1394 00c3 EB1F     		jmp	.L136
 1395              	.L141:
 218:src/mcu_msg.c ****                     break;
 1396              		.loc 1 218 0
 1397 00c5 BF000000 		movl	$0, %edi
 1397      00
 1398 00ca EB18     		jmp	.L136
 1399              	.LVL165:
 1400              	.L142:
 1401 00cc BF000000 		movl	$0, %edi
 1401      00
 1402 00d1 EB11     		jmp	.L136
 1403              	.LVL166:
 1404              	.L143:
 1405 00d3 BF000000 		movl	$0, %edi
 1405      00
 1406 00d8 EB0A     		jmp	.L136
 1407              	.L144:
 214:src/mcu_msg.c ****             for(i = 0; __is_p_in_str(str, res.s + i) && i < res.len; i++) { // if not equal during 
 1408              		.loc 1 214 0
 1409 00da BF010000 		movl	$1, %edi
 1409      00
 1410 00df EB03     		jmp	.L136
 1411              	.LVL167:
 1412              	.L135:
 222:src/mcu_msg.c ****             if(equal && *(res.s + i) == stopc) { //if the stop char is the next, whitout spaces, re
GAS LISTING /tmp/ccXtVIbK.s 			page 43


 1413              		.loc 1 222 0
 1414 00e1 83C001   		addl	$1, %eax
 1415              	.LVL168:
 1416              	.L136:
 222:src/mcu_msg.c ****             if(equal && *(res.s + i) == stopc) { //if the stop char is the next, whitout spaces, re
 1417              		.loc 1 222 0 is_stmt 0 discriminator 1
 1418 00e4 0FB7D8   		movzwl	%ax, %ebx
 1419 00e7 4801F3   		addq	%rsi, %rbx
 1420              	.LVL169:
 1421              	.LBB88:
 1422              	.LBB89:
 169:src/mcu_msg.c **** }
 1423              		.loc 1 169 0 is_stmt 1 discriminator 1
 1424 00ea 4889D9   		movq	%rbx, %rcx
 1425 00ed 4C29E1   		subq	%r12, %rcx
 1426 00f0 0FB7D5   		movzwl	%bp, %edx
 1427              	.LVL170:
 1428              	.LBE89:
 1429              	.LBE88:
 222:src/mcu_msg.c ****             if(equal && *(res.s + i) == stopc) { //if the stop char is the next, whitout spaces, re
 1430              		.loc 1 222 0 discriminator 1
 1431 00f3 4839D1   		cmpq	%rdx, %rcx
 1432 00f6 7D12     		jge	.L134
 222:src/mcu_msg.c ****             if(equal && *(res.s + i) == stopc) { //if the stop char is the next, whitout spaces, re
 1433              		.loc 1 222 0 is_stmt 0 discriminator 2
 1434 00f8 0FB613   		movzbl	(%rbx), %edx
 1435              	.LVL171:
 1436              	.LBB90:
 1437              	.LBB91:
 123:src/mcu_msg.c ****         case  ' ':
 1438              		.loc 1 123 0 is_stmt 1 discriminator 2
 1439 00fb 80FA09   		cmpb	$9, %dl
 1440 00fe 7C0A     		jl	.L134
 1441 0100 80FA0D   		cmpb	$13, %dl
 1442 0103 7EDC     		jle	.L135
 1443 0105 80FA20   		cmpb	$32, %dl
 1444 0108 74D7     		je	.L135
 1445              	.LVL172:
 1446              	.L134:
 1447              	.LBE91:
 1448              	.LBE90:
 223:src/mcu_msg.c ****                 return res;
 1449              		.loc 1 223 0
 1450 010a 4084FF   		testb	%dil, %dil
 1451 010d 7409     		je	.L127
 223:src/mcu_msg.c ****                 return res;
 1452              		.loc 1 223 0 is_stmt 0 discriminator 1
 1453 010f 0FB64424 		movzbl	15(%rsp), %eax
 1453      0F
 1454              	.LVL173:
 1455 0114 3803     		cmpb	%al, (%rbx)
 1456 0116 7451     		je	.L147
 1457              	.LVL174:
 1458              	.L127:
 229:src/mcu_msg.c ****     }
 1459              		.loc 1 229 0 is_stmt 1
 1460 0118 4883C301 		addq	$1, %rbx
GAS LISTING /tmp/ccXtVIbK.s 			page 44


 1461              	.LVL175:
 1462              	.L125:
 1463              	.LBB92:
 1464              	.LBB93:
 169:src/mcu_msg.c **** }
 1465              		.loc 1 169 0
 1466 011c 4889DA   		movq	%rbx, %rdx
 1467 011f 4C29E2   		subq	%r12, %rdx
 1468 0122 0FB7C5   		movzwl	%bp, %eax
 1469              	.LVL176:
 1470              	.LBE93:
 1471              	.LBE92:
 208:src/mcu_msg.c ****         if(*p == '\'' || *p == '"') { //skip internal strings
 1472              		.loc 1 208 0
 1473 0125 4839C2   		cmpq	%rax, %rdx
 1474 0128 7D4B     		jge	.L138
 208:src/mcu_msg.c ****         if(*p == '\'' || *p == '"') { //skip internal strings
 1475              		.loc 1 208 0 is_stmt 0 discriminator 1
 1476 012a 0FB603   		movzbl	(%rbx), %eax
 1477 012d 84C0     		testb	%al, %al
 1478 012f 7444     		je	.L138
 209:src/mcu_msg.c ****             p = __skip_internal_str(p);
 1479              		.loc 1 209 0 is_stmt 1
 1480 0131 3C27     		cmpb	$39, %al
 1481 0133 0F94C2   		sete	%dl
 1482 0136 3C22     		cmpb	$34, %al
 1483 0138 0F94C0   		sete	%al
 1484 013b 08C2     		orb	%al, %dl
 1485 013d 0F8504FF 		jne	.L148
 1485      FFFF
 1486              	.L126:
 1487              	.LVL177:
 1488              	.LBB94:
 1489              	.LBB95:
 169:src/mcu_msg.c **** }
 1490              		.loc 1 169 0
 1491 0143 4889D8   		movq	%rbx, %rax
 1492 0146 4C29E0   		subq	%r12, %rax
 1493 0149 0FB7D5   		movzwl	%bp, %edx
 1494              	.LVL178:
 1495              	.LBE95:
 1496              	.LBE94:
 212:src/mcu_msg.c ****             res.s = p + 1;
 1497              		.loc 1 212 0
 1498 014c 4839C2   		cmpq	%rax, %rdx
 1499 014f 7EC7     		jle	.L127
 212:src/mcu_msg.c ****             res.s = p + 1;
 1500              		.loc 1 212 0 is_stmt 0 discriminator 1
 1501 0151 44383B   		cmpb	%r15b, (%rbx)
 1502 0154 75C2     		jne	.L127
 213:src/mcu_msg.c ****             equal = 1;
 1503              		.loc 1 213 0 is_stmt 1
 1504 0156 488D7301 		leaq	1(%rbx), %rsi
 1505 015a 48897424 		movq	%rsi, 16(%rsp)
 1505      10
 1506              	.LVL179:
 215:src/mcu_msg.c ****                 if((*(res.s + i) != *(keyword + i)) || __is_ctrl_char(*(res.s + i)) || 
GAS LISTING /tmp/ccXtVIbK.s 			page 45


 1507              		.loc 1 215 0
 1508 015f B8000000 		movl	$0, %eax
 1508      00
 1509 0164 E916FFFF 		jmp	.L128
 1509      FF
 1510              	.LVL180:
 1511              	.L147:
 224:src/mcu_msg.c ****             } else {
 1512              		.loc 1 224 0
 1513 0169 488B4424 		movq	16(%rsp), %rax
 1513      10
 1514 016e 488B5424 		movq	24(%rsp), %rdx
 1514      18
 1515 0173 EB14     		jmp	.L137
 1516              	.LVL181:
 1517              	.L138:
 232:src/mcu_msg.c ****     return res;
 1518              		.loc 1 232 0
 1519 0175 488D7C24 		leaq	16(%rsp), %rdi
 1519      10
 1520 017a E8000000 		call	msg_destroy_string
 1520      00
 1521              	.LVL182:
 233:src/mcu_msg.c **** }
 1522              		.loc 1 233 0
 1523 017f 488B4424 		movq	16(%rsp), %rax
 1523      10
 1524 0184 488B5424 		movq	24(%rsp), %rdx
 1524      18
 1525              	.LVL183:
 1526              	.L137:
 234:src/mcu_msg.c **** 
 1527              		.loc 1 234 0
 1528 0189 488B7424 		movq	40(%rsp), %rsi
 1528      28
 1529 018e 64483334 		xorq	%fs:40, %rsi
 1529      25280000 
 1529      00
 1530 0197 750F     		jne	.L149
 1531 0199 4883C438 		addq	$56, %rsp
 1532              	.LCFI50:
 1533              		.cfi_remember_state
 1534              		.cfi_def_cfa_offset 56
 1535 019d 5B       		popq	%rbx
 1536              	.LCFI51:
 1537              		.cfi_def_cfa_offset 48
 1538 019e 5D       		popq	%rbp
 1539              	.LCFI52:
 1540              		.cfi_def_cfa_offset 40
 1541              	.LVL184:
 1542 019f 415C     		popq	%r12
 1543              	.LCFI53:
 1544              		.cfi_def_cfa_offset 32
 1545 01a1 415D     		popq	%r13
 1546              	.LCFI54:
 1547              		.cfi_def_cfa_offset 24
 1548 01a3 415E     		popq	%r14
GAS LISTING /tmp/ccXtVIbK.s 			page 46


 1549              	.LCFI55:
 1550              		.cfi_def_cfa_offset 16
 1551              	.LVL185:
 1552 01a5 415F     		popq	%r15
 1553              	.LCFI56:
 1554              		.cfi_def_cfa_offset 8
 1555              	.LVL186:
 1556 01a7 C3       		ret
 1557              	.LVL187:
 1558              	.L149:
 1559              	.LCFI57:
 1560              		.cfi_restore_state
 1561 01a8 E8000000 		call	__stack_chk_fail@PLT
 1561      00
 1562              	.LVL188:
 1563              		.cfi_endproc
 1564              	.LFE36:
 1566              		.section	.text.__find_val,"ax",@progbits
 1568              	__find_val:
 1569              	.LFB37:
 246:src/mcu_msg.c ****     msg_str_t res  = __find_keyword(obj.content, key, __CTRL_KEY_FLAG, __CTRL_KEY_EQU); //object st
 1570              		.loc 1 246 0
 1571              		.cfi_startproc
 1572              	.LVL189:
 1573 0000 4883EC28 		subq	$40, %rsp
 1574              	.LCFI58:
 1575              		.cfi_def_cfa_offset 48
 1576 0004 4889FA   		movq	%rdi, %rdx
 246:src/mcu_msg.c ****     msg_str_t res  = __find_keyword(obj.content, key, __CTRL_KEY_FLAG, __CTRL_KEY_EQU); //object st
 1577              		.loc 1 246 0
 1578 0007 64488B04 		movq	%fs:40, %rax
 1578      25280000 
 1578      00
 1579 0010 48894424 		movq	%rax, 24(%rsp)
 1579      18
 1580 0015 31C0     		xorl	%eax, %eax
 247:src/mcu_msg.c ****     char *p;
 1581              		.loc 1 247 0
 1582 0017 41B83D00 		movl	$61, %r8d
 1582      0000
 1583 001d B9240000 		movl	$36, %ecx
 1583      00
 1584 0022 488B7C24 		movq	64(%rsp), %rdi
 1584      40
 1585              	.LVL190:
 1586 0027 488B7424 		movq	72(%rsp), %rsi
 1586      48
 1587 002c E8000000 		call	__find_keyword
 1587      00
 1588              	.LVL191:
 1589 0031 48890424 		movq	%rax, (%rsp)
 1590 0035 48895424 		movq	%rdx, 8(%rsp)
 1590      08
 249:src/mcu_msg.c ****         msg_destroy_string(&res);
 1591              		.loc 1 249 0
 1592 003a 4885C0   		testq	%rax, %rax
 1593 003d 7413     		je	.L166
GAS LISTING /tmp/ccXtVIbK.s 			page 47


 253:src/mcu_msg.c ****         while(__is_p_in_str(obj.content, res.s + 1) && *res.s != __CTRL_KEY_EQU) res.s++;
 1594              		.loc 1 253 0
 1595 003f 80383D   		cmpb	$61, (%rax)
 1596 0042 7528     		jne	.L153
 1597              	.L154:
 256:src/mcu_msg.c ****     while(__is_p_in_str(obj.content, res.s) && __is_whitespace(*res.s)) res.s++; //skip spaces afte
 1598              		.loc 1 256 0
 1599 0044 488B0424 		movq	(%rsp), %rax
 1600 0048 4883C001 		addq	$1, %rax
 1601 004c 48890424 		movq	%rax, (%rsp)
 257:src/mcu_msg.c **** 
 1602              		.loc 1 257 0
 1603 0050 EB43     		jmp	.L158
 1604              	.L166:
 250:src/mcu_msg.c ****         return res;
 1605              		.loc 1 250 0
 1606 0052 4889E7   		movq	%rsp, %rdi
 1607 0055 E8000000 		call	msg_destroy_string
 1607      00
 1608              	.LVL192:
 251:src/mcu_msg.c ****     }
 1609              		.loc 1 251 0
 1610 005a 488B0424 		movq	(%rsp), %rax
 1611 005e 488B5424 		movq	8(%rsp), %rdx
 1611      08
 1612 0063 E9B10000 		jmp	.L152
 1612      00
 1613              	.L155:
 254:src/mcu_msg.c ****     }
 1614              		.loc 1 254 0 discriminator 3
 1615 0068 48891424 		movq	%rdx, (%rsp)
 1616              	.L153:
 254:src/mcu_msg.c ****     }
 1617              		.loc 1 254 0 is_stmt 0 discriminator 1
 1618 006c 488B0424 		movq	(%rsp), %rax
 1619 0070 488D5001 		leaq	1(%rax), %rdx
 1620              	.LVL193:
 1621              	.LBB96:
 1622              	.LBB97:
 169:src/mcu_msg.c **** }
 1623              		.loc 1 169 0 is_stmt 1 discriminator 1
 1624 0074 4889D1   		movq	%rdx, %rcx
 1625 0077 482B4C24 		subq	64(%rsp), %rcx
 1625      40
 1626 007c 0FB77424 		movzwl	72(%rsp), %esi
 1626      48
 1627              	.LVL194:
 1628              	.LBE97:
 1629              	.LBE96:
 254:src/mcu_msg.c ****     }
 1630              		.loc 1 254 0 discriminator 1
 1631 0081 4839CE   		cmpq	%rcx, %rsi
 1632 0084 7EBE     		jle	.L154
 254:src/mcu_msg.c ****     }
 1633              		.loc 1 254 0 is_stmt 0 discriminator 2
 1634 0086 80383D   		cmpb	$61, (%rax)
 1635 0089 75DD     		jne	.L155
GAS LISTING /tmp/ccXtVIbK.s 			page 48


 1636 008b EBB7     		jmp	.L154
 1637              	.LVL195:
 1638              	.L157:
 257:src/mcu_msg.c **** 
 1639              		.loc 1 257 0 is_stmt 1
 1640 008d 4883C001 		addq	$1, %rax
 1641 0091 48890424 		movq	%rax, (%rsp)
 1642              	.L158:
 257:src/mcu_msg.c **** 
 1643              		.loc 1 257 0 is_stmt 0 discriminator 1
 1644 0095 488B0424 		movq	(%rsp), %rax
 1645              	.LVL196:
 1646              	.LBB98:
 1647              	.LBB99:
 169:src/mcu_msg.c **** }
 1648              		.loc 1 169 0 is_stmt 1 discriminator 1
 1649 0099 4889C7   		movq	%rax, %rdi
 1650 009c 4889C1   		movq	%rax, %rcx
 1651 009f 482B4C24 		subq	64(%rsp), %rcx
 1651      40
 1652 00a4 0FB75424 		movzwl	72(%rsp), %edx
 1652      48
 1653              	.LVL197:
 1654              	.LBE99:
 1655              	.LBE98:
 257:src/mcu_msg.c **** 
 1656              		.loc 1 257 0 discriminator 1
 1657 00a9 4839D1   		cmpq	%rdx, %rcx
 1658 00ac 7D18     		jge	.L163
 257:src/mcu_msg.c **** 
 1659              		.loc 1 257 0 is_stmt 0 discriminator 2
 1660 00ae 0FB610   		movzbl	(%rax), %edx
 1661              	.LVL198:
 1662              	.LBB100:
 1663              	.LBB101:
 123:src/mcu_msg.c ****         case  ' ':
 1664              		.loc 1 123 0 is_stmt 1 discriminator 2
 1665 00b1 80FA09   		cmpb	$9, %dl
 1666 00b4 7C10     		jl	.L163
 1667 00b6 80FA0D   		cmpb	$13, %dl
 1668 00b9 7ED2     		jle	.L157
 1669 00bb 80FA20   		cmpb	$32, %dl
 1670 00be 74CD     		je	.L157
 1671 00c0 EB04     		jmp	.L163
 1672              	.LVL199:
 1673              	.L161:
 1674              	.LBE101:
 1675              	.LBE100:
 260:src/mcu_msg.c ****     res.len = p - res.s;
 1676              		.loc 1 260 0
 1677 00c2 4883C001 		addq	$1, %rax
 1678              	.LVL200:
 1679              	.L163:
 1680              	.LBB102:
 1681              	.LBB103:
 169:src/mcu_msg.c **** }
 1682              		.loc 1 169 0 discriminator 1
GAS LISTING /tmp/ccXtVIbK.s 			page 49


 1683 00c6 4889C6   		movq	%rax, %rsi
 1684 00c9 4889C1   		movq	%rax, %rcx
 1685 00cc 482B4C24 		subq	64(%rsp), %rcx
 1685      40
 1686 00d1 0FB75424 		movzwl	72(%rsp), %edx
 1686      48
 1687              	.LVL201:
 1688              	.LBE103:
 1689              	.LBE102:
 260:src/mcu_msg.c ****     res.len = p - res.s;
 1690              		.loc 1 260 0 discriminator 1
 1691 00d6 4839D1   		cmpq	%rdx, %rcx
 1692 00d9 7D2D     		jge	.L159
 260:src/mcu_msg.c ****     res.len = p - res.s;
 1693              		.loc 1 260 0 is_stmt 0 discriminator 2
 1694 00db 0FB610   		movzbl	(%rax), %edx
 1695              	.LVL202:
 1696              	.LBB104:
 1697              	.LBB105:
 123:src/mcu_msg.c ****         case  ' ':
 1698              		.loc 1 123 0 is_stmt 1 discriminator 2
 1699 00de 80FA09   		cmpb	$9, %dl
 1700 00e1 7C0A     		jl	.L160
 1701 00e3 80FA0D   		cmpb	$13, %dl
 1702 00e6 7E20     		jle	.L159
 1703 00e8 80FA20   		cmpb	$32, %dl
 1704 00eb 741B     		je	.L159
 1705              	.L160:
 1706              	.LVL203:
 1707              	.LBE105:
 1708              	.LBE104:
 1709              	.LBB106:
 1710              	.LBB107:
  97:src/mcu_msg.c ****         case __CTRL_MSG_FLAG:
 1711              		.loc 1 97 0
 1712 00ed 83EA23   		subl	$35, %edx
 1713              	.LVL204:
 1714 00f0 80FA5A   		cmpb	$90, %dl
 1715 00f3 77CD     		ja	.L161
 1716 00f5 0FB6D2   		movzbl	%dl, %edx
 1717 00f8 488D0D00 		leaq	.L162(%rip), %rcx
 1717      000000
 1718 00ff 48631491 		movslq	(%rcx,%rdx,4), %rdx
 1719 0103 4801CA   		addq	%rcx, %rdx
 1720 0106 FFE2     		jmp	*%rdx
 1721              		.section	.rodata.__find_val,"a",@progbits
 1722              		.align 4
 1723              		.align 4
 1724              	.L162:
 1725 0000 00000000 		.long	.L159-.L162
 1726 0004 00000000 		.long	.L159-.L162
 1727 0008 00000000 		.long	.L161-.L162
 1728 000c 00000000 		.long	.L161-.L162
 1729 0010 00000000 		.long	.L161-.L162
 1730 0014 00000000 		.long	.L159-.L162
 1731 0018 00000000 		.long	.L159-.L162
 1732 001c 00000000 		.long	.L161-.L162
GAS LISTING /tmp/ccXtVIbK.s 			page 50


 1733 0020 00000000 		.long	.L161-.L162
 1734 0024 00000000 		.long	.L161-.L162
 1735 0028 00000000 		.long	.L161-.L162
 1736 002c 00000000 		.long	.L161-.L162
 1737 0030 00000000 		.long	.L161-.L162
 1738 0034 00000000 		.long	.L161-.L162
 1739 0038 00000000 		.long	.L161-.L162
 1740 003c 00000000 		.long	.L161-.L162
 1741 0040 00000000 		.long	.L161-.L162
 1742 0044 00000000 		.long	.L161-.L162
 1743 0048 00000000 		.long	.L161-.L162
 1744 004c 00000000 		.long	.L161-.L162
 1745 0050 00000000 		.long	.L161-.L162
 1746 0054 00000000 		.long	.L161-.L162
 1747 0058 00000000 		.long	.L161-.L162
 1748 005c 00000000 		.long	.L161-.L162
 1749 0060 00000000 		.long	.L159-.L162
 1750 0064 00000000 		.long	.L159-.L162
 1751 0068 00000000 		.long	.L159-.L162
 1752 006c 00000000 		.long	.L159-.L162
 1753 0070 00000000 		.long	.L161-.L162
 1754 0074 00000000 		.long	.L159-.L162
 1755 0078 00000000 		.long	.L161-.L162
 1756 007c 00000000 		.long	.L161-.L162
 1757 0080 00000000 		.long	.L161-.L162
 1758 0084 00000000 		.long	.L161-.L162
 1759 0088 00000000 		.long	.L161-.L162
 1760 008c 00000000 		.long	.L161-.L162
 1761 0090 00000000 		.long	.L161-.L162
 1762 0094 00000000 		.long	.L161-.L162
 1763 0098 00000000 		.long	.L161-.L162
 1764 009c 00000000 		.long	.L161-.L162
 1765 00a0 00000000 		.long	.L161-.L162
 1766 00a4 00000000 		.long	.L161-.L162
 1767 00a8 00000000 		.long	.L161-.L162
 1768 00ac 00000000 		.long	.L161-.L162
 1769 00b0 00000000 		.long	.L161-.L162
 1770 00b4 00000000 		.long	.L161-.L162
 1771 00b8 00000000 		.long	.L161-.L162
 1772 00bc 00000000 		.long	.L161-.L162
 1773 00c0 00000000 		.long	.L161-.L162
 1774 00c4 00000000 		.long	.L161-.L162
 1775 00c8 00000000 		.long	.L161-.L162
 1776 00cc 00000000 		.long	.L161-.L162
 1777 00d0 00000000 		.long	.L161-.L162
 1778 00d4 00000000 		.long	.L161-.L162
 1779 00d8 00000000 		.long	.L161-.L162
 1780 00dc 00000000 		.long	.L161-.L162
 1781 00e0 00000000 		.long	.L161-.L162
 1782 00e4 00000000 		.long	.L161-.L162
 1783 00e8 00000000 		.long	.L161-.L162
 1784 00ec 00000000 		.long	.L161-.L162
 1785 00f0 00000000 		.long	.L161-.L162
 1786 00f4 00000000 		.long	.L161-.L162
 1787 00f8 00000000 		.long	.L161-.L162
 1788 00fc 00000000 		.long	.L161-.L162
 1789 0100 00000000 		.long	.L161-.L162
GAS LISTING /tmp/ccXtVIbK.s 			page 51


 1790 0104 00000000 		.long	.L161-.L162
 1791 0108 00000000 		.long	.L161-.L162
 1792 010c 00000000 		.long	.L161-.L162
 1793 0110 00000000 		.long	.L161-.L162
 1794 0114 00000000 		.long	.L161-.L162
 1795 0118 00000000 		.long	.L161-.L162
 1796 011c 00000000 		.long	.L161-.L162
 1797 0120 00000000 		.long	.L161-.L162
 1798 0124 00000000 		.long	.L161-.L162
 1799 0128 00000000 		.long	.L161-.L162
 1800 012c 00000000 		.long	.L161-.L162
 1801 0130 00000000 		.long	.L161-.L162
 1802 0134 00000000 		.long	.L161-.L162
 1803 0138 00000000 		.long	.L161-.L162
 1804 013c 00000000 		.long	.L161-.L162
 1805 0140 00000000 		.long	.L161-.L162
 1806 0144 00000000 		.long	.L161-.L162
 1807 0148 00000000 		.long	.L161-.L162
 1808 014c 00000000 		.long	.L161-.L162
 1809 0150 00000000 		.long	.L161-.L162
 1810 0154 00000000 		.long	.L161-.L162
 1811 0158 00000000 		.long	.L161-.L162
 1812 015c 00000000 		.long	.L161-.L162
 1813 0160 00000000 		.long	.L159-.L162
 1814 0164 00000000 		.long	.L161-.L162
 1815 0168 00000000 		.long	.L159-.L162
 1816              		.section	.text.__find_val
 1817              	.LVL205:
 1818              	.L159:
 1819              	.LBE107:
 1820              	.LBE106:
 261:src/mcu_msg.c **** 
 1821              		.loc 1 261 0
 1822 0108 4829FE   		subq	%rdi, %rsi
 1823 010b 66897424 		movw	%si, 8(%rsp)
 1823      08
 263:src/mcu_msg.c **** }
 1824              		.loc 1 263 0
 1825 0110 488B0424 		movq	(%rsp), %rax
 1826              	.LVL206:
 1827 0114 488B5424 		movq	8(%rsp), %rdx
 1827      08
 1828              	.L152:
 264:src/mcu_msg.c **** 
 1829              		.loc 1 264 0
 1830 0119 488B7C24 		movq	24(%rsp), %rdi
 1830      18
 1831 011e 6448333C 		xorq	%fs:40, %rdi
 1831      25280000 
 1831      00
 1832 0127 7505     		jne	.L167
 1833 0129 4883C428 		addq	$40, %rsp
 1834              	.LCFI59:
 1835              		.cfi_remember_state
 1836              		.cfi_def_cfa_offset 8
 1837 012d C3       		ret
 1838              	.L167:
GAS LISTING /tmp/ccXtVIbK.s 			page 52


 1839              	.LCFI60:
 1840              		.cfi_restore_state
 1841 012e E8000000 		call	__stack_chk_fail@PLT
 1841      00
 1842              	.LVL207:
 1843              		.cfi_endproc
 1844              	.LFE37:
 1846              		.section	.text.msg_destroy,"ax",@progbits
 1847              		.globl	msg_destroy
 1849              	msg_destroy:
 1850              	.LFB28:
  67:src/mcu_msg.c ****     msg_destroy_string(&msg->id);
 1851              		.loc 1 67 0
 1852              		.cfi_startproc
 1853              	.LVL208:
 1854 0000 53       		pushq	%rbx
 1855              	.LCFI61:
 1856              		.cfi_def_cfa_offset 16
 1857              		.cfi_offset 3, -16
 1858 0001 4889FB   		movq	%rdi, %rbx
  68:src/mcu_msg.c ****     msg_destroy_string(&msg->content);
 1859              		.loc 1 68 0
 1860 0004 E8000000 		call	msg_destroy_string
 1860      00
 1861              	.LVL209:
  69:src/mcu_msg.c **** }
 1862              		.loc 1 69 0
 1863 0009 488D7B10 		leaq	16(%rbx), %rdi
 1864 000d E8000000 		call	msg_destroy_string
 1864      00
 1865              	.LVL210:
  70:src/mcu_msg.c **** 
 1866              		.loc 1 70 0
 1867 0012 5B       		popq	%rbx
 1868              	.LCFI62:
 1869              		.cfi_def_cfa_offset 8
 1870              	.LVL211:
 1871 0013 C3       		ret
 1872              		.cfi_endproc
 1873              	.LFE28:
 1875              		.section	.text.msg_destroy_obj,"ax",@progbits
 1876              		.globl	msg_destroy_obj
 1878              	msg_destroy_obj:
 1879              	.LFB29:
  75:src/mcu_msg.c ****     msg_destroy_string(&obj->id);
 1880              		.loc 1 75 0
 1881              		.cfi_startproc
 1882              	.LVL212:
 1883 0000 53       		pushq	%rbx
 1884              	.LCFI63:
 1885              		.cfi_def_cfa_offset 16
 1886              		.cfi_offset 3, -16
 1887 0001 4889FB   		movq	%rdi, %rbx
  76:src/mcu_msg.c ****     msg_destroy_string(&obj->content);
 1888              		.loc 1 76 0
 1889 0004 E8000000 		call	msg_destroy_string
 1889      00
GAS LISTING /tmp/ccXtVIbK.s 			page 53


 1890              	.LVL213:
  77:src/mcu_msg.c **** }
 1891              		.loc 1 77 0
 1892 0009 488D7B10 		leaq	16(%rbx), %rdi
 1893 000d E8000000 		call	msg_destroy_string
 1893      00
 1894              	.LVL214:
  78:src/mcu_msg.c **** 
 1895              		.loc 1 78 0
 1896 0012 5B       		popq	%rbx
 1897              	.LCFI64:
 1898              		.cfi_def_cfa_offset 8
 1899              	.LVL215:
 1900 0013 C3       		ret
 1901              		.cfi_endproc
 1902              	.LFE29:
 1904              		.section	.text.msg_init_string,"ax",@progbits
 1905              		.globl	msg_init_string
 1907              	msg_init_string:
 1908              	.LFB30:
  81:src/mcu_msg.c ****     // printf(">>\n");
 1909              		.loc 1 81 0
 1910              		.cfi_startproc
 1911              	.LVL216:
 1912 0000 53       		pushq	%rbx
 1913              	.LCFI65:
 1914              		.cfi_def_cfa_offset 16
 1915              		.cfi_offset 3, -16
 1916 0001 4889FB   		movq	%rdi, %rbx
  85:src/mcu_msg.c ****     return res;
 1917              		.loc 1 85 0
 1918 0004 E8000000 		call	__str_len
 1918      00
 1919              	.LVL217:
 1920 0009 BA000000 		movl	$0, %edx
 1920      00
 1921              	.LVL218:
 1922 000e 6689C2   		movw	%ax, %dx
  87:src/mcu_msg.c **** 
 1923              		.loc 1 87 0
 1924 0011 4889D8   		movq	%rbx, %rax
 1925 0014 5B       		popq	%rbx
 1926              	.LCFI66:
 1927              		.cfi_def_cfa_offset 8
 1928              	.LVL219:
 1929 0015 C3       		ret
 1930              		.cfi_endproc
 1931              	.LFE30:
 1933              		.section	.text.msg_get,"ax",@progbits
 1934              		.globl	msg_get
 1936              	msg_get:
 1937              	.LFB38:
 269:src/mcu_msg.c ****     msg_t res;
 1938              		.loc 1 269 0
 1939              		.cfi_startproc
 1940              	.LVL220:
 1941 0000 53       		pushq	%rbx
GAS LISTING /tmp/ccXtVIbK.s 			page 54


 1942              	.LCFI67:
 1943              		.cfi_def_cfa_offset 16
 1944              		.cfi_offset 3, -16
 1945 0001 4883EC30 		subq	$48, %rsp
 1946              	.LCFI68:
 1947              		.cfi_def_cfa_offset 64
 1948 0005 4889FB   		movq	%rdi, %rbx
 269:src/mcu_msg.c ****     msg_t res;
 1949              		.loc 1 269 0
 1950 0008 64488B04 		movq	%fs:40, %rax
 1950      25280000 
 1950      00
 1951 0011 48894424 		movq	%rax, 40(%rsp)
 1951      28
 1952 0016 31C0     		xorl	%eax, %eax
 271:src/mcu_msg.c ****     res.content.len = len;
 1953              		.loc 1 271 0
 1954 0018 48897424 		movq	%rsi, 16(%rsp)
 1954      10
 272:src/mcu_msg.c ****     res.id = __find_keyword(res.content, id, __CTRL_MSG_FLAG, __CTRL_START_MSG); //object start wit
 1955              		.loc 1 272 0
 1956 001d 66894C24 		movw	%cx, 24(%rsp)
 1956      18
 273:src/mcu_msg.c ****     char *p;
 1957              		.loc 1 273 0
 1958 0022 41B87B00 		movl	$123, %r8d
 1958      0000
 1959 0028 B9230000 		movl	$35, %ecx
 1959      00
 1960              	.LVL221:
 1961 002d 4889F7   		movq	%rsi, %rdi
 1962              	.LVL222:
 1963 0030 488B7424 		movq	24(%rsp), %rsi
 1963      18
 1964              	.LVL223:
 1965 0035 E8000000 		call	__find_keyword
 1965      00
 1966              	.LVL224:
 1967 003a 48890424 		movq	%rax, (%rsp)
 1968 003e 48895424 		movq	%rdx, 8(%rsp)
 1968      08
 275:src/mcu_msg.c ****         msg_destroy(&res);
 1969              		.loc 1 275 0
 1970 0043 4885C0   		testq	%rax, %rax
 1971 0046 741B     		je	.L185
 279:src/mcu_msg.c ****     if (*p != __CTRL_START_MSG) { // if the next char is not START_MSG, move to the start flag
 1972              		.loc 1 279 0
 1973 0048 0FB75424 		movzwl	8(%rsp), %edx
 1973      08
 1974 004d 4801D0   		addq	%rdx, %rax
 1975              	.LVL225:
 280:src/mcu_msg.c ****         while(__is_p_in_str(res.content, p + 1) && *p != __CTRL_START_MSG) p++;
 1976              		.loc 1 280 0
 1977 0050 80387B   		cmpb	$123, (%rax)
 1978 0053 753D     		jne	.L178
 1979              	.L177:
 283:src/mcu_msg.c ****     while(__is_p_in_str(res.content, p) && *p != __CTRL_STOP_MSG) { //calc length
GAS LISTING /tmp/ccXtVIbK.s 			page 55


 1980              		.loc 1 283 0
 1981 0055 488D5001 		leaq	1(%rax), %rdx
 1982              	.LVL226:
 1983 0059 48895424 		movq	%rdx, 16(%rsp)
 1983      10
 1984 005e 4889D0   		movq	%rdx, %rax
 284:src/mcu_msg.c ****         p++;
 1985              		.loc 1 284 0
 1986 0061 EB50     		jmp	.L179
 1987              	.LVL227:
 1988              	.L185:
 276:src/mcu_msg.c ****         return res;
 1989              		.loc 1 276 0
 1990 0063 4889E7   		movq	%rsp, %rdi
 1991 0066 E8000000 		call	msg_destroy
 1991      00
 1992              	.LVL228:
 277:src/mcu_msg.c ****     }
 1993              		.loc 1 277 0
 1994 006b 488B0424 		movq	(%rsp), %rax
 1995 006f 488B5424 		movq	8(%rsp), %rdx
 1995      08
 1996 0074 488903   		movq	%rax, (%rbx)
 1997 0077 48895308 		movq	%rdx, 8(%rbx)
 1998 007b 488B4424 		movq	16(%rsp), %rax
 1998      10
 1999 0080 488B5424 		movq	24(%rsp), %rdx
 1999      18
 2000 0085 48894310 		movq	%rax, 16(%rbx)
 2001 0089 48895318 		movq	%rdx, 24(%rbx)
 2002 008d EB68     		jmp	.L174
 2003              	.LVL229:
 2004              	.L183:
 281:src/mcu_msg.c ****     }
 2005              		.loc 1 281 0
 2006 008f 4889D0   		movq	%rdx, %rax
 2007              	.LVL230:
 2008              	.L178:
 281:src/mcu_msg.c ****     }
 2009              		.loc 1 281 0 is_stmt 0 discriminator 1
 2010 0092 488D5001 		leaq	1(%rax), %rdx
 2011              	.LVL231:
 2012              	.LBB108:
 2013              	.LBB109:
 169:src/mcu_msg.c **** }
 2014              		.loc 1 169 0 is_stmt 1 discriminator 1
 2015 0096 4889D6   		movq	%rdx, %rsi
 2016 0099 482B7424 		subq	16(%rsp), %rsi
 2016      10
 2017 009e 0FB74C24 		movzwl	24(%rsp), %ecx
 2017      18
 2018              	.LVL232:
 2019              	.LBE109:
 2020              	.LBE108:
 281:src/mcu_msg.c ****     }
 2021              		.loc 1 281 0 discriminator 1
 2022 00a3 4839CE   		cmpq	%rcx, %rsi
GAS LISTING /tmp/ccXtVIbK.s 			page 56


 2023 00a6 7DAD     		jge	.L177
 281:src/mcu_msg.c ****     }
 2024              		.loc 1 281 0 is_stmt 0 discriminator 2
 2025 00a8 80387B   		cmpb	$123, (%rax)
 2026 00ab 75E2     		jne	.L183
 2027 00ad EBA6     		jmp	.L177
 2028              	.L181:
 285:src/mcu_msg.c ****     }
 2029              		.loc 1 285 0 is_stmt 1
 2030 00af 4883C001 		addq	$1, %rax
 2031              	.LVL233:
 2032              	.L179:
 2033              	.LBB110:
 2034              	.LBB111:
 169:src/mcu_msg.c **** }
 2035              		.loc 1 169 0
 2036 00b3 4889C7   		movq	%rax, %rdi
 2037 00b6 4889C6   		movq	%rax, %rsi
 2038 00b9 482B7424 		subq	16(%rsp), %rsi
 2038      10
 2039 00be 0FB74C24 		movzwl	24(%rsp), %ecx
 2039      18
 2040              	.LVL234:
 2041              	.LBE111:
 2042              	.LBE110:
 284:src/mcu_msg.c ****         p++;
 2043              		.loc 1 284 0
 2044 00c3 4839CE   		cmpq	%rcx, %rsi
 2045 00c6 7D05     		jge	.L180
 284:src/mcu_msg.c ****         p++;
 2046              		.loc 1 284 0 is_stmt 0 discriminator 1
 2047 00c8 80387D   		cmpb	$125, (%rax)
 2048 00cb 75E2     		jne	.L181
 2049              	.L180:
 287:src/mcu_msg.c ****     return res;
 2050              		.loc 1 287 0 is_stmt 1
 2051 00cd 4829D7   		subq	%rdx, %rdi
 2052 00d0 66897C24 		movw	%di, 24(%rsp)
 2052      18
 288:src/mcu_msg.c **** }
 2053              		.loc 1 288 0
 2054 00d5 488B0424 		movq	(%rsp), %rax
 2055              	.LVL235:
 2056 00d9 488B5424 		movq	8(%rsp), %rdx
 2056      08
 2057 00de 488903   		movq	%rax, (%rbx)
 2058 00e1 48895308 		movq	%rdx, 8(%rbx)
 2059 00e5 488B4424 		movq	16(%rsp), %rax
 2059      10
 2060 00ea 488B5424 		movq	24(%rsp), %rdx
 2060      18
 2061 00ef 48894310 		movq	%rax, 16(%rbx)
 2062 00f3 48895318 		movq	%rdx, 24(%rbx)
 2063              	.L174:
 289:src/mcu_msg.c **** 
 2064              		.loc 1 289 0
 2065 00f7 4889D8   		movq	%rbx, %rax
GAS LISTING /tmp/ccXtVIbK.s 			page 57


 2066 00fa 488B5C24 		movq	40(%rsp), %rbx
 2066      28
 2067 00ff 6448331C 		xorq	%fs:40, %rbx
 2067      25280000 
 2067      00
 2068              	.LVL236:
 2069 0108 7506     		jne	.L186
 2070 010a 4883C430 		addq	$48, %rsp
 2071              	.LCFI69:
 2072              		.cfi_remember_state
 2073              		.cfi_def_cfa_offset 16
 2074 010e 5B       		popq	%rbx
 2075              	.LCFI70:
 2076              		.cfi_def_cfa_offset 8
 2077 010f C3       		ret
 2078              	.L186:
 2079              	.LCFI71:
 2080              		.cfi_restore_state
 2081 0110 E8000000 		call	__stack_chk_fail@PLT
 2081      00
 2082              	.LVL237:
 2083              		.cfi_endproc
 2084              	.LFE38:
 2086              		.section	.text.msg_parser_get_obj,"ax",@progbits
 2087              		.globl	msg_parser_get_obj
 2089              	msg_parser_get_obj:
 2090              	.LFB39:
 294:src/mcu_msg.c ****     msg_obj_t res;
 2091              		.loc 1 294 0
 2092              		.cfi_startproc
 2093              	.LVL238:
 2094 0000 53       		pushq	%rbx
 2095              	.LCFI72:
 2096              		.cfi_def_cfa_offset 16
 2097              		.cfi_offset 3, -16
 2098 0001 4883EC30 		subq	$48, %rsp
 2099              	.LCFI73:
 2100              		.cfi_def_cfa_offset 64
 2101 0005 4889FB   		movq	%rdi, %rbx
 2102 0008 4889F2   		movq	%rsi, %rdx
 294:src/mcu_msg.c ****     msg_obj_t res;
 2103              		.loc 1 294 0
 2104 000b 64488B04 		movq	%fs:40, %rax
 2104      25280000 
 2104      00
 2105 0014 48894424 		movq	%rax, 40(%rsp)
 2105      28
 2106 0019 31C0     		xorl	%eax, %eax
 296:src/mcu_msg.c ****     char *p;
 2107              		.loc 1 296 0
 2108 001b 41B82800 		movl	$40, %r8d
 2108      0000
 2109 0021 B9400000 		movl	$64, %ecx
 2109      00
 2110 0026 488B7C24 		movq	80(%rsp), %rdi
 2110      50
 2111              	.LVL239:
GAS LISTING /tmp/ccXtVIbK.s 			page 58


 2112 002b 488B7424 		movq	88(%rsp), %rsi
 2112      58
 2113              	.LVL240:
 2114 0030 E8000000 		call	__find_keyword
 2114      00
 2115              	.LVL241:
 2116 0035 48890424 		movq	%rax, (%rsp)
 2117 0039 48895424 		movq	%rdx, 8(%rsp)
 2117      08
 298:src/mcu_msg.c ****         msg_destroy_obj(&res);
 2118              		.loc 1 298 0
 2119 003e 4885C0   		testq	%rax, %rax
 2120 0041 741B     		je	.L198
 303:src/mcu_msg.c ****     if (*p != __CTRL_START_OBJ) {
 2121              		.loc 1 303 0
 2122 0043 0FB75424 		movzwl	8(%rsp), %edx
 2122      08
 2123 0048 4801D0   		addq	%rdx, %rax
 2124              	.LVL242:
 304:src/mcu_msg.c ****         while(__is_p_in_str(msg.content, p + 1) && *p != __CTRL_START_OBJ) p++;
 2125              		.loc 1 304 0
 2126 004b 803828   		cmpb	$40, (%rax)
 2127 004e 753D     		jne	.L191
 2128              	.L190:
 307:src/mcu_msg.c ****     while(__is_p_in_str(msg.content, p) && *p != __CTRL_STOP_OBJ) {
 2129              		.loc 1 307 0
 2130 0050 488D5001 		leaq	1(%rax), %rdx
 2131              	.LVL243:
 2132 0054 48895424 		movq	%rdx, 16(%rsp)
 2132      10
 2133 0059 4889D0   		movq	%rdx, %rax
 308:src/mcu_msg.c ****         p++;
 2134              		.loc 1 308 0
 2135 005c EB50     		jmp	.L192
 2136              	.LVL244:
 2137              	.L198:
 299:src/mcu_msg.c ****         return res;
 2138              		.loc 1 299 0
 2139 005e 4889E7   		movq	%rsp, %rdi
 2140 0061 E8000000 		call	msg_destroy_obj
 2140      00
 2141              	.LVL245:
 300:src/mcu_msg.c ****     }
 2142              		.loc 1 300 0
 2143 0066 488B0424 		movq	(%rsp), %rax
 2144 006a 488B5424 		movq	8(%rsp), %rdx
 2144      08
 2145 006f 488903   		movq	%rax, (%rbx)
 2146 0072 48895308 		movq	%rdx, 8(%rbx)
 2147 0076 488B4424 		movq	16(%rsp), %rax
 2147      10
 2148 007b 488B5424 		movq	24(%rsp), %rdx
 2148      18
 2149 0080 48894310 		movq	%rax, 16(%rbx)
 2150 0084 48895318 		movq	%rdx, 24(%rbx)
 2151 0088 EB68     		jmp	.L187
 2152              	.LVL246:
GAS LISTING /tmp/ccXtVIbK.s 			page 59


 2153              	.L196:
 305:src/mcu_msg.c ****     }
 2154              		.loc 1 305 0
 2155 008a 4889D0   		movq	%rdx, %rax
 2156              	.LVL247:
 2157              	.L191:
 305:src/mcu_msg.c ****     }
 2158              		.loc 1 305 0 is_stmt 0 discriminator 1
 2159 008d 488D5001 		leaq	1(%rax), %rdx
 2160              	.LVL248:
 2161              	.LBB112:
 2162              	.LBB113:
 169:src/mcu_msg.c **** }
 2163              		.loc 1 169 0 is_stmt 1 discriminator 1
 2164 0091 4889D6   		movq	%rdx, %rsi
 2165 0094 482B7424 		subq	80(%rsp), %rsi
 2165      50
 2166 0099 0FB74C24 		movzwl	88(%rsp), %ecx
 2166      58
 2167              	.LVL249:
 2168              	.LBE113:
 2169              	.LBE112:
 305:src/mcu_msg.c ****     }
 2170              		.loc 1 305 0 discriminator 1
 2171 009e 4839CE   		cmpq	%rcx, %rsi
 2172 00a1 7DAD     		jge	.L190
 305:src/mcu_msg.c ****     }
 2173              		.loc 1 305 0 is_stmt 0 discriminator 2
 2174 00a3 803828   		cmpb	$40, (%rax)
 2175 00a6 75E2     		jne	.L196
 2176 00a8 EBA6     		jmp	.L190
 2177              	.L194:
 309:src/mcu_msg.c ****     }
 2178              		.loc 1 309 0 is_stmt 1
 2179 00aa 4883C001 		addq	$1, %rax
 2180              	.LVL250:
 2181              	.L192:
 2182              	.LBB114:
 2183              	.LBB115:
 169:src/mcu_msg.c **** }
 2184              		.loc 1 169 0
 2185 00ae 4889C7   		movq	%rax, %rdi
 2186 00b1 4889C6   		movq	%rax, %rsi
 2187 00b4 482B7424 		subq	80(%rsp), %rsi
 2187      50
 2188 00b9 0FB74C24 		movzwl	88(%rsp), %ecx
 2188      58
 2189              	.LVL251:
 2190              	.LBE115:
 2191              	.LBE114:
 308:src/mcu_msg.c ****         p++;
 2192              		.loc 1 308 0
 2193 00be 4839CE   		cmpq	%rcx, %rsi
 2194 00c1 7D05     		jge	.L193
 308:src/mcu_msg.c ****         p++;
 2195              		.loc 1 308 0 is_stmt 0 discriminator 1
 2196 00c3 803829   		cmpb	$41, (%rax)
GAS LISTING /tmp/ccXtVIbK.s 			page 60


 2197 00c6 75E2     		jne	.L194
 2198              	.L193:
 311:src/mcu_msg.c ****     return res;
 2199              		.loc 1 311 0 is_stmt 1
 2200 00c8 4829D7   		subq	%rdx, %rdi
 2201 00cb 66897C24 		movw	%di, 24(%rsp)
 2201      18
 312:src/mcu_msg.c **** }
 2202              		.loc 1 312 0
 2203 00d0 488B0424 		movq	(%rsp), %rax
 2204              	.LVL252:
 2205 00d4 488B5424 		movq	8(%rsp), %rdx
 2205      08
 2206 00d9 488903   		movq	%rax, (%rbx)
 2207 00dc 48895308 		movq	%rdx, 8(%rbx)
 2208 00e0 488B4424 		movq	16(%rsp), %rax
 2208      10
 2209 00e5 488B5424 		movq	24(%rsp), %rdx
 2209      18
 2210 00ea 48894310 		movq	%rax, 16(%rbx)
 2211 00ee 48895318 		movq	%rdx, 24(%rbx)
 2212              	.L187:
 313:src/mcu_msg.c **** 
 2213              		.loc 1 313 0
 2214 00f2 4889D8   		movq	%rbx, %rax
 2215 00f5 488B5C24 		movq	40(%rsp), %rbx
 2215      28
 2216 00fa 6448331C 		xorq	%fs:40, %rbx
 2216      25280000 
 2216      00
 2217              	.LVL253:
 2218 0103 7506     		jne	.L199
 2219 0105 4883C430 		addq	$48, %rsp
 2220              	.LCFI74:
 2221              		.cfi_remember_state
 2222              		.cfi_def_cfa_offset 16
 2223 0109 5B       		popq	%rbx
 2224              	.LCFI75:
 2225              		.cfi_def_cfa_offset 8
 2226 010a C3       		ret
 2227              	.L199:
 2228              	.LCFI76:
 2229              		.cfi_restore_state
 2230 010b E8000000 		call	__stack_chk_fail@PLT
 2230      00
 2231              	.LVL254:
 2232              		.cfi_endproc
 2233              	.LFE39:
 2235              		.section	.text.msg_parser_get_cmd,"ax",@progbits
 2236              		.globl	msg_parser_get_cmd
 2238              	msg_parser_get_cmd:
 2239              	.LFB40:
 316:src/mcu_msg.c ****     msg_cmd_t res;
 2240              		.loc 1 316 0
 2241              		.cfi_startproc
 2242              	.LVL255:
 2243 0000 4883EC08 		subq	$8, %rsp
GAS LISTING /tmp/ccXtVIbK.s 			page 61


 2244              	.LCFI77:
 2245              		.cfi_def_cfa_offset 16
 2246 0004 4889FA   		movq	%rdi, %rdx
 319:src/mcu_msg.c ****     return res;
 2247              		.loc 1 319 0
 2248 0007 41B83E00 		movl	$62, %r8d
 2248      0000
 2249 000d B93C0000 		movl	$60, %ecx
 2249      00
 2250 0012 488B7C24 		movq	32(%rsp), %rdi
 2250      20
 2251              	.LVL256:
 2252 0017 488B7424 		movq	40(%rsp), %rsi
 2252      28
 2253 001c E8000000 		call	__find_keyword
 2253      00
 2254              	.LVL257:
 321:src/mcu_msg.c **** 
 2255              		.loc 1 321 0
 2256 0021 4883C408 		addq	$8, %rsp
 2257              	.LCFI78:
 2258              		.cfi_def_cfa_offset 8
 2259 0025 C3       		ret
 2260              		.cfi_endproc
 2261              	.LFE40:
 2263              		.section	.text.msg_parser_get_int,"ax",@progbits
 2264              		.globl	msg_parser_get_int
 2266              	msg_parser_get_int:
 2267              	.LFB41:
 324:src/mcu_msg.c ****     msg_str_t sval = __find_val(obj, key);
 2268              		.loc 1 324 0
 2269              		.cfi_startproc
 2270              	.LVL258:
 2271 0000 53       		pushq	%rbx
 2272              	.LCFI79:
 2273              		.cfi_def_cfa_offset 16
 2274              		.cfi_offset 3, -16
 2275 0001 4889FB   		movq	%rdi, %rbx
 325:src/mcu_msg.c ****     msg_size_t i;
 2276              		.loc 1 325 0
 2277 0004 FF742428 		pushq	40(%rsp)
 2278              	.LCFI80:
 2279              		.cfi_def_cfa_offset 24
 2280 0008 FF742428 		pushq	40(%rsp)
 2281              	.LCFI81:
 2282              		.cfi_def_cfa_offset 32
 2283 000c FF742428 		pushq	40(%rsp)
 2284              	.LCFI82:
 2285              		.cfi_def_cfa_offset 40
 2286 0010 FF742428 		pushq	40(%rsp)
 2287              	.LCFI83:
 2288              		.cfi_def_cfa_offset 48
 2289 0014 4889F7   		movq	%rsi, %rdi
 2290              	.LVL259:
 2291 0017 E8000000 		call	__find_val
 2291      00
 2292              	.LVL260:
GAS LISTING /tmp/ccXtVIbK.s 			page 62


 331:src/mcu_msg.c ****         return -1;
 2293              		.loc 1 331 0
 2294 001c 4883C420 		addq	$32, %rsp
 2295              	.LCFI84:
 2296              		.cfi_def_cfa_offset 16
 2297              	.LVL261:
 2298 0020 4885C0   		testq	%rax, %rax
 2299 0023 0F84AD00 		je	.L213
 2299      0000
 2300 0029 4889C2   		movq	%rax, %rdx
 335:src/mcu_msg.c ****         case '+':
 2301              		.loc 1 335 0
 2302 002c 0FB600   		movzbl	(%rax), %eax
 2303 002f 3C2B     		cmpb	$43, %al
 2304 0031 740C     		je	.L205
 2305 0033 3C2D     		cmpb	$45, %al
 2306 0035 7419     		je	.L206
 328:src/mcu_msg.c ****     int8_t res = 0; // result of function
 2307              		.loc 1 328 0
 2308 0037 41B80100 		movl	$1, %r8d
 2308      0000
 2309 003d EB0A     		jmp	.L204
 2310              	.L205:
 338:src/mcu_msg.c ****         break;
 2311              		.loc 1 338 0
 2312 003f 488D5201 		leaq	1(%rdx), %rdx
 337:src/mcu_msg.c ****             sval.s++;
 2313              		.loc 1 337 0
 2314 0043 41B80100 		movl	$1, %r8d
 2314      0000
 2315              	.LVL262:
 2316              	.L204:
 350:src/mcu_msg.c ****         if(*sval.s < '0' || *sval.s > '9') {    // if non valid number, return with error
 2317              		.loc 1 350 0
 2318 0049 BE000000 		movl	$0, %esi
 2318      00
 2319 004e EB1E     		jmp	.L207
 2320              	.LVL263:
 2321              	.L206:
 343:src/mcu_msg.c ****         break;
 2322              		.loc 1 343 0
 2323 0050 488D5201 		leaq	1(%rdx), %rdx
 342:src/mcu_msg.c ****             sval.s++;
 2324              		.loc 1 342 0
 2325 0054 41B8FFFF 		movl	$-1, %r8d
 2325      FFFF
 344:src/mcu_msg.c ****         
 2326              		.loc 1 344 0
 2327 005a EBED     		jmp	.L204
 2328              	.LVL264:
 2329              	.L209:
 350:src/mcu_msg.c ****         if(*sval.s < '0' || *sval.s > '9') {    // if non valid number, return with error
 2330              		.loc 1 350 0
 2331 005c 3C3B     		cmpb	$59, %al
 2332 005e 7432     		je	.L208
 351:src/mcu_msg.c ****             return -1;
 2333              		.loc 1 351 0
GAS LISTING /tmp/ccXtVIbK.s 			page 63


 2334 0060 83E830   		subl	$48, %eax
 2335 0063 3C09     		cmpb	$9, %al
 2336 0065 7776     		ja	.L215
 350:src/mcu_msg.c ****         if(*sval.s < '0' || *sval.s > '9') {    // if non valid number, return with error
 2337              		.loc 1 350 0 discriminator 2
 2338 0067 83C601   		addl	$1, %esi
 2339              	.LVL265:
 2340 006a 488D5701 		leaq	1(%rdi), %rdx
 2341              	.LVL266:
 2342              	.L207:
 350:src/mcu_msg.c ****         if(*sval.s < '0' || *sval.s > '9') {    // if non valid number, return with error
 2343              		.loc 1 350 0 is_stmt 0 discriminator 1
 2344 006e 4889D7   		movq	%rdx, %rdi
 2345              	.LVL267:
 2346              	.LBB116:
 2347              	.LBB117:
 169:src/mcu_msg.c **** }
 2348              		.loc 1 169 0 is_stmt 1 discriminator 1
 2349 0071 4889D1   		movq	%rdx, %rcx
 2350 0074 482B4C24 		subq	32(%rsp), %rcx
 2350      20
 2351 0079 0FB74424 		movzwl	40(%rsp), %eax
 2351      28
 2352              	.LVL268:
 2353              	.LBE117:
 2354              	.LBE116:
 350:src/mcu_msg.c ****         if(*sval.s < '0' || *sval.s > '9') {    // if non valid number, return with error
 2355              		.loc 1 350 0 discriminator 1
 2356 007e 4839C1   		cmpq	%rax, %rcx
 2357 0081 7D0F     		jge	.L208
 350:src/mcu_msg.c ****         if(*sval.s < '0' || *sval.s > '9') {    // if non valid number, return with error
 2358              		.loc 1 350 0 is_stmt 0 discriminator 3
 2359 0083 0FB602   		movzbl	(%rdx), %eax
 2360              	.LVL269:
 2361              	.LBB118:
 2362              	.LBB119:
 123:src/mcu_msg.c ****         case  ' ':
 2363              		.loc 1 123 0 is_stmt 1 discriminator 3
 2364 0086 3C09     		cmpb	$9, %al
 2365 0088 7CD2     		jl	.L209
 2366 008a 3C0D     		cmpb	$13, %al
 2367 008c 7E04     		jle	.L208
 2368 008e 3C20     		cmpb	$32, %al
 2369 0090 75CA     		jne	.L209
 2370              	.LVL270:
 2371              	.L208:
 2372              	.LBE119:
 2373              	.LBE118:
 356:src/mcu_msg.c ****     --sval.s;
 2374              		.loc 1 356 0
 2375 0092 C7030000 		movl	$0, (%rbx)
 2375      0000
 357:src/mcu_msg.c ****     while(i--) { //convert value to integer
 2376              		.loc 1 357 0
 2377 0098 488D57FF 		leaq	-1(%rdi), %rdx
 329:src/mcu_msg.c **** 
 2378              		.loc 1 329 0
GAS LISTING /tmp/ccXtVIbK.s 			page 64


 2379 009c B8000000 		movl	$0, %eax
 2379      00
 327:src/mcu_msg.c ****     int sign = 1;
 2380              		.loc 1 327 0
 2381 00a1 B9010000 		movl	$1, %ecx
 2381      00
 358:src/mcu_msg.c ****         *res_val += (*sval.s-- - '0') * m;
 2382              		.loc 1 358 0
 2383 00a6 EB1D     		jmp	.L211
 2384              	.LVL271:
 2385              	.L212:
 359:src/mcu_msg.c ****         m *= 10;
 2386              		.loc 1 359 0
 2387 00a8 4889D6   		movq	%rdx, %rsi
 2388 00ab 4883EA01 		subq	$1, %rdx
 2389 00af 0FBE36   		movsbl	(%rsi), %esi
 2390 00b2 83EE30   		subl	$48, %esi
 2391 00b5 0FAFF1   		imull	%ecx, %esi
 2392 00b8 0133     		addl	%esi, (%rbx)
 360:src/mcu_msg.c ****         res++;
 2393              		.loc 1 360 0
 2394 00ba 8D3489   		leal	(%rcx,%rcx,4), %esi
 2395 00bd 8D0C36   		leal	(%rsi,%rsi), %ecx
 2396              	.LVL272:
 361:src/mcu_msg.c ****     }
 2397              		.loc 1 361 0
 2398 00c0 83C001   		addl	$1, %eax
 2399              	.LVL273:
 358:src/mcu_msg.c ****         *res_val += (*sval.s-- - '0') * m;
 2400              		.loc 1 358 0
 2401 00c3 89FE     		movl	%edi, %esi
 2402              	.LVL274:
 2403              	.L211:
 2404 00c5 8D7EFF   		leal	-1(%rsi), %edi
 2405              	.LVL275:
 2406 00c8 6685F6   		testw	%si, %si
 2407 00cb 75DB     		jne	.L212
 364:src/mcu_msg.c **** 
 2408              		.loc 1 364 0
 2409 00cd 440FAF03 		imull	(%rbx), %r8d
 2410              	.LVL276:
 2411 00d1 448903   		movl	%r8d, (%rbx)
 2412              	.LVL277:
 2413              	.L202:
 367:src/mcu_msg.c **** 
 2414              		.loc 1 367 0
 2415 00d4 5B       		popq	%rbx
 2416              	.LCFI85:
 2417              		.cfi_remember_state
 2418              		.cfi_def_cfa_offset 8
 2419              	.LVL278:
 2420 00d5 C3       		ret
 2421              	.LVL279:
 2422              	.L213:
 2423              	.LCFI86:
 2424              		.cfi_restore_state
 332:src/mcu_msg.c **** 
GAS LISTING /tmp/ccXtVIbK.s 			page 65


 2425              		.loc 1 332 0
 2426 00d6 B8FFFFFF 		movl	$-1, %eax
 2426      FF
 2427 00db EBF7     		jmp	.L202
 2428              	.LVL280:
 2429              	.L215:
 352:src/mcu_msg.c ****         }
 2430              		.loc 1 352 0
 2431 00dd B8FFFFFF 		movl	$-1, %eax
 2431      FF
 2432 00e2 EBF0     		jmp	.L202
 2433              		.cfi_endproc
 2434              	.LFE41:
 2436              		.section	.text.msg_parser_get_float,"ax",@progbits
 2437              		.globl	msg_parser_get_float
 2439              	msg_parser_get_float:
 2440              	.LFB42:
 371:src/mcu_msg.c ****     msg_str_t sval = __find_val(obj, key);
 2441              		.loc 1 371 0
 2442              		.cfi_startproc
 2443              	.LVL281:
 2444 0000 53       		pushq	%rbx
 2445              	.LCFI87:
 2446              		.cfi_def_cfa_offset 16
 2447              		.cfi_offset 3, -16
 2448 0001 4889FB   		movq	%rdi, %rbx
 372:src/mcu_msg.c ****     char *pf;
 2449              		.loc 1 372 0
 2450 0004 FF742428 		pushq	40(%rsp)
 2451              	.LCFI88:
 2452              		.cfi_def_cfa_offset 24
 2453 0008 FF742428 		pushq	40(%rsp)
 2454              	.LCFI89:
 2455              		.cfi_def_cfa_offset 32
 2456 000c FF742428 		pushq	40(%rsp)
 2457              	.LCFI90:
 2458              		.cfi_def_cfa_offset 40
 2459 0010 FF742428 		pushq	40(%rsp)
 2460              	.LCFI91:
 2461              		.cfi_def_cfa_offset 48
 2462 0014 4889F7   		movq	%rsi, %rdi
 2463              	.LVL282:
 2464 0017 E8000000 		call	__find_val
 2464      00
 2465              	.LVL283:
 2466 001c 4889C1   		movq	%rax, %rcx
 2467              	.LVL284:
 380:src/mcu_msg.c ****         return -1;
 2468              		.loc 1 380 0
 2469 001f 4883C420 		addq	$32, %rsp
 2470              	.LCFI92:
 2471              		.cfi_def_cfa_offset 16
 2472 0023 4885C0   		testq	%rax, %rax
 2473 0026 0F844C01 		je	.L236
 2473      0000
 2474 002c 4889C2   		movq	%rax, %rdx
 384:src/mcu_msg.c ****         case '+':
GAS LISTING /tmp/ccXtVIbK.s 			page 66


 2475              		.loc 1 384 0
 2476 002f 0FB601   		movzbl	(%rcx), %eax
 2477 0032 3C2B     		cmpb	$43, %al
 2478 0034 740B     		je	.L221
 2479 0036 3C2D     		cmpb	$45, %al
 2480 0038 7417     		je	.L222
 377:src/mcu_msg.c ****     int8_t res = 0; // result of function
 2481              		.loc 1 377 0
 2482 003a BF010000 		movl	$1, %edi
 2482      00
 2483 003f EB09     		jmp	.L220
 2484              	.L221:
 387:src/mcu_msg.c ****         break;
 2485              		.loc 1 387 0
 2486 0041 488D4A01 		leaq	1(%rdx), %rcx
 386:src/mcu_msg.c ****             sval.s++;
 2487              		.loc 1 386 0
 2488 0045 BF010000 		movl	$1, %edi
 2488      00
 2489              	.LVL285:
 2490              	.L220:
 400:src/mcu_msg.c ****         if((*sval.s < '0' || *sval.s > '9')) {    // if non valid number, return with error
 2491              		.loc 1 400 0
 2492 004a BA000000 		movl	$0, %edx
 2492      00
 2493 004f EB25     		jmp	.L223
 2494              	.LVL286:
 2495              	.L222:
 392:src/mcu_msg.c ****         break;
 2496              		.loc 1 392 0
 2497 0051 488D4A01 		leaq	1(%rdx), %rcx
 391:src/mcu_msg.c ****             sval.s++;
 2498              		.loc 1 391 0
 2499 0055 BFFFFFFF 		movl	$-1, %edi
 2499      FF
 393:src/mcu_msg.c ****         
 2500              		.loc 1 393 0
 2501 005a EBEE     		jmp	.L220
 2502              	.LVL287:
 2503              	.L225:
 400:src/mcu_msg.c ****         if((*sval.s < '0' || *sval.s > '9')) {    // if non valid number, return with error
 2504              		.loc 1 400 0
 2505 005c 3C3B     		cmpb	$59, %al
 2506 005e 743A     		je	.L224
 400:src/mcu_msg.c ****         if((*sval.s < '0' || *sval.s > '9')) {    // if non valid number, return with error
 2507              		.loc 1 400 0 is_stmt 0 discriminator 5
 2508 0060 3C2E     		cmpb	$46, %al
 2509 0062 7436     		je	.L224
 401:src/mcu_msg.c ****             return -1;
 2510              		.loc 1 401 0 is_stmt 1
 2511 0064 83E830   		subl	$48, %eax
 2512 0067 3C09     		cmpb	$9, %al
 2513 0069 0F871001 		ja	.L238
 2513      0000
 400:src/mcu_msg.c ****         if((*sval.s < '0' || *sval.s > '9')) {    // if non valid number, return with error
 2514              		.loc 1 400 0 discriminator 2
 2515 006f 83C201   		addl	$1, %edx
GAS LISTING /tmp/ccXtVIbK.s 			page 67


 2516              	.LVL288:
 2517 0072 488D4E01 		leaq	1(%rsi), %rcx
 2518              	.LVL289:
 2519              	.L223:
 400:src/mcu_msg.c ****         if((*sval.s < '0' || *sval.s > '9')) {    // if non valid number, return with error
 2520              		.loc 1 400 0 is_stmt 0 discriminator 1
 2521 0076 4889CE   		movq	%rcx, %rsi
 2522              	.LVL290:
 2523              	.LBB120:
 2524              	.LBB121:
 169:src/mcu_msg.c **** }
 2525              		.loc 1 169 0 is_stmt 1 discriminator 1
 2526 0079 4989C8   		movq	%rcx, %r8
 2527 007c 4C2B4424 		subq	32(%rsp), %r8
 2527      20
 2528 0081 0FB74424 		movzwl	40(%rsp), %eax
 2528      28
 2529              	.LVL291:
 2530              	.LBE121:
 2531              	.LBE120:
 400:src/mcu_msg.c ****         if((*sval.s < '0' || *sval.s > '9')) {    // if non valid number, return with error
 2532              		.loc 1 400 0 discriminator 1
 2533 0086 4939C0   		cmpq	%rax, %r8
 2534 0089 7D0F     		jge	.L224
 400:src/mcu_msg.c ****         if((*sval.s < '0' || *sval.s > '9')) {    // if non valid number, return with error
 2535              		.loc 1 400 0 is_stmt 0 discriminator 3
 2536 008b 0FB601   		movzbl	(%rcx), %eax
 2537              	.LVL292:
 2538              	.LBB122:
 2539              	.LBB123:
 123:src/mcu_msg.c ****         case  ' ':
 2540              		.loc 1 123 0 is_stmt 1 discriminator 3
 2541 008e 3C09     		cmpb	$9, %al
 2542 0090 7CCA     		jl	.L225
 2543 0092 3C0D     		cmpb	$13, %al
 2544 0094 7E04     		jle	.L224
 2545 0096 3C20     		cmpb	$32, %al
 2546 0098 75C2     		jne	.L225
 2547              	.LVL293:
 2548              	.L224:
 2549              	.LBE123:
 2550              	.LBE122:
 406:src/mcu_msg.c ****     
 2551              		.loc 1 406 0
 2552 009a C7030000 		movl	$0x00000000, (%rbx)
 2552      0000
 408:src/mcu_msg.c ****         pf = sval.s + 1;
 2553              		.loc 1 408 0
 2554 00a0 803E2E   		cmpb	$46, (%rsi)
 2555 00a3 7416     		je	.L243
 378:src/mcu_msg.c **** 
 2556              		.loc 1 378 0
 2557 00a5 B8000000 		movl	$0, %eax
 2557      00
 412:src/mcu_msg.c ****     }
 2558              		.loc 1 412 0
 2559 00aa 41B80000 		movl	$0, %r8d
GAS LISTING /tmp/ccXtVIbK.s 			page 68


 2559      0000
 2560              	.LVL294:
 2561              	.L227:
 415:src/mcu_msg.c ****     while(i--) { // convert integer part
 2562              		.loc 1 415 0
 2563 00b0 488D4EFF 		leaq	-1(%rsi), %rcx
 375:src/mcu_msg.c ****     float mf = 0.1;
 2564              		.loc 1 375 0
 2565 00b4 BE010000 		movl	$1, %esi
 2565      00
 416:src/mcu_msg.c ****         *res_val += (*sval.s-- - '0') * m;
 2566              		.loc 1 416 0
 2567 00b9 EB38     		jmp	.L228
 2568              	.LVL295:
 2569              	.L243:
 409:src/mcu_msg.c ****         res++;
 2570              		.loc 1 409 0
 2571 00bb 4C8D4601 		leaq	1(%rsi), %r8
 2572              	.LVL296:
 410:src/mcu_msg.c ****     } else {
 2573              		.loc 1 410 0
 2574 00bf B8010000 		movl	$1, %eax
 2574      00
 2575 00c4 EBEA     		jmp	.L227
 2576              	.LVL297:
 2577              	.L231:
 417:src/mcu_msg.c ****         m *= 10;
 2578              		.loc 1 417 0
 2579 00c6 4889CA   		movq	%rcx, %rdx
 2580 00c9 4883E901 		subq	$1, %rcx
 2581 00cd 0FBE12   		movsbl	(%rdx), %edx
 2582 00d0 83EA30   		subl	$48, %edx
 2583 00d3 0FAFD6   		imull	%esi, %edx
 2584 00d6 660FEFC0 		pxor	%xmm0, %xmm0
 2585 00da F3480F2A 		cvtsi2ssq	%rdx, %xmm0
 2585      C2
 2586 00df F30F5803 		addss	(%rbx), %xmm0
 2587 00e3 F30F1103 		movss	%xmm0, (%rbx)
 418:src/mcu_msg.c ****         res++;
 2588              		.loc 1 418 0
 2589 00e7 8D14B6   		leal	(%rsi,%rsi,4), %edx
 2590 00ea 8D3412   		leal	(%rdx,%rdx), %esi
 2591              	.LVL298:
 419:src/mcu_msg.c ****     }
 2592              		.loc 1 419 0
 2593 00ed 83C001   		addl	$1, %eax
 2594              	.LVL299:
 416:src/mcu_msg.c ****         *res_val += (*sval.s-- - '0') * m;
 2595              		.loc 1 416 0
 2596 00f0 4489CA   		movl	%r9d, %edx
 2597              	.LVL300:
 2598              	.L228:
 2599 00f3 448D4AFF 		leal	-1(%rdx), %r9d
 2600              	.LVL301:
 2601 00f7 6685D2   		testw	%dx, %dx
 2602 00fa 75CA     		jne	.L231
 376:src/mcu_msg.c ****     int sign = 1;
GAS LISTING /tmp/ccXtVIbK.s 			page 69


 2603              		.loc 1 376 0
 2604 00fc F30F100D 		movss	.LC1(%rip), %xmm1
 2604      00000000 
 2605 0104 EB33     		jmp	.L232
 2606              	.LVL302:
 2607              	.L234:
 423:src/mcu_msg.c ****         if(*pf < '0' || *pf > '9') {    // if non valid number, return with error
 2608              		.loc 1 423 0
 2609 0106 80F93B   		cmpb	$59, %cl
 2610 0109 745B     		je	.L233
 424:src/mcu_msg.c ****             return -1;
 2611              		.loc 1 424 0
 2612 010b 83E930   		subl	$48, %ecx
 2613 010e 80F909   		cmpb	$9, %cl
 2614 0111 7773     		ja	.L240
 427:src/mcu_msg.c ****         mf /= 10;
 2615              		.loc 1 427 0
 2616 0113 83EA30   		subl	$48, %edx
 2617 0116 660FEFC0 		pxor	%xmm0, %xmm0
 2618 011a F30F2AC2 		cvtsi2ss	%edx, %xmm0
 2619 011e F30F59C1 		mulss	%xmm1, %xmm0
 2620 0122 F30F5803 		addss	(%rbx), %xmm0
 2621 0126 F30F1103 		movss	%xmm0, (%rbx)
 428:src/mcu_msg.c ****         res++; 
 2622              		.loc 1 428 0
 2623 012a F30F5E0D 		divss	.LC2(%rip), %xmm1
 2623      00000000 
 2624              	.LVL303:
 429:src/mcu_msg.c ****     }
 2625              		.loc 1 429 0
 2626 0132 83C001   		addl	$1, %eax
 2627              	.LVL304:
 423:src/mcu_msg.c ****         if(*pf < '0' || *pf > '9') {    // if non valid number, return with error
 2628              		.loc 1 423 0
 2629 0135 4983C001 		addq	$1, %r8
 2630              	.LVL305:
 2631              	.L232:
 423:src/mcu_msg.c ****         if(*pf < '0' || *pf > '9') {    // if non valid number, return with error
 2632              		.loc 1 423 0 is_stmt 0 discriminator 1
 2633 0139 4D85C0   		testq	%r8, %r8
 2634 013c 7428     		je	.L233
 2635              	.LVL306:
 2636              	.LBB124:
 2637              	.LBB125:
 169:src/mcu_msg.c **** }
 2638              		.loc 1 169 0 is_stmt 1 discriminator 2
 2639 013e 4C89C1   		movq	%r8, %rcx
 2640 0141 482B4C24 		subq	32(%rsp), %rcx
 2640      20
 2641 0146 0FB75424 		movzwl	40(%rsp), %edx
 2641      28
 2642              	.LVL307:
 2643              	.LBE125:
 2644              	.LBE124:
 423:src/mcu_msg.c ****         if(*pf < '0' || *pf > '9') {    // if non valid number, return with error
 2645              		.loc 1 423 0 discriminator 2
 2646 014b 4839D1   		cmpq	%rdx, %rcx
GAS LISTING /tmp/ccXtVIbK.s 			page 70


 2647 014e 7D16     		jge	.L233
 423:src/mcu_msg.c ****         if(*pf < '0' || *pf > '9') {    // if non valid number, return with error
 2648              		.loc 1 423 0 is_stmt 0 discriminator 3
 2649 0150 410FB608 		movzbl	(%r8), %ecx
 2650 0154 0FBED1   		movsbl	%cl, %edx
 2651              	.LVL308:
 2652              	.LBB126:
 2653              	.LBB127:
 123:src/mcu_msg.c ****         case  ' ':
 2654              		.loc 1 123 0 is_stmt 1 discriminator 3
 2655 0157 80F909   		cmpb	$9, %cl
 2656 015a 7CAA     		jl	.L234
 2657 015c 80F90D   		cmpb	$13, %cl
 2658 015f 7E05     		jle	.L233
 2659 0161 80F920   		cmpb	$32, %cl
 2660 0164 75A0     		jne	.L234
 2661              	.LVL309:
 2662              	.L233:
 2663              	.LBE127:
 2664              	.LBE126:
 432:src/mcu_msg.c **** 
 2665              		.loc 1 432 0
 2666 0166 660FEFC0 		pxor	%xmm0, %xmm0
 2667 016a F30F2AC7 		cvtsi2ss	%edi, %xmm0
 2668 016e F30F5903 		mulss	(%rbx), %xmm0
 2669 0172 F30F1103 		movss	%xmm0, (%rbx)
 2670              	.LVL310:
 2671              	.L218:
 435:src/mcu_msg.c **** 
 2672              		.loc 1 435 0
 2673 0176 5B       		popq	%rbx
 2674              	.LCFI93:
 2675              		.cfi_remember_state
 2676              		.cfi_def_cfa_offset 8
 2677              	.LVL311:
 2678 0177 C3       		ret
 2679              	.LVL312:
 2680              	.L236:
 2681              	.LCFI94:
 2682              		.cfi_restore_state
 381:src/mcu_msg.c **** 
 2683              		.loc 1 381 0
 2684 0178 B8FFFFFF 		movl	$-1, %eax
 2684      FF
 2685 017d EBF7     		jmp	.L218
 2686              	.LVL313:
 2687              	.L238:
 402:src/mcu_msg.c ****         }
 2688              		.loc 1 402 0
 2689 017f B8FFFFFF 		movl	$-1, %eax
 2689      FF
 2690 0184 EBF0     		jmp	.L218
 2691              	.LVL314:
 2692              	.L240:
 425:src/mcu_msg.c ****         }
 2693              		.loc 1 425 0
 2694 0186 B8FFFFFF 		movl	$-1, %eax
GAS LISTING /tmp/ccXtVIbK.s 			page 71


 2694      FF
 2695              	.LVL315:
 2696 018b EBE9     		jmp	.L218
 2697              		.cfi_endproc
 2698              	.LFE42:
 2700              		.section	.text.msg_parser_get_string,"ax",@progbits
 2701              		.globl	msg_parser_get_string
 2703              	msg_parser_get_string:
 2704              	.LFB43:
 440:src/mcu_msg.c ****     msg_str_t res = __find_val(obj, key);
 2705              		.loc 1 440 0
 2706              		.cfi_startproc
 2707              	.LVL316:
 2708 0000 4883EC28 		subq	$40, %rsp
 2709              	.LCFI95:
 2710              		.cfi_def_cfa_offset 48
 440:src/mcu_msg.c ****     msg_str_t res = __find_val(obj, key);
 2711              		.loc 1 440 0
 2712 0004 64488B04 		movq	%fs:40, %rax
 2712      25280000 
 2712      00
 2713 000d 48894424 		movq	%rax, 24(%rsp)
 2713      18
 2714 0012 31C0     		xorl	%eax, %eax
 441:src/mcu_msg.c ****     char qmark;
 2715              		.loc 1 441 0
 2716 0014 FF742448 		pushq	72(%rsp)
 2717              	.LCFI96:
 2718              		.cfi_def_cfa_offset 56
 2719 0018 FF742448 		pushq	72(%rsp)
 2720              	.LCFI97:
 2721              		.cfi_def_cfa_offset 64
 2722 001c FF742448 		pushq	72(%rsp)
 2723              	.LCFI98:
 2724              		.cfi_def_cfa_offset 72
 2725 0020 FF742448 		pushq	72(%rsp)
 2726              	.LCFI99:
 2727              		.cfi_def_cfa_offset 80
 2728 0024 E8000000 		call	__find_val
 2728      00
 2729              	.LVL317:
 2730 0029 48894424 		movq	%rax, 32(%rsp)
 2730      20
 2731 002e 48895424 		movq	%rdx, 40(%rsp)
 2731      28
 445:src/mcu_msg.c ****         msg_destroy_string(&res);
 2732              		.loc 1 445 0
 2733 0033 4883C420 		addq	$32, %rsp
 2734              	.LCFI100:
 2735              		.cfi_def_cfa_offset 48
 2736 0037 4885C0   		testq	%rax, %rax
 2737 003a 7422     		je	.L253
 450:src/mcu_msg.c **** 
 2738              		.loc 1 450 0
 2739 003c 0FB638   		movzbl	(%rax), %edi
 2740              	.LVL318:
 452:src/mcu_msg.c ****         msg_destroy_string(&res);
GAS LISTING /tmp/ccXtVIbK.s 			page 72


 2741              		.loc 1 452 0
 2742 003f 4080FF27 		cmpb	$39, %dil
 2743 0043 0F95C1   		setne	%cl
 2744 0046 4080FF22 		cmpb	$34, %dil
 2745 004a 0F95C2   		setne	%dl
 2746 004d 84D1     		testb	%dl, %cl
 2747 004f 7520     		jne	.L254
 457:src/mcu_msg.c ****     while(__is_p_in_str(obj.content, p) && *p != qmark) { // calc len
 2748              		.loc 1 457 0
 2749 0051 488D7001 		leaq	1(%rax), %rsi
 2750 0055 48893424 		movq	%rsi, (%rsp)
 2751              	.LVL319:
 2752 0059 4889F0   		movq	%rsi, %rax
 458:src/mcu_msg.c ****         p++;
 2753              		.loc 1 458 0
 2754 005c EB2A     		jmp	.L248
 2755              	.LVL320:
 2756              	.L253:
 446:src/mcu_msg.c ****         return res;
 2757              		.loc 1 446 0
 2758 005e 4889E7   		movq	%rsp, %rdi
 2759 0061 E8000000 		call	msg_destroy_string
 2759      00
 2760              	.LVL321:
 447:src/mcu_msg.c ****     }
 2761              		.loc 1 447 0
 2762 0066 488B0424 		movq	(%rsp), %rax
 2763 006a 488B5424 		movq	8(%rsp), %rdx
 2763      08
 2764 006f EB43     		jmp	.L246
 2765              	.LVL322:
 2766              	.L254:
 453:src/mcu_msg.c ****         return res;
 2767              		.loc 1 453 0
 2768 0071 4889E7   		movq	%rsp, %rdi
 2769              	.LVL323:
 2770 0074 E8000000 		call	msg_destroy_string
 2770      00
 2771              	.LVL324:
 454:src/mcu_msg.c ****     }
 2772              		.loc 1 454 0
 2773 0079 488B0424 		movq	(%rsp), %rax
 2774 007d 488B5424 		movq	8(%rsp), %rdx
 2774      08
 2775 0082 EB30     		jmp	.L246
 2776              	.LVL325:
 2777              	.L250:
 459:src/mcu_msg.c ****     }
 2778              		.loc 1 459 0
 2779 0084 4883C001 		addq	$1, %rax
 2780              	.LVL326:
 2781              	.L248:
 2782              	.LBB128:
 2783              	.LBB129:
 169:src/mcu_msg.c **** }
 2784              		.loc 1 169 0
 2785 0088 4989C0   		movq	%rax, %r8
GAS LISTING /tmp/ccXtVIbK.s 			page 73


 2786 008b 4889C1   		movq	%rax, %rcx
 2787 008e 482B4C24 		subq	64(%rsp), %rcx
 2787      40
 2788 0093 0FB75424 		movzwl	72(%rsp), %edx
 2788      48
 2789              	.LVL327:
 2790              	.LBE129:
 2791              	.LBE128:
 458:src/mcu_msg.c ****         p++;
 2792              		.loc 1 458 0
 2793 0098 4839D1   		cmpq	%rdx, %rcx
 2794 009b 7D05     		jge	.L249
 458:src/mcu_msg.c ****         p++;
 2795              		.loc 1 458 0 is_stmt 0 discriminator 1
 2796 009d 403838   		cmpb	%dil, (%rax)
 2797 00a0 75E2     		jne	.L250
 2798              	.L249:
 461:src/mcu_msg.c ****     return res;
 2799              		.loc 1 461 0 is_stmt 1
 2800 00a2 4929F0   		subq	%rsi, %r8
 2801 00a5 66448944 		movw	%r8w, 8(%rsp)
 2801      2408
 462:src/mcu_msg.c **** }
 2802              		.loc 1 462 0
 2803 00ab 488B0424 		movq	(%rsp), %rax
 2804              	.LVL328:
 2805 00af 488B5424 		movq	8(%rsp), %rdx
 2805      08
 2806              	.LVL329:
 2807              	.L246:
 463:src/mcu_msg.c **** 
 2808              		.loc 1 463 0
 2809 00b4 488B7424 		movq	24(%rsp), %rsi
 2809      18
 2810 00b9 64483334 		xorq	%fs:40, %rsi
 2810      25280000 
 2810      00
 2811 00c2 7505     		jne	.L255
 2812 00c4 4883C428 		addq	$40, %rsp
 2813              	.LCFI101:
 2814              		.cfi_remember_state
 2815              		.cfi_def_cfa_offset 8
 2816 00c8 C3       		ret
 2817              	.L255:
 2818              	.LCFI102:
 2819              		.cfi_restore_state
 2820 00c9 E8000000 		call	__stack_chk_fail@PLT
 2820      00
 2821              	.LVL330:
 2822              		.cfi_endproc
 2823              	.LFE43:
 2825              		.section	.text.msg_string_hnd_create,"ax",@progbits
 2826              		.globl	msg_string_hnd_create
 2828              	msg_string_hnd_create:
 2829              	.LFB49:
 559:src/mcu_msg.c ****     msg_string_hnd_t hnd;
 2830              		.loc 1 559 0
GAS LISTING /tmp/ccXtVIbK.s 			page 74


 2831              		.cfi_startproc
 2832              	.LVL331:
 2833 0000 4889F8   		movq	%rdi, %rax
 561:src/mcu_msg.c ****     hnd.copy_to_chr_arr = __msg_str_copy_to_chr_arr;
 2834              		.loc 1 561 0
 2835 0003 48893500 		movq	%rsi, __msg_putc(%rip)
 2835      000000
 562:src/mcu_msg.c ****     hnd.copy = __msg_str_copy;
 2836              		.loc 1 562 0
 2837 000a 488D1500 		leaq	__msg_str_copy_to_chr_arr(%rip), %rdx
 2837      000000
 2838 0011 48895424 		movq	%rdx, -32(%rsp)
 2838      E0
 563:src/mcu_msg.c ****     hnd.print = __msg_print_str;
 2839              		.loc 1 563 0
 2840 0016 488D0D00 		leaq	__msg_str_copy(%rip), %rcx
 2840      000000
 2841 001d 48894C24 		movq	%rcx, -24(%rsp)
 2841      E8
 564:src/mcu_msg.c ****     return hnd;
 2842              		.loc 1 564 0
 2843 0022 488D3D00 		leaq	__msg_print_str(%rip), %rdi
 2843      000000
 2844              	.LVL332:
 2845 0029 48897C24 		movq	%rdi, -16(%rsp)
 2845      F0
 565:src/mcu_msg.c **** }
 2846              		.loc 1 565 0
 2847 002e 488B7424 		movq	-40(%rsp), %rsi
 2847      D8
 2848              	.LVL333:
 2849 0033 488B7C24 		movq	-32(%rsp), %rdi
 2849      E0
 2850 0038 488930   		movq	%rsi, (%rax)
 2851 003b 48897808 		movq	%rdi, 8(%rax)
 2852 003f 488B7424 		movq	-24(%rsp), %rsi
 2852      E8
 2853 0044 488B7C24 		movq	-16(%rsp), %rdi
 2853      F0
 2854 0049 48897010 		movq	%rsi, 16(%rax)
 2855 004d 48897818 		movq	%rdi, 24(%rax)
 566:src/mcu_msg.c **** 
 2856              		.loc 1 566 0
 2857 0051 C3       		ret
 2858              		.cfi_endproc
 2859              	.LFE49:
 2861              		.section	.text.msg_wrapper_hnd_create,"ax",@progbits
 2862              		.globl	msg_wrapper_hnd_create
 2864              	msg_wrapper_hnd_create:
 2865              	.LFB51:
 588:src/mcu_msg.c ****     msg_wrap_hnd_t hnd;
 2866              		.loc 1 588 0
 2867              		.cfi_startproc
 2868              	.LVL334:
 2869 0000 4889F8   		movq	%rdi, %rax
 590:src/mcu_msg.c ****     hnd.print = __msg_wrapper_print_msg;
 2870              		.loc 1 590 0
GAS LISTING /tmp/ccXtVIbK.s 			page 75


 2871 0003 48893500 		movq	%rsi, __msg_putc(%rip)
 2871      000000
 591:src/mcu_msg.c ****     hnd.print_to_buff = __msg_wrapper_print_msg_to_buff;
 2872              		.loc 1 591 0
 2873 000a 488D1500 		leaq	__msg_wrapper_print_msg(%rip), %rdx
 2873      000000
 2874 0011 48895424 		movq	%rdx, -40(%rsp)
 2874      D8
 592:src/mcu_msg.c ****     hnd.print_obj = __msg_wrapper_print_obj;
 2875              		.loc 1 592 0
 2876 0016 488D0D00 		leaq	__msg_wrapper_print_msg_to_buff(%rip), %rcx
 2876      000000
 2877 001d 48894C24 		movq	%rcx, -16(%rsp)
 2877      F0
 593:src/mcu_msg.c ****     hnd.print_cmd = __msg_wrapper_print_cmd;
 2878              		.loc 1 593 0
 2879 0022 488D3D00 		leaq	__msg_wrapper_print_obj(%rip), %rdi
 2879      000000
 2880              	.LVL335:
 2881 0029 48897C24 		movq	%rdi, -32(%rsp)
 2881      E0
 594:src/mcu_msg.c ****     return hnd;
 2882              		.loc 1 594 0
 2883 002e 488D1500 		leaq	__msg_wrapper_print_cmd(%rip), %rdx
 2883      000000
 2884 0035 48895424 		movq	%rdx, -24(%rsp)
 2884      E8
 595:src/mcu_msg.c **** }
 2885              		.loc 1 595 0
 2886 003a 488B7424 		movq	-40(%rsp), %rsi
 2886      D8
 2887              	.LVL336:
 2888 003f 488B7C24 		movq	-32(%rsp), %rdi
 2888      E0
 2889 0044 488930   		movq	%rsi, (%rax)
 2890 0047 48897808 		movq	%rdi, 8(%rax)
 2891 004b 488B7424 		movq	-24(%rsp), %rsi
 2891      E8
 2892 0050 488B7C24 		movq	-16(%rsp), %rdi
 2892      F0
 2893 0055 48897010 		movq	%rsi, 16(%rax)
 2894 0059 48897818 		movq	%rdi, 24(%rax)
 596:src/mcu_msg.c **** 
 2895              		.loc 1 596 0
 2896 005d C3       		ret
 2897              		.cfi_endproc
 2898              	.LFE51:
 2900              		.section	.text.msg_wrap_destroy,"ax",@progbits
 2901              		.globl	msg_wrap_destroy
 2903              	msg_wrap_destroy:
 2904              	.LFB56:
 682:src/mcu_msg.c **** 
 683:src/mcu_msg.c **** void msg_wrap_destroy(msg_wrap_t *msg)
 684:src/mcu_msg.c **** {
 2905              		.loc 1 684 0
 2906              		.cfi_startproc
 2907              	.LVL337:
GAS LISTING /tmp/ccXtVIbK.s 			page 76


 2908 0000 53       		pushq	%rbx
 2909              	.LCFI103:
 2910              		.cfi_def_cfa_offset 16
 2911              		.cfi_offset 3, -16
 2912 0001 4889FB   		movq	%rdi, %rbx
 685:src/mcu_msg.c ****     msg_destroy_string(&msg->id);
 2913              		.loc 1 685 0
 2914 0004 E8000000 		call	msg_destroy_string
 2914      00
 2915              	.LVL338:
 686:src/mcu_msg.c ****     msg->cmd_queue=NULL;
 2916              		.loc 1 686 0
 2917 0009 48C74318 		movq	$0, 24(%rbx)
 2917      00000000 
 687:src/mcu_msg.c ****     msg->obj_queue=NULL;
 2918              		.loc 1 687 0
 2919 0011 48C74310 		movq	$0, 16(%rbx)
 2919      00000000 
 688:src/mcu_msg.c **** }
 2920              		.loc 1 688 0
 2921 0019 5B       		popq	%rbx
 2922              	.LCFI104:
 2923              		.cfi_def_cfa_offset 8
 2924              	.LVL339:
 2925 001a C3       		ret
 2926              		.cfi_endproc
 2927              	.LFE56:
 2929              		.section	.text.msg_wrap_destroy_obj,"ax",@progbits
 2930              		.globl	msg_wrap_destroy_obj
 2932              	msg_wrap_destroy_obj:
 2933              	.LFB57:
 689:src/mcu_msg.c **** 
 690:src/mcu_msg.c **** void msg_wrap_destroy_obj(msg_wrap_obj_t *obj)
 691:src/mcu_msg.c **** {
 2934              		.loc 1 691 0
 2935              		.cfi_startproc
 2936              	.LVL340:
 2937 0000 53       		pushq	%rbx
 2938              	.LCFI105:
 2939              		.cfi_def_cfa_offset 16
 2940              		.cfi_offset 3, -16
 2941 0001 4889FB   		movq	%rdi, %rbx
 692:src/mcu_msg.c ****     msg_destroy_string(&obj->id);
 2942              		.loc 1 692 0
 2943 0004 E8000000 		call	msg_destroy_string
 2943      00
 2944              	.LVL341:
 693:src/mcu_msg.c ****     obj->int_queue = NULL;
 2945              		.loc 1 693 0
 2946 0009 48C74310 		movq	$0, 16(%rbx)
 2946      00000000 
 694:src/mcu_msg.c ****     obj->float_queue = NULL;
 2947              		.loc 1 694 0
 2948 0011 48C74318 		movq	$0, 24(%rbx)
 2948      00000000 
 695:src/mcu_msg.c ****     obj->string_queue = NULL;
 2949              		.loc 1 695 0
GAS LISTING /tmp/ccXtVIbK.s 			page 77


 2950 0019 48C74320 		movq	$0, 32(%rbx)
 2950      00000000 
 696:src/mcu_msg.c ****     obj->next = NULL;
 2951              		.loc 1 696 0
 2952 0021 48C74328 		movq	$0, 40(%rbx)
 2952      00000000 
 697:src/mcu_msg.c **** }
 2953              		.loc 1 697 0
 2954 0029 5B       		popq	%rbx
 2955              	.LCFI106:
 2956              		.cfi_def_cfa_offset 8
 2957              	.LVL342:
 2958 002a C3       		ret
 2959              		.cfi_endproc
 2960              	.LFE57:
 2962              		.section	.text.msg_wrap_destroy_str,"ax",@progbits
 2963              		.globl	msg_wrap_destroy_str
 2965              	msg_wrap_destroy_str:
 2966              	.LFB58:
 698:src/mcu_msg.c **** 
 699:src/mcu_msg.c **** void msg_wrap_destroy_str(msg_wrap_str_t *str)
 700:src/mcu_msg.c **** {
 2967              		.loc 1 700 0
 2968              		.cfi_startproc
 2969              	.LVL343:
 2970 0000 53       		pushq	%rbx
 2971              	.LCFI107:
 2972              		.cfi_def_cfa_offset 16
 2973              		.cfi_offset 3, -16
 2974 0001 4889FB   		movq	%rdi, %rbx
 701:src/mcu_msg.c ****     msg_destroy_string(&str->id);
 2975              		.loc 1 701 0
 2976 0004 E8000000 		call	msg_destroy_string
 2976      00
 2977              	.LVL344:
 702:src/mcu_msg.c ****     msg_destroy_string(&str->content);
 2978              		.loc 1 702 0
 2979 0009 488D7B10 		leaq	16(%rbx), %rdi
 2980 000d E8000000 		call	msg_destroy_string
 2980      00
 2981              	.LVL345:
 703:src/mcu_msg.c ****     str->next = NULL;
 2982              		.loc 1 703 0
 2983 0012 48C74320 		movq	$0, 32(%rbx)
 2983      00000000 
 704:src/mcu_msg.c **** }
 2984              		.loc 1 704 0
 2985 001a 5B       		popq	%rbx
 2986              	.LCFI108:
 2987              		.cfi_def_cfa_offset 8
 2988              	.LVL346:
 2989 001b C3       		ret
 2990              		.cfi_endproc
 2991              	.LFE58:
 2993              		.section	.text.msg_wrap_destroy_int,"ax",@progbits
 2994              		.globl	msg_wrap_destroy_int
 2996              	msg_wrap_destroy_int:
GAS LISTING /tmp/ccXtVIbK.s 			page 78


 2997              	.LFB59:
 705:src/mcu_msg.c **** 
 706:src/mcu_msg.c **** void msg_wrap_destroy_int(msg_wrap_int_t *i)
 707:src/mcu_msg.c **** {
 2998              		.loc 1 707 0
 2999              		.cfi_startproc
 3000              	.LVL347:
 3001 0000 53       		pushq	%rbx
 3002              	.LCFI109:
 3003              		.cfi_def_cfa_offset 16
 3004              		.cfi_offset 3, -16
 3005 0001 4889FB   		movq	%rdi, %rbx
 708:src/mcu_msg.c ****     msg_destroy_string(&i->id);
 3006              		.loc 1 708 0
 3007 0004 E8000000 		call	msg_destroy_string
 3007      00
 3008              	.LVL348:
 709:src/mcu_msg.c ****     i->val = 0;
 3009              		.loc 1 709 0
 3010 0009 C7431000 		movl	$0, 16(%rbx)
 3010      000000
 710:src/mcu_msg.c ****     i->next = NULL;
 3011              		.loc 1 710 0
 3012 0010 48C74318 		movq	$0, 24(%rbx)
 3012      00000000 
 711:src/mcu_msg.c **** }
 3013              		.loc 1 711 0
 3014 0018 5B       		popq	%rbx
 3015              	.LCFI110:
 3016              		.cfi_def_cfa_offset 8
 3017              	.LVL349:
 3018 0019 C3       		ret
 3019              		.cfi_endproc
 3020              	.LFE59:
 3022              		.section	.text.msg_wrap_destroy_float,"ax",@progbits
 3023              		.globl	msg_wrap_destroy_float
 3025              	msg_wrap_destroy_float:
 3026              	.LFB60:
 712:src/mcu_msg.c **** 
 713:src/mcu_msg.c **** void msg_wrap_destroy_float(msg_wrap_float_t *f)
 714:src/mcu_msg.c **** {
 3027              		.loc 1 714 0
 3028              		.cfi_startproc
 3029              	.LVL350:
 3030 0000 53       		pushq	%rbx
 3031              	.LCFI111:
 3032              		.cfi_def_cfa_offset 16
 3033              		.cfi_offset 3, -16
 3034 0001 4889FB   		movq	%rdi, %rbx
 715:src/mcu_msg.c ****     msg_destroy_string(&f->id);
 3035              		.loc 1 715 0
 3036 0004 E8000000 		call	msg_destroy_string
 3036      00
 3037              	.LVL351:
 716:src/mcu_msg.c ****     f->val = 0.0;
 3038              		.loc 1 716 0
 3039 0009 C7431000 		movl	$0x00000000, 16(%rbx)
GAS LISTING /tmp/ccXtVIbK.s 			page 79


 3039      000000
 717:src/mcu_msg.c ****     f->next = NULL;
 3040              		.loc 1 717 0
 3041 0010 48C74318 		movq	$0, 24(%rbx)
 3041      00000000 
 718:src/mcu_msg.c ****     f->prec = 0;
 3042              		.loc 1 718 0
 3043 0018 C6431400 		movb	$0, 20(%rbx)
 719:src/mcu_msg.c **** }
 3044              		.loc 1 719 0
 3045 001c 5B       		popq	%rbx
 3046              	.LCFI112:
 3047              		.cfi_def_cfa_offset 8
 3048              	.LVL352:
 3049 001d C3       		ret
 3050              		.cfi_endproc
 3051              	.LFE60:
 3053              		.section	.text.msg_wrapper_init_msg,"ax",@progbits
 3054              		.globl	msg_wrapper_init_msg
 3056              	msg_wrapper_init_msg:
 3057              	.LFB61:
 720:src/mcu_msg.c **** 
 721:src/mcu_msg.c **** 
 722:src/mcu_msg.c **** 
 723:src/mcu_msg.c **** msg_wrap_t msg_wrapper_init_msg(char *msg_id)
 724:src/mcu_msg.c **** {
 3058              		.loc 1 724 0
 3059              		.cfi_startproc
 3060              	.LVL353:
 3061 0000 53       		pushq	%rbx
 3062              	.LCFI113:
 3063              		.cfi_def_cfa_offset 16
 3064              		.cfi_offset 3, -16
 3065 0001 4883EC20 		subq	$32, %rsp
 3066              	.LCFI114:
 3067              		.cfi_def_cfa_offset 48
 3068 0005 4889FB   		movq	%rdi, %rbx
 725:src/mcu_msg.c ****     msg_wrap_t res;
 726:src/mcu_msg.c ****     res.id = msg_init_string(msg_id);
 3069              		.loc 1 726 0
 3070 0008 4889F7   		movq	%rsi, %rdi
 3071              	.LVL354:
 3072 000b E8000000 		call	msg_init_string
 3072      00
 3073              	.LVL355:
 727:src/mcu_msg.c ****     res.cmd_queue = NULL;
 3074              		.loc 1 727 0
 3075 0010 48C74424 		movq	$0, 24(%rsp)
 3075      18000000 
 3075      00
 728:src/mcu_msg.c ****     res.obj_queue = NULL;
 3076              		.loc 1 728 0
 3077 0019 48C74424 		movq	$0, 16(%rsp)
 3077      10000000 
 3077      00
 729:src/mcu_msg.c ****     return res;
 3078              		.loc 1 729 0
GAS LISTING /tmp/ccXtVIbK.s 			page 80


 3079 0022 488903   		movq	%rax, (%rbx)
 3080 0025 48895308 		movq	%rdx, 8(%rbx)
 3081 0029 488B4424 		movq	16(%rsp), %rax
 3081      10
 3082 002e 488B5424 		movq	24(%rsp), %rdx
 3082      18
 3083 0033 48894310 		movq	%rax, 16(%rbx)
 3084 0037 48895318 		movq	%rdx, 24(%rbx)
 730:src/mcu_msg.c **** }
 3085              		.loc 1 730 0
 3086 003b 4889D8   		movq	%rbx, %rax
 3087 003e 4883C420 		addq	$32, %rsp
 3088              	.LCFI115:
 3089              		.cfi_def_cfa_offset 16
 3090 0042 5B       		popq	%rbx
 3091              	.LCFI116:
 3092              		.cfi_def_cfa_offset 8
 3093              	.LVL356:
 3094 0043 C3       		ret
 3095              		.cfi_endproc
 3096              	.LFE61:
 3098              		.section	.text.msg_wrapper_init_cmd,"ax",@progbits
 3099              		.globl	msg_wrapper_init_cmd
 3101              	msg_wrapper_init_cmd:
 3102              	.LFB62:
 731:src/mcu_msg.c **** 
 732:src/mcu_msg.c **** 
 733:src/mcu_msg.c **** msg_wrap_cmd_t msg_wrapper_init_cmd(char *cmd)
 734:src/mcu_msg.c **** {
 3103              		.loc 1 734 0
 3104              		.cfi_startproc
 3105              	.LVL357:
 3106 0000 53       		pushq	%rbx
 3107              	.LCFI117:
 3108              		.cfi_def_cfa_offset 16
 3109              		.cfi_offset 3, -16
 3110 0001 4883EC20 		subq	$32, %rsp
 3111              	.LCFI118:
 3112              		.cfi_def_cfa_offset 48
 3113 0005 4889FB   		movq	%rdi, %rbx
 735:src/mcu_msg.c ****     msg_wrap_cmd_t res;
 736:src/mcu_msg.c ****     res.cmd = msg_init_string(cmd);
 3114              		.loc 1 736 0
 3115 0008 4889F7   		movq	%rsi, %rdi
 3116              	.LVL358:
 3117 000b E8000000 		call	msg_init_string
 3117      00
 3118              	.LVL359:
 737:src/mcu_msg.c ****     res.next = NULL;
 738:src/mcu_msg.c ****     return res;
 3119              		.loc 1 738 0
 3120 0010 488903   		movq	%rax, (%rbx)
 3121 0013 48895308 		movq	%rdx, 8(%rbx)
 3122 0017 48C74310 		movq	$0, 16(%rbx)
 3122      00000000 
 739:src/mcu_msg.c **** }
 3123              		.loc 1 739 0
GAS LISTING /tmp/ccXtVIbK.s 			page 81


 3124 001f 4889D8   		movq	%rbx, %rax
 3125 0022 4883C420 		addq	$32, %rsp
 3126              	.LCFI119:
 3127              		.cfi_def_cfa_offset 16
 3128 0026 5B       		popq	%rbx
 3129              	.LCFI120:
 3130              		.cfi_def_cfa_offset 8
 3131              	.LVL360:
 3132 0027 C3       		ret
 3133              		.cfi_endproc
 3134              	.LFE62:
 3136              		.section	.text.msg_wrapper_init_obj,"ax",@progbits
 3137              		.globl	msg_wrapper_init_obj
 3139              	msg_wrapper_init_obj:
 3140              	.LFB63:
 740:src/mcu_msg.c **** 
 741:src/mcu_msg.c **** msg_wrap_obj_t msg_wrapper_init_obj(char *obj_id)
 742:src/mcu_msg.c **** {
 3141              		.loc 1 742 0
 3142              		.cfi_startproc
 3143              	.LVL361:
 3144 0000 53       		pushq	%rbx
 3145              	.LCFI121:
 3146              		.cfi_def_cfa_offset 16
 3147              		.cfi_offset 3, -16
 3148 0001 4883EC30 		subq	$48, %rsp
 3149              	.LCFI122:
 3150              		.cfi_def_cfa_offset 64
 3151 0005 4889FB   		movq	%rdi, %rbx
 743:src/mcu_msg.c ****     msg_wrap_obj_t res;
 744:src/mcu_msg.c ****     res.id = msg_init_string(obj_id);
 3152              		.loc 1 744 0
 3153 0008 4889F7   		movq	%rsi, %rdi
 3154              	.LVL362:
 3155 000b E8000000 		call	msg_init_string
 3155      00
 3156              	.LVL363:
 745:src/mcu_msg.c ****     res.int_queue = NULL;
 3157              		.loc 1 745 0
 3158 0010 48C74424 		movq	$0, 16(%rsp)
 3158      10000000 
 3158      00
 746:src/mcu_msg.c ****     res.float_queue = NULL;
 3159              		.loc 1 746 0
 3160 0019 48C74424 		movq	$0, 24(%rsp)
 3160      18000000 
 3160      00
 747:src/mcu_msg.c ****     res.string_queue = NULL;
 3161              		.loc 1 747 0
 3162 0022 48C74424 		movq	$0, 32(%rsp)
 3162      20000000 
 3162      00
 748:src/mcu_msg.c ****     res.next = NULL;
 3163              		.loc 1 748 0
 3164 002b 48C74424 		movq	$0, 40(%rsp)
 3164      28000000 
 3164      00
GAS LISTING /tmp/ccXtVIbK.s 			page 82


 749:src/mcu_msg.c ****     return res;
 3165              		.loc 1 749 0
 3166 0034 488903   		movq	%rax, (%rbx)
 3167 0037 48895308 		movq	%rdx, 8(%rbx)
 3168 003b 488B4424 		movq	16(%rsp), %rax
 3168      10
 3169 0040 488B5424 		movq	24(%rsp), %rdx
 3169      18
 3170 0045 48894310 		movq	%rax, 16(%rbx)
 3171 0049 48895318 		movq	%rdx, 24(%rbx)
 3172 004d 488B4424 		movq	32(%rsp), %rax
 3172      20
 3173 0052 488B5424 		movq	40(%rsp), %rdx
 3173      28
 3174 0057 48894320 		movq	%rax, 32(%rbx)
 3175 005b 48895328 		movq	%rdx, 40(%rbx)
 750:src/mcu_msg.c **** }
 3176              		.loc 1 750 0
 3177 005f 4889D8   		movq	%rbx, %rax
 3178 0062 4883C430 		addq	$48, %rsp
 3179              	.LCFI123:
 3180              		.cfi_def_cfa_offset 16
 3181 0066 5B       		popq	%rbx
 3182              	.LCFI124:
 3183              		.cfi_def_cfa_offset 8
 3184              	.LVL364:
 3185 0067 C3       		ret
 3186              		.cfi_endproc
 3187              	.LFE63:
 3189              		.section	.text.msg_wrapper_init_string,"ax",@progbits
 3190              		.globl	msg_wrapper_init_string
 3192              	msg_wrapper_init_string:
 3193              	.LFB64:
 751:src/mcu_msg.c **** 
 752:src/mcu_msg.c **** msg_wrap_str_t msg_wrapper_init_string(char *id, char *content)
 753:src/mcu_msg.c **** {
 3194              		.loc 1 753 0
 3195              		.cfi_startproc
 3196              	.LVL365:
 3197 0000 4156     		pushq	%r14
 3198              	.LCFI125:
 3199              		.cfi_def_cfa_offset 16
 3200              		.cfi_offset 14, -16
 3201 0002 4155     		pushq	%r13
 3202              	.LCFI126:
 3203              		.cfi_def_cfa_offset 24
 3204              		.cfi_offset 13, -24
 3205 0004 55       		pushq	%rbp
 3206              	.LCFI127:
 3207              		.cfi_def_cfa_offset 32
 3208              		.cfi_offset 6, -32
 3209 0005 53       		pushq	%rbx
 3210              	.LCFI128:
 3211              		.cfi_def_cfa_offset 40
 3212              		.cfi_offset 3, -40
 3213 0006 4883EC38 		subq	$56, %rsp
 3214              	.LCFI129:
GAS LISTING /tmp/ccXtVIbK.s 			page 83


 3215              		.cfi_def_cfa_offset 96
 3216 000a 4889FB   		movq	%rdi, %rbx
 3217 000d 4889D5   		movq	%rdx, %rbp
 754:src/mcu_msg.c ****     msg_wrap_str_t res;
 755:src/mcu_msg.c ****     res.id = msg_init_string(id);
 3218              		.loc 1 755 0
 3219 0010 4889F7   		movq	%rsi, %rdi
 3220              	.LVL366:
 3221 0013 E8000000 		call	msg_init_string
 3221      00
 3222              	.LVL367:
 3223 0018 4989C5   		movq	%rax, %r13
 3224 001b 4989D6   		movq	%rdx, %r14
 756:src/mcu_msg.c ****     res.content = msg_init_string(content);
 3225              		.loc 1 756 0
 3226 001e 4889EF   		movq	%rbp, %rdi
 3227 0021 E8000000 		call	msg_init_string
 3227      00
 3228              	.LVL368:
 757:src/mcu_msg.c ****     res.next = NULL;
 758:src/mcu_msg.c ****     return res;
 3229              		.loc 1 758 0
 3230 0026 4C892B   		movq	%r13, (%rbx)
 3231 0029 4C897308 		movq	%r14, 8(%rbx)
 3232 002d 48894310 		movq	%rax, 16(%rbx)
 3233 0031 48895318 		movq	%rdx, 24(%rbx)
 3234 0035 48C74320 		movq	$0, 32(%rbx)
 3234      00000000 
 759:src/mcu_msg.c **** }
 3235              		.loc 1 759 0
 3236 003d 4889D8   		movq	%rbx, %rax
 3237 0040 4883C438 		addq	$56, %rsp
 3238              	.LCFI130:
 3239              		.cfi_def_cfa_offset 40
 3240 0044 5B       		popq	%rbx
 3241              	.LCFI131:
 3242              		.cfi_def_cfa_offset 32
 3243              	.LVL369:
 3244 0045 5D       		popq	%rbp
 3245              	.LCFI132:
 3246              		.cfi_def_cfa_offset 24
 3247              	.LVL370:
 3248 0046 415D     		popq	%r13
 3249              	.LCFI133:
 3250              		.cfi_def_cfa_offset 16
 3251 0048 415E     		popq	%r14
 3252              	.LCFI134:
 3253              		.cfi_def_cfa_offset 8
 3254 004a C3       		ret
 3255              		.cfi_endproc
 3256              	.LFE64:
 3258              		.section	.text.msg_wrapper_init_int,"ax",@progbits
 3259              		.globl	msg_wrapper_init_int
 3261              	msg_wrapper_init_int:
 3262              	.LFB65:
 760:src/mcu_msg.c **** 
 761:src/mcu_msg.c **** msg_wrap_int_t msg_wrapper_init_int(char *id, int val)
GAS LISTING /tmp/ccXtVIbK.s 			page 84


 762:src/mcu_msg.c **** {
 3263              		.loc 1 762 0
 3264              		.cfi_startproc
 3265              	.LVL371:
 3266 0000 55       		pushq	%rbp
 3267              	.LCFI135:
 3268              		.cfi_def_cfa_offset 16
 3269              		.cfi_offset 6, -16
 3270 0001 53       		pushq	%rbx
 3271              	.LCFI136:
 3272              		.cfi_def_cfa_offset 24
 3273              		.cfi_offset 3, -24
 3274 0002 4883EC28 		subq	$40, %rsp
 3275              	.LCFI137:
 3276              		.cfi_def_cfa_offset 64
 3277 0006 4889FB   		movq	%rdi, %rbx
 3278 0009 89D5     		movl	%edx, %ebp
 763:src/mcu_msg.c ****     msg_wrap_int_t res;
 764:src/mcu_msg.c ****     res.id = msg_init_string(id);
 3279              		.loc 1 764 0
 3280 000b 4889F7   		movq	%rsi, %rdi
 3281              	.LVL372:
 3282 000e E8000000 		call	msg_init_string
 3282      00
 3283              	.LVL373:
 765:src/mcu_msg.c ****     res.val = val;
 3284              		.loc 1 765 0
 3285 0013 896C2410 		movl	%ebp, 16(%rsp)
 766:src/mcu_msg.c ****     res.next = NULL;
 3286              		.loc 1 766 0
 3287 0017 48C74424 		movq	$0, 24(%rsp)
 3287      18000000 
 3287      00
 767:src/mcu_msg.c ****     return res;
 3288              		.loc 1 767 0
 3289 0020 488903   		movq	%rax, (%rbx)
 3290 0023 48895308 		movq	%rdx, 8(%rbx)
 3291 0027 488B4424 		movq	16(%rsp), %rax
 3291      10
 3292 002c 488B5424 		movq	24(%rsp), %rdx
 3292      18
 3293 0031 48894310 		movq	%rax, 16(%rbx)
 3294 0035 48895318 		movq	%rdx, 24(%rbx)
 768:src/mcu_msg.c **** }
 3295              		.loc 1 768 0
 3296 0039 4889D8   		movq	%rbx, %rax
 3297 003c 4883C428 		addq	$40, %rsp
 3298              	.LCFI138:
 3299              		.cfi_def_cfa_offset 24
 3300 0040 5B       		popq	%rbx
 3301              	.LCFI139:
 3302              		.cfi_def_cfa_offset 16
 3303              	.LVL374:
 3304 0041 5D       		popq	%rbp
 3305              	.LCFI140:
 3306              		.cfi_def_cfa_offset 8
 3307              	.LVL375:
GAS LISTING /tmp/ccXtVIbK.s 			page 85


 3308 0042 C3       		ret
 3309              		.cfi_endproc
 3310              	.LFE65:
 3312              		.section	.text.msg_wrapper_init_float,"ax",@progbits
 3313              		.globl	msg_wrapper_init_float
 3315              	msg_wrapper_init_float:
 3316              	.LFB66:
 769:src/mcu_msg.c **** 
 770:src/mcu_msg.c **** msg_wrap_float_t msg_wrapper_init_float(char *id, float val, uint8_t prec)
 771:src/mcu_msg.c **** {
 3317              		.loc 1 771 0
 3318              		.cfi_startproc
 3319              	.LVL376:
 3320 0000 4154     		pushq	%r12
 3321              	.LCFI141:
 3322              		.cfi_def_cfa_offset 16
 3323              		.cfi_offset 12, -16
 3324 0002 55       		pushq	%rbp
 3325              	.LCFI142:
 3326              		.cfi_def_cfa_offset 24
 3327              		.cfi_offset 6, -24
 3328 0003 53       		pushq	%rbx
 3329              	.LCFI143:
 3330              		.cfi_def_cfa_offset 32
 3331              		.cfi_offset 3, -32
 3332 0004 4883EC20 		subq	$32, %rsp
 3333              	.LCFI144:
 3334              		.cfi_def_cfa_offset 64
 3335 0008 4889FB   		movq	%rdi, %rbx
 3336 000b 66410F7E 		movd	%xmm0, %r12d
 3336      C4
 3337 0010 89D5     		movl	%edx, %ebp
 772:src/mcu_msg.c ****     msg_wrap_float_t res;
 773:src/mcu_msg.c ****     res.id = msg_init_string(id);
 3338              		.loc 1 773 0
 3339 0012 4889F7   		movq	%rsi, %rdi
 3340              	.LVL377:
 3341 0015 E8000000 		call	msg_init_string
 3341      00
 3342              	.LVL378:
 774:src/mcu_msg.c ****     res.val = val;
 3343              		.loc 1 774 0
 3344 001a 44896424 		movl	%r12d, 16(%rsp)
 3344      10
 775:src/mcu_msg.c ****     res.prec = prec;
 3345              		.loc 1 775 0
 3346 001f 40886C24 		movb	%bpl, 20(%rsp)
 3346      14
 776:src/mcu_msg.c ****     res.next = NULL;
 3347              		.loc 1 776 0
 3348 0024 48C74424 		movq	$0, 24(%rsp)
 3348      18000000 
 3348      00
 777:src/mcu_msg.c ****     return res;
 3349              		.loc 1 777 0
 3350 002d 488903   		movq	%rax, (%rbx)
 3351 0030 48895308 		movq	%rdx, 8(%rbx)
GAS LISTING /tmp/ccXtVIbK.s 			page 86


 3352 0034 488B4424 		movq	16(%rsp), %rax
 3352      10
 3353 0039 488B5424 		movq	24(%rsp), %rdx
 3353      18
 3354 003e 48894310 		movq	%rax, 16(%rbx)
 3355 0042 48895318 		movq	%rdx, 24(%rbx)
 778:src/mcu_msg.c **** }
 3356              		.loc 1 778 0
 3357 0046 4889D8   		movq	%rbx, %rax
 3358 0049 4883C420 		addq	$32, %rsp
 3359              	.LCFI145:
 3360              		.cfi_def_cfa_offset 32
 3361 004d 5B       		popq	%rbx
 3362              	.LCFI146:
 3363              		.cfi_def_cfa_offset 24
 3364              	.LVL379:
 3365 004e 5D       		popq	%rbp
 3366              	.LCFI147:
 3367              		.cfi_def_cfa_offset 16
 3368 004f 415C     		popq	%r12
 3369              	.LCFI148:
 3370              		.cfi_def_cfa_offset 8
 3371              	.LVL380:
 3372 0051 C3       		ret
 3373              		.cfi_endproc
 3374              	.LFE66:
 3376              		.section	.text.msg_wrapper_add_string_to_obj,"ax",@progbits
 3377              		.globl	msg_wrapper_add_string_to_obj
 3379              	msg_wrapper_add_string_to_obj:
 3380              	.LFB67:
 779:src/mcu_msg.c **** 
 780:src/mcu_msg.c **** 
 781:src/mcu_msg.c **** void msg_wrapper_add_string_to_obj(msg_wrap_obj_t *obj, msg_wrap_str_t *str)
 782:src/mcu_msg.c **** {
 3381              		.loc 1 782 0
 3382              		.cfi_startproc
 3383              	.LVL381:
 783:src/mcu_msg.c ****     msg_wrap_str_t *strp;
 784:src/mcu_msg.c ****     if(obj->string_queue == NULL) { //empty
 3384              		.loc 1 784 0
 3385 0000 488B5720 		movq	32(%rdi), %rdx
 3386 0004 4885D2   		testq	%rdx, %rdx
 3387 0007 7510     		jne	.L281
 785:src/mcu_msg.c ****         obj->string_queue = str;
 3388              		.loc 1 785 0
 3389 0009 48897720 		movq	%rsi, 32(%rdi)
 786:src/mcu_msg.c ****         obj->string_queue->next = NULL;
 3390              		.loc 1 786 0
 3391 000d 48C74620 		movq	$0, 32(%rsi)
 3391      00000000 
 3392 0015 C3       		ret
 3393              	.LVL382:
 3394              	.L283:
 787:src/mcu_msg.c ****     } else {
 788:src/mcu_msg.c ****         strp = obj->string_queue;
 789:src/mcu_msg.c **** 
 790:src/mcu_msg.c ****         while(strp->next != NULL) 
GAS LISTING /tmp/ccXtVIbK.s 			page 87


 791:src/mcu_msg.c ****             strp = strp->next;
 3395              		.loc 1 791 0
 3396 0016 4889C2   		movq	%rax, %rdx
 3397              	.LVL383:
 3398              	.L281:
 790:src/mcu_msg.c ****             strp = strp->next;
 3399              		.loc 1 790 0
 3400 0019 488B4220 		movq	32(%rdx), %rax
 3401 001d 4885C0   		testq	%rax, %rax
 3402 0020 75F4     		jne	.L283
 792:src/mcu_msg.c ****         strp->next = str;
 3403              		.loc 1 792 0
 3404 0022 48897220 		movq	%rsi, 32(%rdx)
 793:src/mcu_msg.c ****         str->next = NULL;
 3405              		.loc 1 793 0
 3406 0026 48C74620 		movq	$0, 32(%rsi)
 3406      00000000 
 794:src/mcu_msg.c ****     }
 795:src/mcu_msg.c **** }
 3407              		.loc 1 795 0
 3408 002e C3       		ret
 3409              		.cfi_endproc
 3410              	.LFE67:
 3412              		.section	.text.msg_wrapper_rm_string_from_obj,"ax",@progbits
 3413              		.globl	msg_wrapper_rm_string_from_obj
 3415              	msg_wrapper_rm_string_from_obj:
 3416              	.LFB68:
 796:src/mcu_msg.c **** 
 797:src/mcu_msg.c **** 
 798:src/mcu_msg.c **** void msg_wrapper_rm_string_from_obj(msg_wrap_obj_t *obj, msg_wrap_str_t *str)
 799:src/mcu_msg.c **** {
 3417              		.loc 1 799 0
 3418              		.cfi_startproc
 3419              	.LVL384:
 800:src/mcu_msg.c ****     msg_wrap_str_t *sp, *prev;
 801:src/mcu_msg.c ****     for(sp = obj->string_queue, prev = NULL; sp != NULL; sp = sp->next){
 3420              		.loc 1 801 0
 3421 0000 488B4720 		movq	32(%rdi), %rax
 3422              	.LVL385:
 3423 0004 BA000000 		movl	$0, %edx
 3423      00
 3424              	.LVL386:
 3425              	.L285:
 3426              		.loc 1 801 0 is_stmt 0 discriminator 1
 3427 0009 4885C0   		testq	%rax, %rax
 3428 000c 742E     		je	.L291
 802:src/mcu_msg.c ****         if(sp == str) { 
 3429              		.loc 1 802 0 is_stmt 1
 3430 000e 4839F0   		cmpq	%rsi, %rax
 3431 0011 7409     		je	.L292
 3432              	.LVL387:
 803:src/mcu_msg.c ****             if(prev == NULL) { // if p is the head of the queue, reinit the head
 804:src/mcu_msg.c ****                 obj->string_queue = str->next;
 805:src/mcu_msg.c ****             } else {
 806:src/mcu_msg.c ****                 prev->next = str->next; //skip the expected
 807:src/mcu_msg.c ****             }
 808:src/mcu_msg.c ****             str->next = NULL; // reset next
GAS LISTING /tmp/ccXtVIbK.s 			page 88


 809:src/mcu_msg.c ****             return;
 810:src/mcu_msg.c ****         }
 811:src/mcu_msg.c ****         prev = sp;
 3433              		.loc 1 811 0 discriminator 2
 3434 0013 4889C2   		movq	%rax, %rdx
 801:src/mcu_msg.c ****         if(sp == str) { 
 3435              		.loc 1 801 0 discriminator 2
 3436 0016 488B4020 		movq	32(%rax), %rax
 3437              	.LVL388:
 3438 001a EBED     		jmp	.L285
 3439              	.L292:
 803:src/mcu_msg.c ****             if(prev == NULL) { // if p is the head of the queue, reinit the head
 3440              		.loc 1 803 0
 3441 001c 4885D2   		testq	%rdx, %rdx
 3442 001f 7411     		je	.L293
 806:src/mcu_msg.c ****             }
 3443              		.loc 1 806 0
 3444 0021 488B4620 		movq	32(%rsi), %rax
 3445              	.LVL389:
 3446 0025 48894220 		movq	%rax, 32(%rdx)
 3447              	.L288:
 808:src/mcu_msg.c ****             return;
 3448              		.loc 1 808 0
 3449 0029 48C74620 		movq	$0, 32(%rsi)
 3449      00000000 
 809:src/mcu_msg.c ****         }
 3450              		.loc 1 809 0
 3451 0031 C3       		ret
 3452              	.LVL390:
 3453              	.L293:
 804:src/mcu_msg.c ****             } else {
 3454              		.loc 1 804 0
 3455 0032 488B4620 		movq	32(%rsi), %rax
 3456              	.LVL391:
 3457 0036 48894720 		movq	%rax, 32(%rdi)
 3458 003a EBED     		jmp	.L288
 3459              	.LVL392:
 3460              	.L291:
 812:src/mcu_msg.c ****     }
 813:src/mcu_msg.c **** }
 3461              		.loc 1 813 0
 3462 003c F3C3     		rep ret
 3463              		.cfi_endproc
 3464              	.LFE68:
 3466              		.section	.text.msg_wrapper_add_int_to_obj,"ax",@progbits
 3467              		.globl	msg_wrapper_add_int_to_obj
 3469              	msg_wrapper_add_int_to_obj:
 3470              	.LFB69:
 814:src/mcu_msg.c **** 
 815:src/mcu_msg.c **** void msg_wrapper_add_int_to_obj(msg_wrap_obj_t *obj, msg_wrap_int_t *int_val)
 816:src/mcu_msg.c **** {
 3471              		.loc 1 816 0
 3472              		.cfi_startproc
 3473              	.LVL393:
 817:src/mcu_msg.c ****     msg_wrap_int_t *ip;
 818:src/mcu_msg.c ****     if(obj->int_queue == NULL) { //first element
 3474              		.loc 1 818 0
GAS LISTING /tmp/ccXtVIbK.s 			page 89


 3475 0000 488B5710 		movq	16(%rdi), %rdx
 3476 0004 4885D2   		testq	%rdx, %rdx
 3477 0007 7510     		jne	.L295
 819:src/mcu_msg.c ****         obj->int_queue = int_val;
 3478              		.loc 1 819 0
 3479 0009 48897710 		movq	%rsi, 16(%rdi)
 820:src/mcu_msg.c ****         obj->int_queue->next = NULL;
 3480              		.loc 1 820 0
 3481 000d 48C74618 		movq	$0, 24(%rsi)
 3481      00000000 
 3482 0015 C3       		ret
 3483              	.LVL394:
 3484              	.L297:
 821:src/mcu_msg.c ****     } else {
 822:src/mcu_msg.c ****         ip = obj->int_queue;
 823:src/mcu_msg.c **** 
 824:src/mcu_msg.c ****         while(ip->next != NULL) 
 825:src/mcu_msg.c ****             ip = ip->next;
 3485              		.loc 1 825 0
 3486 0016 4889C2   		movq	%rax, %rdx
 3487              	.LVL395:
 3488              	.L295:
 824:src/mcu_msg.c ****             ip = ip->next;
 3489              		.loc 1 824 0
 3490 0019 488B4218 		movq	24(%rdx), %rax
 3491 001d 4885C0   		testq	%rax, %rax
 3492 0020 75F4     		jne	.L297
 826:src/mcu_msg.c ****         ip->next = int_val;
 3493              		.loc 1 826 0
 3494 0022 48897218 		movq	%rsi, 24(%rdx)
 827:src/mcu_msg.c ****         int_val->next = NULL;
 3495              		.loc 1 827 0
 3496 0026 48C74618 		movq	$0, 24(%rsi)
 3496      00000000 
 828:src/mcu_msg.c ****     }
 829:src/mcu_msg.c **** }
 3497              		.loc 1 829 0
 3498 002e C3       		ret
 3499              		.cfi_endproc
 3500              	.LFE69:
 3502              		.section	.text.msg_wrapper_rm_int_from_obj,"ax",@progbits
 3503              		.globl	msg_wrapper_rm_int_from_obj
 3505              	msg_wrapper_rm_int_from_obj:
 3506              	.LFB70:
 830:src/mcu_msg.c **** 
 831:src/mcu_msg.c **** 
 832:src/mcu_msg.c **** void msg_wrapper_rm_int_from_obj(msg_wrap_obj_t *obj, msg_wrap_int_t *i)
 833:src/mcu_msg.c **** {
 3507              		.loc 1 833 0
 3508              		.cfi_startproc
 3509              	.LVL396:
 834:src/mcu_msg.c ****     msg_wrap_int_t *ip, *prev;
 835:src/mcu_msg.c ****     for(ip = obj->int_queue, prev = NULL; ip != NULL; ip = ip->next){
 3510              		.loc 1 835 0
 3511 0000 488B4710 		movq	16(%rdi), %rax
 3512              	.LVL397:
 3513 0004 BA000000 		movl	$0, %edx
GAS LISTING /tmp/ccXtVIbK.s 			page 90


 3513      00
 3514              	.LVL398:
 3515              	.L299:
 3516              		.loc 1 835 0 is_stmt 0 discriminator 1
 3517 0009 4885C0   		testq	%rax, %rax
 3518 000c 742E     		je	.L305
 836:src/mcu_msg.c ****         if(ip == i) {
 3519              		.loc 1 836 0 is_stmt 1
 3520 000e 4839F0   		cmpq	%rsi, %rax
 3521 0011 7409     		je	.L306
 3522              	.LVL399:
 837:src/mcu_msg.c ****             if(prev == NULL) { // if p is the head of the queue, reinit the head
 838:src/mcu_msg.c ****                 obj->int_queue = i->next;
 839:src/mcu_msg.c ****             } else {
 840:src/mcu_msg.c ****                 prev->next = i->next; //skip the expected
 841:src/mcu_msg.c ****             }
 842:src/mcu_msg.c ****             i->next = NULL; // reset next
 843:src/mcu_msg.c ****             return;
 844:src/mcu_msg.c ****         }
 845:src/mcu_msg.c ****         prev = ip;
 3523              		.loc 1 845 0 discriminator 2
 3524 0013 4889C2   		movq	%rax, %rdx
 835:src/mcu_msg.c ****         if(ip == i) {
 3525              		.loc 1 835 0 discriminator 2
 3526 0016 488B4018 		movq	24(%rax), %rax
 3527              	.LVL400:
 3528 001a EBED     		jmp	.L299
 3529              	.L306:
 837:src/mcu_msg.c ****             if(prev == NULL) { // if p is the head of the queue, reinit the head
 3530              		.loc 1 837 0
 3531 001c 4885D2   		testq	%rdx, %rdx
 3532 001f 7411     		je	.L307
 840:src/mcu_msg.c ****             }
 3533              		.loc 1 840 0
 3534 0021 488B4618 		movq	24(%rsi), %rax
 3535              	.LVL401:
 3536 0025 48894218 		movq	%rax, 24(%rdx)
 3537              	.L302:
 842:src/mcu_msg.c ****             return;
 3538              		.loc 1 842 0
 3539 0029 48C74618 		movq	$0, 24(%rsi)
 3539      00000000 
 843:src/mcu_msg.c ****         }
 3540              		.loc 1 843 0
 3541 0031 C3       		ret
 3542              	.LVL402:
 3543              	.L307:
 838:src/mcu_msg.c ****             } else {
 3544              		.loc 1 838 0
 3545 0032 488B4618 		movq	24(%rsi), %rax
 3546              	.LVL403:
 3547 0036 48894710 		movq	%rax, 16(%rdi)
 3548 003a EBED     		jmp	.L302
 3549              	.LVL404:
 3550              	.L305:
 846:src/mcu_msg.c ****     }
 847:src/mcu_msg.c **** }
GAS LISTING /tmp/ccXtVIbK.s 			page 91


 3551              		.loc 1 847 0
 3552 003c F3C3     		rep ret
 3553              		.cfi_endproc
 3554              	.LFE70:
 3556              		.section	.text.msg_wrapper_add_float_to_obj,"ax",@progbits
 3557              		.globl	msg_wrapper_add_float_to_obj
 3559              	msg_wrapper_add_float_to_obj:
 3560              	.LFB71:
 848:src/mcu_msg.c **** 
 849:src/mcu_msg.c **** void msg_wrapper_add_float_to_obj(msg_wrap_obj_t *obj, msg_wrap_float_t *float_val)
 850:src/mcu_msg.c **** {
 3561              		.loc 1 850 0
 3562              		.cfi_startproc
 3563              	.LVL405:
 851:src/mcu_msg.c ****     msg_wrap_float_t *fp;
 852:src/mcu_msg.c ****     if(obj->float_queue == NULL) { //first element
 3564              		.loc 1 852 0
 3565 0000 488B5718 		movq	24(%rdi), %rdx
 3566 0004 4885D2   		testq	%rdx, %rdx
 3567 0007 7510     		jne	.L309
 853:src/mcu_msg.c ****         obj->float_queue = float_val;
 3568              		.loc 1 853 0
 3569 0009 48897718 		movq	%rsi, 24(%rdi)
 854:src/mcu_msg.c ****         obj->float_queue->next = NULL;
 3570              		.loc 1 854 0
 3571 000d 48C74618 		movq	$0, 24(%rsi)
 3571      00000000 
 3572 0015 C3       		ret
 3573              	.LVL406:
 3574              	.L311:
 855:src/mcu_msg.c ****     } else {
 856:src/mcu_msg.c ****         fp = obj->float_queue;
 857:src/mcu_msg.c **** 
 858:src/mcu_msg.c ****         while(fp->next != NULL) 
 859:src/mcu_msg.c ****             fp = fp->next;
 3575              		.loc 1 859 0
 3576 0016 4889C2   		movq	%rax, %rdx
 3577              	.LVL407:
 3578              	.L309:
 858:src/mcu_msg.c ****             fp = fp->next;
 3579              		.loc 1 858 0
 3580 0019 488B4218 		movq	24(%rdx), %rax
 3581 001d 4885C0   		testq	%rax, %rax
 3582 0020 75F4     		jne	.L311
 860:src/mcu_msg.c ****         fp->next = float_val;
 3583              		.loc 1 860 0
 3584 0022 48897218 		movq	%rsi, 24(%rdx)
 861:src/mcu_msg.c ****         float_val->next = NULL;
 3585              		.loc 1 861 0
 3586 0026 48C74618 		movq	$0, 24(%rsi)
 3586      00000000 
 862:src/mcu_msg.c ****     }
 863:src/mcu_msg.c **** }
 3587              		.loc 1 863 0
 3588 002e C3       		ret
 3589              		.cfi_endproc
 3590              	.LFE71:
GAS LISTING /tmp/ccXtVIbK.s 			page 92


 3592              		.section	.text.msg_wrapper_rm_float_from_obj,"ax",@progbits
 3593              		.globl	msg_wrapper_rm_float_from_obj
 3595              	msg_wrapper_rm_float_from_obj:
 3596              	.LFB72:
 864:src/mcu_msg.c **** 
 865:src/mcu_msg.c **** 
 866:src/mcu_msg.c **** void msg_wrapper_rm_float_from_obj(msg_wrap_obj_t *obj, msg_wrap_float_t *f)
 867:src/mcu_msg.c **** {
 3597              		.loc 1 867 0
 3598              		.cfi_startproc
 3599              	.LVL408:
 868:src/mcu_msg.c ****     msg_wrap_float_t *fp, *prev;
 869:src/mcu_msg.c ****     for(fp = obj->float_queue, prev = NULL; fp != NULL; fp = fp->next){
 3600              		.loc 1 869 0
 3601 0000 488B4718 		movq	24(%rdi), %rax
 3602              	.LVL409:
 3603 0004 BA000000 		movl	$0, %edx
 3603      00
 3604              	.LVL410:
 3605              	.L313:
 3606              		.loc 1 869 0 is_stmt 0 discriminator 1
 3607 0009 4885C0   		testq	%rax, %rax
 3608 000c 742E     		je	.L319
 870:src/mcu_msg.c ****         if(fp == f) {
 3609              		.loc 1 870 0 is_stmt 1
 3610 000e 4839F0   		cmpq	%rsi, %rax
 3611 0011 7409     		je	.L320
 3612              	.LVL411:
 871:src/mcu_msg.c ****             if(prev == NULL) { // if p is the head of the queue, reinit the head
 872:src/mcu_msg.c ****                 obj->float_queue = f->next;
 873:src/mcu_msg.c ****             } else {
 874:src/mcu_msg.c ****                 prev->next = f->next; //skip the expected
 875:src/mcu_msg.c ****             }
 876:src/mcu_msg.c ****             f->next = NULL; // reset next
 877:src/mcu_msg.c ****             return;
 878:src/mcu_msg.c ****         }
 879:src/mcu_msg.c ****         prev = fp;
 3613              		.loc 1 879 0 discriminator 2
 3614 0013 4889C2   		movq	%rax, %rdx
 869:src/mcu_msg.c ****         if(fp == f) {
 3615              		.loc 1 869 0 discriminator 2
 3616 0016 488B4018 		movq	24(%rax), %rax
 3617              	.LVL412:
 3618 001a EBED     		jmp	.L313
 3619              	.L320:
 871:src/mcu_msg.c ****             if(prev == NULL) { // if p is the head of the queue, reinit the head
 3620              		.loc 1 871 0
 3621 001c 4885D2   		testq	%rdx, %rdx
 3622 001f 7411     		je	.L321
 874:src/mcu_msg.c ****             }
 3623              		.loc 1 874 0
 3624 0021 488B4618 		movq	24(%rsi), %rax
 3625              	.LVL413:
 3626 0025 48894218 		movq	%rax, 24(%rdx)
 3627              	.L316:
 876:src/mcu_msg.c ****             return;
 3628              		.loc 1 876 0
GAS LISTING /tmp/ccXtVIbK.s 			page 93


 3629 0029 48C74618 		movq	$0, 24(%rsi)
 3629      00000000 
 877:src/mcu_msg.c ****         }
 3630              		.loc 1 877 0
 3631 0031 C3       		ret
 3632              	.LVL414:
 3633              	.L321:
 872:src/mcu_msg.c ****             } else {
 3634              		.loc 1 872 0
 3635 0032 488B4618 		movq	24(%rsi), %rax
 3636              	.LVL415:
 3637 0036 48894718 		movq	%rax, 24(%rdi)
 3638 003a EBED     		jmp	.L316
 3639              	.LVL416:
 3640              	.L319:
 880:src/mcu_msg.c ****     }
 881:src/mcu_msg.c **** }
 3641              		.loc 1 881 0
 3642 003c F3C3     		rep ret
 3643              		.cfi_endproc
 3644              	.LFE72:
 3646              		.section	.text.msg_wrapper_add_object_to_msg,"ax",@progbits
 3647              		.globl	msg_wrapper_add_object_to_msg
 3649              	msg_wrapper_add_object_to_msg:
 3650              	.LFB73:
 882:src/mcu_msg.c **** 
 883:src/mcu_msg.c **** void msg_wrapper_add_object_to_msg(msg_wrap_t *msg, msg_wrap_obj_t *obj)
 884:src/mcu_msg.c **** {
 3651              		.loc 1 884 0
 3652              		.cfi_startproc
 3653              	.LVL417:
 885:src/mcu_msg.c ****     msg_wrap_obj_t *op;
 886:src/mcu_msg.c ****     if(msg->obj_queue == NULL) { //if empty 
 3654              		.loc 1 886 0
 3655 0000 488B5710 		movq	16(%rdi), %rdx
 3656 0004 4885D2   		testq	%rdx, %rdx
 3657 0007 7510     		jne	.L323
 887:src/mcu_msg.c ****         msg->obj_queue = obj;
 3658              		.loc 1 887 0
 3659 0009 48897710 		movq	%rsi, 16(%rdi)
 888:src/mcu_msg.c ****         msg->obj_queue->next = NULL;
 3660              		.loc 1 888 0
 3661 000d 48C74628 		movq	$0, 40(%rsi)
 3661      00000000 
 3662 0015 C3       		ret
 3663              	.LVL418:
 3664              	.L325:
 889:src/mcu_msg.c ****     } else {
 890:src/mcu_msg.c ****         op = msg->obj_queue;
 891:src/mcu_msg.c ****         while(op->next != NULL)
 892:src/mcu_msg.c ****             op = op->next;
 3665              		.loc 1 892 0
 3666 0016 4889C2   		movq	%rax, %rdx
 3667              	.LVL419:
 3668              	.L323:
 891:src/mcu_msg.c ****             op = op->next;
 3669              		.loc 1 891 0
GAS LISTING /tmp/ccXtVIbK.s 			page 94


 3670 0019 488B4228 		movq	40(%rdx), %rax
 3671 001d 4885C0   		testq	%rax, %rax
 3672 0020 75F4     		jne	.L325
 893:src/mcu_msg.c ****         op->next = obj;
 3673              		.loc 1 893 0
 3674 0022 48897228 		movq	%rsi, 40(%rdx)
 894:src/mcu_msg.c ****         obj->next = NULL;
 3675              		.loc 1 894 0
 3676 0026 48C74628 		movq	$0, 40(%rsi)
 3676      00000000 
 895:src/mcu_msg.c ****     }
 896:src/mcu_msg.c **** }
 3677              		.loc 1 896 0
 3678 002e C3       		ret
 3679              		.cfi_endproc
 3680              	.LFE73:
 3682              		.section	.text.msg_wrapper_rm_obj_from_msg,"ax",@progbits
 3683              		.globl	msg_wrapper_rm_obj_from_msg
 3685              	msg_wrapper_rm_obj_from_msg:
 3686              	.LFB74:
 897:src/mcu_msg.c **** 
 898:src/mcu_msg.c **** void msg_wrapper_rm_obj_from_msg(msg_wrap_t *msg, msg_wrap_obj_t *obj)
 899:src/mcu_msg.c **** {
 3687              		.loc 1 899 0
 3688              		.cfi_startproc
 3689              	.LVL420:
 900:src/mcu_msg.c ****     msg_wrap_obj_t *op, *prev;
 901:src/mcu_msg.c ****     for(op = msg->obj_queue, prev = NULL; op != NULL; op = op->next){
 3690              		.loc 1 901 0
 3691 0000 488B4710 		movq	16(%rdi), %rax
 3692              	.LVL421:
 3693 0004 BA000000 		movl	$0, %edx
 3693      00
 3694              	.LVL422:
 3695              	.L327:
 3696              		.loc 1 901 0 is_stmt 0 discriminator 1
 3697 0009 4885C0   		testq	%rax, %rax
 3698 000c 742E     		je	.L333
 902:src/mcu_msg.c ****         if(op == obj) {
 3699              		.loc 1 902 0 is_stmt 1
 3700 000e 4839F0   		cmpq	%rsi, %rax
 3701 0011 7409     		je	.L334
 3702              	.LVL423:
 903:src/mcu_msg.c ****             if(prev == NULL) { // if p is the head of the queue, reinit the head
 904:src/mcu_msg.c ****                 msg->obj_queue = obj->next;
 905:src/mcu_msg.c ****             } else {
 906:src/mcu_msg.c ****                 prev->next = obj->next; //skip the expected
 907:src/mcu_msg.c ****             }
 908:src/mcu_msg.c ****             obj->next = NULL; // reset next
 909:src/mcu_msg.c ****             return;
 910:src/mcu_msg.c ****         }
 911:src/mcu_msg.c ****         prev = op;
 3703              		.loc 1 911 0 discriminator 2
 3704 0013 4889C2   		movq	%rax, %rdx
 901:src/mcu_msg.c ****         if(op == obj) {
 3705              		.loc 1 901 0 discriminator 2
 3706 0016 488B4028 		movq	40(%rax), %rax
GAS LISTING /tmp/ccXtVIbK.s 			page 95


 3707              	.LVL424:
 3708 001a EBED     		jmp	.L327
 3709              	.L334:
 903:src/mcu_msg.c ****             if(prev == NULL) { // if p is the head of the queue, reinit the head
 3710              		.loc 1 903 0
 3711 001c 4885D2   		testq	%rdx, %rdx
 3712 001f 7411     		je	.L335
 906:src/mcu_msg.c ****             }
 3713              		.loc 1 906 0
 3714 0021 488B4628 		movq	40(%rsi), %rax
 3715              	.LVL425:
 3716 0025 48894228 		movq	%rax, 40(%rdx)
 3717              	.L330:
 908:src/mcu_msg.c ****             return;
 3718              		.loc 1 908 0
 3719 0029 48C74628 		movq	$0, 40(%rsi)
 3719      00000000 
 909:src/mcu_msg.c ****         }
 3720              		.loc 1 909 0
 3721 0031 C3       		ret
 3722              	.LVL426:
 3723              	.L335:
 904:src/mcu_msg.c ****             } else {
 3724              		.loc 1 904 0
 3725 0032 488B4628 		movq	40(%rsi), %rax
 3726              	.LVL427:
 3727 0036 48894710 		movq	%rax, 16(%rdi)
 3728 003a EBED     		jmp	.L330
 3729              	.LVL428:
 3730              	.L333:
 912:src/mcu_msg.c ****     }    
 913:src/mcu_msg.c **** }
 3731              		.loc 1 913 0
 3732 003c F3C3     		rep ret
 3733              		.cfi_endproc
 3734              	.LFE74:
 3736              		.section	.text.msg_wrapper_add_cmd_to_msg,"ax",@progbits
 3737              		.globl	msg_wrapper_add_cmd_to_msg
 3739              	msg_wrapper_add_cmd_to_msg:
 3740              	.LFB75:
 914:src/mcu_msg.c **** 
 915:src/mcu_msg.c **** void msg_wrapper_add_cmd_to_msg(msg_wrap_t *msg, msg_wrap_cmd_t *cmd)
 916:src/mcu_msg.c **** {
 3741              		.loc 1 916 0
 3742              		.cfi_startproc
 3743              	.LVL429:
 917:src/mcu_msg.c ****     msg_wrap_cmd_t *cp;
 918:src/mcu_msg.c ****     if(msg->cmd_queue == NULL) { //if empty 
 3744              		.loc 1 918 0
 3745 0000 488B5718 		movq	24(%rdi), %rdx
 3746 0004 4885D2   		testq	%rdx, %rdx
 3747 0007 7510     		jne	.L337
 919:src/mcu_msg.c ****         msg->cmd_queue = cmd;
 3748              		.loc 1 919 0
 3749 0009 48897718 		movq	%rsi, 24(%rdi)
 920:src/mcu_msg.c ****         msg->cmd_queue->next = NULL;
 3750              		.loc 1 920 0
GAS LISTING /tmp/ccXtVIbK.s 			page 96


 3751 000d 48C74610 		movq	$0, 16(%rsi)
 3751      00000000 
 3752 0015 C3       		ret
 3753              	.LVL430:
 3754              	.L339:
 921:src/mcu_msg.c ****     } else {
 922:src/mcu_msg.c ****         cp = msg->cmd_queue;
 923:src/mcu_msg.c ****         while(cp->next != NULL)
 924:src/mcu_msg.c ****             cp = cp->next;
 3755              		.loc 1 924 0
 3756 0016 4889C2   		movq	%rax, %rdx
 3757              	.LVL431:
 3758              	.L337:
 923:src/mcu_msg.c ****             cp = cp->next;
 3759              		.loc 1 923 0
 3760 0019 488B4210 		movq	16(%rdx), %rax
 3761 001d 4885C0   		testq	%rax, %rax
 3762 0020 75F4     		jne	.L339
 925:src/mcu_msg.c ****         cp->next = cmd;
 3763              		.loc 1 925 0
 3764 0022 48897210 		movq	%rsi, 16(%rdx)
 926:src/mcu_msg.c ****         cmd->next = NULL;
 3765              		.loc 1 926 0
 3766 0026 48C74610 		movq	$0, 16(%rsi)
 3766      00000000 
 927:src/mcu_msg.c ****     }
 928:src/mcu_msg.c **** }
 3767              		.loc 1 928 0
 3768 002e C3       		ret
 3769              		.cfi_endproc
 3770              	.LFE75:
 3772              		.section	.text.msg_wrapper_rm_cmd_from_msg,"ax",@progbits
 3773              		.globl	msg_wrapper_rm_cmd_from_msg
 3775              	msg_wrapper_rm_cmd_from_msg:
 3776              	.LFB76:
 929:src/mcu_msg.c **** 
 930:src/mcu_msg.c **** void msg_wrapper_rm_cmd_from_msg(msg_wrap_t *msg, msg_wrap_cmd_t *cmd)
 931:src/mcu_msg.c **** {
 3777              		.loc 1 931 0
 3778              		.cfi_startproc
 3779              	.LVL432:
 932:src/mcu_msg.c ****     msg_wrap_cmd_t *cp, *prev;
 933:src/mcu_msg.c ****     for(cp = msg->cmd_queue, prev = NULL; cp != NULL; cp = cp->next){
 3780              		.loc 1 933 0
 3781 0000 488B4718 		movq	24(%rdi), %rax
 3782              	.LVL433:
 3783 0004 BA000000 		movl	$0, %edx
 3783      00
 3784              	.LVL434:
 3785              	.L341:
 3786              		.loc 1 933 0 is_stmt 0 discriminator 1
 3787 0009 4885C0   		testq	%rax, %rax
 3788 000c 742E     		je	.L347
 934:src/mcu_msg.c ****         if(cp == cmd) {
 3789              		.loc 1 934 0 is_stmt 1
 3790 000e 4839F0   		cmpq	%rsi, %rax
 3791 0011 7409     		je	.L348
GAS LISTING /tmp/ccXtVIbK.s 			page 97


 3792              	.LVL435:
 935:src/mcu_msg.c ****             if(prev == NULL) { // if p is the head of the queue, reinit the head
 936:src/mcu_msg.c ****                 msg->cmd_queue = cmd->next;
 937:src/mcu_msg.c ****             } else {
 938:src/mcu_msg.c ****                 prev->next = cmd->next; //skip the expected
 939:src/mcu_msg.c ****             }
 940:src/mcu_msg.c ****             cmd->next = NULL; // reset next
 941:src/mcu_msg.c ****             return;
 942:src/mcu_msg.c ****         }
 943:src/mcu_msg.c ****         prev = cp;
 3793              		.loc 1 943 0 discriminator 2
 3794 0013 4889C2   		movq	%rax, %rdx
 933:src/mcu_msg.c ****         if(cp == cmd) {
 3795              		.loc 1 933 0 discriminator 2
 3796 0016 488B4010 		movq	16(%rax), %rax
 3797              	.LVL436:
 3798 001a EBED     		jmp	.L341
 3799              	.L348:
 935:src/mcu_msg.c ****             if(prev == NULL) { // if p is the head of the queue, reinit the head
 3800              		.loc 1 935 0
 3801 001c 4885D2   		testq	%rdx, %rdx
 3802 001f 7411     		je	.L349
 938:src/mcu_msg.c ****             }
 3803              		.loc 1 938 0
 3804 0021 488B4610 		movq	16(%rsi), %rax
 3805              	.LVL437:
 3806 0025 48894210 		movq	%rax, 16(%rdx)
 3807              	.L344:
 940:src/mcu_msg.c ****             return;
 3808              		.loc 1 940 0
 3809 0029 48C74610 		movq	$0, 16(%rsi)
 3809      00000000 
 941:src/mcu_msg.c ****         }
 3810              		.loc 1 941 0
 3811 0031 C3       		ret
 3812              	.LVL438:
 3813              	.L349:
 936:src/mcu_msg.c ****             } else {
 3814              		.loc 1 936 0
 3815 0032 488B4610 		movq	16(%rsi), %rax
 3816              	.LVL439:
 3817 0036 48894718 		movq	%rax, 24(%rdi)
 3818 003a EBED     		jmp	.L344
 3819              	.LVL440:
 3820              	.L347:
 944:src/mcu_msg.c ****     }    
 945:src/mcu_msg.c **** }
 3821              		.loc 1 945 0
 3822 003c F3C3     		rep ret
 3823              		.cfi_endproc
 3824              	.LFE76:
 3826              		.section	.bss.__msg_putc,"aw",@nobits
 3827              		.align 8
 3830              	__msg_putc:
 3831 0000 00000000 		.zero	8
 3831      00000000 
 3832              		.section	.rodata.cst4,"aM",@progbits,4
GAS LISTING /tmp/ccXtVIbK.s 			page 98


 3833              		.align 4
 3834              	.LC1:
 3835 0000 CDCCCC3D 		.long	1036831949
 3836              		.align 4
 3837              	.LC2:
 3838 0004 00002041 		.long	1092616192
 3839              		.text
 3840              	.Letext0:
 3841              		.file 2 "/usr/lib/gcc/x86_64-linux-gnu/7/include/stddef.h"
 3842              		.file 3 "/usr/include/x86_64-linux-gnu/bits/types.h"
 3843              		.file 4 "/usr/include/x86_64-linux-gnu/bits/libio.h"
 3844              		.file 5 "/usr/include/stdio.h"
 3845              		.file 6 "/usr/include/x86_64-linux-gnu/bits/sys_errlist.h"
 3846              		.file 7 "/usr/include/x86_64-linux-gnu/bits/stdint-intn.h"
 3847              		.file 8 "/usr/include/x86_64-linux-gnu/bits/stdint-uintn.h"
 3848              		.file 9 "inc/mcu_msg_cfg.h"
 3849              		.file 10 "inc/mcu_msg.h"
GAS LISTING /tmp/ccXtVIbK.s 			page 99


DEFINED SYMBOLS
                            *ABS*:0000000000000000 mcu_msg.c
     /tmp/ccXtVIbK.s:6      .text.__str_len:0000000000000000 __str_len
     /tmp/ccXtVIbK.s:35     .text.__skip_internal_str:0000000000000000 __skip_internal_str
     /tmp/ccXtVIbK.s:92     .text.__msg_str_copy_to_chr_arr:0000000000000000 __msg_str_copy_to_chr_arr
     /tmp/ccXtVIbK.s:119    .text.__msg_str_copy:0000000000000000 __msg_str_copy
     /tmp/ccXtVIbK.s:147    .text.__msg_print_int:0000000000000000 __msg_print_int
     /tmp/ccXtVIbK.s:3830   .bss.__msg_putc:0000000000000000 __msg_putc
     /tmp/ccXtVIbK.s:305    .text.__msg_print_float:0000000000000000 __msg_print_float
     /tmp/ccXtVIbK.s:439    .text.__msg_print_str:0000000000000000 __msg_print_str
     /tmp/ccXtVIbK.s:500    .text.__msg_wrapper_print_obj:0000000000000000 __msg_wrapper_print_obj
     /tmp/ccXtVIbK.s:749    .text.__msg_wrapper_print_cmd:0000000000000000 __msg_wrapper_print_cmd
     /tmp/ccXtVIbK.s:783    .text.__msg_wrapper_print_msg_to_buff:0000000000000000 __msg_wrapper_print_msg_to_buff
     /tmp/ccXtVIbK.s:796    .text.__msg_wrapper_print_msg:0000000000000000 __msg_wrapper_print_msg
     /tmp/ccXtVIbK.s:1156   .text.msg_destroy_string:0000000000000000 msg_destroy_string
     /tmp/ccXtVIbK.s:1172   .text.__find_keyword:0000000000000000 __find_keyword
     /tmp/ccXtVIbK.s:1568   .text.__find_val:0000000000000000 __find_val
     /tmp/ccXtVIbK.s:1849   .text.msg_destroy:0000000000000000 msg_destroy
     /tmp/ccXtVIbK.s:1878   .text.msg_destroy_obj:0000000000000000 msg_destroy_obj
     /tmp/ccXtVIbK.s:1907   .text.msg_init_string:0000000000000000 msg_init_string
     /tmp/ccXtVIbK.s:1936   .text.msg_get:0000000000000000 msg_get
     /tmp/ccXtVIbK.s:2089   .text.msg_parser_get_obj:0000000000000000 msg_parser_get_obj
     /tmp/ccXtVIbK.s:2238   .text.msg_parser_get_cmd:0000000000000000 msg_parser_get_cmd
     /tmp/ccXtVIbK.s:2266   .text.msg_parser_get_int:0000000000000000 msg_parser_get_int
     /tmp/ccXtVIbK.s:2439   .text.msg_parser_get_float:0000000000000000 msg_parser_get_float
     /tmp/ccXtVIbK.s:2703   .text.msg_parser_get_string:0000000000000000 msg_parser_get_string
     /tmp/ccXtVIbK.s:2828   .text.msg_string_hnd_create:0000000000000000 msg_string_hnd_create
     /tmp/ccXtVIbK.s:2864   .text.msg_wrapper_hnd_create:0000000000000000 msg_wrapper_hnd_create
     /tmp/ccXtVIbK.s:2903   .text.msg_wrap_destroy:0000000000000000 msg_wrap_destroy
     /tmp/ccXtVIbK.s:2932   .text.msg_wrap_destroy_obj:0000000000000000 msg_wrap_destroy_obj
     /tmp/ccXtVIbK.s:2965   .text.msg_wrap_destroy_str:0000000000000000 msg_wrap_destroy_str
     /tmp/ccXtVIbK.s:2996   .text.msg_wrap_destroy_int:0000000000000000 msg_wrap_destroy_int
     /tmp/ccXtVIbK.s:3025   .text.msg_wrap_destroy_float:0000000000000000 msg_wrap_destroy_float
     /tmp/ccXtVIbK.s:3056   .text.msg_wrapper_init_msg:0000000000000000 msg_wrapper_init_msg
     /tmp/ccXtVIbK.s:3101   .text.msg_wrapper_init_cmd:0000000000000000 msg_wrapper_init_cmd
     /tmp/ccXtVIbK.s:3139   .text.msg_wrapper_init_obj:0000000000000000 msg_wrapper_init_obj
     /tmp/ccXtVIbK.s:3192   .text.msg_wrapper_init_string:0000000000000000 msg_wrapper_init_string
     /tmp/ccXtVIbK.s:3261   .text.msg_wrapper_init_int:0000000000000000 msg_wrapper_init_int
     /tmp/ccXtVIbK.s:3315   .text.msg_wrapper_init_float:0000000000000000 msg_wrapper_init_float
     /tmp/ccXtVIbK.s:3379   .text.msg_wrapper_add_string_to_obj:0000000000000000 msg_wrapper_add_string_to_obj
     /tmp/ccXtVIbK.s:3415   .text.msg_wrapper_rm_string_from_obj:0000000000000000 msg_wrapper_rm_string_from_obj
     /tmp/ccXtVIbK.s:3469   .text.msg_wrapper_add_int_to_obj:0000000000000000 msg_wrapper_add_int_to_obj
     /tmp/ccXtVIbK.s:3505   .text.msg_wrapper_rm_int_from_obj:0000000000000000 msg_wrapper_rm_int_from_obj
     /tmp/ccXtVIbK.s:3559   .text.msg_wrapper_add_float_to_obj:0000000000000000 msg_wrapper_add_float_to_obj
     /tmp/ccXtVIbK.s:3595   .text.msg_wrapper_rm_float_from_obj:0000000000000000 msg_wrapper_rm_float_from_obj
     /tmp/ccXtVIbK.s:3649   .text.msg_wrapper_add_object_to_msg:0000000000000000 msg_wrapper_add_object_to_msg
     /tmp/ccXtVIbK.s:3685   .text.msg_wrapper_rm_obj_from_msg:0000000000000000 msg_wrapper_rm_obj_from_msg
     /tmp/ccXtVIbK.s:3739   .text.msg_wrapper_add_cmd_to_msg:0000000000000000 msg_wrapper_add_cmd_to_msg
     /tmp/ccXtVIbK.s:3775   .text.msg_wrapper_rm_cmd_from_msg:0000000000000000 msg_wrapper_rm_cmd_from_msg
     /tmp/ccXtVIbK.s:3834   .rodata.cst4:0000000000000000 .LC1
     /tmp/ccXtVIbK.s:3837   .rodata.cst4:0000000000000004 .LC2

UNDEFINED SYMBOLS
_GLOBAL_OFFSET_TABLE_
__stack_chk_fail
