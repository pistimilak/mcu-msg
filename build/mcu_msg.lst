GAS LISTING /tmp/cctOiEvw.s 			page 1


   1              		.file	"mcu_msg.c"
   2              		.text
   3              	.Ltext0:
   4              		.section	.text.str_len,"ax",@progbits
   6              	str_len:
   7              	.LFB32:
   8              		.file 1 "src/mcu_msg.c"
   1:src/mcu_msg.c **** /**
   2:src/mcu_msg.c ****  * @file mcu_msg_parser.c
   3:src/mcu_msg.c ****  * @author Istvan Milak (istvan.milak@gmail.com)
   4:src/mcu_msg.c ****  * @brief Simple message parser for embedded applications, eg serial comm
   5:src/mcu_msg.c ****  * @version 0.1
   6:src/mcu_msg.c ****  * @date 2019-12-15
   7:src/mcu_msg.c ****  * 
   8:src/mcu_msg.c ****  * @copyright Copyright (c) 2019
   9:src/mcu_msg.c ****  * 
  10:src/mcu_msg.c ****  */
  11:src/mcu_msg.c **** #include <stdio.h>
  12:src/mcu_msg.c **** #include "mcu_msg.h"
  13:src/mcu_msg.c **** 
  14:src/mcu_msg.c **** /*Control chars*/
  15:src/mcu_msg.c **** #define CTRL_MSG_FLAG           '#'
  16:src/mcu_msg.c **** #define CTRL_START_MSG          '{'
  17:src/mcu_msg.c **** #define CTRL_STOP_MSG           '}'
  18:src/mcu_msg.c **** #define CTRL_START_OBJ          '('
  19:src/mcu_msg.c **** #define CTRL_STOP_OBJ           ')'
  20:src/mcu_msg.c **** #define CTRL_OBJ_FLAG           '@'
  21:src/mcu_msg.c **** #define CTRL_KEY_FLAG           '$'
  22:src/mcu_msg.c **** #define CTRL_KEY_SEP            ';'
  23:src/mcu_msg.c **** #define CTRL_KEY_EQU            '='
  24:src/mcu_msg.c **** #define CTRL_CMD_START_FLAG     '<'
  25:src/mcu_msg.c **** #define CTRL_CMD_STOP_FLAG      '>'
  26:src/mcu_msg.c **** 
  27:src/mcu_msg.c **** 
  28:src/mcu_msg.c **** /*destroy string*/
  29:src/mcu_msg.c **** void mcu_msg_destroy_string(mcu_msg_string_t *str)
  30:src/mcu_msg.c **** {
  31:src/mcu_msg.c ****     str->s = NULL;
  32:src/mcu_msg.c ****     str->len = 0;
  33:src/mcu_msg.c **** }
  34:src/mcu_msg.c **** 
  35:src/mcu_msg.c **** /*destroy message*/
  36:src/mcu_msg.c **** void mcu_msg_destroy(mcu_msg_t *msg)
  37:src/mcu_msg.c **** {
  38:src/mcu_msg.c ****     mcu_msg_destroy_string(&msg->id);
  39:src/mcu_msg.c ****     mcu_msg_destroy_string(&msg->content);
  40:src/mcu_msg.c **** }
  41:src/mcu_msg.c **** 
  42:src/mcu_msg.c **** 
  43:src/mcu_msg.c **** /*destroy object*/
  44:src/mcu_msg.c **** void mcu_msg_destroy_obj(mcu_msg_obj_t *obj)
  45:src/mcu_msg.c **** {
  46:src/mcu_msg.c ****     mcu_msg_destroy_string(&obj->id);
  47:src/mcu_msg.c ****     mcu_msg_destroy_string(&obj->content);
  48:src/mcu_msg.c **** }
  49:src/mcu_msg.c **** 
  50:src/mcu_msg.c **** 
GAS LISTING /tmp/cctOiEvw.s 			page 2


  51:src/mcu_msg.c **** 
  52:src/mcu_msg.c **** /**
  53:src/mcu_msg.c ****  * @brief Argument char is control char or not
  54:src/mcu_msg.c ****  * 
  55:src/mcu_msg.c ****  * @param c char
  56:src/mcu_msg.c ****  * @return uint8_t comparison result
  57:src/mcu_msg.c ****  */
  58:src/mcu_msg.c **** static inline uint8_t is_ctrl_char(char c)
  59:src/mcu_msg.c **** {
  60:src/mcu_msg.c ****     switch(c) {
  61:src/mcu_msg.c ****         case CTRL_MSG_FLAG:
  62:src/mcu_msg.c ****         case CTRL_START_MSG:
  63:src/mcu_msg.c ****         case CTRL_STOP_MSG:
  64:src/mcu_msg.c ****         case CTRL_START_OBJ:
  65:src/mcu_msg.c ****         case CTRL_STOP_OBJ:
  66:src/mcu_msg.c ****         case CTRL_OBJ_FLAG:
  67:src/mcu_msg.c ****         case CTRL_KEY_FLAG:
  68:src/mcu_msg.c ****         case CTRL_KEY_SEP:
  69:src/mcu_msg.c ****         case CTRL_KEY_EQU:
  70:src/mcu_msg.c ****         case CTRL_CMD_START_FLAG:
  71:src/mcu_msg.c ****         case CTRL_CMD_STOP_FLAG:
  72:src/mcu_msg.c ****             return 1;
  73:src/mcu_msg.c ****         default:
  74:src/mcu_msg.c ****             return 0;
  75:src/mcu_msg.c ****     }
  76:src/mcu_msg.c **** }
  77:src/mcu_msg.c **** 
  78:src/mcu_msg.c **** /**
  79:src/mcu_msg.c ****  * @brief Char is a whitespace
  80:src/mcu_msg.c ****  * 
  81:src/mcu_msg.c ****  * @param c char
  82:src/mcu_msg.c ****  * @return uint8_t comparison result
  83:src/mcu_msg.c ****  */
  84:src/mcu_msg.c **** static inline uint8_t is_whitespace(char c)
  85:src/mcu_msg.c **** {
  86:src/mcu_msg.c ****     switch(c) {
  87:src/mcu_msg.c ****         case  ' ':
  88:src/mcu_msg.c ****         case '\t':
  89:src/mcu_msg.c ****         case '\n':
  90:src/mcu_msg.c ****         case '\v':
  91:src/mcu_msg.c ****         case '\f':
  92:src/mcu_msg.c ****         case '\r':
  93:src/mcu_msg.c ****             return 1;
  94:src/mcu_msg.c ****         default:
  95:src/mcu_msg.c ****             return 0;
  96:src/mcu_msg.c ****     }
  97:src/mcu_msg.c **** }
  98:src/mcu_msg.c **** 
  99:src/mcu_msg.c **** /**
 100:src/mcu_msg.c ****  * @brief Argument char is valid keyword char or not
 101:src/mcu_msg.c ****  * 
 102:src/mcu_msg.c ****  * @param c char
 103:src/mcu_msg.c ****  * @return uint8_t comparison result
 104:src/mcu_msg.c ****  */
 105:src/mcu_msg.c **** // static inline uint8_t is_valid_keyword_char(char c)
 106:src/mcu_msg.c **** // {
 107:src/mcu_msg.c **** //     return (c == '_') || (c >= 'a' && c <= 'z') || 
GAS LISTING /tmp/cctOiEvw.s 			page 3


 108:src/mcu_msg.c **** //                     (c >= 'A' && c <= 'Z') || 
 109:src/mcu_msg.c **** //                     (c >= '0' && c <= '9') ? 1 : 0;
 110:src/mcu_msg.c **** // }
 111:src/mcu_msg.c **** #define is_valid_keyword_char(c)        ((c == '_') || \
 112:src/mcu_msg.c ****                                         (c >= 'a' && c <= 'z') || \ 
 113:src/mcu_msg.c ****                                         (c >= 'A' && c <= 'Z') || \
 114:src/mcu_msg.c ****                                         (c >= '0' && c <= '9'))
 115:src/mcu_msg.c **** 
 116:src/mcu_msg.c **** /**
 117:src/mcu_msg.c ****  * @brief strlen implementation for internal usage
 118:src/mcu_msg.c ****  * 
 119:src/mcu_msg.c ****  * @param str string 
 120:src/mcu_msg.c ****  * @return mcu_msg_size_t length of string 
 121:src/mcu_msg.c ****  */
 122:src/mcu_msg.c **** static mcu_msg_size_t str_len(char *str)
 123:src/mcu_msg.c **** {
   9              		.loc 1 123 0
  10              		.cfi_startproc
  11              	.LVL0:
 124:src/mcu_msg.c ****     char *p = str;
  12              		.loc 1 124 0
  13 0000 4889F8   		movq	%rdi, %rax
 125:src/mcu_msg.c ****     while(*p)
  14              		.loc 1 125 0
  15 0003 EB04     		jmp	.L2
  16              	.LVL1:
  17              	.L3:
 126:src/mcu_msg.c ****         p++;
  18              		.loc 1 126 0
  19 0005 4883C001 		addq	$1, %rax
  20              	.LVL2:
  21              	.L2:
 125:src/mcu_msg.c ****     while(*p)
  22              		.loc 1 125 0
  23 0009 803800   		cmpb	$0, (%rax)
  24 000c 75F7     		jne	.L3
 127:src/mcu_msg.c ****     return (p - str);
  25              		.loc 1 127 0
  26 000e 4829F8   		subq	%rdi, %rax
  27              	.LVL3:
 128:src/mcu_msg.c **** }
  28              		.loc 1 128 0
  29 0011 C3       		ret
  30              		.cfi_endproc
  31              	.LFE32:
  33              		.section	.text.skip_internal_str,"ax",@progbits
  35              	skip_internal_str:
  36              	.LFB34:
 129:src/mcu_msg.c **** 
 130:src/mcu_msg.c **** /**
 131:src/mcu_msg.c ****  * @brief Deciding char pointer is in the string buffer or not
 132:src/mcu_msg.c ****  * 
 133:src/mcu_msg.c ****  * @param str string buffer with start pointer and length
 134:src/mcu_msg.c ****  * @param p current pointer
 135:src/mcu_msg.c ****  * @return uint8_t return boole result
 136:src/mcu_msg.c ****  */
 137:src/mcu_msg.c **** static inline uint8_t is_in_str_buff(mcu_msg_string_t str, char *p)
GAS LISTING /tmp/cctOiEvw.s 			page 4


 138:src/mcu_msg.c **** {
 139:src/mcu_msg.c ****     return ((p - str.s) < str.len);
 140:src/mcu_msg.c **** }
 141:src/mcu_msg.c **** 
 142:src/mcu_msg.c **** /**
 143:src/mcu_msg.c ****  * @brief Skiping internal string from start qoution mark to end qmark
 144:src/mcu_msg.c ****  * 
 145:src/mcu_msg.c ****  * @param start start pointer
 146:src/mcu_msg.c ****  * @return char* return end pointer
 147:src/mcu_msg.c ****  */
 148:src/mcu_msg.c **** static char *skip_internal_str(char *start)
 149:src/mcu_msg.c **** {
  37              		.loc 1 149 0
  38              		.cfi_startproc
  39              	.LVL4:
 150:src/mcu_msg.c ****     char *p = start;
 151:src/mcu_msg.c ****     char qmark = *start;
  40              		.loc 1 151 0
  41 0000 0FB60F   		movzbl	(%rdi), %ecx
  42              	.LVL5:
 152:src/mcu_msg.c ****     if((qmark != '\'' && qmark != '"')) return NULL;
  43              		.loc 1 152 0
  44 0003 80F927   		cmpb	$39, %cl
  45 0006 0F95C2   		setne	%dl
  46 0009 80F922   		cmpb	$34, %cl
  47 000c 0F95C0   		setne	%al
  48 000f 84C2     		testb	%al, %dl
  49 0011 751E     		jne	.L9
 153:src/mcu_msg.c ****     ++p;
  50              		.loc 1 153 0
  51 0013 488D4701 		leaq	1(%rdi), %rax
  52              	.LVL6:
 154:src/mcu_msg.c ****     while(*p && (*p != qmark)) {
  53              		.loc 1 154 0
  54 0017 EB04     		jmp	.L6
  55              	.L8:
 155:src/mcu_msg.c ****         p++;
  56              		.loc 1 155 0
  57 0019 4883C001 		addq	$1, %rax
  58              	.LVL7:
  59              	.L6:
 154:src/mcu_msg.c ****     while(*p && (*p != qmark)) {
  60              		.loc 1 154 0
  61 001d 0FB610   		movzbl	(%rax), %edx
  62 0020 84D2     		testb	%dl, %dl
  63 0022 7404     		je	.L7
 154:src/mcu_msg.c ****     while(*p && (*p != qmark)) {
  64              		.loc 1 154 0 is_stmt 0 discriminator 1
  65 0024 38CA     		cmpb	%cl, %dl
  66 0026 75F1     		jne	.L8
  67              	.L7:
 156:src/mcu_msg.c ****     }
 157:src/mcu_msg.c ****     
 158:src/mcu_msg.c ****     return *p ? ++p : NULL;
  68              		.loc 1 158 0 is_stmt 1
  69 0028 84D2     		testb	%dl, %dl
  70 002a 740B     		je	.L10
GAS LISTING /tmp/cctOiEvw.s 			page 5


  71              		.loc 1 158 0 is_stmt 0 discriminator 1
  72 002c 4883C001 		addq	$1, %rax
  73              	.LVL8:
  74 0030 C3       		ret
  75              	.LVL9:
  76              	.L9:
 152:src/mcu_msg.c ****     ++p;
  77              		.loc 1 152 0 is_stmt 1
  78 0031 B8000000 		movl	$0, %eax
  78      00
  79 0036 C3       		ret
  80              	.LVL10:
  81              	.L10:
  82              		.loc 1 158 0
  83 0037 B8000000 		movl	$0, %eax
  83      00
  84              	.LVL11:
 159:src/mcu_msg.c **** }
  85              		.loc 1 159 0
  86 003c C3       		ret
  87              		.cfi_endproc
  88              	.LFE34:
  90              		.section	.text.mcu_msg_str_copy_to_chr_arr,"ax",@progbits
  92              	mcu_msg_str_copy_to_chr_arr:
  93              	.LFB43:
 160:src/mcu_msg.c **** 
 161:src/mcu_msg.c **** /**
 162:src/mcu_msg.c ****  * @brief find the position of the keyword int message string (first occurance)
 163:src/mcu_msg.c ****  * if the keyword found in the message string, the next (none space) char must be stopc
 164:src/mcu_msg.c ****  * @param str source string
 165:src/mcu_msg.c ****  * @param keyword keword has to be found
 166:src/mcu_msg.c ****  * @param flagc flag, eg. '@', '$'
 167:src/mcu_msg.c ****  * @param stopc stop character eg. '(', '='
 168:src/mcu_msg.c ****  * @return mcu_msg_string_t location and size of the keyword (whitout flag) or NULL if keyword not 
 169:src/mcu_msg.c ****  */
 170:src/mcu_msg.c **** static mcu_msg_string_t find_keyword(mcu_msg_string_t str, char *keyword, char flagc, char stopc)
 171:src/mcu_msg.c **** {
 172:src/mcu_msg.c **** 
 173:src/mcu_msg.c ****     mcu_msg_string_t res;
 174:src/mcu_msg.c ****     char *p = str.s;
 175:src/mcu_msg.c ****     uint8_t equal;
 176:src/mcu_msg.c ****     mcu_msg_size_t i;
 177:src/mcu_msg.c ****     res.len = str_len(keyword);
 178:src/mcu_msg.c ****     while(is_in_str_buff(str, p) && *p) {
 179:src/mcu_msg.c ****         if(*p == '\'' || *p == '"') { //skip internal strings
 180:src/mcu_msg.c ****             p = skip_internal_str(p);
 181:src/mcu_msg.c ****         }
 182:src/mcu_msg.c ****         if(is_in_str_buff(str, p)  && *p == flagc) { // if flag char detected start the analization
 183:src/mcu_msg.c ****             res.s = p + 1;
 184:src/mcu_msg.c ****             equal = 1;
 185:src/mcu_msg.c ****             for(i = 0; is_in_str_buff(str, res.s + i) && i < res.len; i++) { // if not equal during
 186:src/mcu_msg.c ****                 if((*(res.s + i) != *(keyword + i)) || is_ctrl_char(*(res.s + i)) || 
 187:src/mcu_msg.c ****                                     !is_valid_keyword_char(*(res.s + i))) {
 188:src/mcu_msg.c ****                     equal = 0;
 189:src/mcu_msg.c ****                     break;
 190:src/mcu_msg.c ****                 }
 191:src/mcu_msg.c ****             }
GAS LISTING /tmp/cctOiEvw.s 			page 6


 192:src/mcu_msg.c ****             while(is_in_str_buff(str, res.s + i) && is_whitespace(*(res.s + i))) i++; //skip spaces
 193:src/mcu_msg.c ****             if(equal && *(res.s + i) == stopc) { //if the stop char is the next, whitout spaces, re
 194:src/mcu_msg.c ****                 return res;
 195:src/mcu_msg.c ****             } else {
 196:src/mcu_msg.c ****                 p = res.s + i; // if not matched, return continue the iteration from last checked c
 197:src/mcu_msg.c ****             }
 198:src/mcu_msg.c ****         }
 199:src/mcu_msg.c ****         p++;
 200:src/mcu_msg.c ****     }
 201:src/mcu_msg.c ****     // if not found (loop finished whitout match) return with a destroyed string
 202:src/mcu_msg.c ****     mcu_msg_destroy_string(&res);
 203:src/mcu_msg.c ****     return res;
 204:src/mcu_msg.c **** }
 205:src/mcu_msg.c **** 
 206:src/mcu_msg.c **** 
 207:src/mcu_msg.c **** /**
 208:src/mcu_msg.c ****  * @brief Getting the value start position for particular key in message object
 209:src/mcu_msg.c ****  * 
 210:src/mcu_msg.c ****  * @param obj message object
 211:src/mcu_msg.c ****  * @param key key for search
 212:src/mcu_msg.c ****  * @return char* location of the value start point or NULL if the key was not found
 213:src/mcu_msg.c ****  */
 214:src/mcu_msg.c **** 
 215:src/mcu_msg.c **** static mcu_msg_string_t find_val(mcu_msg_obj_t obj, char *key)
 216:src/mcu_msg.c **** {
 217:src/mcu_msg.c ****     mcu_msg_string_t res  = find_keyword(obj.content, key, CTRL_KEY_FLAG, CTRL_KEY_EQU); //object s
 218:src/mcu_msg.c ****     char *p;
 219:src/mcu_msg.c ****     if(res.s == NULL) { //if keyword not found, return with NULLs and 0 lengths
 220:src/mcu_msg.c ****         mcu_msg_destroy_string(&res);
 221:src/mcu_msg.c ****         return res;
 222:src/mcu_msg.c ****     }
 223:src/mcu_msg.c ****     if(*res.s != CTRL_KEY_EQU) { // move pointer to 'equal'
 224:src/mcu_msg.c ****         while(is_in_str_buff(obj.content, res.s + 1) && *res.s != CTRL_KEY_EQU) res.s++;
 225:src/mcu_msg.c ****     }
 226:src/mcu_msg.c ****     res.s++;
 227:src/mcu_msg.c ****     while(is_in_str_buff(obj.content, res.s) && is_whitespace(*res.s)) res.s++; //skip spaces after
 228:src/mcu_msg.c **** 
 229:src/mcu_msg.c ****     p = res.s;
 230:src/mcu_msg.c ****     while(is_in_str_buff(obj.content, p) && !is_whitespace(*p) && !is_ctrl_char(*p)) p++; //calc le
 231:src/mcu_msg.c ****     res.len = p - res.s;
 232:src/mcu_msg.c **** 
 233:src/mcu_msg.c ****     return res;
 234:src/mcu_msg.c **** }
 235:src/mcu_msg.c **** 
 236:src/mcu_msg.c **** 
 237:src/mcu_msg.c **** /*get message*/
 238:src/mcu_msg.c **** mcu_msg_t mcu_msg_get(char *raw_str, char *id, mcu_msg_size_t len)
 239:src/mcu_msg.c **** {
 240:src/mcu_msg.c ****     mcu_msg_t res;
 241:src/mcu_msg.c ****     res.content.s = raw_str;
 242:src/mcu_msg.c ****     res.content.len = len;
 243:src/mcu_msg.c ****     res.id = find_keyword(res.content, id, CTRL_MSG_FLAG, CTRL_START_MSG); //object start with @ an
 244:src/mcu_msg.c ****     char *p;
 245:src/mcu_msg.c ****     if(res.id.s == NULL) { //if keyword not found, return with NULLs and 0 lengths
 246:src/mcu_msg.c ****         mcu_msg_destroy(&res);
 247:src/mcu_msg.c ****         return res;
 248:src/mcu_msg.c ****     }
GAS LISTING /tmp/cctOiEvw.s 			page 7


 249:src/mcu_msg.c ****     p = res.id.s + res.id.len; //init pointer to end of the id
 250:src/mcu_msg.c ****     if (*p != CTRL_START_MSG) { // if the next char is not START_MSG, move to the start flag
 251:src/mcu_msg.c ****         while(is_in_str_buff(res.content, p + 1) && *p != CTRL_START_MSG) p++;
 252:src/mcu_msg.c ****     }
 253:src/mcu_msg.c ****     res.content.s = ++p; // set content string pointer to the current pos
 254:src/mcu_msg.c ****     while(is_in_str_buff(res.content, p) && *p != CTRL_STOP_MSG) { //calc length
 255:src/mcu_msg.c ****         p++;
 256:src/mcu_msg.c ****     }
 257:src/mcu_msg.c ****     res.content.len = p - res.content.s;
 258:src/mcu_msg.c ****     return res;
 259:src/mcu_msg.c **** }
 260:src/mcu_msg.c **** 
 261:src/mcu_msg.c **** 
 262:src/mcu_msg.c **** 
 263:src/mcu_msg.c **** mcu_msg_obj_t mcu_msg_parser_get_obj(mcu_msg_t msg, char *id)
 264:src/mcu_msg.c **** {
 265:src/mcu_msg.c ****     mcu_msg_obj_t res;
 266:src/mcu_msg.c ****     res.id = find_keyword(msg.content, id, CTRL_OBJ_FLAG, CTRL_START_OBJ); //object start with @ an
 267:src/mcu_msg.c ****     char *p;
 268:src/mcu_msg.c ****     if(res.id.s == NULL) { //if keyword not found, return with NULLs and 0 lengths
 269:src/mcu_msg.c ****         mcu_msg_destroy_obj(&res);
 270:src/mcu_msg.c ****         return res;
 271:src/mcu_msg.c ****     }
 272:src/mcu_msg.c **** 
 273:src/mcu_msg.c ****     p = res.id.s + res.id.len;
 274:src/mcu_msg.c ****     if (*p != CTRL_START_OBJ) {
 275:src/mcu_msg.c ****         while(is_in_str_buff(msg.content, p + 1) && *p != CTRL_START_OBJ) p++;
 276:src/mcu_msg.c ****     }
 277:src/mcu_msg.c ****     res.content.s = ++p;
 278:src/mcu_msg.c ****     while(is_in_str_buff(msg.content, p) && *p != CTRL_STOP_OBJ) {
 279:src/mcu_msg.c ****         p++;
 280:src/mcu_msg.c ****     }
 281:src/mcu_msg.c ****     res.content.len = p - res.content.s;
 282:src/mcu_msg.c ****     return res;
 283:src/mcu_msg.c **** }
 284:src/mcu_msg.c **** 
 285:src/mcu_msg.c **** mcu_msg_cmd_t mcu_msg_parser_get_cmd(mcu_msg_t msg, char *cmd_id)
 286:src/mcu_msg.c **** {
 287:src/mcu_msg.c ****     mcu_msg_cmd_t res;
 288:src/mcu_msg.c ****     // return with the find result
 289:src/mcu_msg.c ****     res.cmd = find_keyword(msg.content, cmd_id, CTRL_CMD_START_FLAG, CTRL_CMD_STOP_FLAG);
 290:src/mcu_msg.c ****     return res;
 291:src/mcu_msg.c **** }
 292:src/mcu_msg.c **** 
 293:src/mcu_msg.c **** int8_t mcu_msg_parser_get_int(int *res_val, mcu_msg_obj_t obj, char *key)
 294:src/mcu_msg.c **** {
 295:src/mcu_msg.c ****     mcu_msg_string_t sval = find_val(obj, key);
 296:src/mcu_msg.c ****     mcu_msg_size_t i;
 297:src/mcu_msg.c ****     unsigned m = 1;
 298:src/mcu_msg.c ****     int sign = 1;
 299:src/mcu_msg.c ****     int8_t res = 0; // result of function
 300:src/mcu_msg.c **** 
 301:src/mcu_msg.c ****     if(sval.s == NULL)  //key nout found
 302:src/mcu_msg.c ****         return -1;
 303:src/mcu_msg.c **** 
 304:src/mcu_msg.c **** 
 305:src/mcu_msg.c ****     switch(*sval.s) { //if the sign is defined, set the sign variable and increment the pointer
GAS LISTING /tmp/cctOiEvw.s 			page 8


 306:src/mcu_msg.c ****         case '+':
 307:src/mcu_msg.c ****             sign = 1;
 308:src/mcu_msg.c ****             sval.s++;
 309:src/mcu_msg.c ****         break;
 310:src/mcu_msg.c ****         
 311:src/mcu_msg.c ****         case '-':
 312:src/mcu_msg.c ****             sign = -1;
 313:src/mcu_msg.c ****             sval.s++;
 314:src/mcu_msg.c ****         break;
 315:src/mcu_msg.c ****         
 316:src/mcu_msg.c ****         default:
 317:src/mcu_msg.c ****         break;
 318:src/mcu_msg.c ****     }
 319:src/mcu_msg.c **** 
 320:src/mcu_msg.c ****     for(i = 0; is_in_str_buff(obj.content, sval.s) && !is_whitespace(*sval.s) && *sval.s != CTRL_KE
 321:src/mcu_msg.c ****         if(*sval.s < '0' || *sval.s > '9') {    // if non valid number, return with error
 322:src/mcu_msg.c ****             return -1;
 323:src/mcu_msg.c ****         }
 324:src/mcu_msg.c ****     }
 325:src/mcu_msg.c **** 
 326:src/mcu_msg.c ****     *res_val = 0;
 327:src/mcu_msg.c ****     --sval.s;
 328:src/mcu_msg.c ****     while(i--) { //convert value to integer
 329:src/mcu_msg.c ****         *res_val += (*sval.s-- - '0') * m;
 330:src/mcu_msg.c ****         m *= 10;
 331:src/mcu_msg.c ****         res++;
 332:src/mcu_msg.c ****     }
 333:src/mcu_msg.c ****     
 334:src/mcu_msg.c ****     *res_val *= sign; //corrigate with the sign
 335:src/mcu_msg.c **** 
 336:src/mcu_msg.c ****     return res; // return with the digit count, if correct
 337:src/mcu_msg.c **** }
 338:src/mcu_msg.c **** 
 339:src/mcu_msg.c **** 
 340:src/mcu_msg.c **** int8_t mcu_msg_parser_get_float(float *res_val, mcu_msg_obj_t obj, char *key)
 341:src/mcu_msg.c **** {
 342:src/mcu_msg.c ****     mcu_msg_string_t sval = find_val(obj, key);
 343:src/mcu_msg.c ****     char *pf;
 344:src/mcu_msg.c ****     mcu_msg_size_t i;
 345:src/mcu_msg.c ****     unsigned m = 1;
 346:src/mcu_msg.c ****     float mf = 0.1;
 347:src/mcu_msg.c ****     int sign = 1;
 348:src/mcu_msg.c ****     int8_t res = 0; // result of function
 349:src/mcu_msg.c **** 
 350:src/mcu_msg.c ****     if(sval.s == NULL)  //key nout found
 351:src/mcu_msg.c ****         return -1;
 352:src/mcu_msg.c **** 
 353:src/mcu_msg.c **** 
 354:src/mcu_msg.c ****     switch(*sval.s) { //if the sign is defined, set the sign variable and increment the pointer
 355:src/mcu_msg.c ****         case '+':
 356:src/mcu_msg.c ****             sign = 1;
 357:src/mcu_msg.c ****             sval.s++;
 358:src/mcu_msg.c ****         break;
 359:src/mcu_msg.c ****         
 360:src/mcu_msg.c ****         case '-':
 361:src/mcu_msg.c ****             sign = -1;
 362:src/mcu_msg.c ****             sval.s++;
GAS LISTING /tmp/cctOiEvw.s 			page 9


 363:src/mcu_msg.c ****         break;
 364:src/mcu_msg.c ****         
 365:src/mcu_msg.c ****         default:
 366:src/mcu_msg.c ****         break;
 367:src/mcu_msg.c ****     }
 368:src/mcu_msg.c **** 
 369:src/mcu_msg.c ****     //move p to dec separator or end of the value
 370:src/mcu_msg.c ****     for(i = 0; is_in_str_buff(obj.content, sval.s) && !is_whitespace(*sval.s) && *sval.s != CTRL_KE
 371:src/mcu_msg.c ****         if((*sval.s < '0' || *sval.s > '9')) {    // if non valid number, return with error
 372:src/mcu_msg.c ****             return -1;
 373:src/mcu_msg.c ****         }
 374:src/mcu_msg.c ****     }
 375:src/mcu_msg.c **** 
 376:src/mcu_msg.c ****     *res_val = 0.0;
 377:src/mcu_msg.c ****     
 378:src/mcu_msg.c ****     if(*sval.s == '.') {
 379:src/mcu_msg.c ****         pf = sval.s + 1;
 380:src/mcu_msg.c ****         res++;
 381:src/mcu_msg.c ****     } else {
 382:src/mcu_msg.c ****         pf = NULL;
 383:src/mcu_msg.c ****     }
 384:src/mcu_msg.c **** 
 385:src/mcu_msg.c ****     --sval.s;
 386:src/mcu_msg.c ****     while(i--) { // convert integer part
 387:src/mcu_msg.c ****         *res_val += (*sval.s-- - '0') * m;
 388:src/mcu_msg.c ****         m *= 10;
 389:src/mcu_msg.c ****         res++;
 390:src/mcu_msg.c ****     }
 391:src/mcu_msg.c ****     
 392:src/mcu_msg.c ****     // calculate floating point section after '.' (if there is)
 393:src/mcu_msg.c ****     for(; pf != NULL && is_in_str_buff(obj.content, pf) && !is_whitespace(*pf) && *pf != CTRL_KEY_S
 394:src/mcu_msg.c ****         if(*pf < '0' || *pf > '9') {    // if non valid number, return with error
 395:src/mcu_msg.c ****             return -1;
 396:src/mcu_msg.c ****         }
 397:src/mcu_msg.c ****         *res_val += (*pf - '0') * mf;
 398:src/mcu_msg.c ****         mf /= 10;
 399:src/mcu_msg.c ****         res++; 
 400:src/mcu_msg.c ****     }
 401:src/mcu_msg.c **** 
 402:src/mcu_msg.c ****     *res_val *= sign; //corrigate with the sign
 403:src/mcu_msg.c **** 
 404:src/mcu_msg.c ****     return res; // return with the digit count + '.' separator, if correct
 405:src/mcu_msg.c **** }
 406:src/mcu_msg.c **** 
 407:src/mcu_msg.c **** 
 408:src/mcu_msg.c **** 
 409:src/mcu_msg.c **** mcu_msg_string_t mcu_msg_parser_get_string(mcu_msg_obj_t obj, char *key)
 410:src/mcu_msg.c **** {
 411:src/mcu_msg.c ****     mcu_msg_string_t res = find_val(obj, key);
 412:src/mcu_msg.c ****     char qmark;
 413:src/mcu_msg.c ****     char *p;
 414:src/mcu_msg.c **** 
 415:src/mcu_msg.c ****     if(res.s == NULL) {
 416:src/mcu_msg.c ****         mcu_msg_destroy_string(&res);
 417:src/mcu_msg.c ****         return res;
 418:src/mcu_msg.c ****     }
 419:src/mcu_msg.c ****         
GAS LISTING /tmp/cctOiEvw.s 			page 10


 420:src/mcu_msg.c ****     qmark = *res.s;
 421:src/mcu_msg.c **** 
 422:src/mcu_msg.c ****     if(qmark != '\'' && qmark != '"') { // qmark not found, this is not a string
 423:src/mcu_msg.c ****         mcu_msg_destroy_string(&res);
 424:src/mcu_msg.c ****         return res;
 425:src/mcu_msg.c ****     }
 426:src/mcu_msg.c **** 
 427:src/mcu_msg.c ****     p = ++res.s;
 428:src/mcu_msg.c ****     while(is_in_str_buff(obj.content, p) && *p != qmark) { // calc len
 429:src/mcu_msg.c ****         p++;
 430:src/mcu_msg.c ****     }
 431:src/mcu_msg.c ****     res.len = p - res.s;
 432:src/mcu_msg.c ****     return res;
 433:src/mcu_msg.c **** }
 434:src/mcu_msg.c **** 
 435:src/mcu_msg.c **** /**
 436:src/mcu_msg.c ****  * @brief Default string copy to char array
 437:src/mcu_msg.c ****  * 
 438:src/mcu_msg.c ****  * @param dest destination char array
 439:src/mcu_msg.c ****  * @param source source string type
 440:src/mcu_msg.c ****  */
 441:src/mcu_msg.c **** static void mcu_msg_str_copy_to_chr_arr(char *dest, mcu_msg_string_t source)
 442:src/mcu_msg.c **** {
  94              		.loc 1 442 0
  95              		.cfi_startproc
  96              	.LVL12:
 443:src/mcu_msg.c ****     mcu_msg_size_t i;
 444:src/mcu_msg.c ****     for(i = 0; i < source.len; *(dest + i) = *(source.s + i), i++);
  97              		.loc 1 444 0
  98 0000 B8000000 		movl	$0, %eax
  98      00
  99 0005 EB14     		jmp	.L12
 100              	.LVL13:
 101              	.L13:
 102              		.loc 1 444 0 is_stmt 0 discriminator 3
 103 0007 0FB7D0   		movzwl	%ax, %edx
 104 000a 4889D1   		movq	%rdx, %rcx
 105 000d 48034C24 		addq	8(%rsp), %rcx
 105      08
 106 0012 0FB609   		movzbl	(%rcx), %ecx
 107 0015 880C17   		movb	%cl, (%rdi,%rdx)
 108 0018 83C001   		addl	$1, %eax
 109              	.LVL14:
 110              	.L12:
 111              		.loc 1 444 0 discriminator 1
 112 001b 66394424 		cmpw	%ax, 16(%rsp)
 112      10
 113 0020 77E5     		ja	.L13
 445:src/mcu_msg.c **** }
 114              		.loc 1 445 0 is_stmt 1
 115 0022 F3C3     		rep ret
 116              		.cfi_endproc
 117              	.LFE43:
 119              		.section	.text.mcu_msg_str_copy,"ax",@progbits
 121              	mcu_msg_str_copy:
 122              	.LFB44:
 446:src/mcu_msg.c **** 
GAS LISTING /tmp/cctOiEvw.s 			page 11


 447:src/mcu_msg.c **** /**
 448:src/mcu_msg.c ****  * @brief Default string copy to string type
 449:src/mcu_msg.c ****  * 
 450:src/mcu_msg.c ****  * @param dest destination string type
 451:src/mcu_msg.c ****  * @param source source string type
 452:src/mcu_msg.c ****  */
 453:src/mcu_msg.c **** static void mcu_msg_str_copy(mcu_msg_string_t dest, mcu_msg_string_t source)
 454:src/mcu_msg.c **** {
 123              		.loc 1 454 0
 124              		.cfi_startproc
 125              	.LVL15:
 455:src/mcu_msg.c ****     mcu_msg_size_t i;
 456:src/mcu_msg.c ****     for(i = 0, dest.len = source.len; i < source.len; *(dest.s + i) = *(source.s + i), i++);
 126              		.loc 1 456 0
 127 0000 0FB77424 		movzwl	40(%rsp), %esi
 127      28
 128 0005 BA000000 		movl	$0, %edx
 128      00
 129 000a EB18     		jmp	.L15
 130              	.LVL16:
 131              	.L16:
 132              		.loc 1 456 0 is_stmt 0 discriminator 3
 133 000c 0FB7C2   		movzwl	%dx, %eax
 134 000f 4889C1   		movq	%rax, %rcx
 135 0012 48034C24 		addq	32(%rsp), %rcx
 135      20
 136 0017 48034424 		addq	8(%rsp), %rax
 136      08
 137 001c 0FB609   		movzbl	(%rcx), %ecx
 138 001f 8808     		movb	%cl, (%rax)
 139 0021 83C201   		addl	$1, %edx
 140              	.LVL17:
 141              	.L15:
 142              		.loc 1 456 0 discriminator 1
 143 0024 6639D6   		cmpw	%dx, %si
 144 0027 77E3     		ja	.L16
 457:src/mcu_msg.c **** }
 145              		.loc 1 457 0 is_stmt 1
 146 0029 F3C3     		rep ret
 147              		.cfi_endproc
 148              	.LFE44:
 150              		.section	.text.mcu_msg_destroy_string,"ax",@progbits
 151              		.globl	mcu_msg_destroy_string
 153              	mcu_msg_destroy_string:
 154              	.LFB27:
  30:src/mcu_msg.c ****     str->s = NULL;
 155              		.loc 1 30 0
 156              		.cfi_startproc
 157              	.LVL18:
  31:src/mcu_msg.c ****     str->len = 0;
 158              		.loc 1 31 0
 159 0000 48C70700 		movq	$0, (%rdi)
 159      000000
  32:src/mcu_msg.c **** }
 160              		.loc 1 32 0
 161 0007 66C74708 		movw	$0, 8(%rdi)
 161      0000
GAS LISTING /tmp/cctOiEvw.s 			page 12


  33:src/mcu_msg.c **** 
 162              		.loc 1 33 0
 163 000d C3       		ret
 164              		.cfi_endproc
 165              	.LFE27:
 167              		.section	.text.find_keyword,"ax",@progbits
 169              	find_keyword:
 170              	.LFB35:
 171:src/mcu_msg.c **** 
 171              		.loc 1 171 0
 172              		.cfi_startproc
 173              	.LVL19:
 174 0000 4157     		pushq	%r15
 175              	.LCFI0:
 176              		.cfi_def_cfa_offset 16
 177              		.cfi_offset 15, -16
 178 0002 4156     		pushq	%r14
 179              	.LCFI1:
 180              		.cfi_def_cfa_offset 24
 181              		.cfi_offset 14, -24
 182 0004 4155     		pushq	%r13
 183              	.LCFI2:
 184              		.cfi_def_cfa_offset 32
 185              		.cfi_offset 13, -32
 186 0006 4154     		pushq	%r12
 187              	.LCFI3:
 188              		.cfi_def_cfa_offset 40
 189              		.cfi_offset 12, -40
 190 0008 55       		pushq	%rbp
 191              	.LCFI4:
 192              		.cfi_def_cfa_offset 48
 193              		.cfi_offset 6, -48
 194 0009 53       		pushq	%rbx
 195              	.LCFI5:
 196              		.cfi_def_cfa_offset 56
 197              		.cfi_offset 3, -56
 198 000a 4881ECA8 		subq	$168, %rsp
 198      000000
 199              	.LCFI6:
 200              		.cfi_def_cfa_offset 224
 201 0011 4989FE   		movq	%rdi, %r14
 202 0014 4989F4   		movq	%rsi, %r12
 203 0017 4189D5   		movl	%edx, %r13d
 204 001a 4189CF   		movl	%ecx, %r15d
 171:src/mcu_msg.c **** 
 205              		.loc 1 171 0
 206 001d 64488B04 		movq	%fs:40, %rax
 206      25280000 
 206      00
 207 0026 48898424 		movq	%rax, 152(%rsp)
 207      98000000 
 208 002e 31C0     		xorl	%eax, %eax
 174:src/mcu_msg.c ****     uint8_t equal;
 209              		.loc 1 174 0
 210 0030 488B9C24 		movq	224(%rsp), %rbx
 210      E0000000 
 211              	.LVL20:
GAS LISTING /tmp/cctOiEvw.s 			page 13


 177:src/mcu_msg.c ****     while(is_in_str_buff(str, p) && *p) {
 212              		.loc 1 177 0
 213 0038 4889F7   		movq	%rsi, %rdi
 214              	.LVL21:
 215 003b E8000000 		call	str_len
 215      00
 216              	.LVL22:
 217 0040 89C5     		movl	%eax, %ebp
 218 0042 66894424 		movw	%ax, 8(%rsp)
 218      08
 178:src/mcu_msg.c ****         if(*p == '\'' || *p == '"') { //skip internal strings
 219              		.loc 1 178 0
 220 0047 E9370100 		jmp	.L19
 220      00
 221              	.L42:
 180:src/mcu_msg.c ****         }
 222              		.loc 1 180 0
 223 004c 4889DF   		movq	%rbx, %rdi
 224 004f E8000000 		call	skip_internal_str
 224      00
 225              	.LVL23:
 226 0054 4889C3   		movq	%rax, %rbx
 227              	.LVL24:
 228 0057 E9910100 		jmp	.L20
 228      00
 229              	.LVL25:
 230              	.L24:
 187:src/mcu_msg.c ****                     equal = 0;
 231              		.loc 1 187 0
 232 005c 8D4A9F   		leal	-97(%rdx), %ecx
 233 005f 80F919   		cmpb	$25, %cl
 234 0062 400F97C6 		seta	%sil
 235 0066 80FA5F   		cmpb	$95, %dl
 236 0069 0F95C1   		setne	%cl
 186:src/mcu_msg.c ****                                     !is_valid_keyword_char(*(res.s + i))) {
 237              		.loc 1 186 0
 238 006c 4084CE   		testb	%cl, %sil
 239 006f 7414     		je	.L26
 187:src/mcu_msg.c ****                     equal = 0;
 240              		.loc 1 187 0
 241 0071 8D4ABF   		leal	-65(%rdx), %ecx
 242 0074 80F919   		cmpb	$25, %cl
 243 0077 760C     		jbe	.L26
 187:src/mcu_msg.c ****                     equal = 0;
 244              		.loc 1 187 0 is_stmt 0 discriminator 1
 245 0079 83EA30   		subl	$48, %edx
 246 007c 80FA09   		cmpb	$9, %dl
 247 007f 0F878600 		ja	.L37
 247      0000
 248              	.L26:
 185:src/mcu_msg.c ****                 if((*(res.s + i) != *(keyword + i)) || is_ctrl_char(*(res.s + i)) || 
 249              		.loc 1 185 0 is_stmt 1 discriminator 2
 250 0085 83C001   		addl	$1, %eax
 251              	.LVL26:
 252              	.L22:
 185:src/mcu_msg.c ****                 if((*(res.s + i) != *(keyword + i)) || is_ctrl_char(*(res.s + i)) || 
 253              		.loc 1 185 0 is_stmt 0 discriminator 1
GAS LISTING /tmp/cctOiEvw.s 			page 14


 254 0088 0FB7C8   		movzwl	%ax, %ecx
 255 008b 488D340F 		leaq	(%rdi,%rcx), %rsi
 256 008f 488B9424 		movq	224(%rsp), %rdx
 256      E0000000 
 257 0097 4989D0   		movq	%rdx, %r8
 258 009a 48895424 		movq	%rdx, 64(%rsp)
 258      40
 259 009f 488B9424 		movq	232(%rsp), %rdx
 259      E8000000 
 260 00a7 48895424 		movq	%rdx, 72(%rsp)
 260      48
 261 00ac 488B9424 		movq	240(%rsp), %rdx
 261      F0000000 
 262 00b4 48895424 		movq	%rdx, 80(%rsp)
 262      50
 263              	.LVL27:
 264              	.LBB48:
 265              	.LBB49:
 139:src/mcu_msg.c **** }
 266              		.loc 1 139 0 is_stmt 1 discriminator 1
 267 00b9 4889F3   		movq	%rsi, %rbx
 268 00bc 4C29C3   		subq	%r8, %rbx
 269 00bf 0FB75424 		movzwl	72(%rsp), %edx
 269      48
 270              	.LVL28:
 271              	.LBE49:
 272              	.LBE48:
 185:src/mcu_msg.c ****                 if((*(res.s + i) != *(keyword + i)) || is_ctrl_char(*(res.s + i)) || 
 273              		.loc 1 185 0 discriminator 1
 274 00c4 4839D3   		cmpq	%rdx, %rbx
 275 00c7 7D49     		jge	.L38
 185:src/mcu_msg.c ****                 if((*(res.s + i) != *(keyword + i)) || is_ctrl_char(*(res.s + i)) || 
 276              		.loc 1 185 0 is_stmt 0 discriminator 3
 277 00c9 6639C5   		cmpw	%ax, %bp
 278 00cc 7628     		jbe	.L40
 186:src/mcu_msg.c ****                                     !is_valid_keyword_char(*(res.s + i))) {
 279              		.loc 1 186 0 is_stmt 1
 280 00ce 0FB616   		movzbl	(%rsi), %edx
 281 00d1 413A140C 		cmpb	(%r12,%rcx), %dl
 282 00d5 7526     		jne	.L35
 283              	.LVL29:
 284              	.LBB50:
 285              	.LBB51:
  60:src/mcu_msg.c ****         case CTRL_MSG_FLAG:
 286              		.loc 1 60 0 discriminator 1
 287 00d7 8D4ADD   		leal	-35(%rdx), %ecx
 288 00da 80F95A   		cmpb	$90, %cl
 289 00dd 0F8779FF 		ja	.L24
 289      FFFF
 290 00e3 0FB6C9   		movzbl	%cl, %ecx
 291 00e6 488D3500 		leaq	.L25(%rip), %rsi
 291      000000
 292 00ed 48630C8E 		movslq	(%rsi,%rcx,4), %rcx
 293 00f1 4801F1   		addq	%rsi, %rcx
 294 00f4 FFE1     		jmp	*%rcx
 295              		.section	.rodata.find_keyword,"a",@progbits
 296              		.align 4
GAS LISTING /tmp/cctOiEvw.s 			page 15


 297              		.align 4
 298              	.L25:
 299 0000 00000000 		.long	.L36-.L25
 300 0004 00000000 		.long	.L36-.L25
 301 0008 00000000 		.long	.L24-.L25
 302 000c 00000000 		.long	.L24-.L25
 303 0010 00000000 		.long	.L24-.L25
 304 0014 00000000 		.long	.L36-.L25
 305 0018 00000000 		.long	.L36-.L25
 306 001c 00000000 		.long	.L24-.L25
 307 0020 00000000 		.long	.L24-.L25
 308 0024 00000000 		.long	.L24-.L25
 309 0028 00000000 		.long	.L24-.L25
 310 002c 00000000 		.long	.L24-.L25
 311 0030 00000000 		.long	.L24-.L25
 312 0034 00000000 		.long	.L24-.L25
 313 0038 00000000 		.long	.L24-.L25
 314 003c 00000000 		.long	.L24-.L25
 315 0040 00000000 		.long	.L24-.L25
 316 0044 00000000 		.long	.L24-.L25
 317 0048 00000000 		.long	.L24-.L25
 318 004c 00000000 		.long	.L24-.L25
 319 0050 00000000 		.long	.L24-.L25
 320 0054 00000000 		.long	.L24-.L25
 321 0058 00000000 		.long	.L24-.L25
 322 005c 00000000 		.long	.L24-.L25
 323 0060 00000000 		.long	.L36-.L25
 324 0064 00000000 		.long	.L36-.L25
 325 0068 00000000 		.long	.L36-.L25
 326 006c 00000000 		.long	.L36-.L25
 327 0070 00000000 		.long	.L24-.L25
 328 0074 00000000 		.long	.L36-.L25
 329 0078 00000000 		.long	.L24-.L25
 330 007c 00000000 		.long	.L24-.L25
 331 0080 00000000 		.long	.L24-.L25
 332 0084 00000000 		.long	.L24-.L25
 333 0088 00000000 		.long	.L24-.L25
 334 008c 00000000 		.long	.L24-.L25
 335 0090 00000000 		.long	.L24-.L25
 336 0094 00000000 		.long	.L24-.L25
 337 0098 00000000 		.long	.L24-.L25
 338 009c 00000000 		.long	.L24-.L25
 339 00a0 00000000 		.long	.L24-.L25
 340 00a4 00000000 		.long	.L24-.L25
 341 00a8 00000000 		.long	.L24-.L25
 342 00ac 00000000 		.long	.L24-.L25
 343 00b0 00000000 		.long	.L24-.L25
 344 00b4 00000000 		.long	.L24-.L25
 345 00b8 00000000 		.long	.L24-.L25
 346 00bc 00000000 		.long	.L24-.L25
 347 00c0 00000000 		.long	.L24-.L25
 348 00c4 00000000 		.long	.L24-.L25
 349 00c8 00000000 		.long	.L24-.L25
 350 00cc 00000000 		.long	.L24-.L25
 351 00d0 00000000 		.long	.L24-.L25
 352 00d4 00000000 		.long	.L24-.L25
 353 00d8 00000000 		.long	.L24-.L25
GAS LISTING /tmp/cctOiEvw.s 			page 16


 354 00dc 00000000 		.long	.L24-.L25
 355 00e0 00000000 		.long	.L24-.L25
 356 00e4 00000000 		.long	.L24-.L25
 357 00e8 00000000 		.long	.L24-.L25
 358 00ec 00000000 		.long	.L24-.L25
 359 00f0 00000000 		.long	.L24-.L25
 360 00f4 00000000 		.long	.L24-.L25
 361 00f8 00000000 		.long	.L24-.L25
 362 00fc 00000000 		.long	.L24-.L25
 363 0100 00000000 		.long	.L24-.L25
 364 0104 00000000 		.long	.L24-.L25
 365 0108 00000000 		.long	.L24-.L25
 366 010c 00000000 		.long	.L24-.L25
 367 0110 00000000 		.long	.L24-.L25
 368 0114 00000000 		.long	.L24-.L25
 369 0118 00000000 		.long	.L24-.L25
 370 011c 00000000 		.long	.L24-.L25
 371 0120 00000000 		.long	.L24-.L25
 372 0124 00000000 		.long	.L24-.L25
 373 0128 00000000 		.long	.L24-.L25
 374 012c 00000000 		.long	.L24-.L25
 375 0130 00000000 		.long	.L24-.L25
 376 0134 00000000 		.long	.L24-.L25
 377 0138 00000000 		.long	.L24-.L25
 378 013c 00000000 		.long	.L24-.L25
 379 0140 00000000 		.long	.L24-.L25
 380 0144 00000000 		.long	.L24-.L25
 381 0148 00000000 		.long	.L24-.L25
 382 014c 00000000 		.long	.L24-.L25
 383 0150 00000000 		.long	.L24-.L25
 384 0154 00000000 		.long	.L24-.L25
 385 0158 00000000 		.long	.L24-.L25
 386 015c 00000000 		.long	.L24-.L25
 387 0160 00000000 		.long	.L36-.L25
 388 0164 00000000 		.long	.L24-.L25
 389 0168 00000000 		.long	.L36-.L25
 390              		.section	.text.find_keyword
 391              	.LVL30:
 392              	.L40:
 393              	.LBE51:
 394              	.LBE50:
 184:src/mcu_msg.c ****             for(i = 0; is_in_str_buff(str, res.s + i) && i < res.len; i++) { // if not equal during
 395              		.loc 1 184 0
 396 00f6 BE010000 		movl	$1, %esi
 396      00
 397 00fb EB1F     		jmp	.L30
 398              	.L35:
 188:src/mcu_msg.c ****                     break;
 399              		.loc 1 188 0
 400 00fd BE000000 		movl	$0, %esi
 400      00
 401 0102 EB18     		jmp	.L30
 402              	.LVL31:
 403              	.L36:
 404 0104 BE000000 		movl	$0, %esi
 404      00
 405 0109 EB11     		jmp	.L30
GAS LISTING /tmp/cctOiEvw.s 			page 17


 406              	.LVL32:
 407              	.L37:
 408 010b BE000000 		movl	$0, %esi
 408      00
 409 0110 EB0A     		jmp	.L30
 410              	.L38:
 184:src/mcu_msg.c ****             for(i = 0; is_in_str_buff(str, res.s + i) && i < res.len; i++) { // if not equal during
 411              		.loc 1 184 0
 412 0112 BE010000 		movl	$1, %esi
 412      00
 413 0117 EB03     		jmp	.L30
 414              	.LVL33:
 415              	.L29:
 192:src/mcu_msg.c ****             if(equal && *(res.s + i) == stopc) { //if the stop char is the next, whitout spaces, re
 416              		.loc 1 192 0
 417 0119 83C001   		addl	$1, %eax
 418              	.LVL34:
 419              	.L30:
 192:src/mcu_msg.c ****             if(equal && *(res.s + i) == stopc) { //if the stop char is the next, whitout spaces, re
 420              		.loc 1 192 0 is_stmt 0 discriminator 1
 421 011c 0FB7D8   		movzwl	%ax, %ebx
 422 011f 4801FB   		addq	%rdi, %rbx
 423 0122 488B9424 		movq	224(%rsp), %rdx
 423      E0000000 
 424 012a 4889D1   		movq	%rdx, %rcx
 425 012d 48895424 		movq	%rdx, 96(%rsp)
 425      60
 426 0132 488B9424 		movq	232(%rsp), %rdx
 426      E8000000 
 427 013a 48895424 		movq	%rdx, 104(%rsp)
 427      68
 428 013f 488B9424 		movq	240(%rsp), %rdx
 428      F0000000 
 429 0147 48895424 		movq	%rdx, 112(%rsp)
 429      70
 430              	.LVL35:
 431              	.LBB52:
 432              	.LBB53:
 139:src/mcu_msg.c **** }
 433              		.loc 1 139 0 is_stmt 1 discriminator 1
 434 014c 4889DA   		movq	%rbx, %rdx
 435 014f 4829CA   		subq	%rcx, %rdx
 436 0152 4889D1   		movq	%rdx, %rcx
 437 0155 0FB75424 		movzwl	104(%rsp), %edx
 437      68
 438              	.LVL36:
 439              	.LBE53:
 440              	.LBE52:
 192:src/mcu_msg.c ****             if(equal && *(res.s + i) == stopc) { //if the stop char is the next, whitout spaces, re
 441              		.loc 1 192 0 discriminator 1
 442 015a 4839D1   		cmpq	%rdx, %rcx
 443 015d 7D12     		jge	.L28
 192:src/mcu_msg.c ****             if(equal && *(res.s + i) == stopc) { //if the stop char is the next, whitout spaces, re
 444              		.loc 1 192 0 is_stmt 0 discriminator 2
 445 015f 0FB613   		movzbl	(%rbx), %edx
 446              	.LVL37:
 447              	.LBB54:
GAS LISTING /tmp/cctOiEvw.s 			page 18


 448              	.LBB55:
  86:src/mcu_msg.c ****         case  ' ':
 449              		.loc 1 86 0 is_stmt 1 discriminator 2
 450 0162 80FA09   		cmpb	$9, %dl
 451 0165 7C0A     		jl	.L28
 452 0167 80FA0D   		cmpb	$13, %dl
 453 016a 7EAD     		jle	.L29
 454 016c 80FA20   		cmpb	$32, %dl
 455 016f 74A8     		je	.L29
 456              	.LVL38:
 457              	.L28:
 458              	.LBE55:
 459              	.LBE54:
 193:src/mcu_msg.c ****                 return res;
 460              		.loc 1 193 0
 461 0171 4084F6   		testb	%sil, %sil
 462 0174 7409     		je	.L21
 193:src/mcu_msg.c ****                 return res;
 463              		.loc 1 193 0 is_stmt 0 discriminator 1
 464 0176 44383B   		cmpb	%r15b, (%rbx)
 465 0179 0F84C700 		je	.L41
 465      0000
 466              	.LVL39:
 467              	.L21:
 199:src/mcu_msg.c ****     }
 468              		.loc 1 199 0 is_stmt 1
 469 017f 4883C301 		addq	$1, %rbx
 470              	.LVL40:
 471              	.L19:
 472 0183 488B8424 		movq	224(%rsp), %rax
 472      E0000000 
 473 018b 4889C2   		movq	%rax, %rdx
 474 018e 48898424 		movq	%rax, 128(%rsp)
 474      80000000 
 475 0196 488B8424 		movq	232(%rsp), %rax
 475      E8000000 
 476 019e 48898424 		movq	%rax, 136(%rsp)
 476      88000000 
 477 01a6 488B8424 		movq	240(%rsp), %rax
 477      F0000000 
 478 01ae 48898424 		movq	%rax, 144(%rsp)
 478      90000000 
 479              	.LVL41:
 480              	.LBB56:
 481              	.LBB57:
 139:src/mcu_msg.c **** }
 482              		.loc 1 139 0
 483 01b6 4889D8   		movq	%rbx, %rax
 484 01b9 4829D0   		subq	%rdx, %rax
 485 01bc 4889C2   		movq	%rax, %rdx
 486 01bf 0FB78424 		movzwl	136(%rsp), %eax
 486      88000000 
 487              	.LVL42:
 488              	.LBE57:
 489              	.LBE56:
 178:src/mcu_msg.c ****         if(*p == '\'' || *p == '"') { //skip internal strings
 490              		.loc 1 178 0
GAS LISTING /tmp/cctOiEvw.s 			page 19


 491 01c7 4839C2   		cmpq	%rax, %rdx
 492 01ca 0F8D9100 		jge	.L32
 492      0000
 178:src/mcu_msg.c ****         if(*p == '\'' || *p == '"') { //skip internal strings
 493              		.loc 1 178 0 is_stmt 0 discriminator 1
 494 01d0 0FB603   		movzbl	(%rbx), %eax
 495 01d3 84C0     		testb	%al, %al
 496 01d5 0F848600 		je	.L32
 496      0000
 179:src/mcu_msg.c ****             p = skip_internal_str(p);
 497              		.loc 1 179 0 is_stmt 1
 498 01db 3C27     		cmpb	$39, %al
 499 01dd 0F94C2   		sete	%dl
 500 01e0 3C22     		cmpb	$34, %al
 501 01e2 0F94C0   		sete	%al
 502 01e5 08C2     		orb	%al, %dl
 503 01e7 0F855FFE 		jne	.L42
 503      FFFF
 504              	.L20:
 505 01ed 488B8424 		movq	224(%rsp), %rax
 505      E0000000 
 506 01f5 4889C2   		movq	%rax, %rdx
 507 01f8 48894424 		movq	%rax, 32(%rsp)
 507      20
 508 01fd 488B8424 		movq	232(%rsp), %rax
 508      E8000000 
 509 0205 48894424 		movq	%rax, 40(%rsp)
 509      28
 510 020a 488B8424 		movq	240(%rsp), %rax
 510      F0000000 
 511 0212 48894424 		movq	%rax, 48(%rsp)
 511      30
 512              	.LVL43:
 513              	.LBB58:
 514              	.LBB59:
 139:src/mcu_msg.c **** }
 515              		.loc 1 139 0
 516 0217 4889D8   		movq	%rbx, %rax
 517 021a 4829D0   		subq	%rdx, %rax
 518 021d 0FB75424 		movzwl	40(%rsp), %edx
 518      28
 519              	.LVL44:
 520              	.LBE59:
 521              	.LBE58:
 182:src/mcu_msg.c ****             res.s = p + 1;
 522              		.loc 1 182 0
 523 0222 4839C2   		cmpq	%rax, %rdx
 524 0225 0F8E54FF 		jle	.L21
 524      FFFF
 182:src/mcu_msg.c ****             res.s = p + 1;
 525              		.loc 1 182 0 is_stmt 0 discriminator 1
 526 022b 44382B   		cmpb	%r13b, (%rbx)
 527 022e 0F854BFF 		jne	.L21
 527      FFFF
 183:src/mcu_msg.c ****             equal = 1;
 528              		.loc 1 183 0 is_stmt 1
 529 0234 488D7B01 		leaq	1(%rbx), %rdi
GAS LISTING /tmp/cctOiEvw.s 			page 20


 530 0238 48893C24 		movq	%rdi, (%rsp)
 531              	.LVL45:
 185:src/mcu_msg.c ****                 if((*(res.s + i) != *(keyword + i)) || is_ctrl_char(*(res.s + i)) || 
 532              		.loc 1 185 0
 533 023c B8000000 		movl	$0, %eax
 533      00
 534 0241 E942FEFF 		jmp	.L22
 534      FF
 535              	.LVL46:
 536              	.L41:
 194:src/mcu_msg.c ****             } else {
 537              		.loc 1 194 0
 538 0246 488B0424 		movq	(%rsp), %rax
 539              	.LVL47:
 540 024a 488B5424 		movq	8(%rsp), %rdx
 540      08
 541 024f 498906   		movq	%rax, (%r14)
 542 0252 49895608 		movq	%rdx, 8(%r14)
 543 0256 488B4424 		movq	16(%rsp), %rax
 543      10
 544 025b 49894610 		movq	%rax, 16(%r14)
 545 025f EB21     		jmp	.L18
 546              	.LVL48:
 547              	.L32:
 202:src/mcu_msg.c ****     return res;
 548              		.loc 1 202 0
 549 0261 4889E7   		movq	%rsp, %rdi
 550 0264 E8000000 		call	mcu_msg_destroy_string
 550      00
 551              	.LVL49:
 203:src/mcu_msg.c **** }
 552              		.loc 1 203 0
 553 0269 488B0424 		movq	(%rsp), %rax
 554 026d 488B5424 		movq	8(%rsp), %rdx
 554      08
 555 0272 498906   		movq	%rax, (%r14)
 556 0275 49895608 		movq	%rdx, 8(%r14)
 557 0279 488B4424 		movq	16(%rsp), %rax
 557      10
 558 027e 49894610 		movq	%rax, 16(%r14)
 559              	.LVL50:
 560              	.L18:
 204:src/mcu_msg.c **** 
 561              		.loc 1 204 0
 562 0282 4C89F0   		movq	%r14, %rax
 563 0285 488BBC24 		movq	152(%rsp), %rdi
 563      98000000 
 564 028d 6448333C 		xorq	%fs:40, %rdi
 564      25280000 
 564      00
 565 0296 7512     		jne	.L43
 566              	.LVL51:
 567 0298 4881C4A8 		addq	$168, %rsp
 567      000000
 568              	.LCFI7:
 569              		.cfi_remember_state
 570              		.cfi_def_cfa_offset 56
GAS LISTING /tmp/cctOiEvw.s 			page 21


 571 029f 5B       		popq	%rbx
 572              	.LCFI8:
 573              		.cfi_def_cfa_offset 48
 574 02a0 5D       		popq	%rbp
 575              	.LCFI9:
 576              		.cfi_def_cfa_offset 40
 577 02a1 415C     		popq	%r12
 578              	.LCFI10:
 579              		.cfi_def_cfa_offset 32
 580              	.LVL52:
 581 02a3 415D     		popq	%r13
 582              	.LCFI11:
 583              		.cfi_def_cfa_offset 24
 584              	.LVL53:
 585 02a5 415E     		popq	%r14
 586              	.LCFI12:
 587              		.cfi_def_cfa_offset 16
 588 02a7 415F     		popq	%r15
 589              	.LCFI13:
 590              		.cfi_def_cfa_offset 8
 591              	.LVL54:
 592 02a9 C3       		ret
 593              	.LVL55:
 594              	.L43:
 595              	.LCFI14:
 596              		.cfi_restore_state
 597 02aa E8000000 		call	__stack_chk_fail@PLT
 597      00
 598              	.LVL56:
 599              		.cfi_endproc
 600              	.LFE35:
 602              		.section	.text.find_val,"ax",@progbits
 604              	find_val:
 605              	.LFB36:
 216:src/mcu_msg.c ****     mcu_msg_string_t res  = find_keyword(obj.content, key, CTRL_KEY_FLAG, CTRL_KEY_EQU); //object s
 606              		.loc 1 216 0
 607              		.cfi_startproc
 608              	.LVL57:
 609 0000 53       		pushq	%rbx
 610              	.LCFI15:
 611              		.cfi_def_cfa_offset 16
 612              		.cfi_offset 3, -16
 613 0001 4883C480 		addq	$-128, %rsp
 614              	.LCFI16:
 615              		.cfi_def_cfa_offset 144
 616 0005 4889FB   		movq	%rdi, %rbx
 216:src/mcu_msg.c ****     mcu_msg_string_t res  = find_keyword(obj.content, key, CTRL_KEY_FLAG, CTRL_KEY_EQU); //object s
 617              		.loc 1 216 0
 618 0008 64488B04 		movq	%fs:40, %rax
 618      25280000 
 618      00
 619 0011 48894424 		movq	%rax, 120(%rsp)
 619      78
 620 0016 31C0     		xorl	%eax, %eax
 217:src/mcu_msg.c ****     char *p;
 621              		.loc 1 217 0
 622 0018 4889E7   		movq	%rsp, %rdi
GAS LISTING /tmp/cctOiEvw.s 			page 22


 623              	.LVL58:
 624 001b 4883EC08 		subq	$8, %rsp
 625              	.LCFI17:
 626              		.cfi_def_cfa_offset 152
 627 001f FFB424C0 		pushq	192(%rsp)
 627      000000
 628              	.LCFI18:
 629              		.cfi_def_cfa_offset 160
 630 0026 FFB424C0 		pushq	192(%rsp)
 630      000000
 631              	.LCFI19:
 632              		.cfi_def_cfa_offset 168
 633 002d FFB424C0 		pushq	192(%rsp)
 633      000000
 634              	.LCFI20:
 635              		.cfi_def_cfa_offset 176
 636 0034 B93D0000 		movl	$61, %ecx
 636      00
 637 0039 BA240000 		movl	$36, %edx
 637      00
 638 003e E8000000 		call	find_keyword
 638      00
 639              	.LVL59:
 219:src/mcu_msg.c ****         mcu_msg_destroy_string(&res);
 640              		.loc 1 219 0
 641 0043 488B4424 		movq	32(%rsp), %rax
 641      20
 642 0048 4883C420 		addq	$32, %rsp
 643              	.LCFI21:
 644              		.cfi_def_cfa_offset 144
 645 004c 4885C0   		testq	%rax, %rax
 646 004f 7413     		je	.L60
 223:src/mcu_msg.c ****         while(is_in_str_buff(obj.content, res.s + 1) && *res.s != CTRL_KEY_EQU) res.s++;
 647              		.loc 1 223 0
 648 0051 80383D   		cmpb	$61, (%rax)
 649 0054 7538     		jne	.L47
 650              	.L48:
 226:src/mcu_msg.c ****     while(is_in_str_buff(obj.content, res.s) && is_whitespace(*res.s)) res.s++; //skip spaces after
 651              		.loc 1 226 0
 652 0056 488B0424 		movq	(%rsp), %rax
 653 005a 4883C001 		addq	$1, %rax
 654 005e 48890424 		movq	%rax, (%rsp)
 227:src/mcu_msg.c **** 
 655              		.loc 1 227 0
 656 0062 EB7E     		jmp	.L52
 657              	.L60:
 220:src/mcu_msg.c ****         return res;
 658              		.loc 1 220 0
 659 0064 4889E7   		movq	%rsp, %rdi
 660 0067 E8000000 		call	mcu_msg_destroy_string
 660      00
 661              	.LVL60:
 221:src/mcu_msg.c ****     }
 662              		.loc 1 221 0
 663 006c 488B0424 		movq	(%rsp), %rax
 664 0070 488B5424 		movq	8(%rsp), %rdx
 664      08
GAS LISTING /tmp/cctOiEvw.s 			page 23


 665 0075 488903   		movq	%rax, (%rbx)
 666 0078 48895308 		movq	%rdx, 8(%rbx)
 667 007c 488B4424 		movq	16(%rsp), %rax
 667      10
 668 0081 48894310 		movq	%rax, 16(%rbx)
 669 0085 E93F0100 		jmp	.L44
 669      00
 670              	.L49:
 224:src/mcu_msg.c ****     }
 671              		.loc 1 224 0 discriminator 3
 672 008a 48890C24 		movq	%rcx, (%rsp)
 673              	.L47:
 224:src/mcu_msg.c ****     }
 674              		.loc 1 224 0 is_stmt 0 discriminator 1
 675 008e 488B1424 		movq	(%rsp), %rdx
 676 0092 488D4A01 		leaq	1(%rdx), %rcx
 677 0096 488B8424 		movq	168(%rsp), %rax
 677      A8000000 
 678 009e 4889C6   		movq	%rax, %rsi
 679 00a1 48894424 		movq	%rax, 32(%rsp)
 679      20
 680 00a6 488B8424 		movq	176(%rsp), %rax
 680      B0000000 
 681 00ae 48894424 		movq	%rax, 40(%rsp)
 681      28
 682 00b3 488B8424 		movq	184(%rsp), %rax
 682      B8000000 
 683 00bb 48894424 		movq	%rax, 48(%rsp)
 683      30
 684              	.LVL61:
 685              	.LBB60:
 686              	.LBB61:
 139:src/mcu_msg.c **** }
 687              		.loc 1 139 0 is_stmt 1 discriminator 1
 688 00c0 4889C8   		movq	%rcx, %rax
 689 00c3 4829F0   		subq	%rsi, %rax
 690 00c6 0FB77424 		movzwl	40(%rsp), %esi
 690      28
 691              	.LVL62:
 692              	.LBE61:
 693              	.LBE60:
 224:src/mcu_msg.c ****     }
 694              		.loc 1 224 0 discriminator 1
 695 00cb 4839C6   		cmpq	%rax, %rsi
 696 00ce 7E86     		jle	.L48
 224:src/mcu_msg.c ****     }
 697              		.loc 1 224 0 is_stmt 0 discriminator 2
 698 00d0 803A3D   		cmpb	$61, (%rdx)
 699 00d3 75B5     		jne	.L49
 700 00d5 E97CFFFF 		jmp	.L48
 700      FF
 701              	.LVL63:
 702              	.L51:
 227:src/mcu_msg.c **** 
 703              		.loc 1 227 0 is_stmt 1
 704 00da 4883C001 		addq	$1, %rax
 705 00de 48890424 		movq	%rax, (%rsp)
GAS LISTING /tmp/cctOiEvw.s 			page 24


 706              	.L52:
 227:src/mcu_msg.c **** 
 707              		.loc 1 227 0 is_stmt 0 discriminator 1
 708 00e2 488B0424 		movq	(%rsp), %rax
 709 00e6 488B9424 		movq	168(%rsp), %rdx
 709      A8000000 
 710 00ee 4889D1   		movq	%rdx, %rcx
 711 00f1 48895424 		movq	%rdx, 64(%rsp)
 711      40
 712 00f6 488B9424 		movq	176(%rsp), %rdx
 712      B0000000 
 713 00fe 48895424 		movq	%rdx, 72(%rsp)
 713      48
 714 0103 488B9424 		movq	184(%rsp), %rdx
 714      B8000000 
 715 010b 48895424 		movq	%rdx, 80(%rsp)
 715      50
 716              	.LVL64:
 717              	.LBB62:
 718              	.LBB63:
 139:src/mcu_msg.c **** }
 719              		.loc 1 139 0 is_stmt 1 discriminator 1
 720 0110 4889C6   		movq	%rax, %rsi
 721 0113 4889C7   		movq	%rax, %rdi
 722 0116 4829CF   		subq	%rcx, %rdi
 723 0119 0FB75424 		movzwl	72(%rsp), %edx
 723      48
 724              	.LVL65:
 725              	.LBE63:
 726              	.LBE62:
 227:src/mcu_msg.c **** 
 727              		.loc 1 227 0 discriminator 1
 728 011e 4839D7   		cmpq	%rdx, %rdi
 729 0121 7D18     		jge	.L57
 227:src/mcu_msg.c **** 
 730              		.loc 1 227 0 is_stmt 0 discriminator 2
 731 0123 0FB610   		movzbl	(%rax), %edx
 732              	.LVL66:
 733              	.LBB64:
 734              	.LBB65:
  86:src/mcu_msg.c ****         case  ' ':
 735              		.loc 1 86 0 is_stmt 1 discriminator 2
 736 0126 80FA09   		cmpb	$9, %dl
 737 0129 7C10     		jl	.L57
 738 012b 80FA0D   		cmpb	$13, %dl
 739 012e 7EAA     		jle	.L51
 740 0130 80FA20   		cmpb	$32, %dl
 741 0133 74A5     		je	.L51
 742 0135 EB04     		jmp	.L57
 743              	.LVL67:
 744              	.L55:
 745              	.LBE65:
 746              	.LBE64:
 230:src/mcu_msg.c ****     res.len = p - res.s;
 747              		.loc 1 230 0
 748 0137 4883C001 		addq	$1, %rax
 749              	.LVL68:
GAS LISTING /tmp/cctOiEvw.s 			page 25


 750              	.L57:
 751 013b 488B9424 		movq	168(%rsp), %rdx
 751      A8000000 
 752 0143 4889D1   		movq	%rdx, %rcx
 753 0146 48895424 		movq	%rdx, 96(%rsp)
 753      60
 754 014b 488B9424 		movq	176(%rsp), %rdx
 754      B0000000 
 755 0153 48895424 		movq	%rdx, 104(%rsp)
 755      68
 756 0158 488B9424 		movq	184(%rsp), %rdx
 756      B8000000 
 757 0160 48895424 		movq	%rdx, 112(%rsp)
 757      70
 758              	.LVL69:
 759              	.LBB66:
 760              	.LBB67:
 139:src/mcu_msg.c **** }
 761              		.loc 1 139 0 discriminator 1
 762 0165 4889C7   		movq	%rax, %rdi
 763 0168 4889C2   		movq	%rax, %rdx
 764 016b 4829CA   		subq	%rcx, %rdx
 765 016e 4889D1   		movq	%rdx, %rcx
 766 0171 0FB75424 		movzwl	104(%rsp), %edx
 766      68
 767              	.LVL70:
 768              	.LBE67:
 769              	.LBE66:
 230:src/mcu_msg.c ****     res.len = p - res.s;
 770              		.loc 1 230 0 discriminator 1
 771 0176 4839D1   		cmpq	%rdx, %rcx
 772 0179 7D2D     		jge	.L53
 230:src/mcu_msg.c ****     res.len = p - res.s;
 773              		.loc 1 230 0 is_stmt 0 discriminator 2
 774 017b 0FB610   		movzbl	(%rax), %edx
 775              	.LVL71:
 776              	.LBB68:
 777              	.LBB69:
  86:src/mcu_msg.c ****         case  ' ':
 778              		.loc 1 86 0 is_stmt 1 discriminator 2
 779 017e 80FA09   		cmpb	$9, %dl
 780 0181 7C0A     		jl	.L54
 781 0183 80FA0D   		cmpb	$13, %dl
 782 0186 7E20     		jle	.L53
 783 0188 80FA20   		cmpb	$32, %dl
 784 018b 741B     		je	.L53
 785              	.L54:
 786              	.LVL72:
 787              	.LBE69:
 788              	.LBE68:
 789              	.LBB70:
 790              	.LBB71:
  60:src/mcu_msg.c ****         case CTRL_MSG_FLAG:
 791              		.loc 1 60 0
 792 018d 83EA23   		subl	$35, %edx
 793              	.LVL73:
 794 0190 80FA5A   		cmpb	$90, %dl
GAS LISTING /tmp/cctOiEvw.s 			page 26


 795 0193 77A2     		ja	.L55
 796 0195 0FB6D2   		movzbl	%dl, %edx
 797 0198 488D0D00 		leaq	.L56(%rip), %rcx
 797      000000
 798 019f 48631491 		movslq	(%rcx,%rdx,4), %rdx
 799 01a3 4801CA   		addq	%rcx, %rdx
 800 01a6 FFE2     		jmp	*%rdx
 801              		.section	.rodata.find_val,"a",@progbits
 802              		.align 4
 803              		.align 4
 804              	.L56:
 805 0000 00000000 		.long	.L53-.L56
 806 0004 00000000 		.long	.L53-.L56
 807 0008 00000000 		.long	.L55-.L56
 808 000c 00000000 		.long	.L55-.L56
 809 0010 00000000 		.long	.L55-.L56
 810 0014 00000000 		.long	.L53-.L56
 811 0018 00000000 		.long	.L53-.L56
 812 001c 00000000 		.long	.L55-.L56
 813 0020 00000000 		.long	.L55-.L56
 814 0024 00000000 		.long	.L55-.L56
 815 0028 00000000 		.long	.L55-.L56
 816 002c 00000000 		.long	.L55-.L56
 817 0030 00000000 		.long	.L55-.L56
 818 0034 00000000 		.long	.L55-.L56
 819 0038 00000000 		.long	.L55-.L56
 820 003c 00000000 		.long	.L55-.L56
 821 0040 00000000 		.long	.L55-.L56
 822 0044 00000000 		.long	.L55-.L56
 823 0048 00000000 		.long	.L55-.L56
 824 004c 00000000 		.long	.L55-.L56
 825 0050 00000000 		.long	.L55-.L56
 826 0054 00000000 		.long	.L55-.L56
 827 0058 00000000 		.long	.L55-.L56
 828 005c 00000000 		.long	.L55-.L56
 829 0060 00000000 		.long	.L53-.L56
 830 0064 00000000 		.long	.L53-.L56
 831 0068 00000000 		.long	.L53-.L56
 832 006c 00000000 		.long	.L53-.L56
 833 0070 00000000 		.long	.L55-.L56
 834 0074 00000000 		.long	.L53-.L56
 835 0078 00000000 		.long	.L55-.L56
 836 007c 00000000 		.long	.L55-.L56
 837 0080 00000000 		.long	.L55-.L56
 838 0084 00000000 		.long	.L55-.L56
 839 0088 00000000 		.long	.L55-.L56
 840 008c 00000000 		.long	.L55-.L56
 841 0090 00000000 		.long	.L55-.L56
 842 0094 00000000 		.long	.L55-.L56
 843 0098 00000000 		.long	.L55-.L56
 844 009c 00000000 		.long	.L55-.L56
 845 00a0 00000000 		.long	.L55-.L56
 846 00a4 00000000 		.long	.L55-.L56
 847 00a8 00000000 		.long	.L55-.L56
 848 00ac 00000000 		.long	.L55-.L56
 849 00b0 00000000 		.long	.L55-.L56
 850 00b4 00000000 		.long	.L55-.L56
GAS LISTING /tmp/cctOiEvw.s 			page 27


 851 00b8 00000000 		.long	.L55-.L56
 852 00bc 00000000 		.long	.L55-.L56
 853 00c0 00000000 		.long	.L55-.L56
 854 00c4 00000000 		.long	.L55-.L56
 855 00c8 00000000 		.long	.L55-.L56
 856 00cc 00000000 		.long	.L55-.L56
 857 00d0 00000000 		.long	.L55-.L56
 858 00d4 00000000 		.long	.L55-.L56
 859 00d8 00000000 		.long	.L55-.L56
 860 00dc 00000000 		.long	.L55-.L56
 861 00e0 00000000 		.long	.L55-.L56
 862 00e4 00000000 		.long	.L55-.L56
 863 00e8 00000000 		.long	.L55-.L56
 864 00ec 00000000 		.long	.L55-.L56
 865 00f0 00000000 		.long	.L55-.L56
 866 00f4 00000000 		.long	.L55-.L56
 867 00f8 00000000 		.long	.L55-.L56
 868 00fc 00000000 		.long	.L55-.L56
 869 0100 00000000 		.long	.L55-.L56
 870 0104 00000000 		.long	.L55-.L56
 871 0108 00000000 		.long	.L55-.L56
 872 010c 00000000 		.long	.L55-.L56
 873 0110 00000000 		.long	.L55-.L56
 874 0114 00000000 		.long	.L55-.L56
 875 0118 00000000 		.long	.L55-.L56
 876 011c 00000000 		.long	.L55-.L56
 877 0120 00000000 		.long	.L55-.L56
 878 0124 00000000 		.long	.L55-.L56
 879 0128 00000000 		.long	.L55-.L56
 880 012c 00000000 		.long	.L55-.L56
 881 0130 00000000 		.long	.L55-.L56
 882 0134 00000000 		.long	.L55-.L56
 883 0138 00000000 		.long	.L55-.L56
 884 013c 00000000 		.long	.L55-.L56
 885 0140 00000000 		.long	.L55-.L56
 886 0144 00000000 		.long	.L55-.L56
 887 0148 00000000 		.long	.L55-.L56
 888 014c 00000000 		.long	.L55-.L56
 889 0150 00000000 		.long	.L55-.L56
 890 0154 00000000 		.long	.L55-.L56
 891 0158 00000000 		.long	.L55-.L56
 892 015c 00000000 		.long	.L55-.L56
 893 0160 00000000 		.long	.L53-.L56
 894 0164 00000000 		.long	.L55-.L56
 895 0168 00000000 		.long	.L53-.L56
 896              		.section	.text.find_val
 897              	.LVL74:
 898              	.L53:
 899              	.LBE71:
 900              	.LBE70:
 231:src/mcu_msg.c **** 
 901              		.loc 1 231 0
 902 01a8 4829F7   		subq	%rsi, %rdi
 903 01ab 66897C24 		movw	%di, 8(%rsp)
 903      08
 233:src/mcu_msg.c **** }
 904              		.loc 1 233 0
GAS LISTING /tmp/cctOiEvw.s 			page 28


 905 01b0 488B0424 		movq	(%rsp), %rax
 906              	.LVL75:
 907 01b4 488B5424 		movq	8(%rsp), %rdx
 907      08
 908 01b9 488903   		movq	%rax, (%rbx)
 909 01bc 48895308 		movq	%rdx, 8(%rbx)
 910 01c0 488B4424 		movq	16(%rsp), %rax
 910      10
 911 01c5 48894310 		movq	%rax, 16(%rbx)
 912              	.L44:
 234:src/mcu_msg.c **** 
 913              		.loc 1 234 0
 914 01c9 4889D8   		movq	%rbx, %rax
 915 01cc 488B5C24 		movq	120(%rsp), %rbx
 915      78
 916 01d1 6448331C 		xorq	%fs:40, %rbx
 916      25280000 
 916      00
 917              	.LVL76:
 918 01da 7506     		jne	.L61
 919 01dc 4883EC80 		subq	$-128, %rsp
 920              	.LCFI22:
 921              		.cfi_remember_state
 922              		.cfi_def_cfa_offset 16
 923 01e0 5B       		popq	%rbx
 924              	.LCFI23:
 925              		.cfi_def_cfa_offset 8
 926 01e1 C3       		ret
 927              	.L61:
 928              	.LCFI24:
 929              		.cfi_restore_state
 930 01e2 E8000000 		call	__stack_chk_fail@PLT
 930      00
 931              	.LVL77:
 932              		.cfi_endproc
 933              	.LFE36:
 935              		.section	.text.mcu_msg_destroy,"ax",@progbits
 936              		.globl	mcu_msg_destroy
 938              	mcu_msg_destroy:
 939              	.LFB28:
  37:src/mcu_msg.c ****     mcu_msg_destroy_string(&msg->id);
 940              		.loc 1 37 0
 941              		.cfi_startproc
 942              	.LVL78:
 943 0000 53       		pushq	%rbx
 944              	.LCFI25:
 945              		.cfi_def_cfa_offset 16
 946              		.cfi_offset 3, -16
 947 0001 4889FB   		movq	%rdi, %rbx
  38:src/mcu_msg.c ****     mcu_msg_destroy_string(&msg->content);
 948              		.loc 1 38 0
 949 0004 E8000000 		call	mcu_msg_destroy_string
 949      00
 950              	.LVL79:
  39:src/mcu_msg.c **** }
 951              		.loc 1 39 0
 952 0009 488D7B18 		leaq	24(%rbx), %rdi
GAS LISTING /tmp/cctOiEvw.s 			page 29


 953 000d E8000000 		call	mcu_msg_destroy_string
 953      00
 954              	.LVL80:
  40:src/mcu_msg.c **** 
 955              		.loc 1 40 0
 956 0012 5B       		popq	%rbx
 957              	.LCFI26:
 958              		.cfi_def_cfa_offset 8
 959              	.LVL81:
 960 0013 C3       		ret
 961              		.cfi_endproc
 962              	.LFE28:
 964              		.section	.text.mcu_msg_destroy_obj,"ax",@progbits
 965              		.globl	mcu_msg_destroy_obj
 967              	mcu_msg_destroy_obj:
 968              	.LFB29:
  45:src/mcu_msg.c ****     mcu_msg_destroy_string(&obj->id);
 969              		.loc 1 45 0
 970              		.cfi_startproc
 971              	.LVL82:
 972 0000 53       		pushq	%rbx
 973              	.LCFI27:
 974              		.cfi_def_cfa_offset 16
 975              		.cfi_offset 3, -16
 976 0001 4889FB   		movq	%rdi, %rbx
  46:src/mcu_msg.c ****     mcu_msg_destroy_string(&obj->content);
 977              		.loc 1 46 0
 978 0004 E8000000 		call	mcu_msg_destroy_string
 978      00
 979              	.LVL83:
  47:src/mcu_msg.c **** }
 980              		.loc 1 47 0
 981 0009 488D7B18 		leaq	24(%rbx), %rdi
 982 000d E8000000 		call	mcu_msg_destroy_string
 982      00
 983              	.LVL84:
  48:src/mcu_msg.c **** 
 984              		.loc 1 48 0
 985 0012 5B       		popq	%rbx
 986              	.LCFI28:
 987              		.cfi_def_cfa_offset 8
 988              	.LVL85:
 989 0013 C3       		ret
 990              		.cfi_endproc
 991              	.LFE29:
 993              		.section	.text.mcu_msg_get,"ax",@progbits
 994              		.globl	mcu_msg_get
 996              	mcu_msg_get:
 997              	.LFB37:
 239:src/mcu_msg.c ****     mcu_msg_t res;
 998              		.loc 1 239 0
 999              		.cfi_startproc
 1000              	.LVL86:
 1001 0000 53       		pushq	%rbx
 1002              	.LCFI29:
 1003              		.cfi_def_cfa_offset 16
 1004              		.cfi_offset 3, -16
GAS LISTING /tmp/cctOiEvw.s 			page 30


 1005 0001 4881ECA0 		subq	$160, %rsp
 1005      000000
 1006              	.LCFI30:
 1007              		.cfi_def_cfa_offset 176
 1008 0008 4889FB   		movq	%rdi, %rbx
 1009 000b 4889D0   		movq	%rdx, %rax
 239:src/mcu_msg.c ****     mcu_msg_t res;
 1010              		.loc 1 239 0
 1011 000e 64488B3C 		movq	%fs:40, %rdi
 1011      25280000 
 1011      00
 1012 0017 4889BC24 		movq	%rdi, 152(%rsp)
 1012      98000000 
 1013 001f 31FF     		xorl	%edi, %edi
 1014              	.LVL87:
 241:src/mcu_msg.c ****     res.content.len = len;
 1015              		.loc 1 241 0
 1016 0021 48897424 		movq	%rsi, 120(%rsp)
 1016      78
 242:src/mcu_msg.c ****     res.id = find_keyword(res.content, id, CTRL_MSG_FLAG, CTRL_START_MSG); //object start with @ an
 1017              		.loc 1 242 0
 1018 0026 66898C24 		movw	%cx, 128(%rsp)
 1018      80000000 
 243:src/mcu_msg.c ****     char *p;
 1019              		.loc 1 243 0
 1020 002e 4889E7   		movq	%rsp, %rdi
 1021 0031 4883EC08 		subq	$8, %rsp
 1022              	.LCFI31:
 1023              		.cfi_def_cfa_offset 184
 1024 0035 FFB42490 		pushq	144(%rsp)
 1024      000000
 1025              	.LCFI32:
 1026              		.cfi_def_cfa_offset 192
 1027 003c FFB42490 		pushq	144(%rsp)
 1027      000000
 1028              	.LCFI33:
 1029              		.cfi_def_cfa_offset 200
 1030 0043 56       		pushq	%rsi
 1031              	.LCFI34:
 1032              		.cfi_def_cfa_offset 208
 1033 0044 B97B0000 		movl	$123, %ecx
 1033      00
 1034              	.LVL88:
 1035 0049 BA230000 		movl	$35, %edx
 1035      00
 1036              	.LVL89:
 1037 004e 4889C6   		movq	%rax, %rsi
 1038              	.LVL90:
 1039 0051 E8000000 		call	find_keyword
 1039      00
 1040              	.LVL91:
 1041 0056 488B5424 		movq	32(%rsp), %rdx
 1041      20
 1042 005b 4889D0   		movq	%rdx, %rax
 1043 005e 48899424 		movq	%rdx, 128(%rsp)
 1043      80000000 
 1044 0066 488B5424 		movq	40(%rsp), %rdx
GAS LISTING /tmp/cctOiEvw.s 			page 31


 1044      28
 1045 006b 48899424 		movq	%rdx, 136(%rsp)
 1045      88000000 
 1046 0073 488B5424 		movq	48(%rsp), %rdx
 1046      30
 1047 0078 48899424 		movq	%rdx, 144(%rsp)
 1047      90000000 
 245:src/mcu_msg.c ****         mcu_msg_destroy(&res);
 1048              		.loc 1 245 0
 1049 0080 4883C420 		addq	$32, %rsp
 1050              	.LCFI35:
 1051              		.cfi_def_cfa_offset 176
 1052 0084 4885C0   		testq	%rax, %rax
 1053 0087 741E     		je	.L77
 249:src/mcu_msg.c ****     if (*p != CTRL_START_MSG) { // if the next char is not START_MSG, move to the start flag
 1054              		.loc 1 249 0
 1055 0089 0FB75424 		movzwl	104(%rsp), %edx
 1055      68
 1056 008e 4801D0   		addq	%rdx, %rax
 1057              	.LVL92:
 250:src/mcu_msg.c ****         while(is_in_str_buff(res.content, p + 1) && *p != CTRL_START_MSG) p++;
 1058              		.loc 1 250 0
 1059 0091 80387B   		cmpb	$123, (%rax)
 1060 0094 755E     		jne	.L70
 1061              	.L69:
 253:src/mcu_msg.c ****     while(is_in_str_buff(res.content, p) && *p != CTRL_STOP_MSG) { //calc length
 1062              		.loc 1 253 0
 1063 0096 488D5001 		leaq	1(%rax), %rdx
 1064              	.LVL93:
 1065 009a 48895424 		movq	%rdx, 120(%rsp)
 1065      78
 1066 009f 4889D0   		movq	%rdx, %rax
 254:src/mcu_msg.c ****         p++;
 1067              		.loc 1 254 0
 1068 00a2 E99A0000 		jmp	.L71
 1068      00
 1069              	.LVL94:
 1070              	.L77:
 246:src/mcu_msg.c ****         return res;
 1071              		.loc 1 246 0
 1072 00a7 488D7C24 		leaq	96(%rsp), %rdi
 1072      60
 1073 00ac E8000000 		call	mcu_msg_destroy
 1073      00
 1074              	.LVL95:
 247:src/mcu_msg.c ****     }
 1075              		.loc 1 247 0
 1076 00b1 488B4424 		movq	96(%rsp), %rax
 1076      60
 1077 00b6 488B5424 		movq	104(%rsp), %rdx
 1077      68
 1078 00bb 488903   		movq	%rax, (%rbx)
 1079 00be 48895308 		movq	%rdx, 8(%rbx)
 1080 00c2 488B4424 		movq	112(%rsp), %rax
 1080      70
 1081 00c7 488B5424 		movq	120(%rsp), %rdx
 1081      78
GAS LISTING /tmp/cctOiEvw.s 			page 32


 1082 00cc 48894310 		movq	%rax, 16(%rbx)
 1083 00d0 48895318 		movq	%rdx, 24(%rbx)
 1084 00d4 488B8424 		movq	128(%rsp), %rax
 1084      80000000 
 1085 00dc 488B9424 		movq	136(%rsp), %rdx
 1085      88000000 
 1086 00e4 48894320 		movq	%rax, 32(%rbx)
 1087 00e8 48895328 		movq	%rdx, 40(%rbx)
 1088 00ec E9D80000 		jmp	.L66
 1088      00
 1089              	.LVL96:
 1090              	.L75:
 251:src/mcu_msg.c ****     }
 1091              		.loc 1 251 0
 1092 00f1 4889C8   		movq	%rcx, %rax
 1093              	.LVL97:
 1094              	.L70:
 251:src/mcu_msg.c ****     }
 1095              		.loc 1 251 0 is_stmt 0 discriminator 1
 1096 00f4 488D4801 		leaq	1(%rax), %rcx
 1097 00f8 488B5424 		movq	120(%rsp), %rdx
 1097      78
 1098 00fd 4889D6   		movq	%rdx, %rsi
 1099 0100 48895424 		movq	%rdx, 32(%rsp)
 1099      20
 1100 0105 488B9424 		movq	128(%rsp), %rdx
 1100      80000000 
 1101 010d 48895424 		movq	%rdx, 40(%rsp)
 1101      28
 1102 0112 488B9424 		movq	136(%rsp), %rdx
 1102      88000000 
 1103 011a 48895424 		movq	%rdx, 48(%rsp)
 1103      30
 1104              	.LVL98:
 1105              	.LBB72:
 1106              	.LBB73:
 139:src/mcu_msg.c **** }
 1107              		.loc 1 139 0 is_stmt 1 discriminator 1
 1108 011f 4889CF   		movq	%rcx, %rdi
 1109 0122 4829F7   		subq	%rsi, %rdi
 1110 0125 0FB75424 		movzwl	40(%rsp), %edx
 1110      28
 1111              	.LVL99:
 1112              	.LBE73:
 1113              	.LBE72:
 251:src/mcu_msg.c ****     }
 1114              		.loc 1 251 0 discriminator 1
 1115 012a 4839D7   		cmpq	%rdx, %rdi
 1116 012d 0F8D63FF 		jge	.L69
 1116      FFFF
 251:src/mcu_msg.c ****     }
 1117              		.loc 1 251 0 is_stmt 0 discriminator 2
 1118 0133 80387B   		cmpb	$123, (%rax)
 1119 0136 75B9     		jne	.L75
 1120 0138 E959FFFF 		jmp	.L69
 1120      FF
 1121              	.L73:
GAS LISTING /tmp/cctOiEvw.s 			page 33


 255:src/mcu_msg.c ****     }
 1122              		.loc 1 255 0 is_stmt 1
 1123 013d 4883C001 		addq	$1, %rax
 1124              	.LVL100:
 1125              	.L71:
 1126 0141 488B4C24 		movq	120(%rsp), %rcx
 1126      78
 1127 0146 4889CE   		movq	%rcx, %rsi
 1128 0149 48894C24 		movq	%rcx, 64(%rsp)
 1128      40
 1129 014e 488B8C24 		movq	128(%rsp), %rcx
 1129      80000000 
 1130 0156 48894C24 		movq	%rcx, 72(%rsp)
 1130      48
 1131 015b 488B8C24 		movq	136(%rsp), %rcx
 1131      88000000 
 1132 0163 48894C24 		movq	%rcx, 80(%rsp)
 1132      50
 1133              	.LVL101:
 1134              	.LBB74:
 1135              	.LBB75:
 139:src/mcu_msg.c **** }
 1136              		.loc 1 139 0
 1137 0168 4889C7   		movq	%rax, %rdi
 1138 016b 4889C1   		movq	%rax, %rcx
 1139 016e 4829F1   		subq	%rsi, %rcx
 1140 0171 4889CE   		movq	%rcx, %rsi
 1141 0174 0FB74C24 		movzwl	72(%rsp), %ecx
 1141      48
 1142              	.LVL102:
 1143              	.LBE75:
 1144              	.LBE74:
 254:src/mcu_msg.c ****         p++;
 1145              		.loc 1 254 0
 1146 0179 4839CE   		cmpq	%rcx, %rsi
 1147 017c 7D05     		jge	.L72
 254:src/mcu_msg.c ****         p++;
 1148              		.loc 1 254 0 is_stmt 0 discriminator 1
 1149 017e 80387D   		cmpb	$125, (%rax)
 1150 0181 75BA     		jne	.L73
 1151              	.L72:
 257:src/mcu_msg.c ****     return res;
 1152              		.loc 1 257 0 is_stmt 1
 1153 0183 4829D7   		subq	%rdx, %rdi
 1154 0186 6689BC24 		movw	%di, 128(%rsp)
 1154      80000000 
 258:src/mcu_msg.c **** }
 1155              		.loc 1 258 0
 1156 018e 488B4424 		movq	96(%rsp), %rax
 1156      60
 1157              	.LVL103:
 1158 0193 488B5424 		movq	104(%rsp), %rdx
 1158      68
 1159 0198 488903   		movq	%rax, (%rbx)
 1160 019b 48895308 		movq	%rdx, 8(%rbx)
 1161 019f 488B4424 		movq	112(%rsp), %rax
 1161      70
GAS LISTING /tmp/cctOiEvw.s 			page 34


 1162 01a4 488B5424 		movq	120(%rsp), %rdx
 1162      78
 1163 01a9 48894310 		movq	%rax, 16(%rbx)
 1164 01ad 48895318 		movq	%rdx, 24(%rbx)
 1165 01b1 488B8424 		movq	128(%rsp), %rax
 1165      80000000 
 1166 01b9 488B9424 		movq	136(%rsp), %rdx
 1166      88000000 
 1167 01c1 48894320 		movq	%rax, 32(%rbx)
 1168 01c5 48895328 		movq	%rdx, 40(%rbx)
 1169              	.L66:
 259:src/mcu_msg.c **** 
 1170              		.loc 1 259 0
 1171 01c9 4889D8   		movq	%rbx, %rax
 1172 01cc 488B9C24 		movq	152(%rsp), %rbx
 1172      98000000 
 1173 01d4 6448331C 		xorq	%fs:40, %rbx
 1173      25280000 
 1173      00
 1174              	.LVL104:
 1175 01dd 7509     		jne	.L78
 1176 01df 4881C4A0 		addq	$160, %rsp
 1176      000000
 1177              	.LCFI36:
 1178              		.cfi_remember_state
 1179              		.cfi_def_cfa_offset 16
 1180 01e6 5B       		popq	%rbx
 1181              	.LCFI37:
 1182              		.cfi_def_cfa_offset 8
 1183 01e7 C3       		ret
 1184              	.L78:
 1185              	.LCFI38:
 1186              		.cfi_restore_state
 1187 01e8 E8000000 		call	__stack_chk_fail@PLT
 1187      00
 1188              	.LVL105:
 1189              		.cfi_endproc
 1190              	.LFE37:
 1192              		.section	.text.mcu_msg_parser_get_obj,"ax",@progbits
 1193              		.globl	mcu_msg_parser_get_obj
 1195              	mcu_msg_parser_get_obj:
 1196              	.LFB38:
 264:src/mcu_msg.c ****     mcu_msg_obj_t res;
 1197              		.loc 1 264 0
 1198              		.cfi_startproc
 1199              	.LVL106:
 1200 0000 53       		pushq	%rbx
 1201              	.LCFI39:
 1202              		.cfi_def_cfa_offset 16
 1203              		.cfi_offset 3, -16
 1204 0001 4881ECC0 		subq	$192, %rsp
 1204      000000
 1205              	.LCFI40:
 1206              		.cfi_def_cfa_offset 208
 1207 0008 4889FB   		movq	%rdi, %rbx
 264:src/mcu_msg.c ****     mcu_msg_obj_t res;
 1208              		.loc 1 264 0
GAS LISTING /tmp/cctOiEvw.s 			page 35


 1209 000b 64488B04 		movq	%fs:40, %rax
 1209      25280000 
 1209      00
 1210 0014 48898424 		movq	%rax, 184(%rsp)
 1210      B8000000 
 1211 001c 31C0     		xorl	%eax, %eax
 266:src/mcu_msg.c ****     char *p;
 1212              		.loc 1 266 0
 1213 001e 4889E7   		movq	%rsp, %rdi
 1214              	.LVL107:
 1215 0021 4883EC08 		subq	$8, %rsp
 1216              	.LCFI41:
 1217              		.cfi_def_cfa_offset 216
 1218 0025 FFB42400 		pushq	256(%rsp)
 1218      010000
 1219              	.LCFI42:
 1220              		.cfi_def_cfa_offset 224
 1221 002c FFB42400 		pushq	256(%rsp)
 1221      010000
 1222              	.LCFI43:
 1223              		.cfi_def_cfa_offset 232
 1224 0033 FFB42400 		pushq	256(%rsp)
 1224      010000
 1225              	.LCFI44:
 1226              		.cfi_def_cfa_offset 240
 1227 003a B9280000 		movl	$40, %ecx
 1227      00
 1228 003f BA400000 		movl	$64, %edx
 1228      00
 1229 0044 E8000000 		call	find_keyword
 1229      00
 1230              	.LVL108:
 1231 0049 488B5424 		movq	32(%rsp), %rdx
 1231      20
 1232 004e 4889D0   		movq	%rdx, %rax
 1233 0051 48899424 		movq	%rdx, 128(%rsp)
 1233      80000000 
 1234 0059 488B5424 		movq	40(%rsp), %rdx
 1234      28
 1235 005e 48899424 		movq	%rdx, 136(%rsp)
 1235      88000000 
 1236 0066 488B5424 		movq	48(%rsp), %rdx
 1236      30
 1237 006b 48899424 		movq	%rdx, 144(%rsp)
 1237      90000000 
 268:src/mcu_msg.c ****         mcu_msg_destroy_obj(&res);
 1238              		.loc 1 268 0
 1239 0073 4883C420 		addq	$32, %rsp
 1240              	.LCFI45:
 1241              		.cfi_def_cfa_offset 208
 1242 0077 4885C0   		testq	%rax, %rax
 1243 007a 7422     		je	.L90
 273:src/mcu_msg.c ****     if (*p != CTRL_START_OBJ) {
 1244              		.loc 1 273 0
 1245 007c 0FB75424 		movzwl	104(%rsp), %edx
 1245      68
 1246 0081 4801D0   		addq	%rdx, %rax
GAS LISTING /tmp/cctOiEvw.s 			page 36


 1247              	.LVL109:
 274:src/mcu_msg.c ****         while(is_in_str_buff(msg.content, p + 1) && *p != CTRL_START_OBJ) p++;
 1248              		.loc 1 274 0
 1249 0084 803828   		cmpb	$40, (%rax)
 1250 0087 0F858E00 		jne	.L83
 1250      0000
 1251              	.L82:
 277:src/mcu_msg.c ****     while(is_in_str_buff(msg.content, p) && *p != CTRL_STOP_OBJ) {
 1252              		.loc 1 277 0
 1253 008d 488D5001 		leaq	1(%rax), %rdx
 1254              	.LVL110:
 1255 0091 48895424 		movq	%rdx, 120(%rsp)
 1255      78
 1256 0096 4889D0   		movq	%rdx, %rax
 278:src/mcu_msg.c ****         p++;
 1257              		.loc 1 278 0
 1258 0099 E9CD0000 		jmp	.L84
 1258      00
 1259              	.LVL111:
 1260              	.L90:
 269:src/mcu_msg.c ****         return res;
 1261              		.loc 1 269 0
 1262 009e 488D7C24 		leaq	96(%rsp), %rdi
 1262      60
 1263 00a3 E8000000 		call	mcu_msg_destroy_obj
 1263      00
 1264              	.LVL112:
 270:src/mcu_msg.c ****     }
 1265              		.loc 1 270 0
 1266 00a8 488B4424 		movq	96(%rsp), %rax
 1266      60
 1267 00ad 488B5424 		movq	104(%rsp), %rdx
 1267      68
 1268 00b2 488903   		movq	%rax, (%rbx)
 1269 00b5 48895308 		movq	%rdx, 8(%rbx)
 1270 00b9 488B4424 		movq	112(%rsp), %rax
 1270      70
 1271 00be 488B5424 		movq	120(%rsp), %rdx
 1271      78
 1272 00c3 48894310 		movq	%rax, 16(%rbx)
 1273 00c7 48895318 		movq	%rdx, 24(%rbx)
 1274 00cb 488B8424 		movq	128(%rsp), %rax
 1274      80000000 
 1275 00d3 488B9424 		movq	136(%rsp), %rdx
 1275      88000000 
 1276 00db 48894320 		movq	%rax, 32(%rbx)
 1277 00df 48895328 		movq	%rdx, 40(%rbx)
 1278 00e3 488B8424 		movq	144(%rsp), %rax
 1278      90000000 
 1279 00eb 488B9424 		movq	152(%rsp), %rdx
 1279      98000000 
 1280 00f3 48894330 		movq	%rax, 48(%rbx)
 1281 00f7 48895338 		movq	%rdx, 56(%rbx)
 1282 00fb 488B8424 		movq	160(%rsp), %rax
 1282      A0000000 
 1283 0103 488B9424 		movq	168(%rsp), %rdx
 1283      A8000000 
GAS LISTING /tmp/cctOiEvw.s 			page 37


 1284 010b 48894340 		movq	%rax, 64(%rbx)
 1285 010f 48895348 		movq	%rdx, 72(%rbx)
 1286 0113 E90E0100 		jmp	.L79
 1286      00
 1287              	.LVL113:
 1288              	.L88:
 275:src/mcu_msg.c ****     }
 1289              		.loc 1 275 0
 1290 0118 4889C8   		movq	%rcx, %rax
 1291              	.LVL114:
 1292              	.L83:
 275:src/mcu_msg.c ****     }
 1293              		.loc 1 275 0 is_stmt 0 discriminator 1
 1294 011b 488D4801 		leaq	1(%rax), %rcx
 1295 011f 488B9424 		movq	232(%rsp), %rdx
 1295      E8000000 
 1296 0127 4889D6   		movq	%rdx, %rsi
 1297 012a 48895424 		movq	%rdx, 32(%rsp)
 1297      20
 1298 012f 488B9424 		movq	240(%rsp), %rdx
 1298      F0000000 
 1299 0137 48895424 		movq	%rdx, 40(%rsp)
 1299      28
 1300 013c 488B9424 		movq	248(%rsp), %rdx
 1300      F8000000 
 1301 0144 48895424 		movq	%rdx, 48(%rsp)
 1301      30
 1302              	.LVL115:
 1303              	.LBB76:
 1304              	.LBB77:
 139:src/mcu_msg.c **** }
 1305              		.loc 1 139 0 is_stmt 1 discriminator 1
 1306 0149 4889CF   		movq	%rcx, %rdi
 1307 014c 4829F7   		subq	%rsi, %rdi
 1308 014f 0FB75424 		movzwl	40(%rsp), %edx
 1308      28
 1309              	.LVL116:
 1310              	.LBE77:
 1311              	.LBE76:
 275:src/mcu_msg.c ****     }
 1312              		.loc 1 275 0 discriminator 1
 1313 0154 4839D7   		cmpq	%rdx, %rdi
 1314 0157 0F8D30FF 		jge	.L82
 1314      FFFF
 275:src/mcu_msg.c ****     }
 1315              		.loc 1 275 0 is_stmt 0 discriminator 2
 1316 015d 803828   		cmpb	$40, (%rax)
 1317 0160 75B6     		jne	.L88
 1318 0162 E926FFFF 		jmp	.L82
 1318      FF
 1319              	.L86:
 279:src/mcu_msg.c ****     }
 1320              		.loc 1 279 0 is_stmt 1
 1321 0167 4883C001 		addq	$1, %rax
 1322              	.LVL117:
 1323              	.L84:
 1324 016b 488B8C24 		movq	232(%rsp), %rcx
GAS LISTING /tmp/cctOiEvw.s 			page 38


 1324      E8000000 
 1325 0173 4889CE   		movq	%rcx, %rsi
 1326 0176 48894C24 		movq	%rcx, 64(%rsp)
 1326      40
 1327 017b 488B8C24 		movq	240(%rsp), %rcx
 1327      F0000000 
 1328 0183 48894C24 		movq	%rcx, 72(%rsp)
 1328      48
 1329 0188 488B8C24 		movq	248(%rsp), %rcx
 1329      F8000000 
 1330 0190 48894C24 		movq	%rcx, 80(%rsp)
 1330      50
 1331              	.LVL118:
 1332              	.LBB78:
 1333              	.LBB79:
 139:src/mcu_msg.c **** }
 1334              		.loc 1 139 0
 1335 0195 4889C7   		movq	%rax, %rdi
 1336 0198 4889C1   		movq	%rax, %rcx
 1337 019b 4829F1   		subq	%rsi, %rcx
 1338 019e 4889CE   		movq	%rcx, %rsi
 1339 01a1 0FB74C24 		movzwl	72(%rsp), %ecx
 1339      48
 1340              	.LVL119:
 1341              	.LBE79:
 1342              	.LBE78:
 278:src/mcu_msg.c ****         p++;
 1343              		.loc 1 278 0
 1344 01a6 4839CE   		cmpq	%rcx, %rsi
 1345 01a9 7D05     		jge	.L85
 278:src/mcu_msg.c ****         p++;
 1346              		.loc 1 278 0 is_stmt 0 discriminator 1
 1347 01ab 803829   		cmpb	$41, (%rax)
 1348 01ae 75B7     		jne	.L86
 1349              	.L85:
 281:src/mcu_msg.c ****     return res;
 1350              		.loc 1 281 0 is_stmt 1
 1351 01b0 4829D7   		subq	%rdx, %rdi
 1352 01b3 6689BC24 		movw	%di, 128(%rsp)
 1352      80000000 
 282:src/mcu_msg.c **** }
 1353              		.loc 1 282 0
 1354 01bb 488B4424 		movq	96(%rsp), %rax
 1354      60
 1355              	.LVL120:
 1356 01c0 488B5424 		movq	104(%rsp), %rdx
 1356      68
 1357 01c5 488903   		movq	%rax, (%rbx)
 1358 01c8 48895308 		movq	%rdx, 8(%rbx)
 1359 01cc 488B4424 		movq	112(%rsp), %rax
 1359      70
 1360 01d1 488B5424 		movq	120(%rsp), %rdx
 1360      78
 1361 01d6 48894310 		movq	%rax, 16(%rbx)
 1362 01da 48895318 		movq	%rdx, 24(%rbx)
 1363 01de 488B8424 		movq	128(%rsp), %rax
 1363      80000000 
GAS LISTING /tmp/cctOiEvw.s 			page 39


 1364 01e6 488B9424 		movq	136(%rsp), %rdx
 1364      88000000 
 1365 01ee 48894320 		movq	%rax, 32(%rbx)
 1366 01f2 48895328 		movq	%rdx, 40(%rbx)
 1367 01f6 488B8424 		movq	144(%rsp), %rax
 1367      90000000 
 1368 01fe 488B9424 		movq	152(%rsp), %rdx
 1368      98000000 
 1369 0206 48894330 		movq	%rax, 48(%rbx)
 1370 020a 48895338 		movq	%rdx, 56(%rbx)
 1371 020e 488B8424 		movq	160(%rsp), %rax
 1371      A0000000 
 1372 0216 488B9424 		movq	168(%rsp), %rdx
 1372      A8000000 
 1373 021e 48894340 		movq	%rax, 64(%rbx)
 1374 0222 48895348 		movq	%rdx, 72(%rbx)
 1375              	.L79:
 283:src/mcu_msg.c **** 
 1376              		.loc 1 283 0
 1377 0226 4889D8   		movq	%rbx, %rax
 1378 0229 488B9C24 		movq	184(%rsp), %rbx
 1378      B8000000 
 1379 0231 6448331C 		xorq	%fs:40, %rbx
 1379      25280000 
 1379      00
 1380              	.LVL121:
 1381 023a 7509     		jne	.L91
 1382 023c 4881C4C0 		addq	$192, %rsp
 1382      000000
 1383              	.LCFI46:
 1384              		.cfi_remember_state
 1385              		.cfi_def_cfa_offset 16
 1386 0243 5B       		popq	%rbx
 1387              	.LCFI47:
 1388              		.cfi_def_cfa_offset 8
 1389 0244 C3       		ret
 1390              	.L91:
 1391              	.LCFI48:
 1392              		.cfi_restore_state
 1393 0245 E8000000 		call	__stack_chk_fail@PLT
 1393      00
 1394              	.LVL122:
 1395              		.cfi_endproc
 1396              	.LFE38:
 1398              		.section	.text.mcu_msg_parser_get_cmd,"ax",@progbits
 1399              		.globl	mcu_msg_parser_get_cmd
 1401              	mcu_msg_parser_get_cmd:
 1402              	.LFB39:
 286:src/mcu_msg.c ****     mcu_msg_cmd_t res;
 1403              		.loc 1 286 0
 1404              		.cfi_startproc
 1405              	.LVL123:
 1406 0000 53       		pushq	%rbx
 1407              	.LCFI49:
 1408              		.cfi_def_cfa_offset 16
 1409              		.cfi_offset 3, -16
 1410 0001 4883EC50 		subq	$80, %rsp
GAS LISTING /tmp/cctOiEvw.s 			page 40


 1411              	.LCFI50:
 1412              		.cfi_def_cfa_offset 96
 1413 0005 4889FB   		movq	%rdi, %rbx
 286:src/mcu_msg.c ****     mcu_msg_cmd_t res;
 1414              		.loc 1 286 0
 1415 0008 64488B04 		movq	%fs:40, %rax
 1415      25280000 
 1415      00
 1416 0011 48894424 		movq	%rax, 72(%rsp)
 1416      48
 1417 0016 31C0     		xorl	%eax, %eax
 289:src/mcu_msg.c ****     return res;
 1418              		.loc 1 289 0
 1419 0018 4889E7   		movq	%rsp, %rdi
 1420              	.LVL124:
 1421 001b 4883EC08 		subq	$8, %rsp
 1422              	.LCFI51:
 1423              		.cfi_def_cfa_offset 104
 1424 001f FFB42490 		pushq	144(%rsp)
 1424      000000
 1425              	.LCFI52:
 1426              		.cfi_def_cfa_offset 112
 1427 0026 FFB42490 		pushq	144(%rsp)
 1427      000000
 1428              	.LCFI53:
 1429              		.cfi_def_cfa_offset 120
 1430 002d FFB42490 		pushq	144(%rsp)
 1430      000000
 1431              	.LCFI54:
 1432              		.cfi_def_cfa_offset 128
 1433 0034 B93E0000 		movl	$62, %ecx
 1433      00
 1434 0039 BA3C0000 		movl	$60, %edx
 1434      00
 1435 003e E8000000 		call	find_keyword
 1435      00
 1436              	.LVL125:
 1437 0043 488B4424 		movq	32(%rsp), %rax
 1437      20
 1438 0048 488B5424 		movq	40(%rsp), %rdx
 1438      28
 1439 004d 48894424 		movq	%rax, 64(%rsp)
 1439      40
 1440 0052 48895424 		movq	%rdx, 72(%rsp)
 1440      48
 1441 0057 488B4C24 		movq	48(%rsp), %rcx
 1441      30
 1442 005c 48894C24 		movq	%rcx, 80(%rsp)
 1442      50
 290:src/mcu_msg.c **** }
 1443              		.loc 1 290 0
 1444 0061 488903   		movq	%rax, (%rbx)
 1445 0064 48895308 		movq	%rdx, 8(%rbx)
 1446 0068 488B4424 		movq	80(%rsp), %rax
 1446      50
 1447 006d 488B5424 		movq	88(%rsp), %rdx
 1447      58
GAS LISTING /tmp/cctOiEvw.s 			page 41


 1448 0072 48894310 		movq	%rax, 16(%rbx)
 1449 0076 48895318 		movq	%rdx, 24(%rbx)
 1450 007a 4883C420 		addq	$32, %rsp
 1451              	.LCFI55:
 1452              		.cfi_def_cfa_offset 96
 291:src/mcu_msg.c **** 
 1453              		.loc 1 291 0
 1454 007e 488B5424 		movq	72(%rsp), %rdx
 1454      48
 1455 0083 64483314 		xorq	%fs:40, %rdx
 1455      25280000 
 1455      00
 1456 008c 7509     		jne	.L95
 1457 008e 4889D8   		movq	%rbx, %rax
 1458 0091 4883C450 		addq	$80, %rsp
 1459              	.LCFI56:
 1460              		.cfi_remember_state
 1461              		.cfi_def_cfa_offset 16
 1462 0095 5B       		popq	%rbx
 1463              	.LCFI57:
 1464              		.cfi_def_cfa_offset 8
 1465              	.LVL126:
 1466 0096 C3       		ret
 1467              	.LVL127:
 1468              	.L95:
 1469              	.LCFI58:
 1470              		.cfi_restore_state
 1471 0097 E8000000 		call	__stack_chk_fail@PLT
 1471      00
 1472              	.LVL128:
 1473              		.cfi_endproc
 1474              	.LFE39:
 1476              		.section	.text.mcu_msg_parser_get_int,"ax",@progbits
 1477              		.globl	mcu_msg_parser_get_int
 1479              	mcu_msg_parser_get_int:
 1480              	.LFB40:
 294:src/mcu_msg.c ****     mcu_msg_string_t sval = find_val(obj, key);
 1481              		.loc 1 294 0
 1482              		.cfi_startproc
 1483              	.LVL129:
 1484 0000 53       		pushq	%rbx
 1485              	.LCFI59:
 1486              		.cfi_def_cfa_offset 16
 1487              		.cfi_offset 3, -16
 1488 0001 4883EC40 		subq	$64, %rsp
 1489              	.LCFI60:
 1490              		.cfi_def_cfa_offset 80
 1491 0005 4889FB   		movq	%rdi, %rbx
 294:src/mcu_msg.c ****     mcu_msg_string_t sval = find_val(obj, key);
 1492              		.loc 1 294 0
 1493 0008 64488B04 		movq	%fs:40, %rax
 1493      25280000 
 1493      00
 1494 0011 48894424 		movq	%rax, 56(%rsp)
 1494      38
 1495 0016 31C0     		xorl	%eax, %eax
 295:src/mcu_msg.c ****     mcu_msg_size_t i;
GAS LISTING /tmp/cctOiEvw.s 			page 42


 1496              		.loc 1 295 0
 1497 0018 4889E7   		movq	%rsp, %rdi
 1498              	.LVL130:
 1499 001b FFB42498 		pushq	152(%rsp)
 1499      000000
 1500              	.LCFI61:
 1501              		.cfi_def_cfa_offset 88
 1502 0022 FFB42498 		pushq	152(%rsp)
 1502      000000
 1503              	.LCFI62:
 1504              		.cfi_def_cfa_offset 96
 1505 0029 FFB42498 		pushq	152(%rsp)
 1505      000000
 1506              	.LCFI63:
 1507              		.cfi_def_cfa_offset 104
 1508 0030 FFB42498 		pushq	152(%rsp)
 1508      000000
 1509              	.LCFI64:
 1510              		.cfi_def_cfa_offset 112
 1511 0037 FFB42498 		pushq	152(%rsp)
 1511      000000
 1512              	.LCFI65:
 1513              		.cfi_def_cfa_offset 120
 1514 003e FFB42498 		pushq	152(%rsp)
 1514      000000
 1515              	.LCFI66:
 1516              		.cfi_def_cfa_offset 128
 1517 0045 FFB42498 		pushq	152(%rsp)
 1517      000000
 1518              	.LCFI67:
 1519              		.cfi_def_cfa_offset 136
 1520 004c FFB42498 		pushq	152(%rsp)
 1520      000000
 1521              	.LCFI68:
 1522              		.cfi_def_cfa_offset 144
 1523 0053 FFB42498 		pushq	152(%rsp)
 1523      000000
 1524              	.LCFI69:
 1525              		.cfi_def_cfa_offset 152
 1526 005a FFB42498 		pushq	152(%rsp)
 1526      000000
 1527              	.LCFI70:
 1528              		.cfi_def_cfa_offset 160
 1529 0061 E8000000 		call	find_val
 1529      00
 1530              	.LVL131:
 301:src/mcu_msg.c ****         return -1;
 1531              		.loc 1 301 0
 1532 0066 488B4424 		movq	80(%rsp), %rax
 1532      50
 1533 006b 4883C450 		addq	$80, %rsp
 1534              	.LCFI71:
 1535              		.cfi_def_cfa_offset 80
 1536 006f 4885C0   		testq	%rax, %rax
 1537 0072 0F84F600 		je	.L108
 1537      0000
 305:src/mcu_msg.c ****         case '+':
GAS LISTING /tmp/cctOiEvw.s 			page 43


 1538              		.loc 1 305 0
 1539 0078 0FB610   		movzbl	(%rax), %edx
 1540 007b 80FA2B   		cmpb	$43, %dl
 1541 007e 740C     		je	.L99
 1542 0080 80FA2D   		cmpb	$45, %dl
 1543 0083 741B     		je	.L100
 298:src/mcu_msg.c ****     int8_t res = 0; // result of function
 1544              		.loc 1 298 0
 1545 0085 BE010000 		movl	$1, %esi
 1545      00
 1546 008a EB0D     		jmp	.L98
 1547              	.L99:
 308:src/mcu_msg.c ****         break;
 1548              		.loc 1 308 0
 1549 008c 4883C001 		addq	$1, %rax
 1550 0090 48890424 		movq	%rax, (%rsp)
 307:src/mcu_msg.c ****             sval.s++;
 1551              		.loc 1 307 0
 1552 0094 BE010000 		movl	$1, %esi
 1552      00
 1553              	.LVL132:
 1554              	.L98:
 320:src/mcu_msg.c ****         if(*sval.s < '0' || *sval.s > '9') {    // if non valid number, return with error
 1555              		.loc 1 320 0
 1556 0099 B9000000 		movl	$0, %ecx
 1556      00
 1557 009e EB29     		jmp	.L101
 1558              	.LVL133:
 1559              	.L100:
 313:src/mcu_msg.c ****         break;
 1560              		.loc 1 313 0
 1561 00a0 4883C001 		addq	$1, %rax
 1562 00a4 48890424 		movq	%rax, (%rsp)
 312:src/mcu_msg.c ****             sval.s++;
 1563              		.loc 1 312 0
 1564 00a8 BEFFFFFF 		movl	$-1, %esi
 1564      FF
 314:src/mcu_msg.c ****         
 1565              		.loc 1 314 0
 1566 00ad EBEA     		jmp	.L98
 1567              	.LVL134:
 1568              	.L103:
 320:src/mcu_msg.c ****         if(*sval.s < '0' || *sval.s > '9') {    // if non valid number, return with error
 1569              		.loc 1 320 0
 1570 00af 3C3B     		cmpb	$59, %al
 1571 00b1 745D     		je	.L102
 321:src/mcu_msg.c ****             return -1;
 1572              		.loc 1 321 0
 1573 00b3 83E830   		subl	$48, %eax
 1574 00b6 3C09     		cmpb	$9, %al
 1575 00b8 0F87B700 		ja	.L110
 1575      0000
 320:src/mcu_msg.c ****         if(*sval.s < '0' || *sval.s > '9') {    // if non valid number, return with error
 1576              		.loc 1 320 0 discriminator 2
 1577 00be 83C101   		addl	$1, %ecx
 1578              	.LVL135:
 1579 00c1 4883C201 		addq	$1, %rdx
GAS LISTING /tmp/cctOiEvw.s 			page 44


 1580 00c5 48891424 		movq	%rdx, (%rsp)
 1581              	.LVL136:
 1582              	.L101:
 320:src/mcu_msg.c ****         if(*sval.s < '0' || *sval.s > '9') {    // if non valid number, return with error
 1583              		.loc 1 320 0 is_stmt 0 discriminator 1
 1584 00c9 488B1424 		movq	(%rsp), %rdx
 1585 00cd 488B4424 		movq	104(%rsp), %rax
 1585      68
 1586 00d2 4889C7   		movq	%rax, %rdi
 1587 00d5 48894424 		movq	%rax, 32(%rsp)
 1587      20
 1588 00da 488B4424 		movq	112(%rsp), %rax
 1588      70
 1589 00df 48894424 		movq	%rax, 40(%rsp)
 1589      28
 1590 00e4 488B4424 		movq	120(%rsp), %rax
 1590      78
 1591 00e9 48894424 		movq	%rax, 48(%rsp)
 1591      30
 1592              	.LVL137:
 1593              	.LBB80:
 1594              	.LBB81:
 139:src/mcu_msg.c **** }
 1595              		.loc 1 139 0 is_stmt 1 discriminator 1
 1596 00ee 4889D0   		movq	%rdx, %rax
 1597 00f1 4829F8   		subq	%rdi, %rax
 1598 00f4 4889C7   		movq	%rax, %rdi
 1599 00f7 0FB74424 		movzwl	40(%rsp), %eax
 1599      28
 1600              	.LVL138:
 1601              	.LBE81:
 1602              	.LBE80:
 320:src/mcu_msg.c ****         if(*sval.s < '0' || *sval.s > '9') {    // if non valid number, return with error
 1603              		.loc 1 320 0 discriminator 1
 1604 00fc 4839C7   		cmpq	%rax, %rdi
 1605 00ff 7D0F     		jge	.L102
 320:src/mcu_msg.c ****         if(*sval.s < '0' || *sval.s > '9') {    // if non valid number, return with error
 1606              		.loc 1 320 0 is_stmt 0 discriminator 3
 1607 0101 0FB602   		movzbl	(%rdx), %eax
 1608              	.LVL139:
 1609              	.LBB82:
 1610              	.LBB83:
  86:src/mcu_msg.c ****         case  ' ':
 1611              		.loc 1 86 0 is_stmt 1 discriminator 3
 1612 0104 3C09     		cmpb	$9, %al
 1613 0106 7CA7     		jl	.L103
 1614 0108 3C0D     		cmpb	$13, %al
 1615 010a 7E04     		jle	.L102
 1616 010c 3C20     		cmpb	$32, %al
 1617 010e 759F     		jne	.L103
 1618              	.LVL140:
 1619              	.L102:
 1620              	.LBE83:
 1621              	.LBE82:
 326:src/mcu_msg.c ****     --sval.s;
 1622              		.loc 1 326 0
 1623 0110 C7030000 		movl	$0, (%rbx)
GAS LISTING /tmp/cctOiEvw.s 			page 45


 1623      0000
 327:src/mcu_msg.c ****     while(i--) { //convert value to integer
 1624              		.loc 1 327 0
 1625 0116 4883EA01 		subq	$1, %rdx
 1626 011a 48891424 		movq	%rdx, (%rsp)
 299:src/mcu_msg.c **** 
 1627              		.loc 1 299 0
 1628 011e B8000000 		movl	$0, %eax
 1628      00
 297:src/mcu_msg.c ****     int sign = 1;
 1629              		.loc 1 297 0
 1630 0123 BA010000 		movl	$1, %edx
 1630      00
 328:src/mcu_msg.c ****         *res_val += (*sval.s-- - '0') * m;
 1631              		.loc 1 328 0
 1632 0128 EB21     		jmp	.L105
 1633              	.LVL141:
 1634              	.L106:
 329:src/mcu_msg.c ****         m *= 10;
 1635              		.loc 1 329 0
 1636 012a 488B0C24 		movq	(%rsp), %rcx
 1637 012e 4C8D41FF 		leaq	-1(%rcx), %r8
 1638 0132 4C890424 		movq	%r8, (%rsp)
 1639 0136 0FBE09   		movsbl	(%rcx), %ecx
 1640 0139 83E930   		subl	$48, %ecx
 1641 013c 0FAFCA   		imull	%edx, %ecx
 1642 013f 010B     		addl	%ecx, (%rbx)
 330:src/mcu_msg.c ****         res++;
 1643              		.loc 1 330 0
 1644 0141 8D1492   		leal	(%rdx,%rdx,4), %edx
 1645              	.LVL142:
 1646 0144 01D2     		addl	%edx, %edx
 1647              	.LVL143:
 331:src/mcu_msg.c ****     }
 1648              		.loc 1 331 0
 1649 0146 83C001   		addl	$1, %eax
 1650              	.LVL144:
 328:src/mcu_msg.c ****         *res_val += (*sval.s-- - '0') * m;
 1651              		.loc 1 328 0
 1652 0149 89F9     		movl	%edi, %ecx
 1653              	.LVL145:
 1654              	.L105:
 1655 014b 8D79FF   		leal	-1(%rcx), %edi
 1656              	.LVL146:
 1657 014e 6685C9   		testw	%cx, %cx
 1658 0151 75D7     		jne	.L106
 334:src/mcu_msg.c **** 
 1659              		.loc 1 334 0
 1660 0153 0FAF33   		imull	(%rbx), %esi
 1661              	.LVL147:
 1662 0156 8933     		movl	%esi, (%rbx)
 1663              	.LVL148:
 1664              	.L96:
 337:src/mcu_msg.c **** 
 1665              		.loc 1 337 0
 1666 0158 488B7424 		movq	56(%rsp), %rsi
 1666      38
GAS LISTING /tmp/cctOiEvw.s 			page 46


 1667 015d 64483334 		xorq	%fs:40, %rsi
 1667      25280000 
 1667      00
 1668 0166 7514     		jne	.L113
 1669 0168 4883C440 		addq	$64, %rsp
 1670              	.LCFI72:
 1671              		.cfi_remember_state
 1672              		.cfi_def_cfa_offset 16
 1673 016c 5B       		popq	%rbx
 1674              	.LCFI73:
 1675              		.cfi_def_cfa_offset 8
 1676              	.LVL149:
 1677 016d C3       		ret
 1678              	.LVL150:
 1679              	.L108:
 1680              	.LCFI74:
 1681              		.cfi_restore_state
 302:src/mcu_msg.c **** 
 1682              		.loc 1 302 0
 1683 016e B8FFFFFF 		movl	$-1, %eax
 1683      FF
 1684 0173 EBE3     		jmp	.L96
 1685              	.LVL151:
 1686              	.L110:
 322:src/mcu_msg.c ****         }
 1687              		.loc 1 322 0
 1688 0175 B8FFFFFF 		movl	$-1, %eax
 1688      FF
 1689 017a EBDC     		jmp	.L96
 1690              	.LVL152:
 1691              	.L113:
 337:src/mcu_msg.c **** 
 1692              		.loc 1 337 0
 1693 017c E8000000 		call	__stack_chk_fail@PLT
 1693      00
 1694              	.LVL153:
 1695              		.cfi_endproc
 1696              	.LFE40:
 1698              		.section	.text.mcu_msg_parser_get_float,"ax",@progbits
 1699              		.globl	mcu_msg_parser_get_float
 1701              	mcu_msg_parser_get_float:
 1702              	.LFB41:
 341:src/mcu_msg.c ****     mcu_msg_string_t sval = find_val(obj, key);
 1703              		.loc 1 341 0
 1704              		.cfi_startproc
 1705              	.LVL154:
 1706 0000 53       		pushq	%rbx
 1707              	.LCFI75:
 1708              		.cfi_def_cfa_offset 16
 1709              		.cfi_offset 3, -16
 1710 0001 4883EC60 		subq	$96, %rsp
 1711              	.LCFI76:
 1712              		.cfi_def_cfa_offset 112
 1713 0005 4889FB   		movq	%rdi, %rbx
 341:src/mcu_msg.c ****     mcu_msg_string_t sval = find_val(obj, key);
 1714              		.loc 1 341 0
 1715 0008 64488B04 		movq	%fs:40, %rax
GAS LISTING /tmp/cctOiEvw.s 			page 47


 1715      25280000 
 1715      00
 1716 0011 48894424 		movq	%rax, 88(%rsp)
 1716      58
 1717 0016 31C0     		xorl	%eax, %eax
 342:src/mcu_msg.c ****     char *pf;
 1718              		.loc 1 342 0
 1719 0018 4889E7   		movq	%rsp, %rdi
 1720              	.LVL155:
 1721 001b FFB424B8 		pushq	184(%rsp)
 1721      000000
 1722              	.LCFI77:
 1723              		.cfi_def_cfa_offset 120
 1724 0022 FFB424B8 		pushq	184(%rsp)
 1724      000000
 1725              	.LCFI78:
 1726              		.cfi_def_cfa_offset 128
 1727 0029 FFB424B8 		pushq	184(%rsp)
 1727      000000
 1728              	.LCFI79:
 1729              		.cfi_def_cfa_offset 136
 1730 0030 FFB424B8 		pushq	184(%rsp)
 1730      000000
 1731              	.LCFI80:
 1732              		.cfi_def_cfa_offset 144
 1733 0037 FFB424B8 		pushq	184(%rsp)
 1733      000000
 1734              	.LCFI81:
 1735              		.cfi_def_cfa_offset 152
 1736 003e FFB424B8 		pushq	184(%rsp)
 1736      000000
 1737              	.LCFI82:
 1738              		.cfi_def_cfa_offset 160
 1739 0045 FFB424B8 		pushq	184(%rsp)
 1739      000000
 1740              	.LCFI83:
 1741              		.cfi_def_cfa_offset 168
 1742 004c FFB424B8 		pushq	184(%rsp)
 1742      000000
 1743              	.LCFI84:
 1744              		.cfi_def_cfa_offset 176
 1745 0053 FFB424B8 		pushq	184(%rsp)
 1745      000000
 1746              	.LCFI85:
 1747              		.cfi_def_cfa_offset 184
 1748 005a FFB424B8 		pushq	184(%rsp)
 1748      000000
 1749              	.LCFI86:
 1750              		.cfi_def_cfa_offset 192
 1751 0061 E8000000 		call	find_val
 1751      00
 1752              	.LVL156:
 350:src/mcu_msg.c ****         return -1;
 1753              		.loc 1 350 0
 1754 0066 488B4424 		movq	80(%rsp), %rax
 1754      50
 1755 006b 4883C450 		addq	$80, %rsp
GAS LISTING /tmp/cctOiEvw.s 			page 48


 1756              	.LCFI87:
 1757              		.cfi_def_cfa_offset 112
 1758 006f 4885C0   		testq	%rax, %rax
 1759 0072 0F84DC01 		je	.L133
 1759      0000
 354:src/mcu_msg.c ****         case '+':
 1760              		.loc 1 354 0
 1761 0078 0FB610   		movzbl	(%rax), %edx
 1762 007b 80FA2B   		cmpb	$43, %dl
 1763 007e 740C     		je	.L117
 1764 0080 80FA2D   		cmpb	$45, %dl
 1765 0083 741B     		je	.L118
 347:src/mcu_msg.c ****     int8_t res = 0; // result of function
 1766              		.loc 1 347 0
 1767 0085 BE010000 		movl	$1, %esi
 1767      00
 1768 008a EB0D     		jmp	.L116
 1769              	.L117:
 357:src/mcu_msg.c ****         break;
 1770              		.loc 1 357 0
 1771 008c 4883C001 		addq	$1, %rax
 1772 0090 48890424 		movq	%rax, (%rsp)
 356:src/mcu_msg.c ****             sval.s++;
 1773              		.loc 1 356 0
 1774 0094 BE010000 		movl	$1, %esi
 1774      00
 1775              	.LVL157:
 1776              	.L116:
 370:src/mcu_msg.c ****         if((*sval.s < '0' || *sval.s > '9')) {    // if non valid number, return with error
 1777              		.loc 1 370 0
 1778 0099 B9000000 		movl	$0, %ecx
 1778      00
 1779 009e EB2D     		jmp	.L119
 1780              	.LVL158:
 1781              	.L118:
 362:src/mcu_msg.c ****         break;
 1782              		.loc 1 362 0
 1783 00a0 4883C001 		addq	$1, %rax
 1784 00a4 48890424 		movq	%rax, (%rsp)
 361:src/mcu_msg.c ****             sval.s++;
 1785              		.loc 1 361 0
 1786 00a8 BEFFFFFF 		movl	$-1, %esi
 1786      FF
 363:src/mcu_msg.c ****         
 1787              		.loc 1 363 0
 1788 00ad EBEA     		jmp	.L116
 1789              	.LVL159:
 1790              	.L121:
 370:src/mcu_msg.c ****         if((*sval.s < '0' || *sval.s > '9')) {    // if non valid number, return with error
 1791              		.loc 1 370 0
 1792 00af 3C3B     		cmpb	$59, %al
 1793 00b1 746A     		je	.L120
 370:src/mcu_msg.c ****         if((*sval.s < '0' || *sval.s > '9')) {    // if non valid number, return with error
 1794              		.loc 1 370 0 is_stmt 0 discriminator 5
 1795 00b3 3C2E     		cmpb	$46, %al
 1796 00b5 7466     		je	.L120
 371:src/mcu_msg.c ****             return -1;
GAS LISTING /tmp/cctOiEvw.s 			page 49


 1797              		.loc 1 371 0 is_stmt 1
 1798 00b7 83E830   		subl	$48, %eax
 1799 00ba 3C09     		cmpb	$9, %al
 1800 00bc 0F879901 		ja	.L135
 1800      0000
 370:src/mcu_msg.c ****         if((*sval.s < '0' || *sval.s > '9')) {    // if non valid number, return with error
 1801              		.loc 1 370 0 discriminator 2
 1802 00c2 83C101   		addl	$1, %ecx
 1803              	.LVL160:
 1804 00c5 4883C201 		addq	$1, %rdx
 1805 00c9 48891424 		movq	%rdx, (%rsp)
 1806              	.LVL161:
 1807              	.L119:
 370:src/mcu_msg.c ****         if((*sval.s < '0' || *sval.s > '9')) {    // if non valid number, return with error
 1808              		.loc 1 370 0 is_stmt 0 discriminator 1
 1809 00cd 488B1424 		movq	(%rsp), %rdx
 1810 00d1 488B8424 		movq	136(%rsp), %rax
 1810      88000000 
 1811 00d9 4889C7   		movq	%rax, %rdi
 1812 00dc 48894424 		movq	%rax, 32(%rsp)
 1812      20
 1813 00e1 488B8424 		movq	144(%rsp), %rax
 1813      90000000 
 1814 00e9 48894424 		movq	%rax, 40(%rsp)
 1814      28
 1815 00ee 488B8424 		movq	152(%rsp), %rax
 1815      98000000 
 1816 00f6 48894424 		movq	%rax, 48(%rsp)
 1816      30
 1817              	.LVL162:
 1818              	.LBB84:
 1819              	.LBB85:
 139:src/mcu_msg.c **** }
 1820              		.loc 1 139 0 is_stmt 1 discriminator 1
 1821 00fb 4889D0   		movq	%rdx, %rax
 1822 00fe 4829F8   		subq	%rdi, %rax
 1823 0101 4889C7   		movq	%rax, %rdi
 1824 0104 0FB74424 		movzwl	40(%rsp), %eax
 1824      28
 1825              	.LVL163:
 1826              	.LBE85:
 1827              	.LBE84:
 370:src/mcu_msg.c ****         if((*sval.s < '0' || *sval.s > '9')) {    // if non valid number, return with error
 1828              		.loc 1 370 0 discriminator 1
 1829 0109 4839C7   		cmpq	%rax, %rdi
 1830 010c 7D0F     		jge	.L120
 370:src/mcu_msg.c ****         if((*sval.s < '0' || *sval.s > '9')) {    // if non valid number, return with error
 1831              		.loc 1 370 0 is_stmt 0 discriminator 3
 1832 010e 0FB602   		movzbl	(%rdx), %eax
 1833              	.LVL164:
 1834              	.LBB86:
 1835              	.LBB87:
  86:src/mcu_msg.c ****         case  ' ':
 1836              		.loc 1 86 0 is_stmt 1 discriminator 3
 1837 0111 3C09     		cmpb	$9, %al
 1838 0113 7C9A     		jl	.L121
 1839 0115 3C0D     		cmpb	$13, %al
GAS LISTING /tmp/cctOiEvw.s 			page 50


 1840 0117 7E04     		jle	.L120
 1841 0119 3C20     		cmpb	$32, %al
 1842 011b 7592     		jne	.L121
 1843              	.LVL165:
 1844              	.L120:
 1845              	.LBE87:
 1846              	.LBE86:
 376:src/mcu_msg.c ****     
 1847              		.loc 1 376 0
 1848 011d C7030000 		movl	$0x00000000, (%rbx)
 1848      0000
 378:src/mcu_msg.c ****         pf = sval.s + 1;
 1849              		.loc 1 378 0
 1850 0123 803A2E   		cmpb	$46, (%rdx)
 1851 0126 741A     		je	.L140
 348:src/mcu_msg.c **** 
 1852              		.loc 1 348 0
 1853 0128 B8000000 		movl	$0, %eax
 1853      00
 382:src/mcu_msg.c ****     }
 1854              		.loc 1 382 0
 1855 012d BF000000 		movl	$0, %edi
 1855      00
 1856              	.LVL166:
 1857              	.L123:
 385:src/mcu_msg.c ****     while(i--) { // convert integer part
 1858              		.loc 1 385 0
 1859 0132 4883EA01 		subq	$1, %rdx
 1860 0136 48891424 		movq	%rdx, (%rsp)
 345:src/mcu_msg.c ****     float mf = 0.1;
 1861              		.loc 1 345 0
 1862 013a 41B80100 		movl	$1, %r8d
 1862      0000
 386:src/mcu_msg.c ****         *res_val += (*sval.s-- - '0') * m;
 1863              		.loc 1 386 0
 1864 0140 EB3F     		jmp	.L124
 1865              	.LVL167:
 1866              	.L140:
 379:src/mcu_msg.c ****         res++;
 1867              		.loc 1 379 0
 1868 0142 488D7A01 		leaq	1(%rdx), %rdi
 1869              	.LVL168:
 380:src/mcu_msg.c ****     } else {
 1870              		.loc 1 380 0
 1871 0146 B8010000 		movl	$1, %eax
 1871      00
 1872 014b EBE5     		jmp	.L123
 1873              	.LVL169:
 1874              	.L127:
 387:src/mcu_msg.c ****         m *= 10;
 1875              		.loc 1 387 0
 1876 014d 488B1424 		movq	(%rsp), %rdx
 1877 0151 488D4AFF 		leaq	-1(%rdx), %rcx
 1878 0155 48890C24 		movq	%rcx, (%rsp)
 1879 0159 0FBE12   		movsbl	(%rdx), %edx
 1880 015c 83EA30   		subl	$48, %edx
 1881 015f 410FAFD0 		imull	%r8d, %edx
GAS LISTING /tmp/cctOiEvw.s 			page 51


 1882 0163 660FEFC0 		pxor	%xmm0, %xmm0
 1883 0167 F3480F2A 		cvtsi2ssq	%rdx, %xmm0
 1883      C2
 1884 016c F30F5803 		addss	(%rbx), %xmm0
 1885 0170 F30F1103 		movss	%xmm0, (%rbx)
 388:src/mcu_msg.c ****         res++;
 1886              		.loc 1 388 0
 1887 0174 478D0480 		leal	(%r8,%r8,4), %r8d
 1888              	.LVL170:
 1889 0178 4501C0   		addl	%r8d, %r8d
 1890              	.LVL171:
 389:src/mcu_msg.c ****     }
 1891              		.loc 1 389 0
 1892 017b 83C001   		addl	$1, %eax
 1893              	.LVL172:
 386:src/mcu_msg.c ****         *res_val += (*sval.s-- - '0') * m;
 1894              		.loc 1 386 0
 1895 017e 4489C9   		movl	%r9d, %ecx
 1896              	.LVL173:
 1897              	.L124:
 1898 0181 448D49FF 		leal	-1(%rcx), %r9d
 1899              	.LVL174:
 1900 0185 6685C9   		testw	%cx, %cx
 1901 0188 75C3     		jne	.L127
 346:src/mcu_msg.c ****     int sign = 1;
 1902              		.loc 1 346 0
 1903 018a F30F100D 		movss	.LC0(%rip), %xmm1
 1903      00000000 
 1904 0192 EB3B     		jmp	.L128
 1905              	.LVL175:
 1906              	.L130:
 393:src/mcu_msg.c ****         if(*pf < '0' || *pf > '9') {    // if non valid number, return with error
 1907              		.loc 1 393 0
 1908 0194 80F93B   		cmpb	$59, %cl
 1909 0197 0F849100 		je	.L129
 1909      0000
 394:src/mcu_msg.c ****             return -1;
 1910              		.loc 1 394 0
 1911 019d 83E930   		subl	$48, %ecx
 1912 01a0 80F909   		cmpb	$9, %cl
 1913 01a3 0F87B900 		ja	.L137
 1913      0000
 397:src/mcu_msg.c ****         mf /= 10;
 1914              		.loc 1 397 0
 1915 01a9 83EA30   		subl	$48, %edx
 1916 01ac 660FEFC0 		pxor	%xmm0, %xmm0
 1917 01b0 F30F2AC2 		cvtsi2ss	%edx, %xmm0
 1918 01b4 F30F59C1 		mulss	%xmm1, %xmm0
 1919 01b8 F30F5803 		addss	(%rbx), %xmm0
 1920 01bc F30F1103 		movss	%xmm0, (%rbx)
 398:src/mcu_msg.c ****         res++; 
 1921              		.loc 1 398 0
 1922 01c0 F30F5E0D 		divss	.LC2(%rip), %xmm1
 1922      00000000 
 1923              	.LVL176:
 399:src/mcu_msg.c ****     }
 1924              		.loc 1 399 0
GAS LISTING /tmp/cctOiEvw.s 			page 52


 1925 01c8 83C001   		addl	$1, %eax
 1926              	.LVL177:
 393:src/mcu_msg.c ****         if(*pf < '0' || *pf > '9') {    // if non valid number, return with error
 1927              		.loc 1 393 0
 1928 01cb 4883C701 		addq	$1, %rdi
 1929              	.LVL178:
 1930              	.L128:
 393:src/mcu_msg.c ****         if(*pf < '0' || *pf > '9') {    // if non valid number, return with error
 1931              		.loc 1 393 0 is_stmt 0 discriminator 1
 1932 01cf 4885FF   		testq	%rdi, %rdi
 1933 01d2 745A     		je	.L129
 1934 01d4 488B9424 		movq	136(%rsp), %rdx
 1934      88000000 
 1935 01dc 4889D1   		movq	%rdx, %rcx
 1936 01df 48895424 		movq	%rdx, 64(%rsp)
 1936      40
 1937 01e4 488B9424 		movq	144(%rsp), %rdx
 1937      90000000 
 1938 01ec 48895424 		movq	%rdx, 72(%rsp)
 1938      48
 1939 01f1 488B9424 		movq	152(%rsp), %rdx
 1939      98000000 
 1940 01f9 48895424 		movq	%rdx, 80(%rsp)
 1940      50
 1941              	.LVL179:
 1942              	.LBB88:
 1943              	.LBB89:
 139:src/mcu_msg.c **** }
 1944              		.loc 1 139 0 is_stmt 1 discriminator 2
 1945 01fe 4889FA   		movq	%rdi, %rdx
 1946 0201 4829CA   		subq	%rcx, %rdx
 1947 0204 4889D1   		movq	%rdx, %rcx
 1948 0207 0FB75424 		movzwl	72(%rsp), %edx
 1948      48
 1949              	.LVL180:
 1950              	.LBE89:
 1951              	.LBE88:
 393:src/mcu_msg.c ****         if(*pf < '0' || *pf > '9') {    // if non valid number, return with error
 1952              		.loc 1 393 0 discriminator 2
 1953 020c 4839D1   		cmpq	%rdx, %rcx
 1954 020f 7D1D     		jge	.L129
 393:src/mcu_msg.c ****         if(*pf < '0' || *pf > '9') {    // if non valid number, return with error
 1955              		.loc 1 393 0 is_stmt 0 discriminator 3
 1956 0211 0FB60F   		movzbl	(%rdi), %ecx
 1957 0214 0FBED1   		movsbl	%cl, %edx
 1958              	.LVL181:
 1959              	.LBB90:
 1960              	.LBB91:
  86:src/mcu_msg.c ****         case  ' ':
 1961              		.loc 1 86 0 is_stmt 1 discriminator 3
 1962 0217 80F909   		cmpb	$9, %cl
 1963 021a 0F8C74FF 		jl	.L130
 1963      FFFF
 1964 0220 80F90D   		cmpb	$13, %cl
 1965 0223 7E09     		jle	.L129
 1966 0225 80F920   		cmpb	$32, %cl
 1967 0228 0F8566FF 		jne	.L130
GAS LISTING /tmp/cctOiEvw.s 			page 53


 1967      FFFF
 1968              	.LVL182:
 1969              	.L129:
 1970              	.LBE91:
 1971              	.LBE90:
 402:src/mcu_msg.c **** 
 1972              		.loc 1 402 0
 1973 022e 660FEFC0 		pxor	%xmm0, %xmm0
 1974 0232 F30F2AC6 		cvtsi2ss	%esi, %xmm0
 1975 0236 F30F5903 		mulss	(%rbx), %xmm0
 1976 023a F30F1103 		movss	%xmm0, (%rbx)
 1977              	.LVL183:
 1978              	.L114:
 405:src/mcu_msg.c **** 
 1979              		.loc 1 405 0
 1980 023e 488B7424 		movq	88(%rsp), %rsi
 1980      58
 1981 0243 64483334 		xorq	%fs:40, %rsi
 1981      25280000 
 1981      00
 1982 024c 751B     		jne	.L141
 1983 024e 4883C460 		addq	$96, %rsp
 1984              	.LCFI88:
 1985              		.cfi_remember_state
 1986              		.cfi_def_cfa_offset 16
 1987 0252 5B       		popq	%rbx
 1988              	.LCFI89:
 1989              		.cfi_def_cfa_offset 8
 1990              	.LVL184:
 1991 0253 C3       		ret
 1992              	.LVL185:
 1993              	.L133:
 1994              	.LCFI90:
 1995              		.cfi_restore_state
 351:src/mcu_msg.c **** 
 1996              		.loc 1 351 0
 1997 0254 B8FFFFFF 		movl	$-1, %eax
 1997      FF
 1998 0259 EBE3     		jmp	.L114
 1999              	.LVL186:
 2000              	.L135:
 372:src/mcu_msg.c ****         }
 2001              		.loc 1 372 0
 2002 025b B8FFFFFF 		movl	$-1, %eax
 2002      FF
 2003 0260 EBDC     		jmp	.L114
 2004              	.LVL187:
 2005              	.L137:
 395:src/mcu_msg.c ****         }
 2006              		.loc 1 395 0
 2007 0262 B8FFFFFF 		movl	$-1, %eax
 2007      FF
 2008              	.LVL188:
 2009 0267 EBD5     		jmp	.L114
 2010              	.LVL189:
 2011              	.L141:
 405:src/mcu_msg.c **** 
GAS LISTING /tmp/cctOiEvw.s 			page 54


 2012              		.loc 1 405 0
 2013 0269 E8000000 		call	__stack_chk_fail@PLT
 2013      00
 2014              	.LVL190:
 2015              		.cfi_endproc
 2016              	.LFE41:
 2018              		.section	.text.mcu_msg_parser_get_string,"ax",@progbits
 2019              		.globl	mcu_msg_parser_get_string
 2021              	mcu_msg_parser_get_string:
 2022              	.LFB42:
 410:src/mcu_msg.c ****     mcu_msg_string_t res = find_val(obj, key);
 2023              		.loc 1 410 0
 2024              		.cfi_startproc
 2025              	.LVL191:
 2026 0000 53       		pushq	%rbx
 2027              	.LCFI91:
 2028              		.cfi_def_cfa_offset 16
 2029              		.cfi_offset 3, -16
 2030 0001 4883EC40 		subq	$64, %rsp
 2031              	.LCFI92:
 2032              		.cfi_def_cfa_offset 80
 2033 0005 4889FB   		movq	%rdi, %rbx
 410:src/mcu_msg.c ****     mcu_msg_string_t res = find_val(obj, key);
 2034              		.loc 1 410 0
 2035 0008 64488B04 		movq	%fs:40, %rax
 2035      25280000 
 2035      00
 2036 0011 48894424 		movq	%rax, 56(%rsp)
 2036      38
 2037 0016 31C0     		xorl	%eax, %eax
 411:src/mcu_msg.c ****     char qmark;
 2038              		.loc 1 411 0
 2039 0018 4889E7   		movq	%rsp, %rdi
 2040              	.LVL192:
 2041 001b FFB42498 		pushq	152(%rsp)
 2041      000000
 2042              	.LCFI93:
 2043              		.cfi_def_cfa_offset 88
 2044 0022 FFB42498 		pushq	152(%rsp)
 2044      000000
 2045              	.LCFI94:
 2046              		.cfi_def_cfa_offset 96
 2047 0029 FFB42498 		pushq	152(%rsp)
 2047      000000
 2048              	.LCFI95:
 2049              		.cfi_def_cfa_offset 104
 2050 0030 FFB42498 		pushq	152(%rsp)
 2050      000000
 2051              	.LCFI96:
 2052              		.cfi_def_cfa_offset 112
 2053 0037 FFB42498 		pushq	152(%rsp)
 2053      000000
 2054              	.LCFI97:
 2055              		.cfi_def_cfa_offset 120
 2056 003e FFB42498 		pushq	152(%rsp)
 2056      000000
 2057              	.LCFI98:
GAS LISTING /tmp/cctOiEvw.s 			page 55


 2058              		.cfi_def_cfa_offset 128
 2059 0045 FFB42498 		pushq	152(%rsp)
 2059      000000
 2060              	.LCFI99:
 2061              		.cfi_def_cfa_offset 136
 2062 004c FFB42498 		pushq	152(%rsp)
 2062      000000
 2063              	.LCFI100:
 2064              		.cfi_def_cfa_offset 144
 2065 0053 FFB42498 		pushq	152(%rsp)
 2065      000000
 2066              	.LCFI101:
 2067              		.cfi_def_cfa_offset 152
 2068 005a FFB42498 		pushq	152(%rsp)
 2068      000000
 2069              	.LCFI102:
 2070              		.cfi_def_cfa_offset 160
 2071 0061 E8000000 		call	find_val
 2071      00
 2072              	.LVL193:
 415:src/mcu_msg.c ****         mcu_msg_destroy_string(&res);
 2073              		.loc 1 415 0
 2074 0066 488B4424 		movq	80(%rsp), %rax
 2074      50
 2075 006b 4883C450 		addq	$80, %rsp
 2076              	.LCFI103:
 2077              		.cfi_def_cfa_offset 80
 2078 006f 4885C0   		testq	%rax, %rax
 2079 0072 7422     		je	.L151
 420:src/mcu_msg.c **** 
 2080              		.loc 1 420 0
 2081 0074 0FB630   		movzbl	(%rax), %esi
 2082              	.LVL194:
 422:src/mcu_msg.c ****         mcu_msg_destroy_string(&res);
 2083              		.loc 1 422 0
 2084 0077 4080FE27 		cmpb	$39, %sil
 2085 007b 0F95C1   		setne	%cl
 2086 007e 4080FE22 		cmpb	$34, %sil
 2087 0082 0F95C2   		setne	%dl
 2088 0085 84D1     		testb	%dl, %cl
 2089 0087 7533     		jne	.L152
 427:src/mcu_msg.c ****     while(is_in_str_buff(obj.content, p) && *p != qmark) { // calc len
 2090              		.loc 1 427 0
 2091 0089 4C8D4001 		leaq	1(%rax), %r8
 2092 008d 4C890424 		movq	%r8, (%rsp)
 2093              	.LVL195:
 2094 0091 4C89C0   		movq	%r8, %rax
 428:src/mcu_msg.c ****         p++;
 2095              		.loc 1 428 0
 2096 0094 EB4D     		jmp	.L146
 2097              	.LVL196:
 2098              	.L151:
 416:src/mcu_msg.c ****         return res;
 2099              		.loc 1 416 0
 2100 0096 4889E7   		movq	%rsp, %rdi
 2101 0099 E8000000 		call	mcu_msg_destroy_string
 2101      00
GAS LISTING /tmp/cctOiEvw.s 			page 56


 2102              	.LVL197:
 417:src/mcu_msg.c ****     }
 2103              		.loc 1 417 0
 2104 009e 488B0424 		movq	(%rsp), %rax
 2105 00a2 488B5424 		movq	8(%rsp), %rdx
 2105      08
 2106 00a7 488903   		movq	%rax, (%rbx)
 2107 00aa 48895308 		movq	%rdx, 8(%rbx)
 2108 00ae 488B4424 		movq	16(%rsp), %rax
 2108      10
 2109 00b3 48894310 		movq	%rax, 16(%rbx)
 2110 00b7 E9840000 		jmp	.L142
 2110      00
 2111              	.LVL198:
 2112              	.L152:
 423:src/mcu_msg.c ****         return res;
 2113              		.loc 1 423 0
 2114 00bc 4889E7   		movq	%rsp, %rdi
 2115 00bf E8000000 		call	mcu_msg_destroy_string
 2115      00
 2116              	.LVL199:
 424:src/mcu_msg.c ****     }
 2117              		.loc 1 424 0
 2118 00c4 488B0424 		movq	(%rsp), %rax
 2119 00c8 488B5424 		movq	8(%rsp), %rdx
 2119      08
 2120 00cd 488903   		movq	%rax, (%rbx)
 2121 00d0 48895308 		movq	%rdx, 8(%rbx)
 2122 00d4 488B4424 		movq	16(%rsp), %rax
 2122      10
 2123 00d9 48894310 		movq	%rax, 16(%rbx)
 2124 00dd EB61     		jmp	.L142
 2125              	.LVL200:
 2126              	.L148:
 429:src/mcu_msg.c ****     }
 2127              		.loc 1 429 0
 2128 00df 4883C001 		addq	$1, %rax
 2129              	.LVL201:
 2130              	.L146:
 2131 00e3 488B5424 		movq	104(%rsp), %rdx
 2131      68
 2132 00e8 4889D1   		movq	%rdx, %rcx
 2133 00eb 48895424 		movq	%rdx, 32(%rsp)
 2133      20
 2134 00f0 488B5424 		movq	112(%rsp), %rdx
 2134      70
 2135 00f5 48895424 		movq	%rdx, 40(%rsp)
 2135      28
 2136 00fa 488B5424 		movq	120(%rsp), %rdx
 2136      78
 2137 00ff 48895424 		movq	%rdx, 48(%rsp)
 2137      30
 2138              	.LVL202:
 2139              	.LBB92:
 2140              	.LBB93:
 139:src/mcu_msg.c **** }
 2141              		.loc 1 139 0
GAS LISTING /tmp/cctOiEvw.s 			page 57


 2142 0104 4889C7   		movq	%rax, %rdi
 2143 0107 4889C2   		movq	%rax, %rdx
 2144 010a 4829CA   		subq	%rcx, %rdx
 2145 010d 4889D1   		movq	%rdx, %rcx
 2146 0110 0FB75424 		movzwl	40(%rsp), %edx
 2146      28
 2147              	.LVL203:
 2148              	.LBE93:
 2149              	.LBE92:
 428:src/mcu_msg.c ****         p++;
 2150              		.loc 1 428 0
 2151 0115 4839D1   		cmpq	%rdx, %rcx
 2152 0118 7D05     		jge	.L147
 428:src/mcu_msg.c ****         p++;
 2153              		.loc 1 428 0 is_stmt 0 discriminator 1
 2154 011a 403830   		cmpb	%sil, (%rax)
 2155 011d 75C0     		jne	.L148
 2156              	.L147:
 431:src/mcu_msg.c ****     return res;
 2157              		.loc 1 431 0 is_stmt 1
 2158 011f 4C29C7   		subq	%r8, %rdi
 2159 0122 66897C24 		movw	%di, 8(%rsp)
 2159      08
 432:src/mcu_msg.c **** }
 2160              		.loc 1 432 0
 2161 0127 488B0424 		movq	(%rsp), %rax
 2162              	.LVL204:
 2163 012b 488B5424 		movq	8(%rsp), %rdx
 2163      08
 2164 0130 488903   		movq	%rax, (%rbx)
 2165 0133 48895308 		movq	%rdx, 8(%rbx)
 2166 0137 488B4424 		movq	16(%rsp), %rax
 2166      10
 2167 013c 48894310 		movq	%rax, 16(%rbx)
 2168              	.LVL205:
 2169              	.L142:
 433:src/mcu_msg.c **** 
 2170              		.loc 1 433 0
 2171 0140 4889D8   		movq	%rbx, %rax
 2172 0143 488B5C24 		movq	56(%rsp), %rbx
 2172      38
 2173 0148 6448331C 		xorq	%fs:40, %rbx
 2173      25280000 
 2173      00
 2174              	.LVL206:
 2175 0151 7506     		jne	.L153
 2176 0153 4883C440 		addq	$64, %rsp
 2177              	.LCFI104:
 2178              		.cfi_remember_state
 2179              		.cfi_def_cfa_offset 16
 2180 0157 5B       		popq	%rbx
 2181              	.LCFI105:
 2182              		.cfi_def_cfa_offset 8
 2183 0158 C3       		ret
 2184              	.L153:
 2185              	.LCFI106:
 2186              		.cfi_restore_state
GAS LISTING /tmp/cctOiEvw.s 			page 58


 2187 0159 E8000000 		call	__stack_chk_fail@PLT
 2187      00
 2188              	.LVL207:
 2189              		.cfi_endproc
 2190              	.LFE42:
 2192              		.section	.text.mcu_msg_string_hnd_create,"ax",@progbits
 2193              		.globl	mcu_msg_string_hnd_create
 2195              	mcu_msg_string_hnd_create:
 2196              	.LFB45:
 458:src/mcu_msg.c **** 
 459:src/mcu_msg.c **** /**
 460:src/mcu_msg.c ****  * @brief Create string handler and set the basic functions
 461:src/mcu_msg.c ****  * 
 462:src/mcu_msg.c ****  * @param print expected print function, set to NULL if you don't need the print feature
 463:src/mcu_msg.c ****  * @return mcu_msg_string_hnd_t handler
 464:src/mcu_msg.c ****  */
 465:src/mcu_msg.c **** mcu_msg_string_hnd_t mcu_msg_string_hnd_create(void (*print)(mcu_msg_string_t))
 466:src/mcu_msg.c **** {
 2197              		.loc 1 466 0
 2198              		.cfi_startproc
 2199              	.LVL208:
 2200 0000 4889F8   		movq	%rdi, %rax
 467:src/mcu_msg.c ****     mcu_msg_string_hnd_t hnd;
 468:src/mcu_msg.c ****     hnd.copy_to_chr_arr = mcu_msg_str_copy_to_chr_arr;
 2201              		.loc 1 468 0
 2202 0003 488D1500 		leaq	mcu_msg_str_copy_to_chr_arr(%rip), %rdx
 2202      000000
 2203 000a 48895424 		movq	%rdx, -40(%rsp)
 2203      D8
 469:src/mcu_msg.c ****     hnd.copy = mcu_msg_str_copy;
 2204              		.loc 1 469 0
 2205 000f 488D0D00 		leaq	mcu_msg_str_copy(%rip), %rcx
 2205      000000
 2206 0016 48894C24 		movq	%rcx, -32(%rsp)
 2206      E0
 470:src/mcu_msg.c ****     hnd.print = print;
 471:src/mcu_msg.c ****     return hnd;
 2207              		.loc 1 471 0
 2208 001b 4C8B4C24 		movq	-40(%rsp), %r9
 2208      D8
 2209 0020 4C8B5424 		movq	-32(%rsp), %r10
 2209      E0
 2210 0025 4C890F   		movq	%r9, (%rdi)
 2211 0028 4C895708 		movq	%r10, 8(%rdi)
 2212 002c 48897710 		movq	%rsi, 16(%rdi)
 472:src/mcu_msg.c **** }
 2213              		.loc 1 472 0
 2214 0030 C3       		ret
 2215              		.cfi_endproc
 2216              	.LFE45:
 2218              		.section	.text.mcu_msg_wrapper_init_obj_queues,"ax",@progbits
 2219              		.globl	mcu_msg_wrapper_init_obj_queues
 2221              	mcu_msg_wrapper_init_obj_queues:
 2222              	.LFB46:
 473:src/mcu_msg.c **** 
 474:src/mcu_msg.c **** /*Wrapper functions*/
 475:src/mcu_msg.c **** #if MCU_MSG_USE_WRAPPER
GAS LISTING /tmp/cctOiEvw.s 			page 59


 476:src/mcu_msg.c **** void mcu_msg_wrapper_init_obj_queues(mcu_msg_obj_t *obj)
 477:src/mcu_msg.c **** {
 2223              		.loc 1 477 0
 2224              		.cfi_startproc
 2225              	.LVL209:
 478:src/mcu_msg.c ****     obj->int_queue = NULL;
 2226              		.loc 1 478 0
 2227 0000 48C74730 		movq	$0, 48(%rdi)
 2227      00000000 
 479:src/mcu_msg.c ****     obj->float_queue = NULL;
 2228              		.loc 1 479 0
 2229 0008 48C74738 		movq	$0, 56(%rdi)
 2229      00000000 
 480:src/mcu_msg.c ****     obj->string_queue = NULL;
 2230              		.loc 1 480 0
 2231 0010 48C74740 		movq	$0, 64(%rdi)
 2231      00000000 
 481:src/mcu_msg.c **** }
 2232              		.loc 1 481 0
 2233 0018 C3       		ret
 2234              		.cfi_endproc
 2235              	.LFE46:
 2237              		.section	.text.mcu_msg_wrapper_add_string_to_obj,"ax",@progbits
 2238              		.globl	mcu_msg_wrapper_add_string_to_obj
 2240              	mcu_msg_wrapper_add_string_to_obj:
 2241              	.LFB47:
 482:src/mcu_msg.c **** 
 483:src/mcu_msg.c **** 
 484:src/mcu_msg.c **** void mcu_msg_wrapper_add_string_to_obj(mcu_msg_obj_t *obj, mcu_msg_string_t *str)
 485:src/mcu_msg.c **** {
 2242              		.loc 1 485 0
 2243              		.cfi_startproc
 2244              	.LVL210:
 486:src/mcu_msg.c ****     mcu_msg_string_t *strp;
 487:src/mcu_msg.c ****     if(obj->string_queue == NULL) { //first element
 2245              		.loc 1 487 0
 2246 0000 488B5740 		movq	64(%rdi), %rdx
 2247 0004 4885D2   		testq	%rdx, %rdx
 2248 0007 7510     		jne	.L157
 488:src/mcu_msg.c ****         obj->string_queue = str;
 2249              		.loc 1 488 0
 2250 0009 48897740 		movq	%rsi, 64(%rdi)
 489:src/mcu_msg.c ****         obj->string_queue->next = NULL;
 2251              		.loc 1 489 0
 2252 000d 48C74610 		movq	$0, 16(%rsi)
 2252      00000000 
 2253 0015 C3       		ret
 2254              	.LVL211:
 2255              	.L159:
 490:src/mcu_msg.c ****     } else {
 491:src/mcu_msg.c ****         strp = obj->string_queue;
 492:src/mcu_msg.c **** 
 493:src/mcu_msg.c ****         while(strp->next != NULL) 
 494:src/mcu_msg.c ****             strp = strp->next;
 2256              		.loc 1 494 0
 2257 0016 4889C2   		movq	%rax, %rdx
 2258              	.LVL212:
GAS LISTING /tmp/cctOiEvw.s 			page 60


 2259              	.L157:
 493:src/mcu_msg.c ****             strp = strp->next;
 2260              		.loc 1 493 0
 2261 0019 488B4210 		movq	16(%rdx), %rax
 2262 001d 4885C0   		testq	%rax, %rax
 2263 0020 75F4     		jne	.L159
 495:src/mcu_msg.c ****         strp->next = str;
 2264              		.loc 1 495 0
 2265 0022 48897210 		movq	%rsi, 16(%rdx)
 496:src/mcu_msg.c ****         str->next = NULL;
 2266              		.loc 1 496 0
 2267 0026 48C74610 		movq	$0, 16(%rsi)
 2267      00000000 
 497:src/mcu_msg.c ****     }
 498:src/mcu_msg.c **** }
 2268              		.loc 1 498 0
 2269 002e C3       		ret
 2270              		.cfi_endproc
 2271              	.LFE47:
 2273              		.section	.rodata.cst4,"aM",@progbits,4
 2274              		.align 4
 2275              	.LC0:
 2276 0000 CDCCCC3D 		.long	1036831949
 2277              		.align 4
 2278              	.LC2:
 2279 0004 00002041 		.long	1092616192
 2280              		.text
 2281              	.Letext0:
 2282              		.file 2 "/usr/lib/gcc/x86_64-linux-gnu/7/include/stddef.h"
 2283              		.file 3 "/usr/include/x86_64-linux-gnu/bits/types.h"
 2284              		.file 4 "/usr/include/x86_64-linux-gnu/bits/libio.h"
 2285              		.file 5 "/usr/include/stdio.h"
 2286              		.file 6 "/usr/include/x86_64-linux-gnu/bits/sys_errlist.h"
 2287              		.file 7 "/usr/include/x86_64-linux-gnu/bits/stdint-intn.h"
 2288              		.file 8 "/usr/include/x86_64-linux-gnu/bits/stdint-uintn.h"
 2289              		.file 9 "inc/mcu_msg_cfg.h"
 2290              		.file 10 "inc/mcu_msg.h"
GAS LISTING /tmp/cctOiEvw.s 			page 61


DEFINED SYMBOLS
                            *ABS*:0000000000000000 mcu_msg.c
     /tmp/cctOiEvw.s:6      .text.str_len:0000000000000000 str_len
     /tmp/cctOiEvw.s:35     .text.skip_internal_str:0000000000000000 skip_internal_str
     /tmp/cctOiEvw.s:92     .text.mcu_msg_str_copy_to_chr_arr:0000000000000000 mcu_msg_str_copy_to_chr_arr
     /tmp/cctOiEvw.s:121    .text.mcu_msg_str_copy:0000000000000000 mcu_msg_str_copy
     /tmp/cctOiEvw.s:153    .text.mcu_msg_destroy_string:0000000000000000 mcu_msg_destroy_string
     /tmp/cctOiEvw.s:169    .text.find_keyword:0000000000000000 find_keyword
     /tmp/cctOiEvw.s:604    .text.find_val:0000000000000000 find_val
     /tmp/cctOiEvw.s:938    .text.mcu_msg_destroy:0000000000000000 mcu_msg_destroy
     /tmp/cctOiEvw.s:967    .text.mcu_msg_destroy_obj:0000000000000000 mcu_msg_destroy_obj
     /tmp/cctOiEvw.s:996    .text.mcu_msg_get:0000000000000000 mcu_msg_get
     /tmp/cctOiEvw.s:1195   .text.mcu_msg_parser_get_obj:0000000000000000 mcu_msg_parser_get_obj
     /tmp/cctOiEvw.s:1401   .text.mcu_msg_parser_get_cmd:0000000000000000 mcu_msg_parser_get_cmd
     /tmp/cctOiEvw.s:1479   .text.mcu_msg_parser_get_int:0000000000000000 mcu_msg_parser_get_int
     /tmp/cctOiEvw.s:1701   .text.mcu_msg_parser_get_float:0000000000000000 mcu_msg_parser_get_float
     /tmp/cctOiEvw.s:2021   .text.mcu_msg_parser_get_string:0000000000000000 mcu_msg_parser_get_string
     /tmp/cctOiEvw.s:2195   .text.mcu_msg_string_hnd_create:0000000000000000 mcu_msg_string_hnd_create
     /tmp/cctOiEvw.s:2221   .text.mcu_msg_wrapper_init_obj_queues:0000000000000000 mcu_msg_wrapper_init_obj_queues
     /tmp/cctOiEvw.s:2240   .text.mcu_msg_wrapper_add_string_to_obj:0000000000000000 mcu_msg_wrapper_add_string_to_obj
     /tmp/cctOiEvw.s:2275   .rodata.cst4:0000000000000000 .LC0
     /tmp/cctOiEvw.s:2278   .rodata.cst4:0000000000000004 .LC2

UNDEFINED SYMBOLS
_GLOBAL_OFFSET_TABLE_
__stack_chk_fail
