GAS LISTING /tmp/cc31R1Mf.s 			page 1


   1              		.file	"mcu_msg.c"
   2              		.text
   3              	.Ltext0:
   4              		.section	.text.__str_len,"ax",@progbits
   6              	__str_len:
   7              	.LFB34:
   8              		.file 1 "src/mcu_msg.c"
   1:src/mcu_msg.c **** /**
   2:src/mcu_msg.c ****  * @file msg_parser.c
   3:src/mcu_msg.c ****  * @author Istvan Milak (istvan.milak@gmail.com)
   4:src/mcu_msg.c ****  * @brief Simple message parser for embedded applications, eg serial comm
   5:src/mcu_msg.c ****  * @version 0.1
   6:src/mcu_msg.c ****  * @date 2019-12-15
   7:src/mcu_msg.c ****  * 
   8:src/mcu_msg.c ****  * @copyright Copyright (c) 2019
   9:src/mcu_msg.c ****  * 
  10:src/mcu_msg.c ****  */
  11:src/mcu_msg.c **** #include <stdio.h>
  12:src/mcu_msg.c **** #include "mcu_msg.h"
  13:src/mcu_msg.c **** 
  14:src/mcu_msg.c **** /*Control chars*/
  15:src/mcu_msg.c **** #define __CTRL_MSG_FLAG           '#'
  16:src/mcu_msg.c **** #define __CTRL_START_MSG          '{'
  17:src/mcu_msg.c **** #define __CTRL_STOP_MSG           '}'
  18:src/mcu_msg.c **** #define __CTRL_START_OBJ          '('
  19:src/mcu_msg.c **** #define __CTRL_STOP_OBJ           ')'
  20:src/mcu_msg.c **** #define __CTRL_OBJ_FLAG           '@'
  21:src/mcu_msg.c **** #define __CTRL_KEY_FLAG           '$'
  22:src/mcu_msg.c **** #define __CTRL_KEY_SEP            ';'
  23:src/mcu_msg.c **** #define __CTRL_KEY_EQU            '='
  24:src/mcu_msg.c **** #define __CTRL_CMD_START_FLAG     '<'
  25:src/mcu_msg.c **** #define __CTRL_CMD_STOP_FLAG      '>'
  26:src/mcu_msg.c **** 
  27:src/mcu_msg.c **** 
  28:src/mcu_msg.c **** /*putchar implementation: must be implemented for printing to UART or other output*/
  29:src/mcu_msg.c **** static int (*__msg_putc)(char) = NULL; 
  30:src/mcu_msg.c **** 
  31:src/mcu_msg.c **** /*Static function declarations*/
  32:src/mcu_msg.c **** static inline uint8_t   __is_ctrl_char(char c);
  33:src/mcu_msg.c **** static inline uint8_t   __is_whitespace(char c);
  34:src/mcu_msg.c **** static msg_size_t       __str_len(char *str);
  35:src/mcu_msg.c **** static inline uint8_t   __is_p_in_str(msg_str_t str, char *p);
  36:src/mcu_msg.c **** static char*            __skip_internal_str(char *start);
  37:src/mcu_msg.c **** static msg_str_t        __find_keyword(msg_str_t str, char *keyword, char flagc, char stopc);
  38:src/mcu_msg.c **** static msg_str_t        __find_val(msg_obj_t obj, char *key);
  39:src/mcu_msg.c **** static void             __msg_str_copy_to_chr_arr(char *dest, msg_str_t source);
  40:src/mcu_msg.c **** static void             __msg_str_copy(msg_str_t dest, msg_str_t source);
  41:src/mcu_msg.c **** static void             __msg_print_int(int i);
  42:src/mcu_msg.c **** static void             __msg_print_float(float f, uint8_t prec);
  43:src/mcu_msg.c **** static void             __msg_print_str(msg_str_t str);
  44:src/mcu_msg.c **** static inline char      __define_qmark(msg_str_t str);
  45:src/mcu_msg.c **** 
  46:src/mcu_msg.c **** #if MCU_MSG_USE_BUFFERING
  47:src/mcu_msg.c **** static msg_size_t __msg_putc_to_buff(msg_str_buff_t *buff, char c);
  48:src/mcu_msg.c **** static msg_size_t __msg_print_int_to_buff(msg_str_buff_t *buff, int i);
  49:src/mcu_msg.c **** static msg_size_t __msg_print_float_to_buff(msg_str_buff_t *buff, float f, uint8_t prec);
  50:src/mcu_msg.c **** static msg_size_t __msg_print_str_to_buff(msg_str_buff_t *buff, msg_str_t str);
GAS LISTING /tmp/cc31R1Mf.s 			page 2


  51:src/mcu_msg.c **** #endif
  52:src/mcu_msg.c **** 
  53:src/mcu_msg.c **** #if MCU_MSG_USE_WRAPPER
  54:src/mcu_msg.c **** static void             __msg_wrapper_print_obj(msg_wrap_obj_t obj);
  55:src/mcu_msg.c **** static inline void      __msg_wrapper_print_cmd(msg_wrap_cmd_t cmd);
  56:src/mcu_msg.c **** static void             __msg_wrapper_print_msg(msg_wrap_t msg);
  57:src/mcu_msg.c **** #endif
  58:src/mcu_msg.c **** 
  59:src/mcu_msg.c **** #if (MCU_MSG_USE_WRAPPER && MCU_MSG_USE_BUFFERING)
  60:src/mcu_msg.c **** static msg_size_t           __msg_wrapper_print_obj_to_buff(msg_str_buff_t *buff, msg_wrap_obj_t ob
  61:src/mcu_msg.c **** static inline msg_size_t    __msg_wrapper_print_cmd_to_buff(msg_str_buff_t *buff, msg_wrap_cmd_t cm
  62:src/mcu_msg.c **** static msg_size_t           __msg_wrapper_print_msg_to_buff(msg_str_buff_t *buff, msg_wrap_t msg);
  63:src/mcu_msg.c **** #endif
  64:src/mcu_msg.c **** 
  65:src/mcu_msg.c **** /////////////////////////////////////////////////////////////////////////////////////////////
  66:src/mcu_msg.c **** //                                      Parser functions                                   //
  67:src/mcu_msg.c **** /////////////////////////////////////////////////////////////////////////////////////////////
  68:src/mcu_msg.c **** 
  69:src/mcu_msg.c **** /*destroy string*/
  70:src/mcu_msg.c **** void msg_destroy_string(msg_str_t *str)
  71:src/mcu_msg.c **** {
  72:src/mcu_msg.c ****     str->s = NULL;
  73:src/mcu_msg.c ****     str->len = 0;
  74:src/mcu_msg.c **** }
  75:src/mcu_msg.c **** 
  76:src/mcu_msg.c **** /*destroy message*/
  77:src/mcu_msg.c **** void msg_destroy(msg_t *msg)
  78:src/mcu_msg.c **** {
  79:src/mcu_msg.c ****     msg_destroy_string(&msg->id);
  80:src/mcu_msg.c ****     msg_destroy_string(&msg->content);
  81:src/mcu_msg.c **** }
  82:src/mcu_msg.c **** 
  83:src/mcu_msg.c **** 
  84:src/mcu_msg.c **** /*destroy object*/
  85:src/mcu_msg.c **** void msg_destroy_obj(msg_obj_t *obj)
  86:src/mcu_msg.c **** {
  87:src/mcu_msg.c ****     msg_destroy_string(&obj->id);
  88:src/mcu_msg.c ****     msg_destroy_string(&obj->content);
  89:src/mcu_msg.c **** }
  90:src/mcu_msg.c **** 
  91:src/mcu_msg.c **** /*destroy cmd*/
  92:src/mcu_msg.c **** void msg_destroy_cmd(msg_cmd_t *cmd)
  93:src/mcu_msg.c **** {
  94:src/mcu_msg.c ****     msg_destroy_string(&cmd->cmd);
  95:src/mcu_msg.c **** }
  96:src/mcu_msg.c **** 
  97:src/mcu_msg.c **** msg_str_t msg_init_string(char *str)
  98:src/mcu_msg.c **** {
  99:src/mcu_msg.c ****     msg_str_t res;
 100:src/mcu_msg.c ****     res.s = str;
 101:src/mcu_msg.c ****     res.len = __str_len(res.s);
 102:src/mcu_msg.c ****     return res;
 103:src/mcu_msg.c **** }
 104:src/mcu_msg.c **** 
 105:src/mcu_msg.c **** /**
 106:src/mcu_msg.c ****  * @brief Argument char is control char or not
 107:src/mcu_msg.c ****  * 
GAS LISTING /tmp/cc31R1Mf.s 			page 3


 108:src/mcu_msg.c ****  * @param c char
 109:src/mcu_msg.c ****  * @return uint8_t comparison result
 110:src/mcu_msg.c ****  */
 111:src/mcu_msg.c **** static inline uint8_t __is_ctrl_char(char c)
 112:src/mcu_msg.c **** {
 113:src/mcu_msg.c ****     switch(c) {
 114:src/mcu_msg.c ****         case __CTRL_MSG_FLAG:
 115:src/mcu_msg.c ****         case __CTRL_START_MSG:
 116:src/mcu_msg.c ****         case __CTRL_STOP_MSG:
 117:src/mcu_msg.c ****         case __CTRL_START_OBJ:
 118:src/mcu_msg.c ****         case __CTRL_STOP_OBJ:
 119:src/mcu_msg.c ****         case __CTRL_OBJ_FLAG:
 120:src/mcu_msg.c ****         case __CTRL_KEY_FLAG:
 121:src/mcu_msg.c ****         case __CTRL_KEY_SEP:
 122:src/mcu_msg.c ****         case __CTRL_KEY_EQU:
 123:src/mcu_msg.c ****         case __CTRL_CMD_START_FLAG:
 124:src/mcu_msg.c ****         case __CTRL_CMD_STOP_FLAG:
 125:src/mcu_msg.c ****             return 1;
 126:src/mcu_msg.c ****         default:
 127:src/mcu_msg.c ****             return 0;
 128:src/mcu_msg.c ****     }
 129:src/mcu_msg.c **** }
 130:src/mcu_msg.c **** 
 131:src/mcu_msg.c **** /**
 132:src/mcu_msg.c ****  * @brief Char is a whitespace
 133:src/mcu_msg.c ****  * 
 134:src/mcu_msg.c ****  * @param c char
 135:src/mcu_msg.c ****  * @return uint8_t comparison result
 136:src/mcu_msg.c ****  */
 137:src/mcu_msg.c **** static inline uint8_t __is_whitespace(char c)
 138:src/mcu_msg.c **** {
 139:src/mcu_msg.c ****     switch(c) {
 140:src/mcu_msg.c ****         case  ' ':
 141:src/mcu_msg.c ****         case '\t':
 142:src/mcu_msg.c ****         case '\n':
 143:src/mcu_msg.c ****         case '\v':
 144:src/mcu_msg.c ****         case '\f':
 145:src/mcu_msg.c ****         case '\r':
 146:src/mcu_msg.c ****             return 1;
 147:src/mcu_msg.c ****         default:
 148:src/mcu_msg.c ****             return 0;
 149:src/mcu_msg.c ****     }
 150:src/mcu_msg.c **** }
 151:src/mcu_msg.c **** 
 152:src/mcu_msg.c **** /**
 153:src/mcu_msg.c ****  * @brief Argument char is valid keyword char or not
 154:src/mcu_msg.c ****  * 
 155:src/mcu_msg.c ****  * @param c char
 156:src/mcu_msg.c ****  * @return uint8_t comparison result
 157:src/mcu_msg.c ****  */
 158:src/mcu_msg.c **** 
 159:src/mcu_msg.c **** #define is_valid_keyword_char(c)        ((c == '_') || (c >= 'a' && c <= 'z') || (c >= 'A' && c <= 
 160:src/mcu_msg.c ****                                         (c >= '0' && c <= '9'))
 161:src/mcu_msg.c **** 
 162:src/mcu_msg.c **** /**
 163:src/mcu_msg.c ****  * @brief strlen implementation for internal usage
 164:src/mcu_msg.c ****  * 
GAS LISTING /tmp/cc31R1Mf.s 			page 4


 165:src/mcu_msg.c ****  * @param str string 
 166:src/mcu_msg.c ****  * @return msg_size_t length of string 
 167:src/mcu_msg.c ****  */
 168:src/mcu_msg.c **** static msg_size_t __str_len(char *str)
 169:src/mcu_msg.c **** {
   9              		.loc 1 169 0
  10              		.cfi_startproc
  11              	.LVL0:
 170:src/mcu_msg.c ****     char *p = str;
  12              		.loc 1 170 0
  13 0000 4889F8   		movq	%rdi, %rax
 171:src/mcu_msg.c ****     while(*p)
  14              		.loc 1 171 0
  15 0003 EB04     		jmp	.L2
  16              	.LVL1:
  17              	.L3:
 172:src/mcu_msg.c ****         p++;
  18              		.loc 1 172 0
  19 0005 4883C001 		addq	$1, %rax
  20              	.LVL2:
  21              	.L2:
 171:src/mcu_msg.c ****     while(*p)
  22              		.loc 1 171 0
  23 0009 803800   		cmpb	$0, (%rax)
  24 000c 75F7     		jne	.L3
 173:src/mcu_msg.c ****     return (p - str);
  25              		.loc 1 173 0
  26 000e 4829F8   		subq	%rdi, %rax
  27              	.LVL3:
 174:src/mcu_msg.c **** }
  28              		.loc 1 174 0
  29 0011 C3       		ret
  30              		.cfi_endproc
  31              	.LFE34:
  33              		.section	.text.__skip_internal_str,"ax",@progbits
  35              	__skip_internal_str:
  36              	.LFB36:
 175:src/mcu_msg.c **** 
 176:src/mcu_msg.c **** /**
 177:src/mcu_msg.c ****  * @brief Deciding char pointer is in the string buffer or not
 178:src/mcu_msg.c ****  * 
 179:src/mcu_msg.c ****  * @param str string buffer with start pointer and length
 180:src/mcu_msg.c ****  * @param p current pointer
 181:src/mcu_msg.c ****  * @return uint8_t return boole result
 182:src/mcu_msg.c ****  */
 183:src/mcu_msg.c **** static inline uint8_t __is_p_in_str(msg_str_t str, char *p)
 184:src/mcu_msg.c **** {
 185:src/mcu_msg.c ****     return ((p - str.s) < str.len);
 186:src/mcu_msg.c **** }
 187:src/mcu_msg.c **** 
 188:src/mcu_msg.c **** /**
 189:src/mcu_msg.c ****  * @brief Skiping internal string from start qoution mark to end qmark
 190:src/mcu_msg.c ****  * 
 191:src/mcu_msg.c ****  * @param start start pointer
 192:src/mcu_msg.c ****  * @return char* return end pointer
 193:src/mcu_msg.c ****  */
 194:src/mcu_msg.c **** static char *__skip_internal_str(char *start)
GAS LISTING /tmp/cc31R1Mf.s 			page 5


 195:src/mcu_msg.c **** {
  37              		.loc 1 195 0
  38              		.cfi_startproc
  39              	.LVL4:
 196:src/mcu_msg.c ****     char *p = start;
 197:src/mcu_msg.c ****     char qmark = *start;
  40              		.loc 1 197 0
  41 0000 0FB60F   		movzbl	(%rdi), %ecx
  42              	.LVL5:
 198:src/mcu_msg.c ****     if((qmark != '\'' && qmark != '"')) return NULL;
  43              		.loc 1 198 0
  44 0003 80F927   		cmpb	$39, %cl
  45 0006 0F95C2   		setne	%dl
  46 0009 80F922   		cmpb	$34, %cl
  47 000c 0F95C0   		setne	%al
  48 000f 84C2     		testb	%al, %dl
  49 0011 751E     		jne	.L9
 199:src/mcu_msg.c ****     ++p;
  50              		.loc 1 199 0
  51 0013 488D4701 		leaq	1(%rdi), %rax
  52              	.LVL6:
 200:src/mcu_msg.c ****     while(*p && (*p != qmark)) {
  53              		.loc 1 200 0
  54 0017 EB04     		jmp	.L6
  55              	.L8:
 201:src/mcu_msg.c ****         p++;
  56              		.loc 1 201 0
  57 0019 4883C001 		addq	$1, %rax
  58              	.LVL7:
  59              	.L6:
 200:src/mcu_msg.c ****     while(*p && (*p != qmark)) {
  60              		.loc 1 200 0
  61 001d 0FB610   		movzbl	(%rax), %edx
  62 0020 84D2     		testb	%dl, %dl
  63 0022 7404     		je	.L7
 200:src/mcu_msg.c ****     while(*p && (*p != qmark)) {
  64              		.loc 1 200 0 is_stmt 0 discriminator 1
  65 0024 38CA     		cmpb	%cl, %dl
  66 0026 75F1     		jne	.L8
  67              	.L7:
 202:src/mcu_msg.c ****     }
 203:src/mcu_msg.c ****     
 204:src/mcu_msg.c ****     return *p ? ++p : NULL;
  68              		.loc 1 204 0 is_stmt 1
  69 0028 84D2     		testb	%dl, %dl
  70 002a 740B     		je	.L10
  71              		.loc 1 204 0 is_stmt 0 discriminator 1
  72 002c 4883C001 		addq	$1, %rax
  73              	.LVL8:
  74 0030 C3       		ret
  75              	.LVL9:
  76              	.L9:
 198:src/mcu_msg.c ****     ++p;
  77              		.loc 1 198 0 is_stmt 1
  78 0031 B8000000 		movl	$0, %eax
  78      00
  79 0036 C3       		ret
GAS LISTING /tmp/cc31R1Mf.s 			page 6


  80              	.LVL10:
  81              	.L10:
  82              		.loc 1 204 0
  83 0037 B8000000 		movl	$0, %eax
  83      00
  84              	.LVL11:
 205:src/mcu_msg.c **** }
  85              		.loc 1 205 0
  86 003c C3       		ret
  87              		.cfi_endproc
  88              	.LFE36:
  90              		.section	.text.__msg_str_copy_to_chr_arr,"ax",@progbits
  92              	__msg_str_copy_to_chr_arr:
  93              	.LFB45:
 206:src/mcu_msg.c **** 
 207:src/mcu_msg.c **** /**
 208:src/mcu_msg.c ****  * @brief find the position of the keyword int message string (first occurance)
 209:src/mcu_msg.c ****  * if the keyword found in the message string, the next (none space) char must be stopc
 210:src/mcu_msg.c ****  * @param str source string
 211:src/mcu_msg.c ****  * @param keyword keword has to be found
 212:src/mcu_msg.c ****  * @param flagc flag, eg. '@', '$'
 213:src/mcu_msg.c ****  * @param stopc stop character eg. '(', '='
 214:src/mcu_msg.c ****  * @return msg_str_t location and size of the keyword (whitout flag) or NULL if keyword not found
 215:src/mcu_msg.c ****  */
 216:src/mcu_msg.c **** static msg_str_t __find_keyword(msg_str_t str, char *keyword, char flagc, char stopc)
 217:src/mcu_msg.c **** {
 218:src/mcu_msg.c **** 
 219:src/mcu_msg.c ****     msg_str_t res;
 220:src/mcu_msg.c ****     char *p = str.s;
 221:src/mcu_msg.c ****     uint8_t equal;
 222:src/mcu_msg.c ****     msg_size_t i;
 223:src/mcu_msg.c ****     res.len = __str_len(keyword);
 224:src/mcu_msg.c ****     while(__is_p_in_str(str, p) && *p) {
 225:src/mcu_msg.c ****         if(*p == '\'' || *p == '"') { //skip internal strings
 226:src/mcu_msg.c ****             p = __skip_internal_str(p);
 227:src/mcu_msg.c ****         }
 228:src/mcu_msg.c ****         if(__is_p_in_str(str, p)  && *p == flagc) { // if flag char detected start the analization
 229:src/mcu_msg.c ****             res.s = p + 1;
 230:src/mcu_msg.c ****             equal = 1;
 231:src/mcu_msg.c ****             for(i = 0; __is_p_in_str(str, res.s + i) && i < res.len; i++) { // if not equal during 
 232:src/mcu_msg.c ****                 if((*(res.s + i) != *(keyword + i)) || __is_ctrl_char(*(res.s + i)) || 
 233:src/mcu_msg.c ****                                     !is_valid_keyword_char(*(res.s + i))) {
 234:src/mcu_msg.c ****                     equal = 0;
 235:src/mcu_msg.c ****                     break;
 236:src/mcu_msg.c ****                 }
 237:src/mcu_msg.c ****             }
 238:src/mcu_msg.c ****             while(__is_p_in_str(str, res.s + i) && __is_whitespace(*(res.s + i))) i++; //skip space
 239:src/mcu_msg.c ****             if(equal && *(res.s + i) == stopc) { //if the stop char is the next, whitout spaces, re
 240:src/mcu_msg.c ****                 return res;
 241:src/mcu_msg.c ****             } else {
 242:src/mcu_msg.c ****                 p = res.s + i; // if not matched, return continue the iteration from last checked c
 243:src/mcu_msg.c ****             }
 244:src/mcu_msg.c ****         }
 245:src/mcu_msg.c ****         p++;
 246:src/mcu_msg.c ****     }
 247:src/mcu_msg.c ****     // if not found (loop finished whitout match) return with a destroyed string
 248:src/mcu_msg.c ****     msg_destroy_string(&res);
GAS LISTING /tmp/cc31R1Mf.s 			page 7


 249:src/mcu_msg.c ****     return res;
 250:src/mcu_msg.c **** }
 251:src/mcu_msg.c **** 
 252:src/mcu_msg.c **** 
 253:src/mcu_msg.c **** /**
 254:src/mcu_msg.c ****  * @brief Getting the value start position for particular key in message object
 255:src/mcu_msg.c ****  * 
 256:src/mcu_msg.c ****  * @param obj message object
 257:src/mcu_msg.c ****  * @param key key for search
 258:src/mcu_msg.c ****  * @return char* location of the value start point or NULL if the key was not found
 259:src/mcu_msg.c ****  */
 260:src/mcu_msg.c **** 
 261:src/mcu_msg.c **** static msg_str_t __find_val(msg_obj_t obj, char *key)
 262:src/mcu_msg.c **** {
 263:src/mcu_msg.c ****     msg_str_t res  = __find_keyword(obj.content, key, __CTRL_KEY_FLAG, __CTRL_KEY_EQU); //object st
 264:src/mcu_msg.c ****     char *p;
 265:src/mcu_msg.c ****     if(res.s == NULL) { //if keyword not found, return with NULLs and 0 lengths
 266:src/mcu_msg.c ****         msg_destroy_string(&res);
 267:src/mcu_msg.c ****         return res;
 268:src/mcu_msg.c ****     }
 269:src/mcu_msg.c ****     if(*res.s != __CTRL_KEY_EQU) { // move pointer to 'equal'
 270:src/mcu_msg.c ****         while(__is_p_in_str(obj.content, res.s + 1) && *res.s != __CTRL_KEY_EQU) res.s++;
 271:src/mcu_msg.c ****     }
 272:src/mcu_msg.c ****     res.s++;
 273:src/mcu_msg.c ****     while(__is_p_in_str(obj.content, res.s) && __is_whitespace(*res.s)) res.s++; //skip spaces afte
 274:src/mcu_msg.c **** 
 275:src/mcu_msg.c ****     p = res.s;
 276:src/mcu_msg.c ****     while(__is_p_in_str(obj.content, p) && !__is_whitespace(*p) && !__is_ctrl_char(*p)) p++; //calc
 277:src/mcu_msg.c ****     res.len = p - res.s;
 278:src/mcu_msg.c **** 
 279:src/mcu_msg.c ****     return res;
 280:src/mcu_msg.c **** }
 281:src/mcu_msg.c **** 
 282:src/mcu_msg.c **** 
 283:src/mcu_msg.c **** /*get message*/
 284:src/mcu_msg.c **** msg_t msg_get(char *raw_str, char *id, msg_size_t len)
 285:src/mcu_msg.c **** {
 286:src/mcu_msg.c ****     msg_t res;
 287:src/mcu_msg.c ****     res.content.s = raw_str;
 288:src/mcu_msg.c ****     res.content.len = len;
 289:src/mcu_msg.c ****     res.id = __find_keyword(res.content, id, __CTRL_MSG_FLAG, __CTRL_START_MSG); //object start wit
 290:src/mcu_msg.c ****     char *p;
 291:src/mcu_msg.c ****     if(res.id.s == NULL) { //if keyword not found, return with NULLs and 0 lengths
 292:src/mcu_msg.c ****         msg_destroy(&res);
 293:src/mcu_msg.c ****         return res;
 294:src/mcu_msg.c ****     }
 295:src/mcu_msg.c ****     p = res.id.s + res.id.len; //init pointer to end of the id
 296:src/mcu_msg.c ****     if (*p != __CTRL_START_MSG) { // if the next char is not START_MSG, move to the start flag
 297:src/mcu_msg.c ****         while(__is_p_in_str(res.content, p + 1) && *p != __CTRL_START_MSG) p++;
 298:src/mcu_msg.c ****     }
 299:src/mcu_msg.c ****     res.content.s = ++p; // set content string pointer to the current pos
 300:src/mcu_msg.c ****     while(__is_p_in_str(res.content, p) && *p != __CTRL_STOP_MSG) { //calc length
 301:src/mcu_msg.c ****         p++;
 302:src/mcu_msg.c ****     }
 303:src/mcu_msg.c ****     res.content.len = p - res.content.s;
 304:src/mcu_msg.c ****     return res;
 305:src/mcu_msg.c **** }
GAS LISTING /tmp/cc31R1Mf.s 			page 8


 306:src/mcu_msg.c **** 
 307:src/mcu_msg.c **** 
 308:src/mcu_msg.c **** 
 309:src/mcu_msg.c **** msg_obj_t msg_parser_get_obj(msg_t msg, char *id)
 310:src/mcu_msg.c **** {
 311:src/mcu_msg.c ****     msg_obj_t res;
 312:src/mcu_msg.c ****     res.id = __find_keyword(msg.content, id, __CTRL_OBJ_FLAG, __CTRL_START_OBJ); //object start wit
 313:src/mcu_msg.c ****     char *p;
 314:src/mcu_msg.c ****     if(res.id.s == NULL) { //if keyword not found, return with NULLs and 0 lengths
 315:src/mcu_msg.c ****         msg_destroy_obj(&res);
 316:src/mcu_msg.c ****         return res;
 317:src/mcu_msg.c ****     }
 318:src/mcu_msg.c **** 
 319:src/mcu_msg.c ****     p = res.id.s + res.id.len;
 320:src/mcu_msg.c ****     if (*p != __CTRL_START_OBJ) {
 321:src/mcu_msg.c ****         while(__is_p_in_str(msg.content, p + 1) && *p != __CTRL_START_OBJ) p++;
 322:src/mcu_msg.c ****     }
 323:src/mcu_msg.c ****     res.content.s = ++p;
 324:src/mcu_msg.c ****     while(__is_p_in_str(msg.content, p) && *p != __CTRL_STOP_OBJ) {
 325:src/mcu_msg.c ****         p++;
 326:src/mcu_msg.c ****     }
 327:src/mcu_msg.c ****     res.content.len = p - res.content.s;
 328:src/mcu_msg.c ****     return res;
 329:src/mcu_msg.c **** }
 330:src/mcu_msg.c **** 
 331:src/mcu_msg.c **** msg_cmd_t msg_parser_get_cmd(msg_t msg, char *cmd_id)
 332:src/mcu_msg.c **** {
 333:src/mcu_msg.c ****     msg_cmd_t res;
 334:src/mcu_msg.c ****     // return with the find result
 335:src/mcu_msg.c ****     res.cmd = __find_keyword(msg.content, cmd_id, __CTRL_CMD_START_FLAG, __CTRL_CMD_STOP_FLAG);
 336:src/mcu_msg.c ****     return res;
 337:src/mcu_msg.c **** }
 338:src/mcu_msg.c **** 
 339:src/mcu_msg.c **** int8_t msg_parser_get_int(int *res_val, msg_obj_t obj, char *key)
 340:src/mcu_msg.c **** {
 341:src/mcu_msg.c ****     msg_str_t sval = __find_val(obj, key);
 342:src/mcu_msg.c ****     msg_size_t i;
 343:src/mcu_msg.c ****     unsigned m = 1;
 344:src/mcu_msg.c ****     int sign = 1;
 345:src/mcu_msg.c ****     int8_t res = 0; // result of function
 346:src/mcu_msg.c **** 
 347:src/mcu_msg.c ****     if(sval.s == NULL)  //key nout found
 348:src/mcu_msg.c ****         return -1;
 349:src/mcu_msg.c **** 
 350:src/mcu_msg.c **** 
 351:src/mcu_msg.c ****     switch(*sval.s) { //if the sign is defined, set the sign variable and increment the pointer
 352:src/mcu_msg.c ****         case '+':
 353:src/mcu_msg.c ****             sign = 1;
 354:src/mcu_msg.c ****             sval.s++;
 355:src/mcu_msg.c ****         break;
 356:src/mcu_msg.c ****         
 357:src/mcu_msg.c ****         case '-':
 358:src/mcu_msg.c ****             sign = -1;
 359:src/mcu_msg.c ****             sval.s++;
 360:src/mcu_msg.c ****         break;
 361:src/mcu_msg.c ****         
 362:src/mcu_msg.c ****         default:
GAS LISTING /tmp/cc31R1Mf.s 			page 9


 363:src/mcu_msg.c ****         break;
 364:src/mcu_msg.c ****     }
 365:src/mcu_msg.c **** 
 366:src/mcu_msg.c ****     for(i = 0; __is_p_in_str(obj.content, sval.s) && !__is_whitespace(*sval.s) && *sval.s != __CTRL
 367:src/mcu_msg.c ****         if(*sval.s < '0' || *sval.s > '9') {    // if non valid number, return with error
 368:src/mcu_msg.c ****             return -1;
 369:src/mcu_msg.c ****         }
 370:src/mcu_msg.c ****     }
 371:src/mcu_msg.c **** 
 372:src/mcu_msg.c ****     *res_val = 0;
 373:src/mcu_msg.c ****     --sval.s;
 374:src/mcu_msg.c ****     while(i--) { //convert value to integer
 375:src/mcu_msg.c ****         *res_val += (*sval.s-- - '0') * m;
 376:src/mcu_msg.c ****         m *= 10;
 377:src/mcu_msg.c ****         res++;
 378:src/mcu_msg.c ****     }
 379:src/mcu_msg.c ****     
 380:src/mcu_msg.c ****     *res_val *= sign; //corrigate with the sign
 381:src/mcu_msg.c **** 
 382:src/mcu_msg.c ****     return res; // return with the digit count, if correct
 383:src/mcu_msg.c **** }
 384:src/mcu_msg.c **** 
 385:src/mcu_msg.c **** 
 386:src/mcu_msg.c **** int8_t msg_parser_get_float(float *res_val, msg_obj_t obj, char *key)
 387:src/mcu_msg.c **** {
 388:src/mcu_msg.c ****     msg_str_t sval = __find_val(obj, key);
 389:src/mcu_msg.c ****     char *pf;
 390:src/mcu_msg.c ****     msg_size_t i;
 391:src/mcu_msg.c ****     unsigned m = 1;
 392:src/mcu_msg.c ****     float mf = 0.1;
 393:src/mcu_msg.c ****     int sign = 1;
 394:src/mcu_msg.c ****     int8_t res = 0; // result of function
 395:src/mcu_msg.c **** 
 396:src/mcu_msg.c ****     if(sval.s == NULL)  //key nout found
 397:src/mcu_msg.c ****         return -1;
 398:src/mcu_msg.c **** 
 399:src/mcu_msg.c **** 
 400:src/mcu_msg.c ****     switch(*sval.s) { //if the sign is defined, set the sign variable and increment the pointer
 401:src/mcu_msg.c ****         case '+':
 402:src/mcu_msg.c ****             sign = 1;
 403:src/mcu_msg.c ****             sval.s++;
 404:src/mcu_msg.c ****         break;
 405:src/mcu_msg.c ****         
 406:src/mcu_msg.c ****         case '-':
 407:src/mcu_msg.c ****             sign = -1;
 408:src/mcu_msg.c ****             sval.s++;
 409:src/mcu_msg.c ****         break;
 410:src/mcu_msg.c ****         
 411:src/mcu_msg.c ****         default:
 412:src/mcu_msg.c ****         break;
 413:src/mcu_msg.c ****     }
 414:src/mcu_msg.c **** 
 415:src/mcu_msg.c ****     //move p to dec separator or end of the value
 416:src/mcu_msg.c ****     for(i = 0; __is_p_in_str(obj.content, sval.s) && !__is_whitespace(*sval.s) && *sval.s != __CTRL
 417:src/mcu_msg.c ****         if((*sval.s < '0' || *sval.s > '9')) {    // if non valid number, return with error
 418:src/mcu_msg.c ****             return -1;
 419:src/mcu_msg.c ****         }
GAS LISTING /tmp/cc31R1Mf.s 			page 10


 420:src/mcu_msg.c ****     }
 421:src/mcu_msg.c **** 
 422:src/mcu_msg.c ****     *res_val = 0.0;
 423:src/mcu_msg.c ****     
 424:src/mcu_msg.c ****     if(*sval.s == '.') {
 425:src/mcu_msg.c ****         pf = sval.s + 1;
 426:src/mcu_msg.c ****         res++;
 427:src/mcu_msg.c ****     } else {
 428:src/mcu_msg.c ****         pf = NULL;
 429:src/mcu_msg.c ****     }
 430:src/mcu_msg.c **** 
 431:src/mcu_msg.c ****     --sval.s;
 432:src/mcu_msg.c ****     while(i--) { // convert integer part
 433:src/mcu_msg.c ****         *res_val += (*sval.s-- - '0') * m;
 434:src/mcu_msg.c ****         m *= 10;
 435:src/mcu_msg.c ****         res++;
 436:src/mcu_msg.c ****     }
 437:src/mcu_msg.c ****     
 438:src/mcu_msg.c ****     // calculate floating point section after '.' (if there is)
 439:src/mcu_msg.c ****     for(; pf != NULL && __is_p_in_str(obj.content, pf) && !__is_whitespace(*pf) && *pf != __CTRL_KE
 440:src/mcu_msg.c ****         if(*pf < '0' || *pf > '9') {    // if non valid number, return with error
 441:src/mcu_msg.c ****             return -1;
 442:src/mcu_msg.c ****         }
 443:src/mcu_msg.c ****         *res_val += (*pf - '0') * mf;
 444:src/mcu_msg.c ****         mf /= 10;
 445:src/mcu_msg.c ****         res++; 
 446:src/mcu_msg.c ****     }
 447:src/mcu_msg.c **** 
 448:src/mcu_msg.c ****     *res_val *= sign; //corrigate with the sign
 449:src/mcu_msg.c **** 
 450:src/mcu_msg.c ****     return res; // return with the digit count + '.' separator, if correct
 451:src/mcu_msg.c **** }
 452:src/mcu_msg.c **** 
 453:src/mcu_msg.c **** 
 454:src/mcu_msg.c **** 
 455:src/mcu_msg.c **** msg_str_t msg_parser_get_string(msg_obj_t obj, char *key)
 456:src/mcu_msg.c **** {
 457:src/mcu_msg.c ****     msg_str_t res = __find_val(obj, key);
 458:src/mcu_msg.c ****     char qmark;
 459:src/mcu_msg.c ****     char *p;
 460:src/mcu_msg.c **** 
 461:src/mcu_msg.c ****     if(res.s == NULL) {
 462:src/mcu_msg.c ****         msg_destroy_string(&res);
 463:src/mcu_msg.c ****         return res;
 464:src/mcu_msg.c ****     }
 465:src/mcu_msg.c ****         
 466:src/mcu_msg.c ****     qmark = *res.s;
 467:src/mcu_msg.c **** 
 468:src/mcu_msg.c ****     if(qmark != '\'' && qmark != '"') { // qmark not found, this is not a string
 469:src/mcu_msg.c ****         msg_destroy_string(&res);
 470:src/mcu_msg.c ****         return res;
 471:src/mcu_msg.c ****     }
 472:src/mcu_msg.c **** 
 473:src/mcu_msg.c ****     p = ++res.s;
 474:src/mcu_msg.c ****     while(__is_p_in_str(obj.content, p) && *p != qmark) { // calc len
 475:src/mcu_msg.c ****         p++;
 476:src/mcu_msg.c ****     }
GAS LISTING /tmp/cc31R1Mf.s 			page 11


 477:src/mcu_msg.c ****     res.len = p - res.s;
 478:src/mcu_msg.c ****     return res;
 479:src/mcu_msg.c **** }
 480:src/mcu_msg.c **** 
 481:src/mcu_msg.c **** /**
 482:src/mcu_msg.c ****  * @brief Default string copy to char array
 483:src/mcu_msg.c ****  * 
 484:src/mcu_msg.c ****  * @param dest destination char array
 485:src/mcu_msg.c ****  * @param source source string type
 486:src/mcu_msg.c ****  */
 487:src/mcu_msg.c **** static void __msg_str_copy_to_chr_arr(char *dest, msg_str_t source)
 488:src/mcu_msg.c **** {
  94              		.loc 1 488 0
  95              		.cfi_startproc
  96              	.LVL12:
 489:src/mcu_msg.c ****     msg_size_t i;
 490:src/mcu_msg.c ****     for(i = 0; i < source.len; *(dest + i) = *(source.s + i), i++);
  97              		.loc 1 490 0
  98 0000 B8000000 		movl	$0, %eax
  98      00
  99 0005 EB0F     		jmp	.L12
 100              	.LVL13:
 101              	.L13:
 102              		.loc 1 490 0 is_stmt 0 discriminator 3
 103 0007 0FB7C8   		movzwl	%ax, %ecx
 104 000a 440FB604 		movzbl	(%rsi,%rcx), %r8d
 104      0E
 105 000f 4488040F 		movb	%r8b, (%rdi,%rcx)
 106 0013 83C001   		addl	$1, %eax
 107              	.LVL14:
 108              	.L12:
 109              		.loc 1 490 0 discriminator 1
 110 0016 6639C2   		cmpw	%ax, %dx
 111 0019 77EC     		ja	.L13
 491:src/mcu_msg.c **** }
 112              		.loc 1 491 0 is_stmt 1
 113 001b F3C3     		rep ret
 114              		.cfi_endproc
 115              	.LFE45:
 117              		.section	.text.__msg_str_copy,"ax",@progbits
 119              	__msg_str_copy:
 120              	.LFB46:
 492:src/mcu_msg.c **** 
 493:src/mcu_msg.c **** /**
 494:src/mcu_msg.c ****  * @brief Default string copy to string type
 495:src/mcu_msg.c ****  * 
 496:src/mcu_msg.c ****  * @param dest destination string type
 497:src/mcu_msg.c ****  * @param source source string type
 498:src/mcu_msg.c ****  */
 499:src/mcu_msg.c **** static void __msg_str_copy(msg_str_t dest, msg_str_t source)
 500:src/mcu_msg.c **** {
 121              		.loc 1 500 0
 122              		.cfi_startproc
 123              	.LVL15:
 501:src/mcu_msg.c ****     msg_size_t i;
 502:src/mcu_msg.c ****     for(i = 0, dest.len = source.len; i < source.len; *(dest.s + i) = *(source.s + i), i++);
 124              		.loc 1 502 0
GAS LISTING /tmp/cc31R1Mf.s 			page 12


 125 0000 B8000000 		movl	$0, %eax
 125      00
 126 0005 EB0F     		jmp	.L15
 127              	.LVL16:
 128              	.L16:
 129              		.loc 1 502 0 is_stmt 0 discriminator 3
 130 0007 0FB7F0   		movzwl	%ax, %esi
 131              	.LVL17:
 132 000a 440FB604 		movzbl	(%rdx,%rsi), %r8d
 132      32
 133 000f 44880437 		movb	%r8b, (%rdi,%rsi)
 134 0013 83C001   		addl	$1, %eax
 135              	.LVL18:
 136              	.L15:
 137              		.loc 1 502 0 discriminator 1
 138 0016 6639C1   		cmpw	%ax, %cx
 139 0019 77EC     		ja	.L16
 503:src/mcu_msg.c **** }
 140              		.loc 1 503 0 is_stmt 1
 141 001b F3C3     		rep ret
 142              		.cfi_endproc
 143              	.LFE46:
 145              		.section	.text.__msg_print_int,"ax",@progbits
 147              	__msg_print_int:
 148              	.LFB47:
 504:src/mcu_msg.c **** 
 505:src/mcu_msg.c **** static void __msg_print_int(int i)
 506:src/mcu_msg.c **** {
 149              		.loc 1 506 0
 150              		.cfi_startproc
 151              	.LVL19:
 152 0000 4155     		pushq	%r13
 153              	.LCFI0:
 154              		.cfi_def_cfa_offset 16
 155              		.cfi_offset 13, -16
 156 0002 4154     		pushq	%r12
 157              	.LCFI1:
 158              		.cfi_def_cfa_offset 24
 159              		.cfi_offset 12, -24
 160 0004 55       		pushq	%rbp
 161              	.LCFI2:
 162              		.cfi_def_cfa_offset 32
 163              		.cfi_offset 6, -32
 164 0005 53       		pushq	%rbx
 165              	.LCFI3:
 166              		.cfi_def_cfa_offset 40
 167              		.cfi_offset 3, -40
 168 0006 4883EC08 		subq	$8, %rsp
 169              	.LCFI4:
 170              		.cfi_def_cfa_offset 48
 507:src/mcu_msg.c ****     int8_t sign = i < 0 ? -1 : 1;
 171              		.loc 1 507 0
 172 000a 85FF     		testl	%edi, %edi
 173 000c 782A     		js	.L33
 174 000e 41BD0100 		movl	$1, %r13d
 174      0000
 175              	.L18:
GAS LISTING /tmp/cc31R1Mf.s 			page 13


 176              	.LVL20:
 508:src/mcu_msg.c ****     //                     int32->2147483647  int16:32767
 509:src/mcu_msg.c ****     long div;
 510:src/mcu_msg.c ****     char dig;
 511:src/mcu_msg.c **** 
 512:src/mcu_msg.c ****     if(!__msg_putc) //if function pointer is NULL, return
 177              		.loc 1 512 0 discriminator 4
 178 0014 488B0500 		movq	__msg_putc(%rip), %rax
 178      000000
 179 001b 4885C0   		testq	%rax, %rax
 180 001e 740D     		je	.L17
 181 0020 89FD     		movl	%edi, %ebp
 513:src/mcu_msg.c ****         return;
 514:src/mcu_msg.c ****     if(!i) {
 182              		.loc 1 514 0
 183 0022 85FF     		testl	%edi, %edi
 184 0024 751A     		jne	.L20
 515:src/mcu_msg.c ****         __msg_putc('0');
 185              		.loc 1 515 0
 186 0026 BF300000 		movl	$48, %edi
 186      00
 187              	.LVL21:
 188 002b FFD0     		call	*%rax
 189              	.LVL22:
 190              	.L17:
 516:src/mcu_msg.c ****         return;
 517:src/mcu_msg.c ****     }
 518:src/mcu_msg.c **** 
 519:src/mcu_msg.c ****     switch(sign) {
 520:src/mcu_msg.c ****         case -1: div = sizeof(int) >= 4 ? -1000000000L : -10000L; __msg_putc('-'); break;
 521:src/mcu_msg.c ****         default: div = sizeof(int) >= 4 ?  1000000000L :  10000L; break;
 522:src/mcu_msg.c ****     }
 523:src/mcu_msg.c ****     while(div) {
 524:src/mcu_msg.c ****         if(sign == -1 ? (i > div) : (i < div)) {
 525:src/mcu_msg.c ****             div /= 10;
 526:src/mcu_msg.c ****             continue;
 527:src/mcu_msg.c ****         }
 528:src/mcu_msg.c ****         dig = '0' + ((i / div) % 10);
 529:src/mcu_msg.c ****         __msg_putc(dig);
 530:src/mcu_msg.c ****         div /= 10;
 531:src/mcu_msg.c ****     }
 532:src/mcu_msg.c ****     
 533:src/mcu_msg.c **** }
 191              		.loc 1 533 0
 192 002d 4883C408 		addq	$8, %rsp
 193              	.LCFI5:
 194              		.cfi_remember_state
 195              		.cfi_def_cfa_offset 40
 196 0031 5B       		popq	%rbx
 197              	.LCFI6:
 198              		.cfi_def_cfa_offset 32
 199 0032 5D       		popq	%rbp
 200              	.LCFI7:
 201              		.cfi_def_cfa_offset 24
 202 0033 415C     		popq	%r12
 203              	.LCFI8:
 204              		.cfi_def_cfa_offset 16
GAS LISTING /tmp/cc31R1Mf.s 			page 14


 205 0035 415D     		popq	%r13
 206              	.LCFI9:
 207              		.cfi_def_cfa_offset 8
 208              	.LVL23:
 209 0037 C3       		ret
 210              	.LVL24:
 211              	.L33:
 212              	.LCFI10:
 213              		.cfi_restore_state
 507:src/mcu_msg.c ****     //                     int32->2147483647  int16:32767
 214              		.loc 1 507 0
 215 0038 41BDFFFF 		movl	$-1, %r13d
 215      FFFF
 216 003e EBD4     		jmp	.L18
 217              	.LVL25:
 218              	.L20:
 519:src/mcu_msg.c ****         case -1: div = sizeof(int) >= 4 ? -1000000000L : -10000L; __msg_putc('-'); break;
 219              		.loc 1 519 0
 220 0040 4180FDFF 		cmpb	$-1, %r13b
 221 0044 0F85AB00 		jne	.L31
 221      0000
 222              	.LVL26:
 520:src/mcu_msg.c ****         default: div = sizeof(int) >= 4 ?  1000000000L :  10000L; break;
 223              		.loc 1 520 0
 224 004a BF2D0000 		movl	$45, %edi
 224      00
 225              	.LVL27:
 226 004f FFD0     		call	*%rax
 227              	.LVL28:
 228 0051 48C7C300 		movq	$-1000000000, %rbx
 228      3665C4
 229 0058 EB61     		jmp	.L27
 230              	.LVL29:
 231              	.L35:
 524:src/mcu_msg.c ****             div /= 10;
 232              		.loc 1 524 0 discriminator 1
 233 005a 4863C5   		movslq	%ebp, %rax
 234 005d 4839D8   		cmpq	%rbx, %rax
 235 0060 0F9FC0   		setg	%al
 236              	.L24:
 524:src/mcu_msg.c ****             div /= 10;
 237              		.loc 1 524 0 is_stmt 0 discriminator 4
 238 0063 84C0     		testb	%al, %al
 239 0065 756E     		jne	.L34
 528:src/mcu_msg.c ****         __msg_putc(dig);
 240              		.loc 1 528 0 is_stmt 1
 241 0067 4863C5   		movslq	%ebp, %rax
 242 006a 4899     		cqto
 243 006c 48F7FB   		idivq	%rbx
 244 006f 4889C1   		movq	%rax, %rcx
 245 0072 49BC6766 		movabsq	$7378697629483820647, %r12
 245      66666666 
 245      6666
 246 007c 49F7EC   		imulq	%r12
 247 007f 48C1FA02 		sarq	$2, %rdx
 248 0083 4889C8   		movq	%rcx, %rax
 249 0086 48C1F83F 		sarq	$63, %rax
GAS LISTING /tmp/cc31R1Mf.s 			page 15


 250 008a 4829C2   		subq	%rax, %rdx
 251 008d 488D1492 		leaq	(%rdx,%rdx,4), %rdx
 252 0091 488D0412 		leaq	(%rdx,%rdx), %rax
 253 0095 4829C1   		subq	%rax, %rcx
 254 0098 4889CA   		movq	%rcx, %rdx
 255 009b 83C230   		addl	$48, %edx
 256              	.LVL30:
 529:src/mcu_msg.c ****         div /= 10;
 257              		.loc 1 529 0
 258 009e 0FBEFA   		movsbl	%dl, %edi
 259 00a1 FF150000 		call	*__msg_putc(%rip)
 259      0000
 260              	.LVL31:
 530:src/mcu_msg.c ****     }
 261              		.loc 1 530 0
 262 00a7 4889D8   		movq	%rbx, %rax
 263 00aa 49F7EC   		imulq	%r12
 264 00ad 48C1FA02 		sarq	$2, %rdx
 265 00b1 48C1FB3F 		sarq	$63, %rbx
 266              	.LVL32:
 267 00b5 4829DA   		subq	%rbx, %rdx
 268 00b8 4889D3   		movq	%rdx, %rbx
 269              	.LVL33:
 270              	.L27:
 523:src/mcu_msg.c ****         if(sign == -1 ? (i > div) : (i < div)) {
 271              		.loc 1 523 0 discriminator 1
 272 00bb 4885DB   		testq	%rbx, %rbx
 273 00be 0F8469FF 		je	.L17
 273      FFFF
 524:src/mcu_msg.c ****             div /= 10;
 274              		.loc 1 524 0
 275 00c4 4180FDFF 		cmpb	$-1, %r13b
 276 00c8 7490     		je	.L35
 524:src/mcu_msg.c ****             div /= 10;
 277              		.loc 1 524 0 is_stmt 0 discriminator 2
 278 00ca 4863C5   		movslq	%ebp, %rax
 279 00cd 4839D8   		cmpq	%rbx, %rax
 280 00d0 0F9CC0   		setl	%al
 281 00d3 EB8E     		jmp	.L24
 282              	.L34:
 525:src/mcu_msg.c ****             continue;
 283              		.loc 1 525 0 is_stmt 1
 284 00d5 48BA6766 		movabsq	$7378697629483820647, %rdx
 284      66666666 
 284      6666
 285 00df 4889D8   		movq	%rbx, %rax
 286 00e2 48F7EA   		imulq	%rdx
 287 00e5 48C1FA02 		sarq	$2, %rdx
 288 00e9 48C1FB3F 		sarq	$63, %rbx
 289              	.LVL34:
 290 00ed 4829DA   		subq	%rbx, %rdx
 291 00f0 4889D3   		movq	%rdx, %rbx
 292              	.LVL35:
 526:src/mcu_msg.c ****         }
 293              		.loc 1 526 0
 294 00f3 EBC6     		jmp	.L27
 295              	.LVL36:
GAS LISTING /tmp/cc31R1Mf.s 			page 16


 296              	.L31:
 521:src/mcu_msg.c ****     }
 297              		.loc 1 521 0
 298 00f5 BB00CA9A 		movl	$1000000000, %ebx
 298      3B
 299 00fa EBBF     		jmp	.L27
 300              		.cfi_endproc
 301              	.LFE47:
 303              		.section	.text.__msg_print_float,"ax",@progbits
 305              	__msg_print_float:
 306              	.LFB48:
 534:src/mcu_msg.c **** 
 535:src/mcu_msg.c **** static void __msg_print_float(float f, uint8_t prec)
 536:src/mcu_msg.c **** {
 307              		.loc 1 536 0
 308              		.cfi_startproc
 309              	.LVL37:
 310 0000 4154     		pushq	%r12
 311              	.LCFI11:
 312              		.cfi_def_cfa_offset 16
 313              		.cfi_offset 12, -16
 314 0002 55       		pushq	%rbp
 315              	.LCFI12:
 316              		.cfi_def_cfa_offset 24
 317              		.cfi_offset 6, -24
 318 0003 53       		pushq	%rbx
 319              	.LCFI13:
 320              		.cfi_def_cfa_offset 32
 321              		.cfi_offset 3, -32
 322 0004 4883EC10 		subq	$16, %rsp
 323              	.LCFI14:
 324              		.cfi_def_cfa_offset 48
 325 0008 4189FC   		movl	%edi, %r12d
 537:src/mcu_msg.c ****     int i_part = f;
 326              		.loc 1 537 0
 327 000b F30F2CF8 		cvttss2si	%xmm0, %edi
 328              	.LVL38:
 538:src/mcu_msg.c ****     float f_part = f - i_part;
 329              		.loc 1 538 0
 330 000f 660FEFC9 		pxor	%xmm1, %xmm1
 331 0013 F30F2ACF 		cvtsi2ss	%edi, %xmm1
 332 0017 0F28D8   		movaps	%xmm0, %xmm3
 333 001a F30F5CD9 		subss	%xmm1, %xmm3
 334 001e F30F115C 		movss	%xmm3, 12(%rsp)
 334      240C
 335              	.LVL39:
 539:src/mcu_msg.c ****     long mul = f < 0.0 ? -10 : 10;
 336              		.loc 1 539 0
 337 0024 660FEFC9 		pxor	%xmm1, %xmm1
 338 0028 0F2EC8   		ucomiss	%xmm0, %xmm1
 339 002b 7742     		ja	.L49
 340 002d BB0A0000 		movl	$10, %ebx
 340      00
 341              	.L37:
 342              	.LVL40:
 540:src/mcu_msg.c ****     uint8_t j;
 541:src/mcu_msg.c ****     char dig;
GAS LISTING /tmp/cc31R1Mf.s 			page 17


 542:src/mcu_msg.c ****     if(!__msg_putc) //if function pointer is NULL, return
 343              		.loc 1 542 0 discriminator 4
 344 0032 488B0500 		movq	__msg_putc(%rip), %rax
 344      000000
 345 0039 4885C0   		testq	%rax, %rax
 346 003c 0F849900 		je	.L36
 346      0000
 543:src/mcu_msg.c ****         return;
 544:src/mcu_msg.c **** 
 545:src/mcu_msg.c ****     if(!i_part) {
 347              		.loc 1 545 0
 348 0042 85FF     		testl	%edi, %edi
 349 0044 7532     		jne	.L40
 546:src/mcu_msg.c ****         if(mul < 0) __msg_putc('-');
 350              		.loc 1 546 0
 351 0046 4885DB   		testq	%rbx, %rbx
 352 0049 7907     		jns	.L41
 353              		.loc 1 546 0 is_stmt 0 discriminator 1
 354 004b BF2D0000 		movl	$45, %edi
 354      00
 355              	.LVL41:
 356 0050 FFD0     		call	*%rax
 357              	.LVL42:
 358              	.L41:
 547:src/mcu_msg.c ****         __msg_putc('0');
 359              		.loc 1 547 0 is_stmt 1
 360 0052 BF300000 		movl	$48, %edi
 360      00
 361 0057 FF150000 		call	*__msg_putc(%rip)
 361      0000
 362              	.LVL43:
 363              	.L42:
 548:src/mcu_msg.c ****     } else {
 549:src/mcu_msg.c ****         __msg_print_int(i_part);  
 550:src/mcu_msg.c ****     }
 551:src/mcu_msg.c ****       
 552:src/mcu_msg.c ****     __msg_putc('.');
 364              		.loc 1 552 0
 365 005d BF2E0000 		movl	$46, %edi
 365      00
 366 0062 FF150000 		call	*__msg_putc(%rip)
 366      0000
 367              	.LVL44:
 553:src/mcu_msg.c ****     for(j = 0; j < prec; mul *= 10, j++) {
 368              		.loc 1 553 0
 369 0068 BD000000 		movl	$0, %ebp
 369      00
 370 006d EB67     		jmp	.L43
 371              	.LVL45:
 372              	.L49:
 539:src/mcu_msg.c ****     uint8_t j;
 373              		.loc 1 539 0
 374 006f 48C7C3F6 		movq	$-10, %rbx
 374      FFFFFF
 375 0076 EBBA     		jmp	.L37
 376              	.LVL46:
 377              	.L40:
GAS LISTING /tmp/cc31R1Mf.s 			page 18


 549:src/mcu_msg.c ****     }
 378              		.loc 1 549 0
 379 0078 E8000000 		call	__msg_print_int
 379      00
 380              	.LVL47:
 381 007d EBDE     		jmp	.L42
 382              	.LVL48:
 383              	.L44:
 554:src/mcu_msg.c ****         dig = '0' + ((long)(f_part * mul) % 10);
 384              		.loc 1 554 0 discriminator 3
 385 007f 660FEFC0 		pxor	%xmm0, %xmm0
 386 0083 F3480F2A 		cvtsi2ssq	%rbx, %xmm0
 386      C3
 387 0088 F30F5944 		mulss	12(%rsp), %xmm0
 387      240C
 388 008e F3480F2C 		cvttss2siq	%xmm0, %rcx
 388      C8
 389 0093 48BA6766 		movabsq	$7378697629483820647, %rdx
 389      66666666 
 389      6666
 390 009d 4889C8   		movq	%rcx, %rax
 391 00a0 48F7EA   		imulq	%rdx
 392 00a3 48C1FA02 		sarq	$2, %rdx
 393 00a7 4889C8   		movq	%rcx, %rax
 394 00aa 48C1F83F 		sarq	$63, %rax
 395 00ae 4829C2   		subq	%rax, %rdx
 396 00b1 488D1492 		leaq	(%rdx,%rdx,4), %rdx
 397 00b5 488D0412 		leaq	(%rdx,%rdx), %rax
 398 00b9 4829C1   		subq	%rax, %rcx
 399 00bc 4889CA   		movq	%rcx, %rdx
 400 00bf 83C230   		addl	$48, %edx
 401              	.LVL49:
 555:src/mcu_msg.c ****         __msg_putc(dig);
 402              		.loc 1 555 0 discriminator 3
 403 00c2 0FBEFA   		movsbl	%dl, %edi
 404 00c5 FF150000 		call	*__msg_putc(%rip)
 404      0000
 405              	.LVL50:
 553:src/mcu_msg.c ****         dig = '0' + ((long)(f_part * mul) % 10);
 406              		.loc 1 553 0 discriminator 3
 407 00cb 488D049B 		leaq	(%rbx,%rbx,4), %rax
 408 00cf 488D1C00 		leaq	(%rax,%rax), %rbx
 409              	.LVL51:
 410 00d3 83C501   		addl	$1, %ebp
 411              	.LVL52:
 412              	.L43:
 553:src/mcu_msg.c ****         dig = '0' + ((long)(f_part * mul) % 10);
 413              		.loc 1 553 0 is_stmt 0 discriminator 1
 414 00d6 4438E5   		cmpb	%r12b, %bpl
 415 00d9 72A4     		jb	.L44
 416              	.LVL53:
 417              	.L36:
 556:src/mcu_msg.c ****     }
 557:src/mcu_msg.c **** }
 418              		.loc 1 557 0 is_stmt 1
 419 00db 4883C410 		addq	$16, %rsp
 420              	.LCFI15:
GAS LISTING /tmp/cc31R1Mf.s 			page 19


 421              		.cfi_def_cfa_offset 32
 422 00df 5B       		popq	%rbx
 423              	.LCFI16:
 424              		.cfi_def_cfa_offset 24
 425              	.LVL54:
 426 00e0 5D       		popq	%rbp
 427              	.LCFI17:
 428              		.cfi_def_cfa_offset 16
 429 00e1 415C     		popq	%r12
 430              	.LCFI18:
 431              		.cfi_def_cfa_offset 8
 432              	.LVL55:
 433 00e3 C3       		ret
 434              		.cfi_endproc
 435              	.LFE48:
 437              		.section	.text.__msg_print_str,"ax",@progbits
 439              	__msg_print_str:
 440              	.LFB49:
 558:src/mcu_msg.c **** 
 559:src/mcu_msg.c **** static void __msg_print_str(msg_str_t str)
 560:src/mcu_msg.c **** {
 441              		.loc 1 560 0
 442              		.cfi_startproc
 443              	.LVL56:
 561:src/mcu_msg.c ****     msg_size_t i;
 562:src/mcu_msg.c ****     if(!__msg_putc) { //if function pointer is NULL, return
 444              		.loc 1 562 0
 445 0000 48833D00 		cmpq	$0, __msg_putc(%rip)
 445      00000000 
 446 0008 742C     		je	.L55
 560:src/mcu_msg.c ****     msg_size_t i;
 447              		.loc 1 560 0
 448 000a 4154     		pushq	%r12
 449              	.LCFI19:
 450              		.cfi_def_cfa_offset 16
 451              		.cfi_offset 12, -16
 452 000c 55       		pushq	%rbp
 453              	.LCFI20:
 454              		.cfi_def_cfa_offset 24
 455              		.cfi_offset 6, -24
 456 000d 53       		pushq	%rbx
 457              	.LCFI21:
 458              		.cfi_def_cfa_offset 32
 459              		.cfi_offset 3, -32
 460 000e 4989FC   		movq	%rdi, %r12
 461 0011 4889F5   		movq	%rsi, %rbp
 563:src/mcu_msg.c ****         return;
 564:src/mcu_msg.c ****     }
 565:src/mcu_msg.c ****     for(i = 0; i < str.len; __msg_putc(*(str.s + i)), i++);
 462              		.loc 1 565 0
 463 0014 BB000000 		movl	$0, %ebx
 463      00
 464 0019 EB11     		jmp	.L52
 465              	.LVL57:
 466              	.L53:
 467              		.loc 1 565 0 is_stmt 0 discriminator 3
 468 001b 0FB7C3   		movzwl	%bx, %eax
GAS LISTING /tmp/cc31R1Mf.s 			page 20


 469 001e 410FBE3C 		movsbl	(%r12,%rax), %edi
 469      04
 470 0023 FF150000 		call	*__msg_putc(%rip)
 470      0000
 471              	.LVL58:
 472 0029 83C301   		addl	$1, %ebx
 473              	.LVL59:
 474              	.L52:
 475              		.loc 1 565 0 discriminator 1
 476 002c 6639DD   		cmpw	%bx, %bp
 477 002f 77EA     		ja	.L53
 566:src/mcu_msg.c **** }
 478              		.loc 1 566 0 is_stmt 1
 479 0031 5B       		popq	%rbx
 480              	.LCFI22:
 481              		.cfi_def_cfa_offset 24
 482              	.LVL60:
 483 0032 5D       		popq	%rbp
 484              	.LCFI23:
 485              		.cfi_def_cfa_offset 16
 486 0033 415C     		popq	%r12
 487              	.LCFI24:
 488              		.cfi_def_cfa_offset 8
 489 0035 C3       		ret
 490              	.L55:
 491              		.cfi_restore 3
 492              		.cfi_restore 6
 493              		.cfi_restore 12
 494 0036 F3C3     		rep ret
 495              		.cfi_endproc
 496              	.LFE49:
 498              		.section	.text.__msg_putc_to_buff,"ax",@progbits
 500              	__msg_putc_to_buff:
 501              	.LFB54:
 567:src/mcu_msg.c **** 
 568:src/mcu_msg.c **** /**
 569:src/mcu_msg.c ****  * @brief Create string handler and set the basic functions
 570:src/mcu_msg.c ****  * 
 571:src/mcu_msg.c ****  * @param putc expected print function, set to NULL if you don't need the print feature
 572:src/mcu_msg.c ****  * @return msg_string_hnd_t handler
 573:src/mcu_msg.c ****  */
 574:src/mcu_msg.c **** msg_string_hnd_t msg_string_hnd_create(int (*putc)(char))
 575:src/mcu_msg.c **** {
 576:src/mcu_msg.c ****     msg_string_hnd_t hnd;
 577:src/mcu_msg.c ****     __msg_putc = putc;            // init putchar
 578:src/mcu_msg.c ****     hnd.copy_to_chr_arr = __msg_str_copy_to_chr_arr;
 579:src/mcu_msg.c ****     hnd.copy = __msg_str_copy;
 580:src/mcu_msg.c ****     hnd.print = __msg_print_str;
 581:src/mcu_msg.c ****     return hnd;
 582:src/mcu_msg.c **** }
 583:src/mcu_msg.c **** 
 584:src/mcu_msg.c **** static inline char __define_qmark(msg_str_t str)
 585:src/mcu_msg.c **** {
 586:src/mcu_msg.c ****     char *p = str.s;
 587:src/mcu_msg.c ****     while(__is_p_in_str(str, p) && *p) {
 588:src/mcu_msg.c ****         switch(*p) {
 589:src/mcu_msg.c ****             case '"' :  return '\'';
GAS LISTING /tmp/cc31R1Mf.s 			page 21


 590:src/mcu_msg.c ****             case '\'' : return '"';
 591:src/mcu_msg.c ****             default: break;
 592:src/mcu_msg.c ****         }
 593:src/mcu_msg.c ****         p++;
 594:src/mcu_msg.c ****     }
 595:src/mcu_msg.c ****     return '"'; // default
 596:src/mcu_msg.c **** }
 597:src/mcu_msg.c **** 
 598:src/mcu_msg.c **** #if MCU_MSG_USE_BUFFERING
 599:src/mcu_msg.c **** 
 600:src/mcu_msg.c **** void msg_destroy_str_buff(msg_str_buff_t *buff)
 601:src/mcu_msg.c **** {
 602:src/mcu_msg.c ****     msg_destroy_string(&buff->buff);
 603:src/mcu_msg.c ****     buff->p = NULL;
 604:src/mcu_msg.c **** }
 605:src/mcu_msg.c **** 
 606:src/mcu_msg.c **** msg_str_buff_t msg_init_str_buff(char *buff, msg_size_t buff_size)
 607:src/mcu_msg.c **** {
 608:src/mcu_msg.c ****     msg_str_buff_t b;
 609:src/mcu_msg.c ****     
 610:src/mcu_msg.c ****     b.buff.s = buff;
 611:src/mcu_msg.c ****     b.p = buff;
 612:src/mcu_msg.c ****     // if(buff_size < 1) {
 613:src/mcu_msg.c ****     //     msg_destroy_str_buff(&b);   // retrun with an empty buff
 614:src/mcu_msg.c ****     // } else {
 615:src/mcu_msg.c ****     //     b.buff.len = buff_size - 1; // terminate with 0 necessary at the end of message
 616:src/mcu_msg.c ****     // }
 617:src/mcu_msg.c ****     b.buff.len = buff_size;
 618:src/mcu_msg.c ****     return b;
 619:src/mcu_msg.c **** }
 620:src/mcu_msg.c **** 
 621:src/mcu_msg.c **** static msg_size_t __msg_putc_to_buff(msg_str_buff_t *buff, char c)
 622:src/mcu_msg.c **** {
 502              		.loc 1 622 0
 503              		.cfi_startproc
 504              	.LVL61:
 623:src/mcu_msg.c ****     if((buff->p - buff->buff.s) >= buff->buff.len) // return null if position is out of buffer
 505              		.loc 1 623 0
 506 0000 488B4710 		movq	16(%rdi), %rax
 507 0004 4889C1   		movq	%rax, %rcx
 508 0007 482B0F   		subq	(%rdi), %rcx
 509 000a 0FB75708 		movzwl	8(%rdi), %edx
 510 000e 4839D1   		cmpq	%rdx, %rcx
 511 0011 7D19     		jge	.L60
 624:src/mcu_msg.c ****         return 0;
 625:src/mcu_msg.c ****     *buff->p = c;
 512              		.loc 1 625 0
 513 0013 408830   		movb	%sil, (%rax)
 626:src/mcu_msg.c ****     buff->p++;
 514              		.loc 1 626 0
 515 0016 488B4710 		movq	16(%rdi), %rax
 516 001a 488D5001 		leaq	1(%rax), %rdx
 517 001e 48895710 		movq	%rdx, 16(%rdi)
 627:src/mcu_msg.c ****     return buff->buff.len - (buff->p - buff->buff.s); // return with the empty spaces
 518              		.loc 1 627 0
 519 0022 0FB74708 		movzwl	8(%rdi), %eax
 520 0026 482B17   		subq	(%rdi), %rdx
GAS LISTING /tmp/cc31R1Mf.s 			page 22


 521 0029 29D0     		subl	%edx, %eax
 522 002b C3       		ret
 523              	.L60:
 624:src/mcu_msg.c ****         return 0;
 524              		.loc 1 624 0
 525 002c B8000000 		movl	$0, %eax
 525      00
 628:src/mcu_msg.c **** }
 526              		.loc 1 628 0
 527 0031 C3       		ret
 528              		.cfi_endproc
 529              	.LFE54:
 531              		.section	.text.__msg_print_int_to_buff,"ax",@progbits
 533              	__msg_print_int_to_buff:
 534              	.LFB55:
 629:src/mcu_msg.c **** 
 630:src/mcu_msg.c **** 
 631:src/mcu_msg.c **** static msg_size_t __msg_print_int_to_buff(msg_str_buff_t *buff, int i)
 632:src/mcu_msg.c **** {
 535              		.loc 1 632 0
 536              		.cfi_startproc
 537              	.LVL62:
 538 0000 4156     		pushq	%r14
 539              	.LCFI25:
 540              		.cfi_def_cfa_offset 16
 541              		.cfi_offset 14, -16
 542 0002 4155     		pushq	%r13
 543              	.LCFI26:
 544              		.cfi_def_cfa_offset 24
 545              		.cfi_offset 13, -24
 546 0004 4154     		pushq	%r12
 547              	.LCFI27:
 548              		.cfi_def_cfa_offset 32
 549              		.cfi_offset 12, -32
 550 0006 55       		pushq	%rbp
 551              	.LCFI28:
 552              		.cfi_def_cfa_offset 40
 553              		.cfi_offset 6, -40
 554 0007 53       		pushq	%rbx
 555              	.LCFI29:
 556              		.cfi_def_cfa_offset 48
 557              		.cfi_offset 3, -48
 558 0008 4989FD   		movq	%rdi, %r13
 559 000b 4189F4   		movl	%esi, %r12d
 633:src/mcu_msg.c ****     int8_t sign = i < 0 ? -1 : 1;
 560              		.loc 1 633 0
 561 000e 85F6     		testl	%esi, %esi
 562 0010 781B     		js	.L77
 563 0012 41BE0100 		movl	$1, %r14d
 563      0000
 564              	.L62:
 565              	.LVL63:
 634:src/mcu_msg.c ****     long div;
 635:src/mcu_msg.c ****     char dig;
 636:src/mcu_msg.c **** 
 637:src/mcu_msg.c ****     if(!i) {
 566              		.loc 1 637 0 discriminator 4
GAS LISTING /tmp/cc31R1Mf.s 			page 23


 567 0018 4585E4   		testl	%r12d, %r12d
 568 001b 7418     		je	.L78
 638:src/mcu_msg.c ****         __msg_putc_to_buff(buff, '0');
 639:src/mcu_msg.c ****         return buff->p - buff->buff.s;
 640:src/mcu_msg.c ****     }
 641:src/mcu_msg.c **** 
 642:src/mcu_msg.c ****     switch(sign) {
 569              		.loc 1 642 0
 570 001d 4180FEFF 		cmpb	$-1, %r14b
 571 0021 742D     		je	.L79
 643:src/mcu_msg.c ****         case -1: div = sizeof(int) >= 4 ? -1000000000L : -10000L; __msg_putc_to_buff(buff, '-'); br
 644:src/mcu_msg.c ****         default: div = sizeof(int) >= 4 ?  1000000000L :  10000L; break;
 572              		.loc 1 644 0
 573 0023 BB00CA9A 		movl	$1000000000, %ebx
 573      3B
 574 0028 E99A0000 		jmp	.L71
 574      00
 575              	.LVL64:
 576              	.L77:
 633:src/mcu_msg.c ****     long div;
 577              		.loc 1 633 0
 578 002d 41BEFFFF 		movl	$-1, %r14d
 578      FFFF
 579 0033 EBE3     		jmp	.L62
 580              	.LVL65:
 581              	.L78:
 638:src/mcu_msg.c ****         __msg_putc_to_buff(buff, '0');
 582              		.loc 1 638 0
 583 0035 BE300000 		movl	$48, %esi
 583      00
 584              	.LVL66:
 585 003a 4C89EF   		movq	%r13, %rdi
 586              	.LVL67:
 587 003d E8000000 		call	__msg_putc_to_buff
 587      00
 588              	.LVL68:
 639:src/mcu_msg.c ****     }
 589              		.loc 1 639 0
 590 0042 498B4510 		movq	16(%r13), %rax
 591 0046 66412B45 		subw	0(%r13), %ax
 591      00
 592 004b E9BE0000 		jmp	.L61
 592      00
 593              	.LVL69:
 594              	.L79:
 643:src/mcu_msg.c ****         case -1: div = sizeof(int) >= 4 ? -1000000000L : -10000L; __msg_putc_to_buff(buff, '-'); br
 595              		.loc 1 643 0
 596 0050 BE2D0000 		movl	$45, %esi
 596      00
 597              	.LVL70:
 598 0055 4C89EF   		movq	%r13, %rdi
 599              	.LVL71:
 600 0058 E8000000 		call	__msg_putc_to_buff
 600      00
 601              	.LVL72:
 602 005d 48C7C300 		movq	$-1000000000, %rbx
 602      3665C4
GAS LISTING /tmp/cc31R1Mf.s 			page 24


 603 0064 EB61     		jmp	.L71
 604              	.LVL73:
 605              	.L81:
 645:src/mcu_msg.c ****     }
 646:src/mcu_msg.c ****     while(div) {
 647:src/mcu_msg.c ****         if(sign == -1 ? (i > div) : (i < div)) {
 606              		.loc 1 647 0 discriminator 1
 607 0066 4963C4   		movslq	%r12d, %rax
 608 0069 4839D8   		cmpq	%rbx, %rax
 609 006c 0F9FC0   		setg	%al
 610 006f EB6A     		jmp	.L68
 611              	.L69:
 648:src/mcu_msg.c ****             div /= 10;
 649:src/mcu_msg.c ****             continue;
 650:src/mcu_msg.c ****         }
 651:src/mcu_msg.c ****         dig = '0' + ((i / div) % 10);
 612              		.loc 1 651 0
 613 0071 4963C4   		movslq	%r12d, %rax
 614 0074 4899     		cqto
 615 0076 48F7FB   		idivq	%rbx
 616 0079 4889C1   		movq	%rax, %rcx
 617 007c 48BD6766 		movabsq	$7378697629483820647, %rbp
 617      66666666 
 617      6666
 618 0086 48F7ED   		imulq	%rbp
 619 0089 48C1FA02 		sarq	$2, %rdx
 620 008d 4889C8   		movq	%rcx, %rax
 621 0090 48C1F83F 		sarq	$63, %rax
 622 0094 4829C2   		subq	%rax, %rdx
 623 0097 488D1492 		leaq	(%rdx,%rdx,4), %rdx
 624 009b 488D0412 		leaq	(%rdx,%rdx), %rax
 625 009f 4829C1   		subq	%rax, %rcx
 626 00a2 4889CA   		movq	%rcx, %rdx
 627 00a5 83C230   		addl	$48, %edx
 628              	.LVL74:
 652:src/mcu_msg.c ****         __msg_putc_to_buff(buff, dig);
 629              		.loc 1 652 0
 630 00a8 0FBEF2   		movsbl	%dl, %esi
 631 00ab 4C89EF   		movq	%r13, %rdi
 632 00ae E8000000 		call	__msg_putc_to_buff
 632      00
 633              	.LVL75:
 653:src/mcu_msg.c ****         div /= 10;
 634              		.loc 1 653 0
 635 00b3 4889D8   		movq	%rbx, %rax
 636 00b6 48F7ED   		imulq	%rbp
 637 00b9 48C1FA02 		sarq	$2, %rdx
 638 00bd 48C1FB3F 		sarq	$63, %rbx
 639              	.LVL76:
 640 00c1 4829DA   		subq	%rbx, %rdx
 641 00c4 4889D3   		movq	%rdx, %rbx
 642              	.LVL77:
 643              	.L71:
 646:src/mcu_msg.c ****         if(sign == -1 ? (i > div) : (i < div)) {
 644              		.loc 1 646 0 discriminator 1
 645 00c7 4885DB   		testq	%rbx, %rbx
 646 00ca 7433     		je	.L80
GAS LISTING /tmp/cc31R1Mf.s 			page 25


 647:src/mcu_msg.c ****             div /= 10;
 647              		.loc 1 647 0
 648 00cc 4180FEFF 		cmpb	$-1, %r14b
 649 00d0 7494     		je	.L81
 647:src/mcu_msg.c ****             div /= 10;
 650              		.loc 1 647 0 is_stmt 0 discriminator 2
 651 00d2 4963C4   		movslq	%r12d, %rax
 652 00d5 4839D8   		cmpq	%rbx, %rax
 653 00d8 0F9CC0   		setl	%al
 654              	.L68:
 647:src/mcu_msg.c ****             div /= 10;
 655              		.loc 1 647 0 discriminator 4
 656 00db 84C0     		testb	%al, %al
 657 00dd 7492     		je	.L69
 648:src/mcu_msg.c ****             continue;
 658              		.loc 1 648 0 is_stmt 1
 659 00df 48BA6766 		movabsq	$7378697629483820647, %rdx
 659      66666666 
 659      6666
 660 00e9 4889D8   		movq	%rbx, %rax
 661 00ec 48F7EA   		imulq	%rdx
 662 00ef 48C1FA02 		sarq	$2, %rdx
 663 00f3 48C1FB3F 		sarq	$63, %rbx
 664              	.LVL78:
 665 00f7 4829DA   		subq	%rbx, %rdx
 666 00fa 4889D3   		movq	%rdx, %rbx
 667              	.LVL79:
 649:src/mcu_msg.c ****         }
 668              		.loc 1 649 0
 669 00fd EBC8     		jmp	.L71
 670              	.LVL80:
 671              	.L80:
 654:src/mcu_msg.c ****     }
 655:src/mcu_msg.c **** 
 656:src/mcu_msg.c ****     return buff->buff.len - (buff->p - buff->buff.s);
 672              		.loc 1 656 0
 673 00ff 410FB745 		movzwl	8(%r13), %eax
 673      08
 674 0104 498B5510 		movq	16(%r13), %rdx
 675 0108 492B5500 		subq	0(%r13), %rdx
 676 010c 29D0     		subl	%edx, %eax
 677              	.LVL81:
 678              	.L61:
 657:src/mcu_msg.c **** }
 679              		.loc 1 657 0
 680 010e 5B       		popq	%rbx
 681              	.LCFI30:
 682              		.cfi_def_cfa_offset 40
 683 010f 5D       		popq	%rbp
 684              	.LCFI31:
 685              		.cfi_def_cfa_offset 32
 686 0110 415C     		popq	%r12
 687              	.LCFI32:
 688              		.cfi_def_cfa_offset 24
 689              	.LVL82:
 690 0112 415D     		popq	%r13
 691              	.LCFI33:
GAS LISTING /tmp/cc31R1Mf.s 			page 26


 692              		.cfi_def_cfa_offset 16
 693              	.LVL83:
 694 0114 415E     		popq	%r14
 695              	.LCFI34:
 696              		.cfi_def_cfa_offset 8
 697              	.LVL84:
 698 0116 C3       		ret
 699              		.cfi_endproc
 700              	.LFE55:
 702              		.section	.text.__msg_print_float_to_buff,"ax",@progbits
 704              	__msg_print_float_to_buff:
 705              	.LFB56:
 658:src/mcu_msg.c **** 
 659:src/mcu_msg.c **** static msg_size_t __msg_print_float_to_buff(msg_str_buff_t *buff, float f, uint8_t prec)
 660:src/mcu_msg.c **** {
 706              		.loc 1 660 0
 707              		.cfi_startproc
 708              	.LVL85:
 709 0000 4155     		pushq	%r13
 710              	.LCFI35:
 711              		.cfi_def_cfa_offset 16
 712              		.cfi_offset 13, -16
 713 0002 4154     		pushq	%r12
 714              	.LCFI36:
 715              		.cfi_def_cfa_offset 24
 716              		.cfi_offset 12, -24
 717 0004 55       		pushq	%rbp
 718              	.LCFI37:
 719              		.cfi_def_cfa_offset 32
 720              		.cfi_offset 6, -32
 721 0005 53       		pushq	%rbx
 722              	.LCFI38:
 723              		.cfi_def_cfa_offset 40
 724              		.cfi_offset 3, -40
 725 0006 4883EC08 		subq	$8, %rsp
 726              	.LCFI39:
 727              		.cfi_def_cfa_offset 48
 728 000a 4989FC   		movq	%rdi, %r12
 729 000d 4189F5   		movl	%esi, %r13d
 661:src/mcu_msg.c ****     int i_part = f;
 730              		.loc 1 661 0
 731 0010 F30F2CF0 		cvttss2si	%xmm0, %esi
 732              	.LVL86:
 662:src/mcu_msg.c ****     float f_part = f - i_part;
 733              		.loc 1 662 0
 734 0014 660FEFC9 		pxor	%xmm1, %xmm1
 735 0018 F30F2ACE 		cvtsi2ss	%esi, %xmm1
 736 001c 0F28D8   		movaps	%xmm0, %xmm3
 737 001f F30F5CD9 		subss	%xmm1, %xmm3
 738 0023 F30F115C 		movss	%xmm3, 4(%rsp)
 738      2404
 739              	.LVL87:
 663:src/mcu_msg.c ****     long mul = f < 0.0 ? -10 : 10;
 740              		.loc 1 663 0
 741 0029 660FEFC9 		pxor	%xmm1, %xmm1
 742 002d 0F2EC8   		ucomiss	%xmm0, %xmm1
 743 0030 772F     		ja	.L94
GAS LISTING /tmp/cc31R1Mf.s 			page 27


 744 0032 BB0A0000 		movl	$10, %ebx
 744      00
 745              	.L83:
 746              	.LVL88:
 664:src/mcu_msg.c ****     uint8_t j;
 665:src/mcu_msg.c ****     char dig;
 666:src/mcu_msg.c **** 
 667:src/mcu_msg.c **** 
 668:src/mcu_msg.c ****     if(!i_part) {
 747              		.loc 1 668 0 discriminator 4
 748 0037 85F6     		testl	%esi, %esi
 749 0039 753E     		jne	.L85
 669:src/mcu_msg.c ****         if(mul < 0) __msg_putc_to_buff(buff, '-');
 750              		.loc 1 669 0
 751 003b 4885DB   		testq	%rbx, %rbx
 752 003e 782A     		js	.L95
 753              	.LVL89:
 754              	.L86:
 670:src/mcu_msg.c ****         __msg_putc_to_buff(buff, '0');
 755              		.loc 1 670 0
 756 0040 BE300000 		movl	$48, %esi
 756      00
 757 0045 4C89E7   		movq	%r12, %rdi
 758 0048 E8000000 		call	__msg_putc_to_buff
 758      00
 759              	.LVL90:
 760              	.L87:
 671:src/mcu_msg.c ****     } else {
 672:src/mcu_msg.c ****         __msg_print_int_to_buff(buff, i_part);  
 673:src/mcu_msg.c ****     }
 674:src/mcu_msg.c ****       
 675:src/mcu_msg.c ****     __msg_putc_to_buff(buff, '.');
 761              		.loc 1 675 0
 762 004d BE2E0000 		movl	$46, %esi
 762      00
 763 0052 4C89E7   		movq	%r12, %rdi
 764 0055 E8000000 		call	__msg_putc_to_buff
 764      00
 765              	.LVL91:
 676:src/mcu_msg.c ****     for(j = 0; j < prec; mul *= 10, j++) {
 766              		.loc 1 676 0
 767 005a BD000000 		movl	$0, %ebp
 767      00
 768 005f EB7B     		jmp	.L88
 769              	.LVL92:
 770              	.L94:
 663:src/mcu_msg.c ****     uint8_t j;
 771              		.loc 1 663 0
 772 0061 48C7C3F6 		movq	$-10, %rbx
 772      FFFFFF
 773 0068 EBCD     		jmp	.L83
 774              	.LVL93:
 775              	.L95:
 669:src/mcu_msg.c ****         __msg_putc_to_buff(buff, '0');
 776              		.loc 1 669 0 discriminator 1
 777 006a BE2D0000 		movl	$45, %esi
 777      00
GAS LISTING /tmp/cc31R1Mf.s 			page 28


 778              	.LVL94:
 779 006f 4C89E7   		movq	%r12, %rdi
 780              	.LVL95:
 781 0072 E8000000 		call	__msg_putc_to_buff
 781      00
 782              	.LVL96:
 783 0077 EBC7     		jmp	.L86
 784              	.LVL97:
 785              	.L85:
 672:src/mcu_msg.c ****     }
 786              		.loc 1 672 0
 787 0079 4C89E7   		movq	%r12, %rdi
 788              	.LVL98:
 789 007c E8000000 		call	__msg_print_int_to_buff
 789      00
 790              	.LVL99:
 791 0081 EBCA     		jmp	.L87
 792              	.LVL100:
 793              	.L89:
 677:src/mcu_msg.c ****         dig = '0' + ((long)(f_part * mul) % 10);
 794              		.loc 1 677 0 discriminator 3
 795 0083 660FEFC0 		pxor	%xmm0, %xmm0
 796 0087 F3480F2A 		cvtsi2ssq	%rbx, %xmm0
 796      C3
 797 008c F30F5944 		mulss	4(%rsp), %xmm0
 797      2404
 798 0092 F3480F2C 		cvttss2siq	%xmm0, %rcx
 798      C8
 799 0097 48BA6766 		movabsq	$7378697629483820647, %rdx
 799      66666666 
 799      6666
 800 00a1 4889C8   		movq	%rcx, %rax
 801 00a4 48F7EA   		imulq	%rdx
 802 00a7 48C1FA02 		sarq	$2, %rdx
 803 00ab 4889C8   		movq	%rcx, %rax
 804 00ae 48C1F83F 		sarq	$63, %rax
 805 00b2 4829C2   		subq	%rax, %rdx
 806 00b5 488D1492 		leaq	(%rdx,%rdx,4), %rdx
 807 00b9 488D0412 		leaq	(%rdx,%rdx), %rax
 808 00bd 4829C1   		subq	%rax, %rcx
 809 00c0 4889CA   		movq	%rcx, %rdx
 810 00c3 83C230   		addl	$48, %edx
 811              	.LVL101:
 678:src/mcu_msg.c ****         __msg_putc_to_buff(buff, dig);
 812              		.loc 1 678 0 discriminator 3
 813 00c6 0FBEF2   		movsbl	%dl, %esi
 814 00c9 4C89E7   		movq	%r12, %rdi
 815 00cc E8000000 		call	__msg_putc_to_buff
 815      00
 816              	.LVL102:
 676:src/mcu_msg.c ****         dig = '0' + ((long)(f_part * mul) % 10);
 817              		.loc 1 676 0 discriminator 3
 818 00d1 488D049B 		leaq	(%rbx,%rbx,4), %rax
 819 00d5 488D1C00 		leaq	(%rax,%rax), %rbx
 820              	.LVL103:
 821 00d9 83C501   		addl	$1, %ebp
 822              	.LVL104:
GAS LISTING /tmp/cc31R1Mf.s 			page 29


 823              	.L88:
 676:src/mcu_msg.c ****         dig = '0' + ((long)(f_part * mul) % 10);
 824              		.loc 1 676 0 is_stmt 0 discriminator 1
 825 00dc 4438ED   		cmpb	%r13b, %bpl
 826 00df 72A2     		jb	.L89
 679:src/mcu_msg.c ****     }
 680:src/mcu_msg.c ****     return buff->buff.len - (buff->p - buff->buff.s);
 827              		.loc 1 680 0 is_stmt 1
 828 00e1 410FB744 		movzwl	8(%r12), %eax
 828      2408
 829 00e7 498B5424 		movq	16(%r12), %rdx
 829      10
 830 00ec 492B1424 		subq	(%r12), %rdx
 831 00f0 29D0     		subl	%edx, %eax
 681:src/mcu_msg.c **** }
 832              		.loc 1 681 0
 833 00f2 4883C408 		addq	$8, %rsp
 834              	.LCFI40:
 835              		.cfi_def_cfa_offset 40
 836 00f6 5B       		popq	%rbx
 837              	.LCFI41:
 838              		.cfi_def_cfa_offset 32
 839              	.LVL105:
 840 00f7 5D       		popq	%rbp
 841              	.LCFI42:
 842              		.cfi_def_cfa_offset 24
 843              	.LVL106:
 844 00f8 415C     		popq	%r12
 845              	.LCFI43:
 846              		.cfi_def_cfa_offset 16
 847              	.LVL107:
 848 00fa 415D     		popq	%r13
 849              	.LCFI44:
 850              		.cfi_def_cfa_offset 8
 851              	.LVL108:
 852 00fc C3       		ret
 853              		.cfi_endproc
 854              	.LFE56:
 856              		.section	.text.__msg_print_str_to_buff,"ax",@progbits
 858              	__msg_print_str_to_buff:
 859              	.LFB57:
 682:src/mcu_msg.c **** 
 683:src/mcu_msg.c **** static msg_size_t __msg_print_str_to_buff(msg_str_buff_t *buff, msg_str_t str)
 684:src/mcu_msg.c **** {
 860              		.loc 1 684 0
 861              		.cfi_startproc
 862              	.LVL109:
 863 0000 4155     		pushq	%r13
 864              	.LCFI45:
 865              		.cfi_def_cfa_offset 16
 866              		.cfi_offset 13, -16
 867 0002 4154     		pushq	%r12
 868              	.LCFI46:
 869              		.cfi_def_cfa_offset 24
 870              		.cfi_offset 12, -24
 871 0004 55       		pushq	%rbp
 872              	.LCFI47:
GAS LISTING /tmp/cc31R1Mf.s 			page 30


 873              		.cfi_def_cfa_offset 32
 874              		.cfi_offset 6, -32
 875 0005 53       		pushq	%rbx
 876              	.LCFI48:
 877              		.cfi_def_cfa_offset 40
 878              		.cfi_offset 3, -40
 879 0006 4989FC   		movq	%rdi, %r12
 880 0009 4989F5   		movq	%rsi, %r13
 881 000c 4889D5   		movq	%rdx, %rbp
 882              	.LVL110:
 685:src/mcu_msg.c ****     msg_size_t i;
 686:src/mcu_msg.c ****     for(i = 0; i < str.len; i++) {
 883              		.loc 1 686 0
 884 000f BB000000 		movl	$0, %ebx
 884      00
 885              	.LVL111:
 886              	.L97:
 887              		.loc 1 686 0 is_stmt 0 discriminator 1
 888 0014 6639DD   		cmpw	%bx, %bp
 889 0017 761B     		jbe	.L101
 687:src/mcu_msg.c ****         if(!__msg_putc_to_buff(buff, *(str.s + i))) return 0;
 890              		.loc 1 687 0 is_stmt 1
 891 0019 0FB7C3   		movzwl	%bx, %eax
 892 001c 410FBE74 		movsbl	0(%r13,%rax), %esi
 892      0500
 893 0022 4C89E7   		movq	%r12, %rdi
 894 0025 E8000000 		call	__msg_putc_to_buff
 894      00
 895              	.LVL112:
 896 002a 6685C0   		testw	%ax, %ax
 897 002d 7416     		je	.L96
 686:src/mcu_msg.c ****         if(!__msg_putc_to_buff(buff, *(str.s + i))) return 0;
 898              		.loc 1 686 0 discriminator 2
 899 002f 83C301   		addl	$1, %ebx
 900              	.LVL113:
 901 0032 EBE0     		jmp	.L97
 902              	.LVL114:
 903              	.L101:
 688:src/mcu_msg.c ****     }
 689:src/mcu_msg.c ****     return buff->buff.len - (buff->p - buff->buff.s);
 904              		.loc 1 689 0
 905 0034 410FB744 		movzwl	8(%r12), %eax
 905      2408
 906 003a 498B5424 		movq	16(%r12), %rdx
 906      10
 907 003f 492B1424 		subq	(%r12), %rdx
 908 0043 29D0     		subl	%edx, %eax
 909              	.L96:
 690:src/mcu_msg.c **** }
 910              		.loc 1 690 0
 911 0045 5B       		popq	%rbx
 912              	.LCFI49:
 913              		.cfi_def_cfa_offset 32
 914              	.LVL115:
 915 0046 5D       		popq	%rbp
 916              	.LCFI50:
 917              		.cfi_def_cfa_offset 24
GAS LISTING /tmp/cc31R1Mf.s 			page 31


 918              	.LVL116:
 919 0047 415C     		popq	%r12
 920              	.LCFI51:
 921              		.cfi_def_cfa_offset 16
 922              	.LVL117:
 923 0049 415D     		popq	%r13
 924              	.LCFI52:
 925              		.cfi_def_cfa_offset 8
 926 004b C3       		ret
 927              		.cfi_endproc
 928              	.LFE57:
 930              		.section	.text.__msg_wrapper_print_obj,"ax",@progbits
 932              	__msg_wrapper_print_obj:
 933              	.LFB59:
 691:src/mcu_msg.c **** #endif
 692:src/mcu_msg.c **** 
 693:src/mcu_msg.c **** /////////////////////////////////////////////////////////////////////////////////////////////
 694:src/mcu_msg.c **** //                                     Wrapper functions                                   //
 695:src/mcu_msg.c **** /////////////////////////////////////////////////////////////////////////////////////////////
 696:src/mcu_msg.c **** #if MCU_MSG_USE_WRAPPER
 697:src/mcu_msg.c **** 
 698:src/mcu_msg.c **** msg_wrap_hnd_t msg_wrapper_hnd_create(int (*putc)(char))
 699:src/mcu_msg.c **** {
 700:src/mcu_msg.c ****     msg_wrap_hnd_t hnd;
 701:src/mcu_msg.c ****     __msg_putc = putc; // init putchar
 702:src/mcu_msg.c ****     hnd.print = __msg_wrapper_print_msg;
 703:src/mcu_msg.c ****     hnd.print_obj = __msg_wrapper_print_obj;
 704:src/mcu_msg.c ****     hnd.print_cmd = __msg_wrapper_print_cmd;
 705:src/mcu_msg.c **** #if MCU_MSG_USE_BUFFERING
 706:src/mcu_msg.c ****     hnd.print_to_buff = __msg_wrapper_print_msg_to_buff;
 707:src/mcu_msg.c ****     // hnd.print_obj_to_buff = __msg_wrapper_print_obj_to_buff;
 708:src/mcu_msg.c ****     // hnd.print_cmd_to_buff = __msg_wrapper_print_cmd_to_buff;
 709:src/mcu_msg.c **** #endif
 710:src/mcu_msg.c ****     return hnd;
 711:src/mcu_msg.c **** }
 712:src/mcu_msg.c **** 
 713:src/mcu_msg.c **** #define __print_key_equ(key_str)        __msg_putc(__CTRL_KEY_FLAG); \
 714:src/mcu_msg.c ****                                         __msg_print_str(key_str);    \
 715:src/mcu_msg.c ****                                         __msg_putc(__CTRL_KEY_EQU)
 716:src/mcu_msg.c **** 
 717:src/mcu_msg.c **** #define __print_msg_start(msg)          __msg_putc(__CTRL_MSG_FLAG); \
 718:src/mcu_msg.c ****                                         __msg_print_str(msg.id);     \
 719:src/mcu_msg.c ****                                         __msg_putc(__CTRL_START_MSG)
 720:src/mcu_msg.c **** 
 721:src/mcu_msg.c **** 
 722:src/mcu_msg.c **** #define __print_obj_start(obj)          __msg_putc(__CTRL_OBJ_FLAG);  \
 723:src/mcu_msg.c ****                                         __msg_print_str(obj.id);      \
 724:src/mcu_msg.c ****                                         __msg_putc(__CTRL_START_OBJ)  
 725:src/mcu_msg.c **** 
 726:src/mcu_msg.c **** static void __msg_wrapper_print_obj(msg_wrap_obj_t obj)
 727:src/mcu_msg.c **** {
 934              		.loc 1 727 0
 935              		.cfi_startproc
 936 0000 4154     		pushq	%r12
 937              	.LCFI53:
 938              		.cfi_def_cfa_offset 16
 939              		.cfi_offset 12, -16
GAS LISTING /tmp/cc31R1Mf.s 			page 32


 940 0002 55       		pushq	%rbp
 941              	.LCFI54:
 942              		.cfi_def_cfa_offset 24
 943              		.cfi_offset 6, -24
 944 0003 53       		pushq	%rbx
 945              	.LCFI55:
 946              		.cfi_def_cfa_offset 32
 947              		.cfi_offset 3, -32
 728:src/mcu_msg.c ****     msg_wrap_str_t *sp;
 729:src/mcu_msg.c ****     msg_wrap_int_t *ip;
 730:src/mcu_msg.c ****     msg_wrap_float_t *fp;
 731:src/mcu_msg.c ****     char qmark;
 732:src/mcu_msg.c **** 
 733:src/mcu_msg.c ****     __print_obj_start(obj);
 948              		.loc 1 733 0
 949 0004 BF400000 		movl	$64, %edi
 949      00
 950 0009 FF150000 		call	*__msg_putc(%rip)
 950      0000
 951              	.LVL118:
 952 000f 488B7C24 		movq	32(%rsp), %rdi
 952      20
 953 0014 488B7424 		movq	40(%rsp), %rsi
 953      28
 954 0019 E8000000 		call	__msg_print_str
 954      00
 955              	.LVL119:
 956 001e BF280000 		movl	$40, %edi
 956      00
 957 0023 FF150000 		call	*__msg_putc(%rip)
 957      0000
 958              	.LVL120:
 734:src/mcu_msg.c ****     
 735:src/mcu_msg.c **** 
 736:src/mcu_msg.c ****     // print integers
 737:src/mcu_msg.c ****     for(ip = obj.int_queue; ip != NULL; ip = ip->next) {
 959              		.loc 1 737 0
 960 0029 4C8B6424 		movq	48(%rsp), %r12
 960      30
 961              	.LVL121:
 962 002e 4C89E3   		movq	%r12, %rbx
 963 0031 EB04     		jmp	.L103
 964              	.LVL122:
 965              	.L104:
 966              		.loc 1 737 0 is_stmt 0 discriminator 2
 967 0033 488B5B18 		movq	24(%rbx), %rbx
 968              	.LVL123:
 969              	.L103:
 970              		.loc 1 737 0 discriminator 1
 971 0037 4885DB   		testq	%rbx, %rbx
 972 003a 743E     		je	.L123
 738:src/mcu_msg.c ****         __print_key_equ(ip->id);
 973              		.loc 1 738 0 is_stmt 1
 974 003c BF240000 		movl	$36, %edi
 974      00
 975 0041 FF150000 		call	*__msg_putc(%rip)
 975      0000
GAS LISTING /tmp/cc31R1Mf.s 			page 33


 976              	.LVL124:
 977 0047 488B3B   		movq	(%rbx), %rdi
 978 004a 488B7308 		movq	8(%rbx), %rsi
 979 004e E8000000 		call	__msg_print_str
 979      00
 980              	.LVL125:
 981 0053 BF3D0000 		movl	$61, %edi
 981      00
 982 0058 FF150000 		call	*__msg_putc(%rip)
 982      0000
 983              	.LVL126:
 739:src/mcu_msg.c ****         __msg_print_int(ip->val);
 984              		.loc 1 739 0
 985 005e 8B7B10   		movl	16(%rbx), %edi
 986 0061 E8000000 		call	__msg_print_int
 986      00
 987              	.LVL127:
 740:src/mcu_msg.c ****         if(ip->next != NULL) __msg_putc(__CTRL_KEY_SEP);
 988              		.loc 1 740 0
 989 0066 48837B18 		cmpq	$0, 24(%rbx)
 989      00
 990 006b 74C6     		je	.L104
 991              		.loc 1 740 0 is_stmt 0 discriminator 1
 992 006d BF3B0000 		movl	$59, %edi
 992      00
 993 0072 FF150000 		call	*__msg_putc(%rip)
 993      0000
 994              	.LVL128:
 995 0078 EBB9     		jmp	.L104
 996              	.L123:
 741:src/mcu_msg.c ****     }
 742:src/mcu_msg.c **** 
 743:src/mcu_msg.c ****     // print floats
 744:src/mcu_msg.c ****     if(obj.float_queue != NULL && obj.int_queue != NULL) __msg_putc(__CTRL_KEY_SEP);
 997              		.loc 1 744 0 is_stmt 1
 998 007a 488B6C24 		movq	56(%rsp), %rbp
 998      38
 999 007f 4885ED   		testq	%rbp, %rbp
 1000 0082 7410     		je	.L106
 1001              		.loc 1 744 0 is_stmt 0 discriminator 1
 1002 0084 4D85E4   		testq	%r12, %r12
 1003 0087 740B     		je	.L106
 1004              		.loc 1 744 0 discriminator 2
 1005 0089 BF3B0000 		movl	$59, %edi
 1005      00
 1006 008e FF150000 		call	*__msg_putc(%rip)
 1006      0000
 1007              	.LVL129:
 1008              	.L106:
 737:src/mcu_msg.c ****         __print_key_equ(ip->id);
 1009              		.loc 1 737 0 is_stmt 1 discriminator 1
 1010 0094 4889EB   		movq	%rbp, %rbx
 1011              	.LVL130:
 1012 0097 EB04     		jmp	.L107
 1013              	.LVL131:
 1014              	.L108:
 745:src/mcu_msg.c ****     for(fp = obj.float_queue; fp != NULL; fp = fp->next) {
GAS LISTING /tmp/cc31R1Mf.s 			page 34


 1015              		.loc 1 745 0 discriminator 2
 1016 0099 488B5B18 		movq	24(%rbx), %rbx
 1017              	.LVL132:
 1018              	.L107:
 1019              		.loc 1 745 0 is_stmt 0 discriminator 1
 1020 009d 4885DB   		testq	%rbx, %rbx
 1021 00a0 7444     		je	.L124
 746:src/mcu_msg.c ****         __print_key_equ(fp->id);
 1022              		.loc 1 746 0 is_stmt 1
 1023 00a2 BF240000 		movl	$36, %edi
 1023      00
 1024 00a7 FF150000 		call	*__msg_putc(%rip)
 1024      0000
 1025              	.LVL133:
 1026 00ad 488B3B   		movq	(%rbx), %rdi
 1027 00b0 488B7308 		movq	8(%rbx), %rsi
 1028 00b4 E8000000 		call	__msg_print_str
 1028      00
 1029              	.LVL134:
 1030 00b9 BF3D0000 		movl	$61, %edi
 1030      00
 1031 00be FF150000 		call	*__msg_putc(%rip)
 1031      0000
 1032              	.LVL135:
 747:src/mcu_msg.c ****         __msg_print_float(fp->val, fp->prec);
 1033              		.loc 1 747 0
 1034 00c4 0FB67B14 		movzbl	20(%rbx), %edi
 1035 00c8 F30F1043 		movss	16(%rbx), %xmm0
 1035      10
 1036 00cd E8000000 		call	__msg_print_float
 1036      00
 1037              	.LVL136:
 748:src/mcu_msg.c ****         if(fp->next != NULL) __msg_putc(__CTRL_KEY_SEP);
 1038              		.loc 1 748 0
 1039 00d2 48837B18 		cmpq	$0, 24(%rbx)
 1039      00
 1040 00d7 74C0     		je	.L108
 1041              		.loc 1 748 0 is_stmt 0 discriminator 1
 1042 00d9 BF3B0000 		movl	$59, %edi
 1042      00
 1043 00de FF150000 		call	*__msg_putc(%rip)
 1043      0000
 1044              	.LVL137:
 1045 00e4 EBB3     		jmp	.L108
 1046              	.L124:
 749:src/mcu_msg.c ****     }
 750:src/mcu_msg.c **** 
 751:src/mcu_msg.c ****     // print strings
 752:src/mcu_msg.c ****     if(obj.string_queue != NULL && obj.float_queue != NULL) __msg_putc(__CTRL_KEY_SEP);
 1047              		.loc 1 752 0 is_stmt 1
 1048 00e6 488B5C24 		movq	64(%rsp), %rbx
 1048      40
 1049              	.LVL138:
 1050 00eb 4885DB   		testq	%rbx, %rbx
 1051 00ee 744E     		je	.L111
 1052              		.loc 1 752 0 is_stmt 0 discriminator 1
 1053 00f0 4885ED   		testq	%rbp, %rbp
GAS LISTING /tmp/cc31R1Mf.s 			page 35


 1054 00f3 7449     		je	.L111
 1055              		.loc 1 752 0 discriminator 2
 1056 00f5 BF3B0000 		movl	$59, %edi
 1056      00
 1057 00fa FF150000 		call	*__msg_putc(%rip)
 1057      0000
 1058              	.LVL139:
 1059 0100 EB3C     		jmp	.L111
 1060              	.LVL140:
 1061              	.L114:
 1062              	.LBB58:
 1063              	.LBB59:
 589:src/mcu_msg.c ****             case '\'' : return '"';
 1064              		.loc 1 589 0 is_stmt 1
 1065 0102 BD270000 		movl	$39, %ebp
 1065      00
 1066              	.L115:
 1067              	.LVL141:
 1068              	.LBE59:
 1069              	.LBE58:
 753:src/mcu_msg.c ****     for(sp = obj.string_queue; sp != NULL; sp = sp->next) {
 754:src/mcu_msg.c ****         __print_key_equ(sp->id);
 755:src/mcu_msg.c ****         qmark = __define_qmark(sp->content);
 756:src/mcu_msg.c ****         __msg_putc(qmark);
 1070              		.loc 1 756 0
 1071 0107 400FBEED 		movsbl	%bpl, %ebp
 1072 010b 89EF     		movl	%ebp, %edi
 1073 010d FF150000 		call	*__msg_putc(%rip)
 1073      0000
 1074              	.LVL142:
 757:src/mcu_msg.c ****         __msg_print_str(sp->content);
 1075              		.loc 1 757 0
 1076 0113 488B7B10 		movq	16(%rbx), %rdi
 1077 0117 488B7318 		movq	24(%rbx), %rsi
 1078 011b E8000000 		call	__msg_print_str
 1078      00
 1079              	.LVL143:
 758:src/mcu_msg.c ****         __msg_putc(qmark);
 1080              		.loc 1 758 0
 1081 0120 89EF     		movl	%ebp, %edi
 1082 0122 FF150000 		call	*__msg_putc(%rip)
 1082      0000
 1083              	.LVL144:
 759:src/mcu_msg.c ****         if(sp->next != NULL) __msg_putc(__CTRL_KEY_SEP);
 1084              		.loc 1 759 0
 1085 0128 48837B20 		cmpq	$0, 32(%rbx)
 1085      00
 1086 012d 740B     		je	.L117
 1087              		.loc 1 759 0 is_stmt 0 discriminator 1
 1088 012f BF3B0000 		movl	$59, %edi
 1088      00
 1089 0134 FF150000 		call	*__msg_putc(%rip)
 1089      0000
 1090              	.LVL145:
 1091              	.L117:
 753:src/mcu_msg.c ****         __print_key_equ(sp->id);
 1092              		.loc 1 753 0 is_stmt 1 discriminator 2
GAS LISTING /tmp/cc31R1Mf.s 			page 36


 1093 013a 488B5B20 		movq	32(%rbx), %rbx
 1094              	.LVL146:
 1095              	.L111:
 753:src/mcu_msg.c ****         __print_key_equ(sp->id);
 1096              		.loc 1 753 0 is_stmt 0 discriminator 1
 1097 013e 4885DB   		testq	%rbx, %rbx
 1098 0141 7472     		je	.L125
 754:src/mcu_msg.c ****         qmark = __define_qmark(sp->content);
 1099              		.loc 1 754 0 is_stmt 1
 1100 0143 BF240000 		movl	$36, %edi
 1100      00
 1101 0148 FF150000 		call	*__msg_putc(%rip)
 1101      0000
 1102              	.LVL147:
 1103 014e 488B3B   		movq	(%rbx), %rdi
 1104 0151 488B7308 		movq	8(%rbx), %rsi
 1105 0155 E8000000 		call	__msg_print_str
 1105      00
 1106              	.LVL148:
 1107 015a BF3D0000 		movl	$61, %edi
 1107      00
 1108 015f FF150000 		call	*__msg_putc(%rip)
 1108      0000
 1109              	.LVL149:
 1110 0165 488B4B10 		movq	16(%rbx), %rcx
 1111 0169 488B7B18 		movq	24(%rbx), %rdi
 1112              	.LBB63:
 1113              	.LBB62:
 586:src/mcu_msg.c ****     while(__is_p_in_str(str, p) && *p) {
 1114              		.loc 1 586 0
 1115 016d 4889CA   		movq	%rcx, %rdx
 1116              	.LVL150:
 1117              	.L112:
 1118              	.LBB60:
 1119              	.LBB61:
 185:src/mcu_msg.c **** }
 1120              		.loc 1 185 0
 1121 0170 4889D6   		movq	%rdx, %rsi
 1122 0173 4829CE   		subq	%rcx, %rsi
 1123 0176 0FB7C7   		movzwl	%di, %eax
 1124              	.LVL151:
 1125              	.LBE61:
 1126              	.LBE60:
 587:src/mcu_msg.c ****         switch(*p) {
 1127              		.loc 1 587 0
 1128 0179 4839C6   		cmpq	%rax, %rsi
 1129 017c 7D2D     		jge	.L120
 1130 017e 0FB602   		movzbl	(%rdx), %eax
 1131 0181 84C0     		testb	%al, %al
 1132 0183 7412     		je	.L126
 588:src/mcu_msg.c ****             case '"' :  return '\'';
 1133              		.loc 1 588 0
 1134 0185 3C22     		cmpb	$34, %al
 1135 0187 0F8475FF 		je	.L114
 1135      FFFF
 1136 018d 3C27     		cmpb	$39, %al
 1137 018f 7410     		je	.L119
GAS LISTING /tmp/cc31R1Mf.s 			page 37


 593:src/mcu_msg.c ****     }
 1138              		.loc 1 593 0
 1139 0191 4883C201 		addq	$1, %rdx
 1140              	.LVL152:
 1141 0195 EBD9     		jmp	.L112
 1142              	.L126:
 595:src/mcu_msg.c **** }
 1143              		.loc 1 595 0
 1144 0197 BD220000 		movl	$34, %ebp
 1144      00
 1145 019c E966FFFF 		jmp	.L115
 1145      FF
 1146              	.L119:
 590:src/mcu_msg.c ****             default: break;
 1147              		.loc 1 590 0
 1148 01a1 BD220000 		movl	$34, %ebp
 1148      00
 1149 01a6 E95CFFFF 		jmp	.L115
 1149      FF
 1150              	.L120:
 595:src/mcu_msg.c **** }
 1151              		.loc 1 595 0
 1152 01ab BD220000 		movl	$34, %ebp
 1152      00
 1153 01b0 E952FFFF 		jmp	.L115
 1153      FF
 1154              	.LVL153:
 1155              	.L125:
 1156              	.LBE62:
 1157              	.LBE63:
 760:src/mcu_msg.c ****     }
 761:src/mcu_msg.c **** 
 762:src/mcu_msg.c ****     __msg_putc(__CTRL_STOP_OBJ);
 1158              		.loc 1 762 0
 1159 01b5 BF290000 		movl	$41, %edi
 1159      00
 1160 01ba FF150000 		call	*__msg_putc(%rip)
 1160      0000
 1161              	.LVL154:
 763:src/mcu_msg.c **** }
 1162              		.loc 1 763 0
 1163 01c0 5B       		popq	%rbx
 1164              	.LCFI56:
 1165              		.cfi_def_cfa_offset 24
 1166              	.LVL155:
 1167 01c1 5D       		popq	%rbp
 1168              	.LCFI57:
 1169              		.cfi_def_cfa_offset 16
 1170 01c2 415C     		popq	%r12
 1171              	.LCFI58:
 1172              		.cfi_def_cfa_offset 8
 1173 01c4 C3       		ret
 1174              		.cfi_endproc
 1175              	.LFE59:
 1177              		.section	.text.__msg_wrapper_print_cmd,"ax",@progbits
 1179              	__msg_wrapper_print_cmd:
 1180              	.LFB60:
GAS LISTING /tmp/cc31R1Mf.s 			page 38


 764:src/mcu_msg.c **** 
 765:src/mcu_msg.c **** 
 766:src/mcu_msg.c **** 
 767:src/mcu_msg.c **** static inline void __msg_wrapper_print_cmd(msg_wrap_cmd_t cmd)
 768:src/mcu_msg.c **** {
 1181              		.loc 1 768 0
 1182              		.cfi_startproc
 1183 0000 4883EC08 		subq	$8, %rsp
 1184              	.LCFI59:
 1185              		.cfi_def_cfa_offset 16
 769:src/mcu_msg.c ****     if(cmd.cmd.s != NULL) {
 1186              		.loc 1 769 0
 1187 0004 48837C24 		cmpq	$0, 16(%rsp)
 1187      1000
 1188 000a 7425     		je	.L127
 770:src/mcu_msg.c ****         __msg_putc(__CTRL_CMD_START_FLAG);
 1189              		.loc 1 770 0
 1190 000c BF3C0000 		movl	$60, %edi
 1190      00
 1191 0011 FF150000 		call	*__msg_putc(%rip)
 1191      0000
 1192              	.LVL156:
 771:src/mcu_msg.c ****         __msg_print_str(cmd.cmd);
 1193              		.loc 1 771 0
 1194 0017 488B7C24 		movq	16(%rsp), %rdi
 1194      10
 1195 001c 488B7424 		movq	24(%rsp), %rsi
 1195      18
 1196 0021 E8000000 		call	__msg_print_str
 1196      00
 1197              	.LVL157:
 772:src/mcu_msg.c ****         __msg_putc(__CTRL_CMD_STOP_FLAG);
 1198              		.loc 1 772 0
 1199 0026 BF3E0000 		movl	$62, %edi
 1199      00
 1200 002b FF150000 		call	*__msg_putc(%rip)
 1200      0000
 1201              	.LVL158:
 1202              	.L127:
 773:src/mcu_msg.c ****     }
 774:src/mcu_msg.c **** }
 1203              		.loc 1 774 0
 1204 0031 4883C408 		addq	$8, %rsp
 1205              	.LCFI60:
 1206              		.cfi_def_cfa_offset 8
 1207 0035 C3       		ret
 1208              		.cfi_endproc
 1209              	.LFE60:
 1211              		.section	.text.__msg_wrapper_print_obj_to_buff,"ax",@progbits
 1213              	__msg_wrapper_print_obj_to_buff:
 1214              	.LFB84:
 775:src/mcu_msg.c **** 
 776:src/mcu_msg.c **** 
 777:src/mcu_msg.c **** 
 778:src/mcu_msg.c **** static void __msg_wrapper_print_msg(msg_wrap_t msg)
 779:src/mcu_msg.c **** {
 780:src/mcu_msg.c ****     msg_wrap_obj_t *pobj;
GAS LISTING /tmp/cc31R1Mf.s 			page 39


 781:src/mcu_msg.c ****     msg_wrap_cmd_t *pcmd;
 782:src/mcu_msg.c **** 
 783:src/mcu_msg.c ****     if(!__msg_putc || msg.id.s == NULL) // return if putchar not implemented
 784:src/mcu_msg.c ****         return;
 785:src/mcu_msg.c ****     __print_msg_start(msg);
 786:src/mcu_msg.c ****     
 787:src/mcu_msg.c ****     pcmd = msg.cmd_queue;
 788:src/mcu_msg.c ****     while(pcmd != NULL) {
 789:src/mcu_msg.c ****         __msg_wrapper_print_cmd(*pcmd);
 790:src/mcu_msg.c ****         pcmd = pcmd->next;   
 791:src/mcu_msg.c ****     }
 792:src/mcu_msg.c ****     pobj = msg.obj_queue;
 793:src/mcu_msg.c ****     while(pobj != NULL) {
 794:src/mcu_msg.c ****         __msg_wrapper_print_obj(*pobj);
 795:src/mcu_msg.c ****         pobj = pobj->next;   
 796:src/mcu_msg.c ****     }
 797:src/mcu_msg.c ****     __msg_putc(__CTRL_STOP_MSG);
 798:src/mcu_msg.c **** }
 799:src/mcu_msg.c **** 
 800:src/mcu_msg.c **** 
 801:src/mcu_msg.c **** 
 802:src/mcu_msg.c **** 
 803:src/mcu_msg.c **** void msg_wrap_destroy(msg_wrap_t *msg)
 804:src/mcu_msg.c **** {
 805:src/mcu_msg.c ****     msg_destroy_string(&msg->id);
 806:src/mcu_msg.c ****     msg->cmd_queue = NULL;
 807:src/mcu_msg.c ****     msg->obj_queue = NULL;
 808:src/mcu_msg.c **** }
 809:src/mcu_msg.c **** 
 810:src/mcu_msg.c **** void msg_wrap_destroy_obj(msg_wrap_obj_t *obj)
 811:src/mcu_msg.c **** {
 812:src/mcu_msg.c ****     msg_destroy_string(&obj->id);
 813:src/mcu_msg.c ****     obj->int_queue = NULL;
 814:src/mcu_msg.c ****     obj->float_queue = NULL;
 815:src/mcu_msg.c ****     obj->string_queue = NULL;
 816:src/mcu_msg.c ****     obj->next = NULL;
 817:src/mcu_msg.c **** }
 818:src/mcu_msg.c **** 
 819:src/mcu_msg.c **** void msg_wrap_destroy_cmd(msg_wrap_cmd_t *cmd)
 820:src/mcu_msg.c **** {
 821:src/mcu_msg.c ****     msg_destroy_string(&cmd->cmd);
 822:src/mcu_msg.c ****     cmd->next = NULL;
 823:src/mcu_msg.c **** }
 824:src/mcu_msg.c **** 
 825:src/mcu_msg.c **** void msg_wrap_destroy_str(msg_wrap_str_t *str)
 826:src/mcu_msg.c **** {
 827:src/mcu_msg.c ****     msg_destroy_string(&str->id);
 828:src/mcu_msg.c ****     msg_destroy_string(&str->content);
 829:src/mcu_msg.c ****     str->next = NULL;
 830:src/mcu_msg.c **** }
 831:src/mcu_msg.c **** 
 832:src/mcu_msg.c **** void msg_wrap_destroy_int(msg_wrap_int_t *i)
 833:src/mcu_msg.c **** {
 834:src/mcu_msg.c ****     msg_destroy_string(&i->id);
 835:src/mcu_msg.c ****     i->val = 0;
 836:src/mcu_msg.c ****     i->next = NULL;
 837:src/mcu_msg.c **** }
GAS LISTING /tmp/cc31R1Mf.s 			page 40


 838:src/mcu_msg.c **** 
 839:src/mcu_msg.c **** void msg_wrap_destroy_float(msg_wrap_float_t *f)
 840:src/mcu_msg.c **** {
 841:src/mcu_msg.c ****     msg_destroy_string(&f->id);
 842:src/mcu_msg.c ****     f->val = 0.0;
 843:src/mcu_msg.c ****     f->next = NULL;
 844:src/mcu_msg.c ****     f->prec = 0;
 845:src/mcu_msg.c **** }
 846:src/mcu_msg.c **** 
 847:src/mcu_msg.c **** 
 848:src/mcu_msg.c **** 
 849:src/mcu_msg.c **** msg_wrap_t msg_wrapper_init_msg(char *msg_id)
 850:src/mcu_msg.c **** {
 851:src/mcu_msg.c ****     msg_wrap_t res;
 852:src/mcu_msg.c ****     res.id = msg_init_string(msg_id);
 853:src/mcu_msg.c ****     res.cmd_queue = NULL;
 854:src/mcu_msg.c ****     res.obj_queue = NULL;
 855:src/mcu_msg.c ****     return res;
 856:src/mcu_msg.c **** }
 857:src/mcu_msg.c **** 
 858:src/mcu_msg.c **** 
 859:src/mcu_msg.c **** msg_wrap_cmd_t msg_wrapper_init_cmd(char *cmd)
 860:src/mcu_msg.c **** {
 861:src/mcu_msg.c ****     msg_wrap_cmd_t res;
 862:src/mcu_msg.c ****     res.cmd = msg_init_string(cmd);
 863:src/mcu_msg.c ****     res.next = NULL;
 864:src/mcu_msg.c ****     return res;
 865:src/mcu_msg.c **** }
 866:src/mcu_msg.c **** 
 867:src/mcu_msg.c **** msg_wrap_obj_t msg_wrapper_init_obj(char *obj_id)
 868:src/mcu_msg.c **** {
 869:src/mcu_msg.c ****     msg_wrap_obj_t res;
 870:src/mcu_msg.c ****     res.id = msg_init_string(obj_id);
 871:src/mcu_msg.c ****     res.int_queue = NULL;
 872:src/mcu_msg.c ****     res.float_queue = NULL;
 873:src/mcu_msg.c ****     res.string_queue = NULL;
 874:src/mcu_msg.c ****     res.next = NULL;
 875:src/mcu_msg.c ****     return res;
 876:src/mcu_msg.c **** }
 877:src/mcu_msg.c **** 
 878:src/mcu_msg.c **** msg_wrap_str_t msg_wrapper_init_string(char *id, char *content)
 879:src/mcu_msg.c **** {
 880:src/mcu_msg.c ****     msg_wrap_str_t res;
 881:src/mcu_msg.c ****     res.id = msg_init_string(id);
 882:src/mcu_msg.c ****     res.content = msg_init_string(content);
 883:src/mcu_msg.c ****     res.next = NULL;
 884:src/mcu_msg.c ****     return res;
 885:src/mcu_msg.c **** }
 886:src/mcu_msg.c **** 
 887:src/mcu_msg.c **** msg_wrap_int_t msg_wrapper_init_int(char *id, int val)
 888:src/mcu_msg.c **** {
 889:src/mcu_msg.c ****     msg_wrap_int_t res;
 890:src/mcu_msg.c ****     res.id = msg_init_string(id);
 891:src/mcu_msg.c ****     res.val = val;
 892:src/mcu_msg.c ****     res.next = NULL;
 893:src/mcu_msg.c ****     return res;
 894:src/mcu_msg.c **** }
GAS LISTING /tmp/cc31R1Mf.s 			page 41


 895:src/mcu_msg.c **** 
 896:src/mcu_msg.c **** msg_wrap_float_t msg_wrapper_init_float(char *id, float val, uint8_t prec)
 897:src/mcu_msg.c **** {
 898:src/mcu_msg.c ****     msg_wrap_float_t res;
 899:src/mcu_msg.c ****     res.id = msg_init_string(id);
 900:src/mcu_msg.c ****     res.val = val;
 901:src/mcu_msg.c ****     res.prec = prec;
 902:src/mcu_msg.c ****     res.next = NULL;
 903:src/mcu_msg.c ****     return res;
 904:src/mcu_msg.c **** }
 905:src/mcu_msg.c **** 
 906:src/mcu_msg.c **** 
 907:src/mcu_msg.c **** void msg_wrapper_add_string_to_obj(msg_wrap_obj_t *obj, msg_wrap_str_t *str)
 908:src/mcu_msg.c **** {
 909:src/mcu_msg.c ****     msg_wrap_str_t *strp;
 910:src/mcu_msg.c ****     if(obj->string_queue == NULL) { //empty
 911:src/mcu_msg.c ****         obj->string_queue = str;
 912:src/mcu_msg.c ****         obj->string_queue->next = NULL;
 913:src/mcu_msg.c ****     } else {
 914:src/mcu_msg.c ****         strp = obj->string_queue;
 915:src/mcu_msg.c **** 
 916:src/mcu_msg.c ****         while(strp->next != NULL) 
 917:src/mcu_msg.c ****             strp = strp->next;
 918:src/mcu_msg.c ****         strp->next = str;
 919:src/mcu_msg.c ****         str->next = NULL;
 920:src/mcu_msg.c ****     }
 921:src/mcu_msg.c **** }
 922:src/mcu_msg.c **** 
 923:src/mcu_msg.c **** 
 924:src/mcu_msg.c **** void msg_wrapper_rm_string_from_obj(msg_wrap_obj_t *obj, msg_wrap_str_t *str)
 925:src/mcu_msg.c **** {
 926:src/mcu_msg.c ****     msg_wrap_str_t *sp, *prev;
 927:src/mcu_msg.c ****     for(sp = obj->string_queue, prev = NULL; sp != NULL; sp = sp->next){
 928:src/mcu_msg.c ****         if(sp == str) { 
 929:src/mcu_msg.c ****             if(prev == NULL) { // if p is the head of the queue, reinit the head
 930:src/mcu_msg.c ****                 obj->string_queue = str->next;
 931:src/mcu_msg.c ****             } else {
 932:src/mcu_msg.c ****                 prev->next = str->next; //skip the expected
 933:src/mcu_msg.c ****             }
 934:src/mcu_msg.c ****             str->next = NULL; // reset next
 935:src/mcu_msg.c ****             return;
 936:src/mcu_msg.c ****         }
 937:src/mcu_msg.c ****         prev = sp;
 938:src/mcu_msg.c ****     }
 939:src/mcu_msg.c **** }
 940:src/mcu_msg.c **** 
 941:src/mcu_msg.c **** void msg_wrapper_add_int_to_obj(msg_wrap_obj_t *obj, msg_wrap_int_t *int_val)
 942:src/mcu_msg.c **** {
 943:src/mcu_msg.c ****     msg_wrap_int_t *ip;
 944:src/mcu_msg.c ****     if(obj->int_queue == NULL) { //first element
 945:src/mcu_msg.c ****         obj->int_queue = int_val;
 946:src/mcu_msg.c ****         obj->int_queue->next = NULL;
 947:src/mcu_msg.c ****     } else {
 948:src/mcu_msg.c ****         ip = obj->int_queue;
 949:src/mcu_msg.c **** 
 950:src/mcu_msg.c ****         while(ip->next != NULL) 
 951:src/mcu_msg.c ****             ip = ip->next;
GAS LISTING /tmp/cc31R1Mf.s 			page 42


 952:src/mcu_msg.c ****         ip->next = int_val;
 953:src/mcu_msg.c ****         int_val->next = NULL;
 954:src/mcu_msg.c ****     }
 955:src/mcu_msg.c **** }
 956:src/mcu_msg.c **** 
 957:src/mcu_msg.c **** 
 958:src/mcu_msg.c **** void msg_wrapper_rm_int_from_obj(msg_wrap_obj_t *obj, msg_wrap_int_t *i)
 959:src/mcu_msg.c **** {
 960:src/mcu_msg.c ****     msg_wrap_int_t *ip, *prev;
 961:src/mcu_msg.c ****     for(ip = obj->int_queue, prev = NULL; ip != NULL; ip = ip->next){
 962:src/mcu_msg.c ****         if(ip == i) {
 963:src/mcu_msg.c ****             if(prev == NULL) { // if p is the head of the queue, reinit the head
 964:src/mcu_msg.c ****                 obj->int_queue = i->next;
 965:src/mcu_msg.c ****             } else {
 966:src/mcu_msg.c ****                 prev->next = i->next; //skip the expected
 967:src/mcu_msg.c ****             }
 968:src/mcu_msg.c ****             i->next = NULL; // reset next
 969:src/mcu_msg.c ****             return;
 970:src/mcu_msg.c ****         }
 971:src/mcu_msg.c ****         prev = ip;
 972:src/mcu_msg.c ****     }
 973:src/mcu_msg.c **** }
 974:src/mcu_msg.c **** 
 975:src/mcu_msg.c **** void msg_wrapper_add_float_to_obj(msg_wrap_obj_t *obj, msg_wrap_float_t *float_val)
 976:src/mcu_msg.c **** {
 977:src/mcu_msg.c ****     msg_wrap_float_t *fp;
 978:src/mcu_msg.c ****     if(obj->float_queue == NULL) { //first element
 979:src/mcu_msg.c ****         obj->float_queue = float_val;
 980:src/mcu_msg.c ****         obj->float_queue->next = NULL;
 981:src/mcu_msg.c ****     } else {
 982:src/mcu_msg.c ****         fp = obj->float_queue;
 983:src/mcu_msg.c **** 
 984:src/mcu_msg.c ****         while(fp->next != NULL) 
 985:src/mcu_msg.c ****             fp = fp->next;
 986:src/mcu_msg.c ****         fp->next = float_val;
 987:src/mcu_msg.c ****         float_val->next = NULL;
 988:src/mcu_msg.c ****     }
 989:src/mcu_msg.c **** }
 990:src/mcu_msg.c **** 
 991:src/mcu_msg.c **** 
 992:src/mcu_msg.c **** void msg_wrapper_rm_float_from_obj(msg_wrap_obj_t *obj, msg_wrap_float_t *f)
 993:src/mcu_msg.c **** {
 994:src/mcu_msg.c ****     msg_wrap_float_t *fp, *prev;
 995:src/mcu_msg.c ****     for(fp = obj->float_queue, prev = NULL; fp != NULL; fp = fp->next){
 996:src/mcu_msg.c ****         if(fp == f) {
 997:src/mcu_msg.c ****             if(prev == NULL) { // if p is the head of the queue, reinit the head
 998:src/mcu_msg.c ****                 obj->float_queue = f->next;
 999:src/mcu_msg.c ****             } else {
1000:src/mcu_msg.c ****                 prev->next = f->next; //skip the expected
1001:src/mcu_msg.c ****             }
1002:src/mcu_msg.c ****             f->next = NULL; // reset next
1003:src/mcu_msg.c ****             return;
1004:src/mcu_msg.c ****         }
1005:src/mcu_msg.c ****         prev = fp;
1006:src/mcu_msg.c ****     }
1007:src/mcu_msg.c **** }
1008:src/mcu_msg.c **** 
GAS LISTING /tmp/cc31R1Mf.s 			page 43


1009:src/mcu_msg.c **** void msg_wrapper_add_object_to_msg(msg_wrap_t *msg, msg_wrap_obj_t *obj)
1010:src/mcu_msg.c **** {
1011:src/mcu_msg.c ****     msg_wrap_obj_t *op;
1012:src/mcu_msg.c ****     if(msg->obj_queue == NULL) { //if empty 
1013:src/mcu_msg.c ****         msg->obj_queue = obj;
1014:src/mcu_msg.c ****         msg->obj_queue->next = NULL;
1015:src/mcu_msg.c ****     } else {
1016:src/mcu_msg.c ****         op = msg->obj_queue;
1017:src/mcu_msg.c ****         while(op->next != NULL)
1018:src/mcu_msg.c ****             op = op->next;
1019:src/mcu_msg.c ****         op->next = obj;
1020:src/mcu_msg.c ****         obj->next = NULL;
1021:src/mcu_msg.c ****     }
1022:src/mcu_msg.c **** }
1023:src/mcu_msg.c **** 
1024:src/mcu_msg.c **** void msg_wrapper_rm_obj_from_msg(msg_wrap_t *msg, msg_wrap_obj_t *obj)
1025:src/mcu_msg.c **** {
1026:src/mcu_msg.c ****     msg_wrap_obj_t *op, *prev;
1027:src/mcu_msg.c ****     for(op = msg->obj_queue, prev = NULL; op != NULL; op = op->next){
1028:src/mcu_msg.c ****         if(op == obj) {
1029:src/mcu_msg.c ****             if(prev == NULL) { // if p is the head of the queue, reinit the head
1030:src/mcu_msg.c ****                 msg->obj_queue = obj->next;
1031:src/mcu_msg.c ****             } else {
1032:src/mcu_msg.c ****                 prev->next = obj->next; //skip the expected
1033:src/mcu_msg.c ****             }
1034:src/mcu_msg.c ****             obj->next = NULL; // reset next
1035:src/mcu_msg.c ****             return;
1036:src/mcu_msg.c ****         }
1037:src/mcu_msg.c ****         prev = op;
1038:src/mcu_msg.c ****     }    
1039:src/mcu_msg.c **** }
1040:src/mcu_msg.c **** 
1041:src/mcu_msg.c **** void msg_wrapper_add_cmd_to_msg(msg_wrap_t *msg, msg_wrap_cmd_t *cmd)
1042:src/mcu_msg.c **** {
1043:src/mcu_msg.c ****     msg_wrap_cmd_t *cp;
1044:src/mcu_msg.c ****     if(msg->cmd_queue == NULL) { //if empty 
1045:src/mcu_msg.c ****         msg->cmd_queue = cmd;
1046:src/mcu_msg.c ****         msg->cmd_queue->next = NULL;
1047:src/mcu_msg.c ****     } else {
1048:src/mcu_msg.c ****         cp = msg->cmd_queue;
1049:src/mcu_msg.c ****         while(cp->next != NULL)
1050:src/mcu_msg.c ****             cp = cp->next;
1051:src/mcu_msg.c ****         cp->next = cmd;
1052:src/mcu_msg.c ****         cmd->next = NULL;
1053:src/mcu_msg.c ****     }
1054:src/mcu_msg.c **** }
1055:src/mcu_msg.c **** 
1056:src/mcu_msg.c **** void msg_wrapper_rm_cmd_from_msg(msg_wrap_t *msg, msg_wrap_cmd_t *cmd)
1057:src/mcu_msg.c **** {
1058:src/mcu_msg.c ****     msg_wrap_cmd_t *cp, *prev;
1059:src/mcu_msg.c ****     for(cp = msg->cmd_queue, prev = NULL; cp != NULL; cp = cp->next){
1060:src/mcu_msg.c ****         if(cp == cmd) {
1061:src/mcu_msg.c ****             if(prev == NULL) { // if p is the head of the queue, reinit the head
1062:src/mcu_msg.c ****                 msg->cmd_queue = cmd->next;
1063:src/mcu_msg.c ****             } else {
1064:src/mcu_msg.c ****                 prev->next = cmd->next; //skip the expected
1065:src/mcu_msg.c ****             }
GAS LISTING /tmp/cc31R1Mf.s 			page 44


1066:src/mcu_msg.c ****             cmd->next = NULL; // reset next
1067:src/mcu_msg.c ****             return;
1068:src/mcu_msg.c ****         }
1069:src/mcu_msg.c ****         prev = cp;
1070:src/mcu_msg.c ****     }    
1071:src/mcu_msg.c **** }
1072:src/mcu_msg.c **** 
1073:src/mcu_msg.c **** #endif
1074:src/mcu_msg.c **** 
1075:src/mcu_msg.c **** 
1076:src/mcu_msg.c **** /*Use buffering in wrapper features*/
1077:src/mcu_msg.c **** #if (MCU_MSG_USE_WRAPPER && MCU_MSG_USE_BUFFERING)
1078:src/mcu_msg.c **** #define __print_key_equ_to_buff(buffp,key_str) __msg_putc_to_buff(buffp, __CTRL_KEY_FLAG); \
1079:src/mcu_msg.c ****                                                __msg_print_str_to_buff(buffp, key_str);    \
1080:src/mcu_msg.c ****                                                __msg_putc_to_buff(buffp, __CTRL_KEY_EQU)
1081:src/mcu_msg.c **** 
1082:src/mcu_msg.c **** #define __print_msg_start_to_buff(buffp,msg)   __msg_putc_to_buff(buffp, __CTRL_MSG_FLAG); \
1083:src/mcu_msg.c ****                                                __msg_print_str_to_buff(buffp, msg.id);     \
1084:src/mcu_msg.c ****                                                __msg_putc_to_buff(buffp, __CTRL_START_MSG)
1085:src/mcu_msg.c **** 
1086:src/mcu_msg.c **** 
1087:src/mcu_msg.c **** #define __print_obj_start_to_buff(buffp,obj)   __msg_putc_to_buff(buffp, __CTRL_OBJ_FLAG);  \
1088:src/mcu_msg.c ****                                                __msg_print_str_to_buff(buffp, obj.id);      \
1089:src/mcu_msg.c ****                                                __msg_putc_to_buff(buffp, __CTRL_START_OBJ)
1090:src/mcu_msg.c **** 
1091:src/mcu_msg.c **** static msg_size_t __msg_wrapper_print_obj_to_buff(msg_str_buff_t *buff, msg_wrap_obj_t obj)
1092:src/mcu_msg.c **** {
 1215              		.loc 1 1092 0
 1216              		.cfi_startproc
 1217              	.LVL159:
 1218 0000 4155     		pushq	%r13
 1219              	.LCFI61:
 1220              		.cfi_def_cfa_offset 16
 1221              		.cfi_offset 13, -16
 1222 0002 4154     		pushq	%r12
 1223              	.LCFI62:
 1224              		.cfi_def_cfa_offset 24
 1225              		.cfi_offset 12, -24
 1226 0004 55       		pushq	%rbp
 1227              	.LCFI63:
 1228              		.cfi_def_cfa_offset 32
 1229              		.cfi_offset 6, -32
 1230 0005 53       		pushq	%rbx
 1231              	.LCFI64:
 1232              		.cfi_def_cfa_offset 40
 1233              		.cfi_offset 3, -40
 1234 0006 4889FB   		movq	%rdi, %rbx
1093:src/mcu_msg.c ****     msg_wrap_str_t *sp;
1094:src/mcu_msg.c ****     msg_wrap_int_t *ip;
1095:src/mcu_msg.c ****     msg_wrap_float_t *fp;
1096:src/mcu_msg.c ****     char qmark;
1097:src/mcu_msg.c **** 
1098:src/mcu_msg.c ****     __print_obj_start_to_buff(buff, obj);
 1235              		.loc 1 1098 0
 1236 0009 BE400000 		movl	$64, %esi
 1236      00
 1237 000e E8000000 		call	__msg_putc_to_buff
GAS LISTING /tmp/cc31R1Mf.s 			page 45


 1237      00
 1238              	.LVL160:
 1239 0013 488B7424 		movq	40(%rsp), %rsi
 1239      28
 1240 0018 488B5424 		movq	48(%rsp), %rdx
 1240      30
 1241 001d 4889DF   		movq	%rbx, %rdi
 1242 0020 E8000000 		call	__msg_print_str_to_buff
 1242      00
 1243              	.LVL161:
 1244 0025 BE280000 		movl	$40, %esi
 1244      00
 1245 002a 4889DF   		movq	%rbx, %rdi
 1246 002d E8000000 		call	__msg_putc_to_buff
 1246      00
 1247              	.LVL162:
1099:src/mcu_msg.c **** 
1100:src/mcu_msg.c ****     // print integers
1101:src/mcu_msg.c ****     for(ip = obj.int_queue; ip != NULL; ip = ip->next) {
 1248              		.loc 1 1101 0
 1249 0032 4C8B6C24 		movq	56(%rsp), %r13
 1249      38
 1250              	.LVL163:
 1251 0037 4C89ED   		movq	%r13, %rbp
 1252 003a EB04     		jmp	.L131
 1253              	.LVL164:
 1254              	.L132:
 1255              		.loc 1 1101 0 is_stmt 0 discriminator 2
 1256 003c 488B6D18 		movq	24(%rbp), %rbp
 1257              	.LVL165:
 1258              	.L131:
 1259              		.loc 1 1101 0 discriminator 1
 1260 0040 4885ED   		testq	%rbp, %rbp
 1261 0043 744B     		je	.L151
1102:src/mcu_msg.c ****         __print_key_equ_to_buff(buff, ip->id);
 1262              		.loc 1 1102 0 is_stmt 1
 1263 0045 BE240000 		movl	$36, %esi
 1263      00
 1264 004a 4889DF   		movq	%rbx, %rdi
 1265 004d E8000000 		call	__msg_putc_to_buff
 1265      00
 1266              	.LVL166:
 1267 0052 488B7500 		movq	0(%rbp), %rsi
 1268 0056 488B5508 		movq	8(%rbp), %rdx
 1269 005a 4889DF   		movq	%rbx, %rdi
 1270 005d E8000000 		call	__msg_print_str_to_buff
 1270      00
 1271              	.LVL167:
 1272 0062 BE3D0000 		movl	$61, %esi
 1272      00
 1273 0067 4889DF   		movq	%rbx, %rdi
 1274 006a E8000000 		call	__msg_putc_to_buff
 1274      00
 1275              	.LVL168:
1103:src/mcu_msg.c ****         __msg_print_int_to_buff(buff, ip->val);
 1276              		.loc 1 1103 0
 1277 006f 8B7510   		movl	16(%rbp), %esi
GAS LISTING /tmp/cc31R1Mf.s 			page 46


 1278 0072 4889DF   		movq	%rbx, %rdi
 1279 0075 E8000000 		call	__msg_print_int_to_buff
 1279      00
 1280              	.LVL169:
1104:src/mcu_msg.c ****         if(ip->next != NULL) __msg_putc_to_buff(buff, __CTRL_KEY_SEP);
 1281              		.loc 1 1104 0
 1282 007a 48837D18 		cmpq	$0, 24(%rbp)
 1282      00
 1283 007f 74BB     		je	.L132
 1284              		.loc 1 1104 0 is_stmt 0 discriminator 1
 1285 0081 BE3B0000 		movl	$59, %esi
 1285      00
 1286 0086 4889DF   		movq	%rbx, %rdi
 1287 0089 E8000000 		call	__msg_putc_to_buff
 1287      00
 1288              	.LVL170:
 1289 008e EBAC     		jmp	.L132
 1290              	.L151:
1105:src/mcu_msg.c ****     }
1106:src/mcu_msg.c **** 
1107:src/mcu_msg.c ****     // print floats
1108:src/mcu_msg.c ****     if(obj.float_queue != NULL && obj.int_queue != NULL) __msg_putc_to_buff(buff, __CTRL_KEY_SEP);
 1291              		.loc 1 1108 0 is_stmt 1
 1292 0090 4C8B6424 		movq	64(%rsp), %r12
 1292      40
 1293 0095 4D85E4   		testq	%r12, %r12
 1294 0098 7412     		je	.L134
 1295              		.loc 1 1108 0 is_stmt 0 discriminator 1
 1296 009a 4D85ED   		testq	%r13, %r13
 1297 009d 740D     		je	.L134
 1298              		.loc 1 1108 0 discriminator 2
 1299 009f BE3B0000 		movl	$59, %esi
 1299      00
 1300 00a4 4889DF   		movq	%rbx, %rdi
 1301 00a7 E8000000 		call	__msg_putc_to_buff
 1301      00
 1302              	.LVL171:
 1303              	.L134:
1101:src/mcu_msg.c ****         __print_key_equ_to_buff(buff, ip->id);
 1304              		.loc 1 1101 0 is_stmt 1 discriminator 1
 1305 00ac 4C89E5   		movq	%r12, %rbp
 1306              	.LVL172:
 1307 00af EB04     		jmp	.L135
 1308              	.LVL173:
 1309              	.L136:
1109:src/mcu_msg.c ****     for(fp = obj.float_queue; fp != NULL; fp = fp->next) {
 1310              		.loc 1 1109 0 discriminator 2
 1311 00b1 488B6D18 		movq	24(%rbp), %rbp
 1312              	.LVL174:
 1313              	.L135:
 1314              		.loc 1 1109 0 is_stmt 0 discriminator 1
 1315 00b5 4885ED   		testq	%rbp, %rbp
 1316 00b8 7451     		je	.L152
1110:src/mcu_msg.c ****         __print_key_equ_to_buff(buff, fp->id);
 1317              		.loc 1 1110 0 is_stmt 1
 1318 00ba BE240000 		movl	$36, %esi
 1318      00
GAS LISTING /tmp/cc31R1Mf.s 			page 47


 1319 00bf 4889DF   		movq	%rbx, %rdi
 1320 00c2 E8000000 		call	__msg_putc_to_buff
 1320      00
 1321              	.LVL175:
 1322 00c7 488B7500 		movq	0(%rbp), %rsi
 1323 00cb 488B5508 		movq	8(%rbp), %rdx
 1324 00cf 4889DF   		movq	%rbx, %rdi
 1325 00d2 E8000000 		call	__msg_print_str_to_buff
 1325      00
 1326              	.LVL176:
 1327 00d7 BE3D0000 		movl	$61, %esi
 1327      00
 1328 00dc 4889DF   		movq	%rbx, %rdi
 1329 00df E8000000 		call	__msg_putc_to_buff
 1329      00
 1330              	.LVL177:
1111:src/mcu_msg.c ****         __msg_print_float_to_buff(buff, fp->val, fp->prec);
 1331              		.loc 1 1111 0
 1332 00e4 0FB67514 		movzbl	20(%rbp), %esi
 1333 00e8 F30F1045 		movss	16(%rbp), %xmm0
 1333      10
 1334 00ed 4889DF   		movq	%rbx, %rdi
 1335 00f0 E8000000 		call	__msg_print_float_to_buff
 1335      00
 1336              	.LVL178:
1112:src/mcu_msg.c ****         if(fp->next != NULL) __msg_putc_to_buff(buff, __CTRL_KEY_SEP);
 1337              		.loc 1 1112 0
 1338 00f5 48837D18 		cmpq	$0, 24(%rbp)
 1338      00
 1339 00fa 74B5     		je	.L136
 1340              		.loc 1 1112 0 is_stmt 0 discriminator 1
 1341 00fc BE3B0000 		movl	$59, %esi
 1341      00
 1342 0101 4889DF   		movq	%rbx, %rdi
 1343 0104 E8000000 		call	__msg_putc_to_buff
 1343      00
 1344              	.LVL179:
 1345 0109 EBA6     		jmp	.L136
 1346              	.L152:
1113:src/mcu_msg.c ****     }
1114:src/mcu_msg.c **** 
1115:src/mcu_msg.c ****     // print strings
1116:src/mcu_msg.c ****     if(obj.string_queue != NULL && obj.float_queue != NULL) __msg_putc_to_buff(buff, __CTRL_KEY_SEP
 1347              		.loc 1 1116 0 is_stmt 1
 1348 010b 488B6C24 		movq	72(%rsp), %rbp
 1348      48
 1349              	.LVL180:
 1350 0110 4885ED   		testq	%rbp, %rbp
 1351 0113 745C     		je	.L139
 1352              		.loc 1 1116 0 is_stmt 0 discriminator 1
 1353 0115 4D85E4   		testq	%r12, %r12
 1354 0118 7457     		je	.L139
 1355              		.loc 1 1116 0 discriminator 2
 1356 011a BE3B0000 		movl	$59, %esi
 1356      00
 1357 011f 4889DF   		movq	%rbx, %rdi
 1358 0122 E8000000 		call	__msg_putc_to_buff
GAS LISTING /tmp/cc31R1Mf.s 			page 48


 1358      00
 1359              	.LVL181:
 1360 0127 EB48     		jmp	.L139
 1361              	.LVL182:
 1362              	.L142:
 1363              	.LBB64:
 1364              	.LBB65:
 589:src/mcu_msg.c ****             case '\'' : return '"';
 1365              		.loc 1 589 0 is_stmt 1
 1366 0129 41BC2700 		movl	$39, %r12d
 1366      0000
 1367              	.L143:
 1368              	.LVL183:
 1369              	.LBE65:
 1370              	.LBE64:
1117:src/mcu_msg.c ****     for(sp = obj.string_queue; sp != NULL; sp = sp->next) {
1118:src/mcu_msg.c ****         __print_key_equ_to_buff(buff, sp->id);
1119:src/mcu_msg.c ****         qmark = __define_qmark(sp->content);
1120:src/mcu_msg.c ****         __msg_putc_to_buff(buff, qmark);
 1371              		.loc 1 1120 0
 1372 012f 450FBEE4 		movsbl	%r12b, %r12d
 1373 0133 4489E6   		movl	%r12d, %esi
 1374 0136 4889DF   		movq	%rbx, %rdi
 1375 0139 E8000000 		call	__msg_putc_to_buff
 1375      00
 1376              	.LVL184:
1121:src/mcu_msg.c ****         __msg_print_str_to_buff(buff, sp->content);
 1377              		.loc 1 1121 0
 1378 013e 488B7510 		movq	16(%rbp), %rsi
 1379 0142 488B5518 		movq	24(%rbp), %rdx
 1380 0146 4889DF   		movq	%rbx, %rdi
 1381 0149 E8000000 		call	__msg_print_str_to_buff
 1381      00
 1382              	.LVL185:
1122:src/mcu_msg.c ****         __msg_putc_to_buff(buff, qmark);
 1383              		.loc 1 1122 0
 1384 014e 4489E6   		movl	%r12d, %esi
 1385 0151 4889DF   		movq	%rbx, %rdi
 1386 0154 E8000000 		call	__msg_putc_to_buff
 1386      00
 1387              	.LVL186:
1123:src/mcu_msg.c ****         if(sp->next != NULL) __msg_putc_to_buff(buff, __CTRL_KEY_SEP);
 1388              		.loc 1 1123 0
 1389 0159 48837D20 		cmpq	$0, 32(%rbp)
 1389      00
 1390 015e 740D     		je	.L145
 1391              		.loc 1 1123 0 is_stmt 0 discriminator 1
 1392 0160 BE3B0000 		movl	$59, %esi
 1392      00
 1393 0165 4889DF   		movq	%rbx, %rdi
 1394 0168 E8000000 		call	__msg_putc_to_buff
 1394      00
 1395              	.LVL187:
 1396              	.L145:
1117:src/mcu_msg.c ****         __print_key_equ_to_buff(buff, sp->id);
 1397              		.loc 1 1117 0 is_stmt 1 discriminator 2
 1398 016d 488B6D20 		movq	32(%rbp), %rbp
GAS LISTING /tmp/cc31R1Mf.s 			page 49


 1399              	.LVL188:
 1400              	.L139:
1117:src/mcu_msg.c ****         __print_key_equ_to_buff(buff, sp->id);
 1401              		.loc 1 1117 0 is_stmt 0 discriminator 1
 1402 0171 4885ED   		testq	%rbp, %rbp
 1403 0174 747D     		je	.L153
1118:src/mcu_msg.c ****         qmark = __define_qmark(sp->content);
 1404              		.loc 1 1118 0 is_stmt 1
 1405 0176 BE240000 		movl	$36, %esi
 1405      00
 1406 017b 4889DF   		movq	%rbx, %rdi
 1407 017e E8000000 		call	__msg_putc_to_buff
 1407      00
 1408              	.LVL189:
 1409 0183 488B7500 		movq	0(%rbp), %rsi
 1410 0187 488B5508 		movq	8(%rbp), %rdx
 1411 018b 4889DF   		movq	%rbx, %rdi
 1412 018e E8000000 		call	__msg_print_str_to_buff
 1412      00
 1413              	.LVL190:
 1414 0193 BE3D0000 		movl	$61, %esi
 1414      00
 1415 0198 4889DF   		movq	%rbx, %rdi
 1416 019b E8000000 		call	__msg_putc_to_buff
 1416      00
 1417              	.LVL191:
 1418 01a0 488B4D10 		movq	16(%rbp), %rcx
 1419 01a4 488B7D18 		movq	24(%rbp), %rdi
 1420              	.LBB69:
 1421              	.LBB68:
 586:src/mcu_msg.c ****     while(__is_p_in_str(str, p) && *p) {
 1422              		.loc 1 586 0
 1423 01a8 4889CA   		movq	%rcx, %rdx
 1424              	.LVL192:
 1425              	.L140:
 1426              	.LBB66:
 1427              	.LBB67:
 185:src/mcu_msg.c **** }
 1428              		.loc 1 185 0
 1429 01ab 4889D6   		movq	%rdx, %rsi
 1430 01ae 4829CE   		subq	%rcx, %rsi
 1431 01b1 0FB7C7   		movzwl	%di, %eax
 1432              	.LVL193:
 1433              	.LBE67:
 1434              	.LBE66:
 587:src/mcu_msg.c ****         switch(*p) {
 1435              		.loc 1 587 0
 1436 01b4 4839C6   		cmpq	%rax, %rsi
 1437 01b7 7D2F     		jge	.L148
 1438 01b9 0FB602   		movzbl	(%rdx), %eax
 1439 01bc 84C0     		testb	%al, %al
 1440 01be 7412     		je	.L154
 588:src/mcu_msg.c ****             case '"' :  return '\'';
 1441              		.loc 1 588 0
 1442 01c0 3C22     		cmpb	$34, %al
 1443 01c2 0F8461FF 		je	.L142
 1443      FFFF
GAS LISTING /tmp/cc31R1Mf.s 			page 50


 1444 01c8 3C27     		cmpb	$39, %al
 1445 01ca 7411     		je	.L147
 593:src/mcu_msg.c ****     }
 1446              		.loc 1 593 0
 1447 01cc 4883C201 		addq	$1, %rdx
 1448              	.LVL194:
 1449 01d0 EBD9     		jmp	.L140
 1450              	.L154:
 595:src/mcu_msg.c **** }
 1451              		.loc 1 595 0
 1452 01d2 41BC2200 		movl	$34, %r12d
 1452      0000
 1453 01d8 E952FFFF 		jmp	.L143
 1453      FF
 1454              	.L147:
 590:src/mcu_msg.c ****             default: break;
 1455              		.loc 1 590 0
 1456 01dd 41BC2200 		movl	$34, %r12d
 1456      0000
 1457 01e3 E947FFFF 		jmp	.L143
 1457      FF
 1458              	.L148:
 595:src/mcu_msg.c **** }
 1459              		.loc 1 595 0
 1460 01e8 41BC2200 		movl	$34, %r12d
 1460      0000
 1461 01ee E93CFFFF 		jmp	.L143
 1461      FF
 1462              	.LVL195:
 1463              	.L153:
 1464              	.LBE68:
 1465              	.LBE69:
1124:src/mcu_msg.c ****     }
1125:src/mcu_msg.c **** 
1126:src/mcu_msg.c ****     __msg_putc_to_buff(buff, __CTRL_STOP_OBJ);
 1466              		.loc 1 1126 0
 1467 01f3 BE290000 		movl	$41, %esi
 1467      00
 1468 01f8 4889DF   		movq	%rbx, %rdi
 1469 01fb E8000000 		call	__msg_putc_to_buff
 1469      00
 1470              	.LVL196:
1127:src/mcu_msg.c ****     return buff->buff.len - (buff->p - buff->buff.s); //return free space in byte
 1471              		.loc 1 1127 0
 1472 0200 0FB74308 		movzwl	8(%rbx), %eax
 1473 0204 488B5310 		movq	16(%rbx), %rdx
 1474 0208 482B13   		subq	(%rbx), %rdx
 1475 020b 29D0     		subl	%edx, %eax
1128:src/mcu_msg.c **** }
 1476              		.loc 1 1128 0
 1477 020d 5B       		popq	%rbx
 1478              	.LCFI65:
 1479              		.cfi_def_cfa_offset 32
 1480              	.LVL197:
 1481 020e 5D       		popq	%rbp
 1482              	.LCFI66:
 1483              		.cfi_def_cfa_offset 24
GAS LISTING /tmp/cc31R1Mf.s 			page 51


 1484              	.LVL198:
 1485 020f 415C     		popq	%r12
 1486              	.LCFI67:
 1487              		.cfi_def_cfa_offset 16
 1488 0211 415D     		popq	%r13
 1489              	.LCFI68:
 1490              		.cfi_def_cfa_offset 8
 1491 0213 C3       		ret
 1492              		.cfi_endproc
 1493              	.LFE84:
 1495              		.section	.text.__msg_wrapper_print_msg_to_buff,"ax",@progbits
 1497              	__msg_wrapper_print_msg_to_buff:
 1498              	.LFB86:
1129:src/mcu_msg.c **** 
1130:src/mcu_msg.c **** static inline msg_size_t __msg_wrapper_print_cmd_to_buff(msg_str_buff_t *buff, msg_wrap_cmd_t cmd)
1131:src/mcu_msg.c **** {
1132:src/mcu_msg.c ****     __msg_putc_to_buff(buff, __CTRL_CMD_START_FLAG);
1133:src/mcu_msg.c ****     __msg_print_str_to_buff(buff, cmd.cmd);
1134:src/mcu_msg.c ****     __msg_putc_to_buff(buff, __CTRL_CMD_STOP_FLAG);
1135:src/mcu_msg.c ****     return buff->buff.len - (buff->p - buff->buff.s); //return free space in byte
1136:src/mcu_msg.c **** }
1137:src/mcu_msg.c **** 
1138:src/mcu_msg.c **** static msg_size_t __msg_wrapper_print_msg_to_buff(msg_str_buff_t *buff, msg_wrap_t msg)
1139:src/mcu_msg.c **** {
 1499              		.loc 1 1139 0
 1500              		.cfi_startproc
 1501              	.LVL199:
 1502 0000 55       		pushq	%rbp
 1503              	.LCFI69:
 1504              		.cfi_def_cfa_offset 16
 1505              		.cfi_offset 6, -16
 1506 0001 53       		pushq	%rbx
 1507              	.LCFI70:
 1508              		.cfi_def_cfa_offset 24
 1509              		.cfi_offset 3, -24
 1510 0002 4883EC20 		subq	$32, %rsp
 1511              	.LCFI71:
 1512              		.cfi_def_cfa_offset 56
 1513 0006 4889FD   		movq	%rdi, %rbp
1140:src/mcu_msg.c ****     msg_wrap_obj_t *pobj;
1141:src/mcu_msg.c ****     msg_wrap_cmd_t *pcmd;
1142:src/mcu_msg.c **** 
1143:src/mcu_msg.c ****     __print_msg_start_to_buff(buff, msg);
 1514              		.loc 1 1143 0
 1515 0009 BE230000 		movl	$35, %esi
 1515      00
 1516 000e E8000000 		call	__msg_putc_to_buff
 1516      00
 1517              	.LVL200:
 1518 0013 488B7424 		movq	56(%rsp), %rsi
 1518      38
 1519 0018 488B5424 		movq	64(%rsp), %rdx
 1519      40
 1520 001d 4889EF   		movq	%rbp, %rdi
 1521 0020 E8000000 		call	__msg_print_str_to_buff
 1521      00
 1522              	.LVL201:
GAS LISTING /tmp/cc31R1Mf.s 			page 52


 1523 0025 BE7B0000 		movl	$123, %esi
 1523      00
 1524 002a 4889EF   		movq	%rbp, %rdi
 1525 002d E8000000 		call	__msg_putc_to_buff
 1525      00
 1526              	.LVL202:
1144:src/mcu_msg.c ****     
1145:src/mcu_msg.c ****     pcmd = msg.cmd_queue;
 1527              		.loc 1 1145 0
 1528 0032 488B5C24 		movq	80(%rsp), %rbx
 1528      50
 1529              	.LVL203:
1146:src/mcu_msg.c ****     while(pcmd != NULL) {
 1530              		.loc 1 1146 0
 1531 0037 EB48     		jmp	.L156
 1532              	.L157:
 1533              	.LVL204:
 1534 0039 488B03   		movq	(%rbx), %rax
 1535 003c 488B5308 		movq	8(%rbx), %rdx
 1536 0040 48890424 		movq	%rax, (%rsp)
 1537 0044 48895424 		movq	%rdx, 8(%rsp)
 1537      08
 1538 0049 488B4310 		movq	16(%rbx), %rax
 1539 004d 48894424 		movq	%rax, 16(%rsp)
 1539      10
 1540              	.LBB72:
 1541              	.LBB73:
1132:src/mcu_msg.c ****     __msg_print_str_to_buff(buff, cmd.cmd);
 1542              		.loc 1 1132 0
 1543 0052 BE3C0000 		movl	$60, %esi
 1543      00
 1544 0057 4889EF   		movq	%rbp, %rdi
 1545 005a E8000000 		call	__msg_putc_to_buff
 1545      00
 1546              	.LVL205:
1133:src/mcu_msg.c ****     __msg_putc_to_buff(buff, __CTRL_CMD_STOP_FLAG);
 1547              		.loc 1 1133 0
 1548 005f 488B3424 		movq	(%rsp), %rsi
 1549 0063 488B5424 		movq	8(%rsp), %rdx
 1549      08
 1550 0068 4889EF   		movq	%rbp, %rdi
 1551 006b E8000000 		call	__msg_print_str_to_buff
 1551      00
 1552              	.LVL206:
1134:src/mcu_msg.c ****     return buff->buff.len - (buff->p - buff->buff.s); //return free space in byte
 1553              		.loc 1 1134 0
 1554 0070 BE3E0000 		movl	$62, %esi
 1554      00
 1555 0075 4889EF   		movq	%rbp, %rdi
 1556 0078 E8000000 		call	__msg_putc_to_buff
 1556      00
 1557              	.LVL207:
 1558              	.LBE73:
 1559              	.LBE72:
1147:src/mcu_msg.c ****         __msg_wrapper_print_cmd_to_buff(buff, *pcmd);
1148:src/mcu_msg.c ****         pcmd = pcmd->next;   
 1560              		.loc 1 1148 0
GAS LISTING /tmp/cc31R1Mf.s 			page 53


 1561 007d 488B5B10 		movq	16(%rbx), %rbx
 1562              	.LVL208:
 1563              	.L156:
1146:src/mcu_msg.c ****         __msg_wrapper_print_cmd_to_buff(buff, *pcmd);
 1564              		.loc 1 1146 0
 1565 0081 4885DB   		testq	%rbx, %rbx
 1566 0084 75B3     		jne	.L157
1149:src/mcu_msg.c ****     }
1150:src/mcu_msg.c ****     pobj = msg.obj_queue;
 1567              		.loc 1 1150 0
 1568 0086 488B5C24 		movq	72(%rsp), %rbx
 1568      48
 1569              	.LVL209:
1151:src/mcu_msg.c ****     while(pobj != NULL) {
 1570              		.loc 1 1151 0
 1571 008b EB21     		jmp	.L158
 1572              	.L159:
1152:src/mcu_msg.c ****         __msg_wrapper_print_obj_to_buff(buff, *pobj);
 1573              		.loc 1 1152 0
 1574 008d FF7328   		pushq	40(%rbx)
 1575              	.LCFI72:
 1576              		.cfi_def_cfa_offset 64
 1577 0090 FF7320   		pushq	32(%rbx)
 1578              	.LCFI73:
 1579              		.cfi_def_cfa_offset 72
 1580 0093 FF7318   		pushq	24(%rbx)
 1581              	.LCFI74:
 1582              		.cfi_def_cfa_offset 80
 1583 0096 FF7310   		pushq	16(%rbx)
 1584              	.LCFI75:
 1585              		.cfi_def_cfa_offset 88
 1586 0099 FF7308   		pushq	8(%rbx)
 1587              	.LCFI76:
 1588              		.cfi_def_cfa_offset 96
 1589 009c FF33     		pushq	(%rbx)
 1590              	.LCFI77:
 1591              		.cfi_def_cfa_offset 104
 1592 009e 4889EF   		movq	%rbp, %rdi
 1593 00a1 E8000000 		call	__msg_wrapper_print_obj_to_buff
 1593      00
 1594              	.LVL210:
1153:src/mcu_msg.c ****         pobj = pobj->next;   
 1595              		.loc 1 1153 0
 1596 00a6 488B5B28 		movq	40(%rbx), %rbx
 1597              	.LVL211:
 1598 00aa 4883C430 		addq	$48, %rsp
 1599              	.LCFI78:
 1600              		.cfi_def_cfa_offset 56
 1601              	.L158:
1151:src/mcu_msg.c ****     while(pobj != NULL) {
 1602              		.loc 1 1151 0
 1603 00ae 4885DB   		testq	%rbx, %rbx
 1604 00b1 75DA     		jne	.L159
1154:src/mcu_msg.c ****     }
1155:src/mcu_msg.c ****     __msg_putc_to_buff(buff, __CTRL_STOP_MSG);
 1605              		.loc 1 1155 0
 1606 00b3 BE7D0000 		movl	$125, %esi
GAS LISTING /tmp/cc31R1Mf.s 			page 54


 1606      00
 1607 00b8 4889EF   		movq	%rbp, %rdi
 1608 00bb E8000000 		call	__msg_putc_to_buff
 1608      00
 1609              	.LVL212:
1156:src/mcu_msg.c **** 
1157:src/mcu_msg.c ****     return buff->buff.len - (buff->p - buff->buff.s); //return free space in byte
 1610              		.loc 1 1157 0
 1611 00c0 0FB74508 		movzwl	8(%rbp), %eax
 1612 00c4 488B5510 		movq	16(%rbp), %rdx
 1613 00c8 482B5500 		subq	0(%rbp), %rdx
 1614 00cc 29D0     		subl	%edx, %eax
1158:src/mcu_msg.c **** }
 1615              		.loc 1 1158 0
 1616 00ce 4883C420 		addq	$32, %rsp
 1617              	.LCFI79:
 1618              		.cfi_def_cfa_offset 24
 1619 00d2 5B       		popq	%rbx
 1620              	.LCFI80:
 1621              		.cfi_def_cfa_offset 16
 1622              	.LVL213:
 1623 00d3 5D       		popq	%rbp
 1624              	.LCFI81:
 1625              		.cfi_def_cfa_offset 8
 1626              	.LVL214:
 1627 00d4 C3       		ret
 1628              		.cfi_endproc
 1629              	.LFE86:
 1631              		.section	.text.__msg_wrapper_print_msg,"ax",@progbits
 1633              	__msg_wrapper_print_msg:
 1634              	.LFB61:
 779:src/mcu_msg.c ****     msg_wrap_obj_t *pobj;
 1635              		.loc 1 779 0
 1636              		.cfi_startproc
 783:src/mcu_msg.c ****         return;
 1637              		.loc 1 783 0
 1638 0000 488B0500 		movq	__msg_putc(%rip), %rax
 1638      000000
 1639 0007 4885C0   		testq	%rax, %rax
 1640 000a 0F84C400 		je	.L169
 1640      0000
 779:src/mcu_msg.c ****     msg_wrap_obj_t *pobj;
 1641              		.loc 1 779 0 discriminator 1
 1642 0010 53       		pushq	%rbx
 1643              	.LCFI82:
 1644              		.cfi_def_cfa_offset 16
 1645              		.cfi_offset 3, -16
 1646 0011 4883EC20 		subq	$32, %rsp
 1647              	.LCFI83:
 1648              		.cfi_def_cfa_offset 48
 783:src/mcu_msg.c ****         return;
 1649              		.loc 1 783 0 discriminator 1
 1650 0015 48837C24 		cmpq	$0, 48(%rsp)
 1650      3000
 1651 001b 0F84AD00 		je	.L161
 1651      0000
 785:src/mcu_msg.c ****     
GAS LISTING /tmp/cc31R1Mf.s 			page 55


 1652              		.loc 1 785 0
 1653 0021 BF230000 		movl	$35, %edi
 1653      00
 1654 0026 FFD0     		call	*%rax
 1655              	.LVL215:
 1656 0028 488B7C24 		movq	48(%rsp), %rdi
 1656      30
 1657 002d 488B7424 		movq	56(%rsp), %rsi
 1657      38
 1658 0032 E8000000 		call	__msg_print_str
 1658      00
 1659              	.LVL216:
 1660 0037 BF7B0000 		movl	$123, %edi
 1660      00
 1661 003c FF150000 		call	*__msg_putc(%rip)
 1661      0000
 1662              	.LVL217:
 787:src/mcu_msg.c ****     while(pcmd != NULL) {
 1663              		.loc 1 787 0
 1664 0042 488B5C24 		movq	72(%rsp), %rbx
 1664      48
 1665              	.LVL218:
 788:src/mcu_msg.c ****         __msg_wrapper_print_cmd(*pcmd);
 1666              		.loc 1 788 0
 1667 0047 EB04     		jmp	.L163
 1668              	.L164:
 790:src/mcu_msg.c ****     }
 1669              		.loc 1 790 0
 1670 0049 488B5B10 		movq	16(%rbx), %rbx
 1671              	.LVL219:
 1672              	.L163:
 788:src/mcu_msg.c ****         __msg_wrapper_print_cmd(*pcmd);
 1673              		.loc 1 788 0
 1674 004d 4885DB   		testq	%rbx, %rbx
 1675 0050 7447     		je	.L172
 1676 0052 488B03   		movq	(%rbx), %rax
 1677 0055 488B4B08 		movq	8(%rbx), %rcx
 1678 0059 4889C2   		movq	%rax, %rdx
 1679 005c 48890424 		movq	%rax, (%rsp)
 1680 0060 48894C24 		movq	%rcx, 8(%rsp)
 1680      08
 1681 0065 488B4310 		movq	16(%rbx), %rax
 1682 0069 48894424 		movq	%rax, 16(%rsp)
 1682      10
 1683              	.LBB76:
 1684              	.LBB77:
 769:src/mcu_msg.c ****         __msg_putc(__CTRL_CMD_START_FLAG);
 1685              		.loc 1 769 0
 1686 006e 4885D2   		testq	%rdx, %rdx
 1687 0071 74D6     		je	.L164
 770:src/mcu_msg.c ****         __msg_print_str(cmd.cmd);
 1688              		.loc 1 770 0
 1689 0073 BF3C0000 		movl	$60, %edi
 1689      00
 1690 0078 FF150000 		call	*__msg_putc(%rip)
 1690      0000
 1691              	.LVL220:
GAS LISTING /tmp/cc31R1Mf.s 			page 56


 771:src/mcu_msg.c ****         __msg_putc(__CTRL_CMD_STOP_FLAG);
 1692              		.loc 1 771 0
 1693 007e 488B3C24 		movq	(%rsp), %rdi
 1694 0082 488B7424 		movq	8(%rsp), %rsi
 1694      08
 1695 0087 E8000000 		call	__msg_print_str
 1695      00
 1696              	.LVL221:
 772:src/mcu_msg.c ****     }
 1697              		.loc 1 772 0
 1698 008c BF3E0000 		movl	$62, %edi
 1698      00
 1699 0091 FF150000 		call	*__msg_putc(%rip)
 1699      0000
 1700              	.LVL222:
 1701 0097 EBB0     		jmp	.L164
 1702              	.L172:
 1703              	.LBE77:
 1704              	.LBE76:
 792:src/mcu_msg.c ****     while(pobj != NULL) {
 1705              		.loc 1 792 0
 1706 0099 488B5C24 		movq	64(%rsp), %rbx
 1706      40
 1707              	.LVL223:
 793:src/mcu_msg.c ****         __msg_wrapper_print_obj(*pobj);
 1708              		.loc 1 793 0
 1709 009e EB1E     		jmp	.L166
 1710              	.L167:
 794:src/mcu_msg.c ****         pobj = pobj->next;   
 1711              		.loc 1 794 0
 1712 00a0 FF7328   		pushq	40(%rbx)
 1713              	.LCFI84:
 1714              		.cfi_def_cfa_offset 56
 1715 00a3 FF7320   		pushq	32(%rbx)
 1716              	.LCFI85:
 1717              		.cfi_def_cfa_offset 64
 1718 00a6 FF7318   		pushq	24(%rbx)
 1719              	.LCFI86:
 1720              		.cfi_def_cfa_offset 72
 1721 00a9 FF7310   		pushq	16(%rbx)
 1722              	.LCFI87:
 1723              		.cfi_def_cfa_offset 80
 1724 00ac FF7308   		pushq	8(%rbx)
 1725              	.LCFI88:
 1726              		.cfi_def_cfa_offset 88
 1727 00af FF33     		pushq	(%rbx)
 1728              	.LCFI89:
 1729              		.cfi_def_cfa_offset 96
 1730 00b1 E8000000 		call	__msg_wrapper_print_obj
 1730      00
 1731              	.LVL224:
 795:src/mcu_msg.c ****     }
 1732              		.loc 1 795 0
 1733 00b6 488B5B28 		movq	40(%rbx), %rbx
 1734              	.LVL225:
 1735 00ba 4883C430 		addq	$48, %rsp
 1736              	.LCFI90:
GAS LISTING /tmp/cc31R1Mf.s 			page 57


 1737              		.cfi_def_cfa_offset 48
 1738              	.L166:
 793:src/mcu_msg.c ****         __msg_wrapper_print_obj(*pobj);
 1739              		.loc 1 793 0
 1740 00be 4885DB   		testq	%rbx, %rbx
 1741 00c1 75DD     		jne	.L167
 797:src/mcu_msg.c **** }
 1742              		.loc 1 797 0
 1743 00c3 BF7D0000 		movl	$125, %edi
 1743      00
 1744 00c8 FF150000 		call	*__msg_putc(%rip)
 1744      0000
 1745              	.LVL226:
 1746              	.L161:
 798:src/mcu_msg.c **** 
 1747              		.loc 1 798 0
 1748 00ce 4883C420 		addq	$32, %rsp
 1749              	.LCFI91:
 1750              		.cfi_def_cfa_offset 16
 1751 00d2 5B       		popq	%rbx
 1752              	.LCFI92:
 1753              		.cfi_def_cfa_offset 8
 1754 00d3 C3       		ret
 1755              	.L169:
 1756              		.cfi_restore 3
 1757 00d4 F3C3     		rep ret
 1758              		.cfi_endproc
 1759              	.LFE61:
 1761              		.section	.text.msg_destroy_string,"ax",@progbits
 1762              		.globl	msg_destroy_string
 1764              	msg_destroy_string:
 1765              	.LFB27:
  71:src/mcu_msg.c ****     str->s = NULL;
 1766              		.loc 1 71 0
 1767              		.cfi_startproc
 1768              	.LVL227:
  72:src/mcu_msg.c ****     str->len = 0;
 1769              		.loc 1 72 0
 1770 0000 48C70700 		movq	$0, (%rdi)
 1770      000000
  73:src/mcu_msg.c **** }
 1771              		.loc 1 73 0
 1772 0007 66C74708 		movw	$0, 8(%rdi)
 1772      0000
  74:src/mcu_msg.c **** 
 1773              		.loc 1 74 0
 1774 000d C3       		ret
 1775              		.cfi_endproc
 1776              	.LFE27:
 1778              		.section	.text.__find_keyword,"ax",@progbits
 1780              	__find_keyword:
 1781              	.LFB37:
 217:src/mcu_msg.c **** 
 1782              		.loc 1 217 0
 1783              		.cfi_startproc
 1784              	.LVL228:
 1785 0000 4157     		pushq	%r15
GAS LISTING /tmp/cc31R1Mf.s 			page 58


 1786              	.LCFI93:
 1787              		.cfi_def_cfa_offset 16
 1788              		.cfi_offset 15, -16
 1789 0002 4156     		pushq	%r14
 1790              	.LCFI94:
 1791              		.cfi_def_cfa_offset 24
 1792              		.cfi_offset 14, -24
 1793 0004 4155     		pushq	%r13
 1794              	.LCFI95:
 1795              		.cfi_def_cfa_offset 32
 1796              		.cfi_offset 13, -32
 1797 0006 4154     		pushq	%r12
 1798              	.LCFI96:
 1799              		.cfi_def_cfa_offset 40
 1800              		.cfi_offset 12, -40
 1801 0008 55       		pushq	%rbp
 1802              	.LCFI97:
 1803              		.cfi_def_cfa_offset 48
 1804              		.cfi_offset 6, -48
 1805 0009 53       		pushq	%rbx
 1806              	.LCFI98:
 1807              		.cfi_def_cfa_offset 56
 1808              		.cfi_offset 3, -56
 1809 000a 4883EC38 		subq	$56, %rsp
 1810              	.LCFI99:
 1811              		.cfi_def_cfa_offset 112
 1812 000e 4989FC   		movq	%rdi, %r12
 1813 0011 4889F5   		movq	%rsi, %rbp
 1814 0014 4989D6   		movq	%rdx, %r14
 1815 0017 4189CF   		movl	%ecx, %r15d
 1816 001a 44884424 		movb	%r8b, 15(%rsp)
 1816      0F
 217:src/mcu_msg.c **** 
 1817              		.loc 1 217 0
 1818 001f 64488B04 		movq	%fs:40, %rax
 1818      25280000 
 1818      00
 1819 0028 48894424 		movq	%rax, 40(%rsp)
 1819      28
 1820 002d 31C0     		xorl	%eax, %eax
 220:src/mcu_msg.c ****     uint8_t equal;
 1821              		.loc 1 220 0
 1822 002f 4889FB   		movq	%rdi, %rbx
 1823              	.LVL229:
 223:src/mcu_msg.c ****     while(__is_p_in_str(str, p) && *p) {
 1824              		.loc 1 223 0
 1825 0032 4889D7   		movq	%rdx, %rdi
 1826              	.LVL230:
 1827 0035 E8000000 		call	__str_len
 1827      00
 1828              	.LVL231:
 1829 003a 4189C5   		movl	%eax, %r13d
 1830 003d 66894424 		movw	%ax, 24(%rsp)
 1830      18
 224:src/mcu_msg.c ****         if(*p == '\'' || *p == '"') { //skip internal strings
 1831              		.loc 1 224 0
 1832 0042 E9D50000 		jmp	.L175
GAS LISTING /tmp/cc31R1Mf.s 			page 59


 1832      00
 1833              	.L198:
 226:src/mcu_msg.c ****         }
 1834              		.loc 1 226 0
 1835 0047 4889DF   		movq	%rbx, %rdi
 1836 004a E8000000 		call	__skip_internal_str
 1836      00
 1837              	.LVL232:
 1838 004f 4889C3   		movq	%rax, %rbx
 1839              	.LVL233:
 1840 0052 E9EC0000 		jmp	.L176
 1840      00
 1841              	.LVL234:
 1842              	.L180:
 233:src/mcu_msg.c ****                     equal = 0;
 1843              		.loc 1 233 0
 1844 0057 8D4A9F   		leal	-97(%rdx), %ecx
 1845 005a 80F919   		cmpb	$25, %cl
 1846 005d 400F97C7 		seta	%dil
 1847 0061 80FA5F   		cmpb	$95, %dl
 1848 0064 0F95C1   		setne	%cl
 232:src/mcu_msg.c ****                                     !is_valid_keyword_char(*(res.s + i))) {
 1849              		.loc 1 232 0
 1850 0067 4084CF   		testb	%cl, %dil
 1851 006a 7410     		je	.L182
 233:src/mcu_msg.c ****                     equal = 0;
 1852              		.loc 1 233 0
 1853 006c 8D4ABF   		leal	-65(%rdx), %ecx
 1854 006f 80F919   		cmpb	$25, %cl
 1855 0072 7608     		jbe	.L182
 233:src/mcu_msg.c ****                     equal = 0;
 1856              		.loc 1 233 0 is_stmt 0 discriminator 1
 1857 0074 83EA30   		subl	$48, %edx
 1858 0077 80FA09   		cmpb	$9, %dl
 1859 007a 7757     		ja	.L193
 1860              	.L182:
 231:src/mcu_msg.c ****                 if((*(res.s + i) != *(keyword + i)) || __is_ctrl_char(*(res.s + i)) || 
 1861              		.loc 1 231 0 is_stmt 1 discriminator 2
 1862 007c 83C001   		addl	$1, %eax
 1863              	.LVL235:
 1864              	.L178:
 231:src/mcu_msg.c ****                 if((*(res.s + i) != *(keyword + i)) || __is_ctrl_char(*(res.s + i)) || 
 1865              		.loc 1 231 0 is_stmt 0 discriminator 1
 1866 007f 0FB7C8   		movzwl	%ax, %ecx
 1867 0082 488D140E 		leaq	(%rsi,%rcx), %rdx
 1868              	.LVL236:
 1869              	.LBB78:
 1870              	.LBB79:
 185:src/mcu_msg.c **** }
 1871              		.loc 1 185 0 is_stmt 1 discriminator 1
 1872 0086 4989D0   		movq	%rdx, %r8
 1873 0089 4D29E0   		subq	%r12, %r8
 1874 008c 0FB7FD   		movzwl	%bp, %edi
 1875              	.LVL237:
 1876              	.LBE79:
 1877              	.LBE78:
 231:src/mcu_msg.c ****                 if((*(res.s + i) != *(keyword + i)) || __is_ctrl_char(*(res.s + i)) || 
GAS LISTING /tmp/cc31R1Mf.s 			page 60


 1878              		.loc 1 231 0 discriminator 1
 1879 008f 4939F8   		cmpq	%rdi, %r8
 1880 0092 7D46     		jge	.L194
 231:src/mcu_msg.c ****                 if((*(res.s + i) != *(keyword + i)) || __is_ctrl_char(*(res.s + i)) || 
 1881              		.loc 1 231 0 is_stmt 0 discriminator 3
 1882 0094 664139C5 		cmpw	%ax, %r13w
 1883 0098 7624     		jbe	.L196
 232:src/mcu_msg.c ****                                     !is_valid_keyword_char(*(res.s + i))) {
 1884              		.loc 1 232 0 is_stmt 1
 1885 009a 0FB612   		movzbl	(%rdx), %edx
 1886 009d 413A140E 		cmpb	(%r14,%rcx), %dl
 1887 00a1 7522     		jne	.L191
 1888              	.LVL238:
 1889              	.LBB80:
 1890              	.LBB81:
 113:src/mcu_msg.c ****         case __CTRL_MSG_FLAG:
 1891              		.loc 1 113 0 discriminator 1
 1892 00a3 8D4ADD   		leal	-35(%rdx), %ecx
 1893 00a6 80F95A   		cmpb	$90, %cl
 1894 00a9 77AC     		ja	.L180
 1895 00ab 0FB6C9   		movzbl	%cl, %ecx
 1896 00ae 488D3D00 		leaq	.L181(%rip), %rdi
 1896      000000
 1897 00b5 48630C8F 		movslq	(%rdi,%rcx,4), %rcx
 1898 00b9 4801F9   		addq	%rdi, %rcx
 1899 00bc FFE1     		jmp	*%rcx
 1900              		.section	.rodata.__find_keyword,"a",@progbits
 1901              		.align 4
 1902              		.align 4
 1903              	.L181:
 1904 0000 00000000 		.long	.L192-.L181
 1905 0004 00000000 		.long	.L192-.L181
 1906 0008 00000000 		.long	.L180-.L181
 1907 000c 00000000 		.long	.L180-.L181
 1908 0010 00000000 		.long	.L180-.L181
 1909 0014 00000000 		.long	.L192-.L181
 1910 0018 00000000 		.long	.L192-.L181
 1911 001c 00000000 		.long	.L180-.L181
 1912 0020 00000000 		.long	.L180-.L181
 1913 0024 00000000 		.long	.L180-.L181
 1914 0028 00000000 		.long	.L180-.L181
 1915 002c 00000000 		.long	.L180-.L181
 1916 0030 00000000 		.long	.L180-.L181
 1917 0034 00000000 		.long	.L180-.L181
 1918 0038 00000000 		.long	.L180-.L181
 1919 003c 00000000 		.long	.L180-.L181
 1920 0040 00000000 		.long	.L180-.L181
 1921 0044 00000000 		.long	.L180-.L181
 1922 0048 00000000 		.long	.L180-.L181
 1923 004c 00000000 		.long	.L180-.L181
 1924 0050 00000000 		.long	.L180-.L181
 1925 0054 00000000 		.long	.L180-.L181
 1926 0058 00000000 		.long	.L180-.L181
 1927 005c 00000000 		.long	.L180-.L181
 1928 0060 00000000 		.long	.L192-.L181
 1929 0064 00000000 		.long	.L192-.L181
 1930 0068 00000000 		.long	.L192-.L181
GAS LISTING /tmp/cc31R1Mf.s 			page 61


 1931 006c 00000000 		.long	.L192-.L181
 1932 0070 00000000 		.long	.L180-.L181
 1933 0074 00000000 		.long	.L192-.L181
 1934 0078 00000000 		.long	.L180-.L181
 1935 007c 00000000 		.long	.L180-.L181
 1936 0080 00000000 		.long	.L180-.L181
 1937 0084 00000000 		.long	.L180-.L181
 1938 0088 00000000 		.long	.L180-.L181
 1939 008c 00000000 		.long	.L180-.L181
 1940 0090 00000000 		.long	.L180-.L181
 1941 0094 00000000 		.long	.L180-.L181
 1942 0098 00000000 		.long	.L180-.L181
 1943 009c 00000000 		.long	.L180-.L181
 1944 00a0 00000000 		.long	.L180-.L181
 1945 00a4 00000000 		.long	.L180-.L181
 1946 00a8 00000000 		.long	.L180-.L181
 1947 00ac 00000000 		.long	.L180-.L181
 1948 00b0 00000000 		.long	.L180-.L181
 1949 00b4 00000000 		.long	.L180-.L181
 1950 00b8 00000000 		.long	.L180-.L181
 1951 00bc 00000000 		.long	.L180-.L181
 1952 00c0 00000000 		.long	.L180-.L181
 1953 00c4 00000000 		.long	.L180-.L181
 1954 00c8 00000000 		.long	.L180-.L181
 1955 00cc 00000000 		.long	.L180-.L181
 1956 00d0 00000000 		.long	.L180-.L181
 1957 00d4 00000000 		.long	.L180-.L181
 1958 00d8 00000000 		.long	.L180-.L181
 1959 00dc 00000000 		.long	.L180-.L181
 1960 00e0 00000000 		.long	.L180-.L181
 1961 00e4 00000000 		.long	.L180-.L181
 1962 00e8 00000000 		.long	.L180-.L181
 1963 00ec 00000000 		.long	.L180-.L181
 1964 00f0 00000000 		.long	.L180-.L181
 1965 00f4 00000000 		.long	.L180-.L181
 1966 00f8 00000000 		.long	.L180-.L181
 1967 00fc 00000000 		.long	.L180-.L181
 1968 0100 00000000 		.long	.L180-.L181
 1969 0104 00000000 		.long	.L180-.L181
 1970 0108 00000000 		.long	.L180-.L181
 1971 010c 00000000 		.long	.L180-.L181
 1972 0110 00000000 		.long	.L180-.L181
 1973 0114 00000000 		.long	.L180-.L181
 1974 0118 00000000 		.long	.L180-.L181
 1975 011c 00000000 		.long	.L180-.L181
 1976 0120 00000000 		.long	.L180-.L181
 1977 0124 00000000 		.long	.L180-.L181
 1978 0128 00000000 		.long	.L180-.L181
 1979 012c 00000000 		.long	.L180-.L181
 1980 0130 00000000 		.long	.L180-.L181
 1981 0134 00000000 		.long	.L180-.L181
 1982 0138 00000000 		.long	.L180-.L181
 1983 013c 00000000 		.long	.L180-.L181
 1984 0140 00000000 		.long	.L180-.L181
 1985 0144 00000000 		.long	.L180-.L181
 1986 0148 00000000 		.long	.L180-.L181
 1987 014c 00000000 		.long	.L180-.L181
GAS LISTING /tmp/cc31R1Mf.s 			page 62


 1988 0150 00000000 		.long	.L180-.L181
 1989 0154 00000000 		.long	.L180-.L181
 1990 0158 00000000 		.long	.L180-.L181
 1991 015c 00000000 		.long	.L180-.L181
 1992 0160 00000000 		.long	.L192-.L181
 1993 0164 00000000 		.long	.L180-.L181
 1994 0168 00000000 		.long	.L192-.L181
 1995              		.section	.text.__find_keyword
 1996              	.LVL239:
 1997              	.L196:
 1998              	.LBE81:
 1999              	.LBE80:
 230:src/mcu_msg.c ****             for(i = 0; __is_p_in_str(str, res.s + i) && i < res.len; i++) { // if not equal during 
 2000              		.loc 1 230 0
 2001 00be BF010000 		movl	$1, %edi
 2001      00
 2002 00c3 EB1F     		jmp	.L186
 2003              	.L191:
 234:src/mcu_msg.c ****                     break;
 2004              		.loc 1 234 0
 2005 00c5 BF000000 		movl	$0, %edi
 2005      00
 2006 00ca EB18     		jmp	.L186
 2007              	.LVL240:
 2008              	.L192:
 2009 00cc BF000000 		movl	$0, %edi
 2009      00
 2010 00d1 EB11     		jmp	.L186
 2011              	.LVL241:
 2012              	.L193:
 2013 00d3 BF000000 		movl	$0, %edi
 2013      00
 2014 00d8 EB0A     		jmp	.L186
 2015              	.L194:
 230:src/mcu_msg.c ****             for(i = 0; __is_p_in_str(str, res.s + i) && i < res.len; i++) { // if not equal during 
 2016              		.loc 1 230 0
 2017 00da BF010000 		movl	$1, %edi
 2017      00
 2018 00df EB03     		jmp	.L186
 2019              	.LVL242:
 2020              	.L185:
 238:src/mcu_msg.c ****             if(equal && *(res.s + i) == stopc) { //if the stop char is the next, whitout spaces, re
 2021              		.loc 1 238 0
 2022 00e1 83C001   		addl	$1, %eax
 2023              	.LVL243:
 2024              	.L186:
 238:src/mcu_msg.c ****             if(equal && *(res.s + i) == stopc) { //if the stop char is the next, whitout spaces, re
 2025              		.loc 1 238 0 is_stmt 0 discriminator 1
 2026 00e4 0FB7D8   		movzwl	%ax, %ebx
 2027 00e7 4801F3   		addq	%rsi, %rbx
 2028              	.LVL244:
 2029              	.LBB82:
 2030              	.LBB83:
 185:src/mcu_msg.c **** }
 2031              		.loc 1 185 0 is_stmt 1 discriminator 1
 2032 00ea 4889D9   		movq	%rbx, %rcx
 2033 00ed 4C29E1   		subq	%r12, %rcx
GAS LISTING /tmp/cc31R1Mf.s 			page 63


 2034 00f0 0FB7D5   		movzwl	%bp, %edx
 2035              	.LVL245:
 2036              	.LBE83:
 2037              	.LBE82:
 238:src/mcu_msg.c ****             if(equal && *(res.s + i) == stopc) { //if the stop char is the next, whitout spaces, re
 2038              		.loc 1 238 0 discriminator 1
 2039 00f3 4839D1   		cmpq	%rdx, %rcx
 2040 00f6 7D12     		jge	.L184
 238:src/mcu_msg.c ****             if(equal && *(res.s + i) == stopc) { //if the stop char is the next, whitout spaces, re
 2041              		.loc 1 238 0 is_stmt 0 discriminator 2
 2042 00f8 0FB613   		movzbl	(%rbx), %edx
 2043              	.LVL246:
 2044              	.LBB84:
 2045              	.LBB85:
 139:src/mcu_msg.c ****         case  ' ':
 2046              		.loc 1 139 0 is_stmt 1 discriminator 2
 2047 00fb 80FA09   		cmpb	$9, %dl
 2048 00fe 7C0A     		jl	.L184
 2049 0100 80FA0D   		cmpb	$13, %dl
 2050 0103 7EDC     		jle	.L185
 2051 0105 80FA20   		cmpb	$32, %dl
 2052 0108 74D7     		je	.L185
 2053              	.LVL247:
 2054              	.L184:
 2055              	.LBE85:
 2056              	.LBE84:
 239:src/mcu_msg.c ****                 return res;
 2057              		.loc 1 239 0
 2058 010a 4084FF   		testb	%dil, %dil
 2059 010d 7409     		je	.L177
 239:src/mcu_msg.c ****                 return res;
 2060              		.loc 1 239 0 is_stmt 0 discriminator 1
 2061 010f 0FB64424 		movzbl	15(%rsp), %eax
 2061      0F
 2062              	.LVL248:
 2063 0114 3803     		cmpb	%al, (%rbx)
 2064 0116 7451     		je	.L197
 2065              	.LVL249:
 2066              	.L177:
 245:src/mcu_msg.c ****     }
 2067              		.loc 1 245 0 is_stmt 1
 2068 0118 4883C301 		addq	$1, %rbx
 2069              	.LVL250:
 2070              	.L175:
 2071              	.LBB86:
 2072              	.LBB87:
 185:src/mcu_msg.c **** }
 2073              		.loc 1 185 0
 2074 011c 4889DA   		movq	%rbx, %rdx
 2075 011f 4C29E2   		subq	%r12, %rdx
 2076 0122 0FB7C5   		movzwl	%bp, %eax
 2077              	.LVL251:
 2078              	.LBE87:
 2079              	.LBE86:
 224:src/mcu_msg.c ****         if(*p == '\'' || *p == '"') { //skip internal strings
 2080              		.loc 1 224 0
 2081 0125 4839C2   		cmpq	%rax, %rdx
GAS LISTING /tmp/cc31R1Mf.s 			page 64


 2082 0128 7D4B     		jge	.L188
 224:src/mcu_msg.c ****         if(*p == '\'' || *p == '"') { //skip internal strings
 2083              		.loc 1 224 0 is_stmt 0 discriminator 1
 2084 012a 0FB603   		movzbl	(%rbx), %eax
 2085 012d 84C0     		testb	%al, %al
 2086 012f 7444     		je	.L188
 225:src/mcu_msg.c ****             p = __skip_internal_str(p);
 2087              		.loc 1 225 0 is_stmt 1
 2088 0131 3C27     		cmpb	$39, %al
 2089 0133 0F94C2   		sete	%dl
 2090 0136 3C22     		cmpb	$34, %al
 2091 0138 0F94C0   		sete	%al
 2092 013b 08C2     		orb	%al, %dl
 2093 013d 0F8504FF 		jne	.L198
 2093      FFFF
 2094              	.L176:
 2095              	.LVL252:
 2096              	.LBB88:
 2097              	.LBB89:
 185:src/mcu_msg.c **** }
 2098              		.loc 1 185 0
 2099 0143 4889D8   		movq	%rbx, %rax
 2100 0146 4C29E0   		subq	%r12, %rax
 2101 0149 0FB7D5   		movzwl	%bp, %edx
 2102              	.LVL253:
 2103              	.LBE89:
 2104              	.LBE88:
 228:src/mcu_msg.c ****             res.s = p + 1;
 2105              		.loc 1 228 0
 2106 014c 4839C2   		cmpq	%rax, %rdx
 2107 014f 7EC7     		jle	.L177
 228:src/mcu_msg.c ****             res.s = p + 1;
 2108              		.loc 1 228 0 is_stmt 0 discriminator 1
 2109 0151 44383B   		cmpb	%r15b, (%rbx)
 2110 0154 75C2     		jne	.L177
 229:src/mcu_msg.c ****             equal = 1;
 2111              		.loc 1 229 0 is_stmt 1
 2112 0156 488D7301 		leaq	1(%rbx), %rsi
 2113 015a 48897424 		movq	%rsi, 16(%rsp)
 2113      10
 2114              	.LVL254:
 231:src/mcu_msg.c ****                 if((*(res.s + i) != *(keyword + i)) || __is_ctrl_char(*(res.s + i)) || 
 2115              		.loc 1 231 0
 2116 015f B8000000 		movl	$0, %eax
 2116      00
 2117 0164 E916FFFF 		jmp	.L178
 2117      FF
 2118              	.LVL255:
 2119              	.L197:
 240:src/mcu_msg.c ****             } else {
 2120              		.loc 1 240 0
 2121 0169 488B4424 		movq	16(%rsp), %rax
 2121      10
 2122 016e 488B5424 		movq	24(%rsp), %rdx
 2122      18
 2123 0173 EB14     		jmp	.L187
 2124              	.LVL256:
GAS LISTING /tmp/cc31R1Mf.s 			page 65


 2125              	.L188:
 248:src/mcu_msg.c ****     return res;
 2126              		.loc 1 248 0
 2127 0175 488D7C24 		leaq	16(%rsp), %rdi
 2127      10
 2128 017a E8000000 		call	msg_destroy_string
 2128      00
 2129              	.LVL257:
 249:src/mcu_msg.c **** }
 2130              		.loc 1 249 0
 2131 017f 488B4424 		movq	16(%rsp), %rax
 2131      10
 2132 0184 488B5424 		movq	24(%rsp), %rdx
 2132      18
 2133              	.LVL258:
 2134              	.L187:
 250:src/mcu_msg.c **** 
 2135              		.loc 1 250 0
 2136 0189 488B7424 		movq	40(%rsp), %rsi
 2136      28
 2137 018e 64483334 		xorq	%fs:40, %rsi
 2137      25280000 
 2137      00
 2138 0197 750F     		jne	.L199
 2139 0199 4883C438 		addq	$56, %rsp
 2140              	.LCFI100:
 2141              		.cfi_remember_state
 2142              		.cfi_def_cfa_offset 56
 2143 019d 5B       		popq	%rbx
 2144              	.LCFI101:
 2145              		.cfi_def_cfa_offset 48
 2146 019e 5D       		popq	%rbp
 2147              	.LCFI102:
 2148              		.cfi_def_cfa_offset 40
 2149              	.LVL259:
 2150 019f 415C     		popq	%r12
 2151              	.LCFI103:
 2152              		.cfi_def_cfa_offset 32
 2153 01a1 415D     		popq	%r13
 2154              	.LCFI104:
 2155              		.cfi_def_cfa_offset 24
 2156 01a3 415E     		popq	%r14
 2157              	.LCFI105:
 2158              		.cfi_def_cfa_offset 16
 2159              	.LVL260:
 2160 01a5 415F     		popq	%r15
 2161              	.LCFI106:
 2162              		.cfi_def_cfa_offset 8
 2163              	.LVL261:
 2164 01a7 C3       		ret
 2165              	.LVL262:
 2166              	.L199:
 2167              	.LCFI107:
 2168              		.cfi_restore_state
 2169 01a8 E8000000 		call	__stack_chk_fail@PLT
 2169      00
 2170              	.LVL263:
GAS LISTING /tmp/cc31R1Mf.s 			page 66


 2171              		.cfi_endproc
 2172              	.LFE37:
 2174              		.section	.text.__find_val,"ax",@progbits
 2176              	__find_val:
 2177              	.LFB38:
 262:src/mcu_msg.c ****     msg_str_t res  = __find_keyword(obj.content, key, __CTRL_KEY_FLAG, __CTRL_KEY_EQU); //object st
 2178              		.loc 1 262 0
 2179              		.cfi_startproc
 2180              	.LVL264:
 2181 0000 4883EC28 		subq	$40, %rsp
 2182              	.LCFI108:
 2183              		.cfi_def_cfa_offset 48
 2184 0004 4889FA   		movq	%rdi, %rdx
 262:src/mcu_msg.c ****     msg_str_t res  = __find_keyword(obj.content, key, __CTRL_KEY_FLAG, __CTRL_KEY_EQU); //object st
 2185              		.loc 1 262 0
 2186 0007 64488B04 		movq	%fs:40, %rax
 2186      25280000 
 2186      00
 2187 0010 48894424 		movq	%rax, 24(%rsp)
 2187      18
 2188 0015 31C0     		xorl	%eax, %eax
 263:src/mcu_msg.c ****     char *p;
 2189              		.loc 1 263 0
 2190 0017 41B83D00 		movl	$61, %r8d
 2190      0000
 2191 001d B9240000 		movl	$36, %ecx
 2191      00
 2192 0022 488B7C24 		movq	64(%rsp), %rdi
 2192      40
 2193              	.LVL265:
 2194 0027 488B7424 		movq	72(%rsp), %rsi
 2194      48
 2195 002c E8000000 		call	__find_keyword
 2195      00
 2196              	.LVL266:
 2197 0031 48890424 		movq	%rax, (%rsp)
 2198 0035 48895424 		movq	%rdx, 8(%rsp)
 2198      08
 265:src/mcu_msg.c ****         msg_destroy_string(&res);
 2199              		.loc 1 265 0
 2200 003a 4885C0   		testq	%rax, %rax
 2201 003d 7413     		je	.L216
 269:src/mcu_msg.c ****         while(__is_p_in_str(obj.content, res.s + 1) && *res.s != __CTRL_KEY_EQU) res.s++;
 2202              		.loc 1 269 0
 2203 003f 80383D   		cmpb	$61, (%rax)
 2204 0042 7528     		jne	.L203
 2205              	.L204:
 272:src/mcu_msg.c ****     while(__is_p_in_str(obj.content, res.s) && __is_whitespace(*res.s)) res.s++; //skip spaces afte
 2206              		.loc 1 272 0
 2207 0044 488B0424 		movq	(%rsp), %rax
 2208 0048 4883C001 		addq	$1, %rax
 2209 004c 48890424 		movq	%rax, (%rsp)
 273:src/mcu_msg.c **** 
 2210              		.loc 1 273 0
 2211 0050 EB43     		jmp	.L208
 2212              	.L216:
 266:src/mcu_msg.c ****         return res;
GAS LISTING /tmp/cc31R1Mf.s 			page 67


 2213              		.loc 1 266 0
 2214 0052 4889E7   		movq	%rsp, %rdi
 2215 0055 E8000000 		call	msg_destroy_string
 2215      00
 2216              	.LVL267:
 267:src/mcu_msg.c ****     }
 2217              		.loc 1 267 0
 2218 005a 488B0424 		movq	(%rsp), %rax
 2219 005e 488B5424 		movq	8(%rsp), %rdx
 2219      08
 2220 0063 E9B10000 		jmp	.L202
 2220      00
 2221              	.L205:
 270:src/mcu_msg.c ****     }
 2222              		.loc 1 270 0 discriminator 3
 2223 0068 48891424 		movq	%rdx, (%rsp)
 2224              	.L203:
 270:src/mcu_msg.c ****     }
 2225              		.loc 1 270 0 is_stmt 0 discriminator 1
 2226 006c 488B0424 		movq	(%rsp), %rax
 2227 0070 488D5001 		leaq	1(%rax), %rdx
 2228              	.LVL268:
 2229              	.LBB90:
 2230              	.LBB91:
 185:src/mcu_msg.c **** }
 2231              		.loc 1 185 0 is_stmt 1 discriminator 1
 2232 0074 4889D1   		movq	%rdx, %rcx
 2233 0077 482B4C24 		subq	64(%rsp), %rcx
 2233      40
 2234 007c 0FB77424 		movzwl	72(%rsp), %esi
 2234      48
 2235              	.LVL269:
 2236              	.LBE91:
 2237              	.LBE90:
 270:src/mcu_msg.c ****     }
 2238              		.loc 1 270 0 discriminator 1
 2239 0081 4839CE   		cmpq	%rcx, %rsi
 2240 0084 7EBE     		jle	.L204
 270:src/mcu_msg.c ****     }
 2241              		.loc 1 270 0 is_stmt 0 discriminator 2
 2242 0086 80383D   		cmpb	$61, (%rax)
 2243 0089 75DD     		jne	.L205
 2244 008b EBB7     		jmp	.L204
 2245              	.LVL270:
 2246              	.L207:
 273:src/mcu_msg.c **** 
 2247              		.loc 1 273 0 is_stmt 1
 2248 008d 4883C001 		addq	$1, %rax
 2249 0091 48890424 		movq	%rax, (%rsp)
 2250              	.L208:
 273:src/mcu_msg.c **** 
 2251              		.loc 1 273 0 is_stmt 0 discriminator 1
 2252 0095 488B0424 		movq	(%rsp), %rax
 2253              	.LVL271:
 2254              	.LBB92:
 2255              	.LBB93:
 185:src/mcu_msg.c **** }
GAS LISTING /tmp/cc31R1Mf.s 			page 68


 2256              		.loc 1 185 0 is_stmt 1 discriminator 1
 2257 0099 4889C7   		movq	%rax, %rdi
 2258 009c 4889C1   		movq	%rax, %rcx
 2259 009f 482B4C24 		subq	64(%rsp), %rcx
 2259      40
 2260 00a4 0FB75424 		movzwl	72(%rsp), %edx
 2260      48
 2261              	.LVL272:
 2262              	.LBE93:
 2263              	.LBE92:
 273:src/mcu_msg.c **** 
 2264              		.loc 1 273 0 discriminator 1
 2265 00a9 4839D1   		cmpq	%rdx, %rcx
 2266 00ac 7D18     		jge	.L213
 273:src/mcu_msg.c **** 
 2267              		.loc 1 273 0 is_stmt 0 discriminator 2
 2268 00ae 0FB610   		movzbl	(%rax), %edx
 2269              	.LVL273:
 2270              	.LBB94:
 2271              	.LBB95:
 139:src/mcu_msg.c ****         case  ' ':
 2272              		.loc 1 139 0 is_stmt 1 discriminator 2
 2273 00b1 80FA09   		cmpb	$9, %dl
 2274 00b4 7C10     		jl	.L213
 2275 00b6 80FA0D   		cmpb	$13, %dl
 2276 00b9 7ED2     		jle	.L207
 2277 00bb 80FA20   		cmpb	$32, %dl
 2278 00be 74CD     		je	.L207
 2279 00c0 EB04     		jmp	.L213
 2280              	.LVL274:
 2281              	.L211:
 2282              	.LBE95:
 2283              	.LBE94:
 276:src/mcu_msg.c ****     res.len = p - res.s;
 2284              		.loc 1 276 0
 2285 00c2 4883C001 		addq	$1, %rax
 2286              	.LVL275:
 2287              	.L213:
 2288              	.LBB96:
 2289              	.LBB97:
 185:src/mcu_msg.c **** }
 2290              		.loc 1 185 0 discriminator 1
 2291 00c6 4889C6   		movq	%rax, %rsi
 2292 00c9 4889C1   		movq	%rax, %rcx
 2293 00cc 482B4C24 		subq	64(%rsp), %rcx
 2293      40
 2294 00d1 0FB75424 		movzwl	72(%rsp), %edx
 2294      48
 2295              	.LVL276:
 2296              	.LBE97:
 2297              	.LBE96:
 276:src/mcu_msg.c ****     res.len = p - res.s;
 2298              		.loc 1 276 0 discriminator 1
 2299 00d6 4839D1   		cmpq	%rdx, %rcx
 2300 00d9 7D2D     		jge	.L209
 276:src/mcu_msg.c ****     res.len = p - res.s;
 2301              		.loc 1 276 0 is_stmt 0 discriminator 2
GAS LISTING /tmp/cc31R1Mf.s 			page 69


 2302 00db 0FB610   		movzbl	(%rax), %edx
 2303              	.LVL277:
 2304              	.LBB98:
 2305              	.LBB99:
 139:src/mcu_msg.c ****         case  ' ':
 2306              		.loc 1 139 0 is_stmt 1 discriminator 2
 2307 00de 80FA09   		cmpb	$9, %dl
 2308 00e1 7C0A     		jl	.L210
 2309 00e3 80FA0D   		cmpb	$13, %dl
 2310 00e6 7E20     		jle	.L209
 2311 00e8 80FA20   		cmpb	$32, %dl
 2312 00eb 741B     		je	.L209
 2313              	.L210:
 2314              	.LVL278:
 2315              	.LBE99:
 2316              	.LBE98:
 2317              	.LBB100:
 2318              	.LBB101:
 113:src/mcu_msg.c ****         case __CTRL_MSG_FLAG:
 2319              		.loc 1 113 0
 2320 00ed 83EA23   		subl	$35, %edx
 2321              	.LVL279:
 2322 00f0 80FA5A   		cmpb	$90, %dl
 2323 00f3 77CD     		ja	.L211
 2324 00f5 0FB6D2   		movzbl	%dl, %edx
 2325 00f8 488D0D00 		leaq	.L212(%rip), %rcx
 2325      000000
 2326 00ff 48631491 		movslq	(%rcx,%rdx,4), %rdx
 2327 0103 4801CA   		addq	%rcx, %rdx
 2328 0106 FFE2     		jmp	*%rdx
 2329              		.section	.rodata.__find_val,"a",@progbits
 2330              		.align 4
 2331              		.align 4
 2332              	.L212:
 2333 0000 00000000 		.long	.L209-.L212
 2334 0004 00000000 		.long	.L209-.L212
 2335 0008 00000000 		.long	.L211-.L212
 2336 000c 00000000 		.long	.L211-.L212
 2337 0010 00000000 		.long	.L211-.L212
 2338 0014 00000000 		.long	.L209-.L212
 2339 0018 00000000 		.long	.L209-.L212
 2340 001c 00000000 		.long	.L211-.L212
 2341 0020 00000000 		.long	.L211-.L212
 2342 0024 00000000 		.long	.L211-.L212
 2343 0028 00000000 		.long	.L211-.L212
 2344 002c 00000000 		.long	.L211-.L212
 2345 0030 00000000 		.long	.L211-.L212
 2346 0034 00000000 		.long	.L211-.L212
 2347 0038 00000000 		.long	.L211-.L212
 2348 003c 00000000 		.long	.L211-.L212
 2349 0040 00000000 		.long	.L211-.L212
 2350 0044 00000000 		.long	.L211-.L212
 2351 0048 00000000 		.long	.L211-.L212
 2352 004c 00000000 		.long	.L211-.L212
 2353 0050 00000000 		.long	.L211-.L212
 2354 0054 00000000 		.long	.L211-.L212
 2355 0058 00000000 		.long	.L211-.L212
GAS LISTING /tmp/cc31R1Mf.s 			page 70


 2356 005c 00000000 		.long	.L211-.L212
 2357 0060 00000000 		.long	.L209-.L212
 2358 0064 00000000 		.long	.L209-.L212
 2359 0068 00000000 		.long	.L209-.L212
 2360 006c 00000000 		.long	.L209-.L212
 2361 0070 00000000 		.long	.L211-.L212
 2362 0074 00000000 		.long	.L209-.L212
 2363 0078 00000000 		.long	.L211-.L212
 2364 007c 00000000 		.long	.L211-.L212
 2365 0080 00000000 		.long	.L211-.L212
 2366 0084 00000000 		.long	.L211-.L212
 2367 0088 00000000 		.long	.L211-.L212
 2368 008c 00000000 		.long	.L211-.L212
 2369 0090 00000000 		.long	.L211-.L212
 2370 0094 00000000 		.long	.L211-.L212
 2371 0098 00000000 		.long	.L211-.L212
 2372 009c 00000000 		.long	.L211-.L212
 2373 00a0 00000000 		.long	.L211-.L212
 2374 00a4 00000000 		.long	.L211-.L212
 2375 00a8 00000000 		.long	.L211-.L212
 2376 00ac 00000000 		.long	.L211-.L212
 2377 00b0 00000000 		.long	.L211-.L212
 2378 00b4 00000000 		.long	.L211-.L212
 2379 00b8 00000000 		.long	.L211-.L212
 2380 00bc 00000000 		.long	.L211-.L212
 2381 00c0 00000000 		.long	.L211-.L212
 2382 00c4 00000000 		.long	.L211-.L212
 2383 00c8 00000000 		.long	.L211-.L212
 2384 00cc 00000000 		.long	.L211-.L212
 2385 00d0 00000000 		.long	.L211-.L212
 2386 00d4 00000000 		.long	.L211-.L212
 2387 00d8 00000000 		.long	.L211-.L212
 2388 00dc 00000000 		.long	.L211-.L212
 2389 00e0 00000000 		.long	.L211-.L212
 2390 00e4 00000000 		.long	.L211-.L212
 2391 00e8 00000000 		.long	.L211-.L212
 2392 00ec 00000000 		.long	.L211-.L212
 2393 00f0 00000000 		.long	.L211-.L212
 2394 00f4 00000000 		.long	.L211-.L212
 2395 00f8 00000000 		.long	.L211-.L212
 2396 00fc 00000000 		.long	.L211-.L212
 2397 0100 00000000 		.long	.L211-.L212
 2398 0104 00000000 		.long	.L211-.L212
 2399 0108 00000000 		.long	.L211-.L212
 2400 010c 00000000 		.long	.L211-.L212
 2401 0110 00000000 		.long	.L211-.L212
 2402 0114 00000000 		.long	.L211-.L212
 2403 0118 00000000 		.long	.L211-.L212
 2404 011c 00000000 		.long	.L211-.L212
 2405 0120 00000000 		.long	.L211-.L212
 2406 0124 00000000 		.long	.L211-.L212
 2407 0128 00000000 		.long	.L211-.L212
 2408 012c 00000000 		.long	.L211-.L212
 2409 0130 00000000 		.long	.L211-.L212
 2410 0134 00000000 		.long	.L211-.L212
 2411 0138 00000000 		.long	.L211-.L212
 2412 013c 00000000 		.long	.L211-.L212
GAS LISTING /tmp/cc31R1Mf.s 			page 71


 2413 0140 00000000 		.long	.L211-.L212
 2414 0144 00000000 		.long	.L211-.L212
 2415 0148 00000000 		.long	.L211-.L212
 2416 014c 00000000 		.long	.L211-.L212
 2417 0150 00000000 		.long	.L211-.L212
 2418 0154 00000000 		.long	.L211-.L212
 2419 0158 00000000 		.long	.L211-.L212
 2420 015c 00000000 		.long	.L211-.L212
 2421 0160 00000000 		.long	.L209-.L212
 2422 0164 00000000 		.long	.L211-.L212
 2423 0168 00000000 		.long	.L209-.L212
 2424              		.section	.text.__find_val
 2425              	.LVL280:
 2426              	.L209:
 2427              	.LBE101:
 2428              	.LBE100:
 277:src/mcu_msg.c **** 
 2429              		.loc 1 277 0
 2430 0108 4829FE   		subq	%rdi, %rsi
 2431 010b 66897424 		movw	%si, 8(%rsp)
 2431      08
 279:src/mcu_msg.c **** }
 2432              		.loc 1 279 0
 2433 0110 488B0424 		movq	(%rsp), %rax
 2434              	.LVL281:
 2435 0114 488B5424 		movq	8(%rsp), %rdx
 2435      08
 2436              	.L202:
 280:src/mcu_msg.c **** 
 2437              		.loc 1 280 0
 2438 0119 488B7C24 		movq	24(%rsp), %rdi
 2438      18
 2439 011e 6448333C 		xorq	%fs:40, %rdi
 2439      25280000 
 2439      00
 2440 0127 7505     		jne	.L217
 2441 0129 4883C428 		addq	$40, %rsp
 2442              	.LCFI109:
 2443              		.cfi_remember_state
 2444              		.cfi_def_cfa_offset 8
 2445 012d C3       		ret
 2446              	.L217:
 2447              	.LCFI110:
 2448              		.cfi_restore_state
 2449 012e E8000000 		call	__stack_chk_fail@PLT
 2449      00
 2450              	.LVL282:
 2451              		.cfi_endproc
 2452              	.LFE38:
 2454              		.section	.text.msg_destroy,"ax",@progbits
 2455              		.globl	msg_destroy
 2457              	msg_destroy:
 2458              	.LFB28:
  78:src/mcu_msg.c ****     msg_destroy_string(&msg->id);
 2459              		.loc 1 78 0
 2460              		.cfi_startproc
 2461              	.LVL283:
GAS LISTING /tmp/cc31R1Mf.s 			page 72


 2462 0000 53       		pushq	%rbx
 2463              	.LCFI111:
 2464              		.cfi_def_cfa_offset 16
 2465              		.cfi_offset 3, -16
 2466 0001 4889FB   		movq	%rdi, %rbx
  79:src/mcu_msg.c ****     msg_destroy_string(&msg->content);
 2467              		.loc 1 79 0
 2468 0004 E8000000 		call	msg_destroy_string
 2468      00
 2469              	.LVL284:
  80:src/mcu_msg.c **** }
 2470              		.loc 1 80 0
 2471 0009 488D7B10 		leaq	16(%rbx), %rdi
 2472 000d E8000000 		call	msg_destroy_string
 2472      00
 2473              	.LVL285:
  81:src/mcu_msg.c **** 
 2474              		.loc 1 81 0
 2475 0012 5B       		popq	%rbx
 2476              	.LCFI112:
 2477              		.cfi_def_cfa_offset 8
 2478              	.LVL286:
 2479 0013 C3       		ret
 2480              		.cfi_endproc
 2481              	.LFE28:
 2483              		.section	.text.msg_destroy_obj,"ax",@progbits
 2484              		.globl	msg_destroy_obj
 2486              	msg_destroy_obj:
 2487              	.LFB29:
  86:src/mcu_msg.c ****     msg_destroy_string(&obj->id);
 2488              		.loc 1 86 0
 2489              		.cfi_startproc
 2490              	.LVL287:
 2491 0000 53       		pushq	%rbx
 2492              	.LCFI113:
 2493              		.cfi_def_cfa_offset 16
 2494              		.cfi_offset 3, -16
 2495 0001 4889FB   		movq	%rdi, %rbx
  87:src/mcu_msg.c ****     msg_destroy_string(&obj->content);
 2496              		.loc 1 87 0
 2497 0004 E8000000 		call	msg_destroy_string
 2497      00
 2498              	.LVL288:
  88:src/mcu_msg.c **** }
 2499              		.loc 1 88 0
 2500 0009 488D7B10 		leaq	16(%rbx), %rdi
 2501 000d E8000000 		call	msg_destroy_string
 2501      00
 2502              	.LVL289:
  89:src/mcu_msg.c **** 
 2503              		.loc 1 89 0
 2504 0012 5B       		popq	%rbx
 2505              	.LCFI114:
 2506              		.cfi_def_cfa_offset 8
 2507              	.LVL290:
 2508 0013 C3       		ret
 2509              		.cfi_endproc
GAS LISTING /tmp/cc31R1Mf.s 			page 73


 2510              	.LFE29:
 2512              		.section	.text.msg_destroy_cmd,"ax",@progbits
 2513              		.globl	msg_destroy_cmd
 2515              	msg_destroy_cmd:
 2516              	.LFB30:
  93:src/mcu_msg.c ****     msg_destroy_string(&cmd->cmd);
 2517              		.loc 1 93 0
 2518              		.cfi_startproc
 2519              	.LVL291:
  94:src/mcu_msg.c **** }
 2520              		.loc 1 94 0
 2521 0000 E8000000 		call	msg_destroy_string
 2521      00
 2522              	.LVL292:
  95:src/mcu_msg.c **** 
 2523              		.loc 1 95 0
 2524 0005 F3C3     		rep ret
 2525              		.cfi_endproc
 2526              	.LFE30:
 2528              		.section	.text.msg_init_string,"ax",@progbits
 2529              		.globl	msg_init_string
 2531              	msg_init_string:
 2532              	.LFB31:
  98:src/mcu_msg.c ****     msg_str_t res;
 2533              		.loc 1 98 0
 2534              		.cfi_startproc
 2535              	.LVL293:
 2536 0000 53       		pushq	%rbx
 2537              	.LCFI115:
 2538              		.cfi_def_cfa_offset 16
 2539              		.cfi_offset 3, -16
 2540 0001 4889FB   		movq	%rdi, %rbx
 101:src/mcu_msg.c ****     return res;
 2541              		.loc 1 101 0
 2542 0004 E8000000 		call	__str_len
 2542      00
 2543              	.LVL294:
 2544 0009 BA000000 		movl	$0, %edx
 2544      00
 2545              	.LVL295:
 2546 000e 6689C2   		movw	%ax, %dx
 103:src/mcu_msg.c **** 
 2547              		.loc 1 103 0
 2548 0011 4889D8   		movq	%rbx, %rax
 2549 0014 5B       		popq	%rbx
 2550              	.LCFI116:
 2551              		.cfi_def_cfa_offset 8
 2552              	.LVL296:
 2553 0015 C3       		ret
 2554              		.cfi_endproc
 2555              	.LFE31:
 2557              		.section	.text.msg_get,"ax",@progbits
 2558              		.globl	msg_get
 2560              	msg_get:
 2561              	.LFB39:
 285:src/mcu_msg.c ****     msg_t res;
 2562              		.loc 1 285 0
GAS LISTING /tmp/cc31R1Mf.s 			page 74


 2563              		.cfi_startproc
 2564              	.LVL297:
 2565 0000 53       		pushq	%rbx
 2566              	.LCFI117:
 2567              		.cfi_def_cfa_offset 16
 2568              		.cfi_offset 3, -16
 2569 0001 4883EC30 		subq	$48, %rsp
 2570              	.LCFI118:
 2571              		.cfi_def_cfa_offset 64
 2572 0005 4889FB   		movq	%rdi, %rbx
 285:src/mcu_msg.c ****     msg_t res;
 2573              		.loc 1 285 0
 2574 0008 64488B04 		movq	%fs:40, %rax
 2574      25280000 
 2574      00
 2575 0011 48894424 		movq	%rax, 40(%rsp)
 2575      28
 2576 0016 31C0     		xorl	%eax, %eax
 287:src/mcu_msg.c ****     res.content.len = len;
 2577              		.loc 1 287 0
 2578 0018 48897424 		movq	%rsi, 16(%rsp)
 2578      10
 288:src/mcu_msg.c ****     res.id = __find_keyword(res.content, id, __CTRL_MSG_FLAG, __CTRL_START_MSG); //object start wit
 2579              		.loc 1 288 0
 2580 001d 66894C24 		movw	%cx, 24(%rsp)
 2580      18
 289:src/mcu_msg.c ****     char *p;
 2581              		.loc 1 289 0
 2582 0022 41B87B00 		movl	$123, %r8d
 2582      0000
 2583 0028 B9230000 		movl	$35, %ecx
 2583      00
 2584              	.LVL298:
 2585 002d 4889F7   		movq	%rsi, %rdi
 2586              	.LVL299:
 2587 0030 488B7424 		movq	24(%rsp), %rsi
 2587      18
 2588              	.LVL300:
 2589 0035 E8000000 		call	__find_keyword
 2589      00
 2590              	.LVL301:
 2591 003a 48890424 		movq	%rax, (%rsp)
 2592 003e 48895424 		movq	%rdx, 8(%rsp)
 2592      08
 291:src/mcu_msg.c ****         msg_destroy(&res);
 2593              		.loc 1 291 0
 2594 0043 4885C0   		testq	%rax, %rax
 2595 0046 741B     		je	.L236
 295:src/mcu_msg.c ****     if (*p != __CTRL_START_MSG) { // if the next char is not START_MSG, move to the start flag
 2596              		.loc 1 295 0
 2597 0048 0FB75424 		movzwl	8(%rsp), %edx
 2597      08
 2598 004d 4801D0   		addq	%rdx, %rax
 2599              	.LVL302:
 296:src/mcu_msg.c ****         while(__is_p_in_str(res.content, p + 1) && *p != __CTRL_START_MSG) p++;
 2600              		.loc 1 296 0
 2601 0050 80387B   		cmpb	$123, (%rax)
GAS LISTING /tmp/cc31R1Mf.s 			page 75


 2602 0053 753D     		jne	.L229
 2603              	.L228:
 299:src/mcu_msg.c ****     while(__is_p_in_str(res.content, p) && *p != __CTRL_STOP_MSG) { //calc length
 2604              		.loc 1 299 0
 2605 0055 488D5001 		leaq	1(%rax), %rdx
 2606              	.LVL303:
 2607 0059 48895424 		movq	%rdx, 16(%rsp)
 2607      10
 2608 005e 4889D0   		movq	%rdx, %rax
 300:src/mcu_msg.c ****         p++;
 2609              		.loc 1 300 0
 2610 0061 EB50     		jmp	.L230
 2611              	.LVL304:
 2612              	.L236:
 292:src/mcu_msg.c ****         return res;
 2613              		.loc 1 292 0
 2614 0063 4889E7   		movq	%rsp, %rdi
 2615 0066 E8000000 		call	msg_destroy
 2615      00
 2616              	.LVL305:
 293:src/mcu_msg.c ****     }
 2617              		.loc 1 293 0
 2618 006b 488B0424 		movq	(%rsp), %rax
 2619 006f 488B5424 		movq	8(%rsp), %rdx
 2619      08
 2620 0074 488903   		movq	%rax, (%rbx)
 2621 0077 48895308 		movq	%rdx, 8(%rbx)
 2622 007b 488B4424 		movq	16(%rsp), %rax
 2622      10
 2623 0080 488B5424 		movq	24(%rsp), %rdx
 2623      18
 2624 0085 48894310 		movq	%rax, 16(%rbx)
 2625 0089 48895318 		movq	%rdx, 24(%rbx)
 2626 008d EB68     		jmp	.L225
 2627              	.LVL306:
 2628              	.L234:
 297:src/mcu_msg.c ****     }
 2629              		.loc 1 297 0
 2630 008f 4889D0   		movq	%rdx, %rax
 2631              	.LVL307:
 2632              	.L229:
 297:src/mcu_msg.c ****     }
 2633              		.loc 1 297 0 is_stmt 0 discriminator 1
 2634 0092 488D5001 		leaq	1(%rax), %rdx
 2635              	.LVL308:
 2636              	.LBB102:
 2637              	.LBB103:
 185:src/mcu_msg.c **** }
 2638              		.loc 1 185 0 is_stmt 1 discriminator 1
 2639 0096 4889D6   		movq	%rdx, %rsi
 2640 0099 482B7424 		subq	16(%rsp), %rsi
 2640      10
 2641 009e 0FB74C24 		movzwl	24(%rsp), %ecx
 2641      18
 2642              	.LVL309:
 2643              	.LBE103:
 2644              	.LBE102:
GAS LISTING /tmp/cc31R1Mf.s 			page 76


 297:src/mcu_msg.c ****     }
 2645              		.loc 1 297 0 discriminator 1
 2646 00a3 4839CE   		cmpq	%rcx, %rsi
 2647 00a6 7DAD     		jge	.L228
 297:src/mcu_msg.c ****     }
 2648              		.loc 1 297 0 is_stmt 0 discriminator 2
 2649 00a8 80387B   		cmpb	$123, (%rax)
 2650 00ab 75E2     		jne	.L234
 2651 00ad EBA6     		jmp	.L228
 2652              	.L232:
 301:src/mcu_msg.c ****     }
 2653              		.loc 1 301 0 is_stmt 1
 2654 00af 4883C001 		addq	$1, %rax
 2655              	.LVL310:
 2656              	.L230:
 2657              	.LBB104:
 2658              	.LBB105:
 185:src/mcu_msg.c **** }
 2659              		.loc 1 185 0
 2660 00b3 4889C7   		movq	%rax, %rdi
 2661 00b6 4889C6   		movq	%rax, %rsi
 2662 00b9 482B7424 		subq	16(%rsp), %rsi
 2662      10
 2663 00be 0FB74C24 		movzwl	24(%rsp), %ecx
 2663      18
 2664              	.LVL311:
 2665              	.LBE105:
 2666              	.LBE104:
 300:src/mcu_msg.c ****         p++;
 2667              		.loc 1 300 0
 2668 00c3 4839CE   		cmpq	%rcx, %rsi
 2669 00c6 7D05     		jge	.L231
 300:src/mcu_msg.c ****         p++;
 2670              		.loc 1 300 0 is_stmt 0 discriminator 1
 2671 00c8 80387D   		cmpb	$125, (%rax)
 2672 00cb 75E2     		jne	.L232
 2673              	.L231:
 303:src/mcu_msg.c ****     return res;
 2674              		.loc 1 303 0 is_stmt 1
 2675 00cd 4829D7   		subq	%rdx, %rdi
 2676 00d0 66897C24 		movw	%di, 24(%rsp)
 2676      18
 304:src/mcu_msg.c **** }
 2677              		.loc 1 304 0
 2678 00d5 488B0424 		movq	(%rsp), %rax
 2679              	.LVL312:
 2680 00d9 488B5424 		movq	8(%rsp), %rdx
 2680      08
 2681 00de 488903   		movq	%rax, (%rbx)
 2682 00e1 48895308 		movq	%rdx, 8(%rbx)
 2683 00e5 488B4424 		movq	16(%rsp), %rax
 2683      10
 2684 00ea 488B5424 		movq	24(%rsp), %rdx
 2684      18
 2685 00ef 48894310 		movq	%rax, 16(%rbx)
 2686 00f3 48895318 		movq	%rdx, 24(%rbx)
 2687              	.L225:
GAS LISTING /tmp/cc31R1Mf.s 			page 77


 305:src/mcu_msg.c **** 
 2688              		.loc 1 305 0
 2689 00f7 4889D8   		movq	%rbx, %rax
 2690 00fa 488B5C24 		movq	40(%rsp), %rbx
 2690      28
 2691 00ff 6448331C 		xorq	%fs:40, %rbx
 2691      25280000 
 2691      00
 2692              	.LVL313:
 2693 0108 7506     		jne	.L237
 2694 010a 4883C430 		addq	$48, %rsp
 2695              	.LCFI119:
 2696              		.cfi_remember_state
 2697              		.cfi_def_cfa_offset 16
 2698 010e 5B       		popq	%rbx
 2699              	.LCFI120:
 2700              		.cfi_def_cfa_offset 8
 2701 010f C3       		ret
 2702              	.L237:
 2703              	.LCFI121:
 2704              		.cfi_restore_state
 2705 0110 E8000000 		call	__stack_chk_fail@PLT
 2705      00
 2706              	.LVL314:
 2707              		.cfi_endproc
 2708              	.LFE39:
 2710              		.section	.text.msg_parser_get_obj,"ax",@progbits
 2711              		.globl	msg_parser_get_obj
 2713              	msg_parser_get_obj:
 2714              	.LFB40:
 310:src/mcu_msg.c ****     msg_obj_t res;
 2715              		.loc 1 310 0
 2716              		.cfi_startproc
 2717              	.LVL315:
 2718 0000 53       		pushq	%rbx
 2719              	.LCFI122:
 2720              		.cfi_def_cfa_offset 16
 2721              		.cfi_offset 3, -16
 2722 0001 4883EC30 		subq	$48, %rsp
 2723              	.LCFI123:
 2724              		.cfi_def_cfa_offset 64
 2725 0005 4889FB   		movq	%rdi, %rbx
 2726 0008 4889F2   		movq	%rsi, %rdx
 310:src/mcu_msg.c ****     msg_obj_t res;
 2727              		.loc 1 310 0
 2728 000b 64488B04 		movq	%fs:40, %rax
 2728      25280000 
 2728      00
 2729 0014 48894424 		movq	%rax, 40(%rsp)
 2729      28
 2730 0019 31C0     		xorl	%eax, %eax
 312:src/mcu_msg.c ****     char *p;
 2731              		.loc 1 312 0
 2732 001b 41B82800 		movl	$40, %r8d
 2732      0000
 2733 0021 B9400000 		movl	$64, %ecx
 2733      00
GAS LISTING /tmp/cc31R1Mf.s 			page 78


 2734 0026 488B7C24 		movq	80(%rsp), %rdi
 2734      50
 2735              	.LVL316:
 2736 002b 488B7424 		movq	88(%rsp), %rsi
 2736      58
 2737              	.LVL317:
 2738 0030 E8000000 		call	__find_keyword
 2738      00
 2739              	.LVL318:
 2740 0035 48890424 		movq	%rax, (%rsp)
 2741 0039 48895424 		movq	%rdx, 8(%rsp)
 2741      08
 314:src/mcu_msg.c ****         msg_destroy_obj(&res);
 2742              		.loc 1 314 0
 2743 003e 4885C0   		testq	%rax, %rax
 2744 0041 741B     		je	.L249
 319:src/mcu_msg.c ****     if (*p != __CTRL_START_OBJ) {
 2745              		.loc 1 319 0
 2746 0043 0FB75424 		movzwl	8(%rsp), %edx
 2746      08
 2747 0048 4801D0   		addq	%rdx, %rax
 2748              	.LVL319:
 320:src/mcu_msg.c ****         while(__is_p_in_str(msg.content, p + 1) && *p != __CTRL_START_OBJ) p++;
 2749              		.loc 1 320 0
 2750 004b 803828   		cmpb	$40, (%rax)
 2751 004e 753D     		jne	.L242
 2752              	.L241:
 323:src/mcu_msg.c ****     while(__is_p_in_str(msg.content, p) && *p != __CTRL_STOP_OBJ) {
 2753              		.loc 1 323 0
 2754 0050 488D5001 		leaq	1(%rax), %rdx
 2755              	.LVL320:
 2756 0054 48895424 		movq	%rdx, 16(%rsp)
 2756      10
 2757 0059 4889D0   		movq	%rdx, %rax
 324:src/mcu_msg.c ****         p++;
 2758              		.loc 1 324 0
 2759 005c EB50     		jmp	.L243
 2760              	.LVL321:
 2761              	.L249:
 315:src/mcu_msg.c ****         return res;
 2762              		.loc 1 315 0
 2763 005e 4889E7   		movq	%rsp, %rdi
 2764 0061 E8000000 		call	msg_destroy_obj
 2764      00
 2765              	.LVL322:
 316:src/mcu_msg.c ****     }
 2766              		.loc 1 316 0
 2767 0066 488B0424 		movq	(%rsp), %rax
 2768 006a 488B5424 		movq	8(%rsp), %rdx
 2768      08
 2769 006f 488903   		movq	%rax, (%rbx)
 2770 0072 48895308 		movq	%rdx, 8(%rbx)
 2771 0076 488B4424 		movq	16(%rsp), %rax
 2771      10
 2772 007b 488B5424 		movq	24(%rsp), %rdx
 2772      18
 2773 0080 48894310 		movq	%rax, 16(%rbx)
GAS LISTING /tmp/cc31R1Mf.s 			page 79


 2774 0084 48895318 		movq	%rdx, 24(%rbx)
 2775 0088 EB68     		jmp	.L238
 2776              	.LVL323:
 2777              	.L247:
 321:src/mcu_msg.c ****     }
 2778              		.loc 1 321 0
 2779 008a 4889D0   		movq	%rdx, %rax
 2780              	.LVL324:
 2781              	.L242:
 321:src/mcu_msg.c ****     }
 2782              		.loc 1 321 0 is_stmt 0 discriminator 1
 2783 008d 488D5001 		leaq	1(%rax), %rdx
 2784              	.LVL325:
 2785              	.LBB106:
 2786              	.LBB107:
 185:src/mcu_msg.c **** }
 2787              		.loc 1 185 0 is_stmt 1 discriminator 1
 2788 0091 4889D6   		movq	%rdx, %rsi
 2789 0094 482B7424 		subq	80(%rsp), %rsi
 2789      50
 2790 0099 0FB74C24 		movzwl	88(%rsp), %ecx
 2790      58
 2791              	.LVL326:
 2792              	.LBE107:
 2793              	.LBE106:
 321:src/mcu_msg.c ****     }
 2794              		.loc 1 321 0 discriminator 1
 2795 009e 4839CE   		cmpq	%rcx, %rsi
 2796 00a1 7DAD     		jge	.L241
 321:src/mcu_msg.c ****     }
 2797              		.loc 1 321 0 is_stmt 0 discriminator 2
 2798 00a3 803828   		cmpb	$40, (%rax)
 2799 00a6 75E2     		jne	.L247
 2800 00a8 EBA6     		jmp	.L241
 2801              	.L245:
 325:src/mcu_msg.c ****     }
 2802              		.loc 1 325 0 is_stmt 1
 2803 00aa 4883C001 		addq	$1, %rax
 2804              	.LVL327:
 2805              	.L243:
 2806              	.LBB108:
 2807              	.LBB109:
 185:src/mcu_msg.c **** }
 2808              		.loc 1 185 0
 2809 00ae 4889C7   		movq	%rax, %rdi
 2810 00b1 4889C6   		movq	%rax, %rsi
 2811 00b4 482B7424 		subq	80(%rsp), %rsi
 2811      50
 2812 00b9 0FB74C24 		movzwl	88(%rsp), %ecx
 2812      58
 2813              	.LVL328:
 2814              	.LBE109:
 2815              	.LBE108:
 324:src/mcu_msg.c ****         p++;
 2816              		.loc 1 324 0
 2817 00be 4839CE   		cmpq	%rcx, %rsi
 2818 00c1 7D05     		jge	.L244
GAS LISTING /tmp/cc31R1Mf.s 			page 80


 324:src/mcu_msg.c ****         p++;
 2819              		.loc 1 324 0 is_stmt 0 discriminator 1
 2820 00c3 803829   		cmpb	$41, (%rax)
 2821 00c6 75E2     		jne	.L245
 2822              	.L244:
 327:src/mcu_msg.c ****     return res;
 2823              		.loc 1 327 0 is_stmt 1
 2824 00c8 4829D7   		subq	%rdx, %rdi
 2825 00cb 66897C24 		movw	%di, 24(%rsp)
 2825      18
 328:src/mcu_msg.c **** }
 2826              		.loc 1 328 0
 2827 00d0 488B0424 		movq	(%rsp), %rax
 2828              	.LVL329:
 2829 00d4 488B5424 		movq	8(%rsp), %rdx
 2829      08
 2830 00d9 488903   		movq	%rax, (%rbx)
 2831 00dc 48895308 		movq	%rdx, 8(%rbx)
 2832 00e0 488B4424 		movq	16(%rsp), %rax
 2832      10
 2833 00e5 488B5424 		movq	24(%rsp), %rdx
 2833      18
 2834 00ea 48894310 		movq	%rax, 16(%rbx)
 2835 00ee 48895318 		movq	%rdx, 24(%rbx)
 2836              	.L238:
 329:src/mcu_msg.c **** 
 2837              		.loc 1 329 0
 2838 00f2 4889D8   		movq	%rbx, %rax
 2839 00f5 488B5C24 		movq	40(%rsp), %rbx
 2839      28
 2840 00fa 6448331C 		xorq	%fs:40, %rbx
 2840      25280000 
 2840      00
 2841              	.LVL330:
 2842 0103 7506     		jne	.L250
 2843 0105 4883C430 		addq	$48, %rsp
 2844              	.LCFI124:
 2845              		.cfi_remember_state
 2846              		.cfi_def_cfa_offset 16
 2847 0109 5B       		popq	%rbx
 2848              	.LCFI125:
 2849              		.cfi_def_cfa_offset 8
 2850 010a C3       		ret
 2851              	.L250:
 2852              	.LCFI126:
 2853              		.cfi_restore_state
 2854 010b E8000000 		call	__stack_chk_fail@PLT
 2854      00
 2855              	.LVL331:
 2856              		.cfi_endproc
 2857              	.LFE40:
 2859              		.section	.text.msg_parser_get_cmd,"ax",@progbits
 2860              		.globl	msg_parser_get_cmd
 2862              	msg_parser_get_cmd:
 2863              	.LFB41:
 332:src/mcu_msg.c ****     msg_cmd_t res;
 2864              		.loc 1 332 0
GAS LISTING /tmp/cc31R1Mf.s 			page 81


 2865              		.cfi_startproc
 2866              	.LVL332:
 2867 0000 4883EC08 		subq	$8, %rsp
 2868              	.LCFI127:
 2869              		.cfi_def_cfa_offset 16
 2870 0004 4889FA   		movq	%rdi, %rdx
 335:src/mcu_msg.c ****     return res;
 2871              		.loc 1 335 0
 2872 0007 41B83E00 		movl	$62, %r8d
 2872      0000
 2873 000d B93C0000 		movl	$60, %ecx
 2873      00
 2874 0012 488B7C24 		movq	32(%rsp), %rdi
 2874      20
 2875              	.LVL333:
 2876 0017 488B7424 		movq	40(%rsp), %rsi
 2876      28
 2877 001c E8000000 		call	__find_keyword
 2877      00
 2878              	.LVL334:
 337:src/mcu_msg.c **** 
 2879              		.loc 1 337 0
 2880 0021 4883C408 		addq	$8, %rsp
 2881              	.LCFI128:
 2882              		.cfi_def_cfa_offset 8
 2883 0025 C3       		ret
 2884              		.cfi_endproc
 2885              	.LFE41:
 2887              		.section	.text.msg_parser_get_int,"ax",@progbits
 2888              		.globl	msg_parser_get_int
 2890              	msg_parser_get_int:
 2891              	.LFB42:
 340:src/mcu_msg.c ****     msg_str_t sval = __find_val(obj, key);
 2892              		.loc 1 340 0
 2893              		.cfi_startproc
 2894              	.LVL335:
 2895 0000 53       		pushq	%rbx
 2896              	.LCFI129:
 2897              		.cfi_def_cfa_offset 16
 2898              		.cfi_offset 3, -16
 2899 0001 4889FB   		movq	%rdi, %rbx
 341:src/mcu_msg.c ****     msg_size_t i;
 2900              		.loc 1 341 0
 2901 0004 FF742428 		pushq	40(%rsp)
 2902              	.LCFI130:
 2903              		.cfi_def_cfa_offset 24
 2904 0008 FF742428 		pushq	40(%rsp)
 2905              	.LCFI131:
 2906              		.cfi_def_cfa_offset 32
 2907 000c FF742428 		pushq	40(%rsp)
 2908              	.LCFI132:
 2909              		.cfi_def_cfa_offset 40
 2910 0010 FF742428 		pushq	40(%rsp)
 2911              	.LCFI133:
 2912              		.cfi_def_cfa_offset 48
 2913 0014 4889F7   		movq	%rsi, %rdi
 2914              	.LVL336:
GAS LISTING /tmp/cc31R1Mf.s 			page 82


 2915 0017 E8000000 		call	__find_val
 2915      00
 2916              	.LVL337:
 347:src/mcu_msg.c ****         return -1;
 2917              		.loc 1 347 0
 2918 001c 4883C420 		addq	$32, %rsp
 2919              	.LCFI134:
 2920              		.cfi_def_cfa_offset 16
 2921              	.LVL338:
 2922 0020 4885C0   		testq	%rax, %rax
 2923 0023 0F84AD00 		je	.L264
 2923      0000
 2924 0029 4889C2   		movq	%rax, %rdx
 351:src/mcu_msg.c ****         case '+':
 2925              		.loc 1 351 0
 2926 002c 0FB600   		movzbl	(%rax), %eax
 2927 002f 3C2B     		cmpb	$43, %al
 2928 0031 740C     		je	.L256
 2929 0033 3C2D     		cmpb	$45, %al
 2930 0035 7419     		je	.L257
 344:src/mcu_msg.c ****     int8_t res = 0; // result of function
 2931              		.loc 1 344 0
 2932 0037 41B80100 		movl	$1, %r8d
 2932      0000
 2933 003d EB0A     		jmp	.L255
 2934              	.L256:
 354:src/mcu_msg.c ****         break;
 2935              		.loc 1 354 0
 2936 003f 488D5201 		leaq	1(%rdx), %rdx
 353:src/mcu_msg.c ****             sval.s++;
 2937              		.loc 1 353 0
 2938 0043 41B80100 		movl	$1, %r8d
 2938      0000
 2939              	.LVL339:
 2940              	.L255:
 366:src/mcu_msg.c ****         if(*sval.s < '0' || *sval.s > '9') {    // if non valid number, return with error
 2941              		.loc 1 366 0
 2942 0049 BE000000 		movl	$0, %esi
 2942      00
 2943 004e EB1E     		jmp	.L258
 2944              	.LVL340:
 2945              	.L257:
 359:src/mcu_msg.c ****         break;
 2946              		.loc 1 359 0
 2947 0050 488D5201 		leaq	1(%rdx), %rdx
 358:src/mcu_msg.c ****             sval.s++;
 2948              		.loc 1 358 0
 2949 0054 41B8FFFF 		movl	$-1, %r8d
 2949      FFFF
 360:src/mcu_msg.c ****         
 2950              		.loc 1 360 0
 2951 005a EBED     		jmp	.L255
 2952              	.LVL341:
 2953              	.L260:
 366:src/mcu_msg.c ****         if(*sval.s < '0' || *sval.s > '9') {    // if non valid number, return with error
 2954              		.loc 1 366 0
 2955 005c 3C3B     		cmpb	$59, %al
GAS LISTING /tmp/cc31R1Mf.s 			page 83


 2956 005e 7432     		je	.L259
 367:src/mcu_msg.c ****             return -1;
 2957              		.loc 1 367 0
 2958 0060 83E830   		subl	$48, %eax
 2959 0063 3C09     		cmpb	$9, %al
 2960 0065 7776     		ja	.L266
 366:src/mcu_msg.c ****         if(*sval.s < '0' || *sval.s > '9') {    // if non valid number, return with error
 2961              		.loc 1 366 0 discriminator 2
 2962 0067 83C601   		addl	$1, %esi
 2963              	.LVL342:
 2964 006a 488D5701 		leaq	1(%rdi), %rdx
 2965              	.LVL343:
 2966              	.L258:
 366:src/mcu_msg.c ****         if(*sval.s < '0' || *sval.s > '9') {    // if non valid number, return with error
 2967              		.loc 1 366 0 is_stmt 0 discriminator 1
 2968 006e 4889D7   		movq	%rdx, %rdi
 2969              	.LVL344:
 2970              	.LBB110:
 2971              	.LBB111:
 185:src/mcu_msg.c **** }
 2972              		.loc 1 185 0 is_stmt 1 discriminator 1
 2973 0071 4889D1   		movq	%rdx, %rcx
 2974 0074 482B4C24 		subq	32(%rsp), %rcx
 2974      20
 2975 0079 0FB74424 		movzwl	40(%rsp), %eax
 2975      28
 2976              	.LVL345:
 2977              	.LBE111:
 2978              	.LBE110:
 366:src/mcu_msg.c ****         if(*sval.s < '0' || *sval.s > '9') {    // if non valid number, return with error
 2979              		.loc 1 366 0 discriminator 1
 2980 007e 4839C1   		cmpq	%rax, %rcx
 2981 0081 7D0F     		jge	.L259
 366:src/mcu_msg.c ****         if(*sval.s < '0' || *sval.s > '9') {    // if non valid number, return with error
 2982              		.loc 1 366 0 is_stmt 0 discriminator 3
 2983 0083 0FB602   		movzbl	(%rdx), %eax
 2984              	.LVL346:
 2985              	.LBB112:
 2986              	.LBB113:
 139:src/mcu_msg.c ****         case  ' ':
 2987              		.loc 1 139 0 is_stmt 1 discriminator 3
 2988 0086 3C09     		cmpb	$9, %al
 2989 0088 7CD2     		jl	.L260
 2990 008a 3C0D     		cmpb	$13, %al
 2991 008c 7E04     		jle	.L259
 2992 008e 3C20     		cmpb	$32, %al
 2993 0090 75CA     		jne	.L260
 2994              	.LVL347:
 2995              	.L259:
 2996              	.LBE113:
 2997              	.LBE112:
 372:src/mcu_msg.c ****     --sval.s;
 2998              		.loc 1 372 0
 2999 0092 C7030000 		movl	$0, (%rbx)
 2999      0000
 373:src/mcu_msg.c ****     while(i--) { //convert value to integer
 3000              		.loc 1 373 0
GAS LISTING /tmp/cc31R1Mf.s 			page 84


 3001 0098 488D57FF 		leaq	-1(%rdi), %rdx
 345:src/mcu_msg.c **** 
 3002              		.loc 1 345 0
 3003 009c B8000000 		movl	$0, %eax
 3003      00
 343:src/mcu_msg.c ****     int sign = 1;
 3004              		.loc 1 343 0
 3005 00a1 B9010000 		movl	$1, %ecx
 3005      00
 374:src/mcu_msg.c ****         *res_val += (*sval.s-- - '0') * m;
 3006              		.loc 1 374 0
 3007 00a6 EB1D     		jmp	.L262
 3008              	.LVL348:
 3009              	.L263:
 375:src/mcu_msg.c ****         m *= 10;
 3010              		.loc 1 375 0
 3011 00a8 4889D6   		movq	%rdx, %rsi
 3012 00ab 4883EA01 		subq	$1, %rdx
 3013 00af 0FBE36   		movsbl	(%rsi), %esi
 3014 00b2 83EE30   		subl	$48, %esi
 3015 00b5 0FAFF1   		imull	%ecx, %esi
 3016 00b8 0133     		addl	%esi, (%rbx)
 376:src/mcu_msg.c ****         res++;
 3017              		.loc 1 376 0
 3018 00ba 8D3489   		leal	(%rcx,%rcx,4), %esi
 3019 00bd 8D0C36   		leal	(%rsi,%rsi), %ecx
 3020              	.LVL349:
 377:src/mcu_msg.c ****     }
 3021              		.loc 1 377 0
 3022 00c0 83C001   		addl	$1, %eax
 3023              	.LVL350:
 374:src/mcu_msg.c ****         *res_val += (*sval.s-- - '0') * m;
 3024              		.loc 1 374 0
 3025 00c3 89FE     		movl	%edi, %esi
 3026              	.LVL351:
 3027              	.L262:
 3028 00c5 8D7EFF   		leal	-1(%rsi), %edi
 3029              	.LVL352:
 3030 00c8 6685F6   		testw	%si, %si
 3031 00cb 75DB     		jne	.L263
 380:src/mcu_msg.c **** 
 3032              		.loc 1 380 0
 3033 00cd 440FAF03 		imull	(%rbx), %r8d
 3034              	.LVL353:
 3035 00d1 448903   		movl	%r8d, (%rbx)
 3036              	.LVL354:
 3037              	.L253:
 383:src/mcu_msg.c **** 
 3038              		.loc 1 383 0
 3039 00d4 5B       		popq	%rbx
 3040              	.LCFI135:
 3041              		.cfi_remember_state
 3042              		.cfi_def_cfa_offset 8
 3043              	.LVL355:
 3044 00d5 C3       		ret
 3045              	.LVL356:
 3046              	.L264:
GAS LISTING /tmp/cc31R1Mf.s 			page 85


 3047              	.LCFI136:
 3048              		.cfi_restore_state
 348:src/mcu_msg.c **** 
 3049              		.loc 1 348 0
 3050 00d6 B8FFFFFF 		movl	$-1, %eax
 3050      FF
 3051 00db EBF7     		jmp	.L253
 3052              	.LVL357:
 3053              	.L266:
 368:src/mcu_msg.c ****         }
 3054              		.loc 1 368 0
 3055 00dd B8FFFFFF 		movl	$-1, %eax
 3055      FF
 3056 00e2 EBF0     		jmp	.L253
 3057              		.cfi_endproc
 3058              	.LFE42:
 3060              		.section	.text.msg_parser_get_float,"ax",@progbits
 3061              		.globl	msg_parser_get_float
 3063              	msg_parser_get_float:
 3064              	.LFB43:
 387:src/mcu_msg.c ****     msg_str_t sval = __find_val(obj, key);
 3065              		.loc 1 387 0
 3066              		.cfi_startproc
 3067              	.LVL358:
 3068 0000 53       		pushq	%rbx
 3069              	.LCFI137:
 3070              		.cfi_def_cfa_offset 16
 3071              		.cfi_offset 3, -16
 3072 0001 4889FB   		movq	%rdi, %rbx
 388:src/mcu_msg.c ****     char *pf;
 3073              		.loc 1 388 0
 3074 0004 FF742428 		pushq	40(%rsp)
 3075              	.LCFI138:
 3076              		.cfi_def_cfa_offset 24
 3077 0008 FF742428 		pushq	40(%rsp)
 3078              	.LCFI139:
 3079              		.cfi_def_cfa_offset 32
 3080 000c FF742428 		pushq	40(%rsp)
 3081              	.LCFI140:
 3082              		.cfi_def_cfa_offset 40
 3083 0010 FF742428 		pushq	40(%rsp)
 3084              	.LCFI141:
 3085              		.cfi_def_cfa_offset 48
 3086 0014 4889F7   		movq	%rsi, %rdi
 3087              	.LVL359:
 3088 0017 E8000000 		call	__find_val
 3088      00
 3089              	.LVL360:
 3090 001c 4889C1   		movq	%rax, %rcx
 3091              	.LVL361:
 396:src/mcu_msg.c ****         return -1;
 3092              		.loc 1 396 0
 3093 001f 4883C420 		addq	$32, %rsp
 3094              	.LCFI142:
 3095              		.cfi_def_cfa_offset 16
 3096 0023 4885C0   		testq	%rax, %rax
 3097 0026 0F844C01 		je	.L287
GAS LISTING /tmp/cc31R1Mf.s 			page 86


 3097      0000
 3098 002c 4889C2   		movq	%rax, %rdx
 400:src/mcu_msg.c ****         case '+':
 3099              		.loc 1 400 0
 3100 002f 0FB601   		movzbl	(%rcx), %eax
 3101 0032 3C2B     		cmpb	$43, %al
 3102 0034 740B     		je	.L272
 3103 0036 3C2D     		cmpb	$45, %al
 3104 0038 7417     		je	.L273
 393:src/mcu_msg.c ****     int8_t res = 0; // result of function
 3105              		.loc 1 393 0
 3106 003a BF010000 		movl	$1, %edi
 3106      00
 3107 003f EB09     		jmp	.L271
 3108              	.L272:
 403:src/mcu_msg.c ****         break;
 3109              		.loc 1 403 0
 3110 0041 488D4A01 		leaq	1(%rdx), %rcx
 402:src/mcu_msg.c ****             sval.s++;
 3111              		.loc 1 402 0
 3112 0045 BF010000 		movl	$1, %edi
 3112      00
 3113              	.LVL362:
 3114              	.L271:
 416:src/mcu_msg.c ****         if((*sval.s < '0' || *sval.s > '9')) {    // if non valid number, return with error
 3115              		.loc 1 416 0
 3116 004a BA000000 		movl	$0, %edx
 3116      00
 3117 004f EB25     		jmp	.L274
 3118              	.LVL363:
 3119              	.L273:
 408:src/mcu_msg.c ****         break;
 3120              		.loc 1 408 0
 3121 0051 488D4A01 		leaq	1(%rdx), %rcx
 407:src/mcu_msg.c ****             sval.s++;
 3122              		.loc 1 407 0
 3123 0055 BFFFFFFF 		movl	$-1, %edi
 3123      FF
 409:src/mcu_msg.c ****         
 3124              		.loc 1 409 0
 3125 005a EBEE     		jmp	.L271
 3126              	.LVL364:
 3127              	.L276:
 416:src/mcu_msg.c ****         if((*sval.s < '0' || *sval.s > '9')) {    // if non valid number, return with error
 3128              		.loc 1 416 0
 3129 005c 3C3B     		cmpb	$59, %al
 3130 005e 743A     		je	.L275
 416:src/mcu_msg.c ****         if((*sval.s < '0' || *sval.s > '9')) {    // if non valid number, return with error
 3131              		.loc 1 416 0 is_stmt 0 discriminator 5
 3132 0060 3C2E     		cmpb	$46, %al
 3133 0062 7436     		je	.L275
 417:src/mcu_msg.c ****             return -1;
 3134              		.loc 1 417 0 is_stmt 1
 3135 0064 83E830   		subl	$48, %eax
 3136 0067 3C09     		cmpb	$9, %al
 3137 0069 0F871001 		ja	.L289
 3137      0000
GAS LISTING /tmp/cc31R1Mf.s 			page 87


 416:src/mcu_msg.c ****         if((*sval.s < '0' || *sval.s > '9')) {    // if non valid number, return with error
 3138              		.loc 1 416 0 discriminator 2
 3139 006f 83C201   		addl	$1, %edx
 3140              	.LVL365:
 3141 0072 488D4E01 		leaq	1(%rsi), %rcx
 3142              	.LVL366:
 3143              	.L274:
 416:src/mcu_msg.c ****         if((*sval.s < '0' || *sval.s > '9')) {    // if non valid number, return with error
 3144              		.loc 1 416 0 is_stmt 0 discriminator 1
 3145 0076 4889CE   		movq	%rcx, %rsi
 3146              	.LVL367:
 3147              	.LBB114:
 3148              	.LBB115:
 185:src/mcu_msg.c **** }
 3149              		.loc 1 185 0 is_stmt 1 discriminator 1
 3150 0079 4989C8   		movq	%rcx, %r8
 3151 007c 4C2B4424 		subq	32(%rsp), %r8
 3151      20
 3152 0081 0FB74424 		movzwl	40(%rsp), %eax
 3152      28
 3153              	.LVL368:
 3154              	.LBE115:
 3155              	.LBE114:
 416:src/mcu_msg.c ****         if((*sval.s < '0' || *sval.s > '9')) {    // if non valid number, return with error
 3156              		.loc 1 416 0 discriminator 1
 3157 0086 4939C0   		cmpq	%rax, %r8
 3158 0089 7D0F     		jge	.L275
 416:src/mcu_msg.c ****         if((*sval.s < '0' || *sval.s > '9')) {    // if non valid number, return with error
 3159              		.loc 1 416 0 is_stmt 0 discriminator 3
 3160 008b 0FB601   		movzbl	(%rcx), %eax
 3161              	.LVL369:
 3162              	.LBB116:
 3163              	.LBB117:
 139:src/mcu_msg.c ****         case  ' ':
 3164              		.loc 1 139 0 is_stmt 1 discriminator 3
 3165 008e 3C09     		cmpb	$9, %al
 3166 0090 7CCA     		jl	.L276
 3167 0092 3C0D     		cmpb	$13, %al
 3168 0094 7E04     		jle	.L275
 3169 0096 3C20     		cmpb	$32, %al
 3170 0098 75C2     		jne	.L276
 3171              	.LVL370:
 3172              	.L275:
 3173              	.LBE117:
 3174              	.LBE116:
 422:src/mcu_msg.c ****     
 3175              		.loc 1 422 0
 3176 009a C7030000 		movl	$0x00000000, (%rbx)
 3176      0000
 424:src/mcu_msg.c ****         pf = sval.s + 1;
 3177              		.loc 1 424 0
 3178 00a0 803E2E   		cmpb	$46, (%rsi)
 3179 00a3 7416     		je	.L294
 394:src/mcu_msg.c **** 
 3180              		.loc 1 394 0
 3181 00a5 B8000000 		movl	$0, %eax
 3181      00
GAS LISTING /tmp/cc31R1Mf.s 			page 88


 428:src/mcu_msg.c ****     }
 3182              		.loc 1 428 0
 3183 00aa 41B80000 		movl	$0, %r8d
 3183      0000
 3184              	.LVL371:
 3185              	.L278:
 431:src/mcu_msg.c ****     while(i--) { // convert integer part
 3186              		.loc 1 431 0
 3187 00b0 488D4EFF 		leaq	-1(%rsi), %rcx
 391:src/mcu_msg.c ****     float mf = 0.1;
 3188              		.loc 1 391 0
 3189 00b4 BE010000 		movl	$1, %esi
 3189      00
 432:src/mcu_msg.c ****         *res_val += (*sval.s-- - '0') * m;
 3190              		.loc 1 432 0
 3191 00b9 EB38     		jmp	.L279
 3192              	.LVL372:
 3193              	.L294:
 425:src/mcu_msg.c ****         res++;
 3194              		.loc 1 425 0
 3195 00bb 4C8D4601 		leaq	1(%rsi), %r8
 3196              	.LVL373:
 426:src/mcu_msg.c ****     } else {
 3197              		.loc 1 426 0
 3198 00bf B8010000 		movl	$1, %eax
 3198      00
 3199 00c4 EBEA     		jmp	.L278
 3200              	.LVL374:
 3201              	.L282:
 433:src/mcu_msg.c ****         m *= 10;
 3202              		.loc 1 433 0
 3203 00c6 4889CA   		movq	%rcx, %rdx
 3204 00c9 4883E901 		subq	$1, %rcx
 3205 00cd 0FBE12   		movsbl	(%rdx), %edx
 3206 00d0 83EA30   		subl	$48, %edx
 3207 00d3 0FAFD6   		imull	%esi, %edx
 3208 00d6 660FEFC0 		pxor	%xmm0, %xmm0
 3209 00da F3480F2A 		cvtsi2ssq	%rdx, %xmm0
 3209      C2
 3210 00df F30F5803 		addss	(%rbx), %xmm0
 3211 00e3 F30F1103 		movss	%xmm0, (%rbx)
 434:src/mcu_msg.c ****         res++;
 3212              		.loc 1 434 0
 3213 00e7 8D14B6   		leal	(%rsi,%rsi,4), %edx
 3214 00ea 8D3412   		leal	(%rdx,%rdx), %esi
 3215              	.LVL375:
 435:src/mcu_msg.c ****     }
 3216              		.loc 1 435 0
 3217 00ed 83C001   		addl	$1, %eax
 3218              	.LVL376:
 432:src/mcu_msg.c ****         *res_val += (*sval.s-- - '0') * m;
 3219              		.loc 1 432 0
 3220 00f0 4489CA   		movl	%r9d, %edx
 3221              	.LVL377:
 3222              	.L279:
 3223 00f3 448D4AFF 		leal	-1(%rdx), %r9d
 3224              	.LVL378:
GAS LISTING /tmp/cc31R1Mf.s 			page 89


 3225 00f7 6685D2   		testw	%dx, %dx
 3226 00fa 75CA     		jne	.L282
 392:src/mcu_msg.c ****     int sign = 1;
 3227              		.loc 1 392 0
 3228 00fc F30F100D 		movss	.LC1(%rip), %xmm1
 3228      00000000 
 3229 0104 EB33     		jmp	.L283
 3230              	.LVL379:
 3231              	.L285:
 439:src/mcu_msg.c ****         if(*pf < '0' || *pf > '9') {    // if non valid number, return with error
 3232              		.loc 1 439 0
 3233 0106 80F93B   		cmpb	$59, %cl
 3234 0109 745B     		je	.L284
 440:src/mcu_msg.c ****             return -1;
 3235              		.loc 1 440 0
 3236 010b 83E930   		subl	$48, %ecx
 3237 010e 80F909   		cmpb	$9, %cl
 3238 0111 7773     		ja	.L291
 443:src/mcu_msg.c ****         mf /= 10;
 3239              		.loc 1 443 0
 3240 0113 83EA30   		subl	$48, %edx
 3241 0116 660FEFC0 		pxor	%xmm0, %xmm0
 3242 011a F30F2AC2 		cvtsi2ss	%edx, %xmm0
 3243 011e F30F59C1 		mulss	%xmm1, %xmm0
 3244 0122 F30F5803 		addss	(%rbx), %xmm0
 3245 0126 F30F1103 		movss	%xmm0, (%rbx)
 444:src/mcu_msg.c ****         res++; 
 3246              		.loc 1 444 0
 3247 012a F30F5E0D 		divss	.LC2(%rip), %xmm1
 3247      00000000 
 3248              	.LVL380:
 445:src/mcu_msg.c ****     }
 3249              		.loc 1 445 0
 3250 0132 83C001   		addl	$1, %eax
 3251              	.LVL381:
 439:src/mcu_msg.c ****         if(*pf < '0' || *pf > '9') {    // if non valid number, return with error
 3252              		.loc 1 439 0
 3253 0135 4983C001 		addq	$1, %r8
 3254              	.LVL382:
 3255              	.L283:
 439:src/mcu_msg.c ****         if(*pf < '0' || *pf > '9') {    // if non valid number, return with error
 3256              		.loc 1 439 0 is_stmt 0 discriminator 1
 3257 0139 4D85C0   		testq	%r8, %r8
 3258 013c 7428     		je	.L284
 3259              	.LVL383:
 3260              	.LBB118:
 3261              	.LBB119:
 185:src/mcu_msg.c **** }
 3262              		.loc 1 185 0 is_stmt 1 discriminator 2
 3263 013e 4C89C1   		movq	%r8, %rcx
 3264 0141 482B4C24 		subq	32(%rsp), %rcx
 3264      20
 3265 0146 0FB75424 		movzwl	40(%rsp), %edx
 3265      28
 3266              	.LVL384:
 3267              	.LBE119:
 3268              	.LBE118:
GAS LISTING /tmp/cc31R1Mf.s 			page 90


 439:src/mcu_msg.c ****         if(*pf < '0' || *pf > '9') {    // if non valid number, return with error
 3269              		.loc 1 439 0 discriminator 2
 3270 014b 4839D1   		cmpq	%rdx, %rcx
 3271 014e 7D16     		jge	.L284
 439:src/mcu_msg.c ****         if(*pf < '0' || *pf > '9') {    // if non valid number, return with error
 3272              		.loc 1 439 0 is_stmt 0 discriminator 3
 3273 0150 410FB608 		movzbl	(%r8), %ecx
 3274 0154 0FBED1   		movsbl	%cl, %edx
 3275              	.LVL385:
 3276              	.LBB120:
 3277              	.LBB121:
 139:src/mcu_msg.c ****         case  ' ':
 3278              		.loc 1 139 0 is_stmt 1 discriminator 3
 3279 0157 80F909   		cmpb	$9, %cl
 3280 015a 7CAA     		jl	.L285
 3281 015c 80F90D   		cmpb	$13, %cl
 3282 015f 7E05     		jle	.L284
 3283 0161 80F920   		cmpb	$32, %cl
 3284 0164 75A0     		jne	.L285
 3285              	.LVL386:
 3286              	.L284:
 3287              	.LBE121:
 3288              	.LBE120:
 448:src/mcu_msg.c **** 
 3289              		.loc 1 448 0
 3290 0166 660FEFC0 		pxor	%xmm0, %xmm0
 3291 016a F30F2AC7 		cvtsi2ss	%edi, %xmm0
 3292 016e F30F5903 		mulss	(%rbx), %xmm0
 3293 0172 F30F1103 		movss	%xmm0, (%rbx)
 3294              	.LVL387:
 3295              	.L269:
 451:src/mcu_msg.c **** 
 3296              		.loc 1 451 0
 3297 0176 5B       		popq	%rbx
 3298              	.LCFI143:
 3299              		.cfi_remember_state
 3300              		.cfi_def_cfa_offset 8
 3301              	.LVL388:
 3302 0177 C3       		ret
 3303              	.LVL389:
 3304              	.L287:
 3305              	.LCFI144:
 3306              		.cfi_restore_state
 397:src/mcu_msg.c **** 
 3307              		.loc 1 397 0
 3308 0178 B8FFFFFF 		movl	$-1, %eax
 3308      FF
 3309 017d EBF7     		jmp	.L269
 3310              	.LVL390:
 3311              	.L289:
 418:src/mcu_msg.c ****         }
 3312              		.loc 1 418 0
 3313 017f B8FFFFFF 		movl	$-1, %eax
 3313      FF
 3314 0184 EBF0     		jmp	.L269
 3315              	.LVL391:
 3316              	.L291:
GAS LISTING /tmp/cc31R1Mf.s 			page 91


 441:src/mcu_msg.c ****         }
 3317              		.loc 1 441 0
 3318 0186 B8FFFFFF 		movl	$-1, %eax
 3318      FF
 3319              	.LVL392:
 3320 018b EBE9     		jmp	.L269
 3321              		.cfi_endproc
 3322              	.LFE43:
 3324              		.section	.text.msg_parser_get_string,"ax",@progbits
 3325              		.globl	msg_parser_get_string
 3327              	msg_parser_get_string:
 3328              	.LFB44:
 456:src/mcu_msg.c ****     msg_str_t res = __find_val(obj, key);
 3329              		.loc 1 456 0
 3330              		.cfi_startproc
 3331              	.LVL393:
 3332 0000 4883EC28 		subq	$40, %rsp
 3333              	.LCFI145:
 3334              		.cfi_def_cfa_offset 48
 456:src/mcu_msg.c ****     msg_str_t res = __find_val(obj, key);
 3335              		.loc 1 456 0
 3336 0004 64488B04 		movq	%fs:40, %rax
 3336      25280000 
 3336      00
 3337 000d 48894424 		movq	%rax, 24(%rsp)
 3337      18
 3338 0012 31C0     		xorl	%eax, %eax
 457:src/mcu_msg.c ****     char qmark;
 3339              		.loc 1 457 0
 3340 0014 FF742448 		pushq	72(%rsp)
 3341              	.LCFI146:
 3342              		.cfi_def_cfa_offset 56
 3343 0018 FF742448 		pushq	72(%rsp)
 3344              	.LCFI147:
 3345              		.cfi_def_cfa_offset 64
 3346 001c FF742448 		pushq	72(%rsp)
 3347              	.LCFI148:
 3348              		.cfi_def_cfa_offset 72
 3349 0020 FF742448 		pushq	72(%rsp)
 3350              	.LCFI149:
 3351              		.cfi_def_cfa_offset 80
 3352 0024 E8000000 		call	__find_val
 3352      00
 3353              	.LVL394:
 3354 0029 48894424 		movq	%rax, 32(%rsp)
 3354      20
 3355 002e 48895424 		movq	%rdx, 40(%rsp)
 3355      28
 461:src/mcu_msg.c ****         msg_destroy_string(&res);
 3356              		.loc 1 461 0
 3357 0033 4883C420 		addq	$32, %rsp
 3358              	.LCFI150:
 3359              		.cfi_def_cfa_offset 48
 3360 0037 4885C0   		testq	%rax, %rax
 3361 003a 7422     		je	.L304
 466:src/mcu_msg.c **** 
 3362              		.loc 1 466 0
GAS LISTING /tmp/cc31R1Mf.s 			page 92


 3363 003c 0FB638   		movzbl	(%rax), %edi
 3364              	.LVL395:
 468:src/mcu_msg.c ****         msg_destroy_string(&res);
 3365              		.loc 1 468 0
 3366 003f 4080FF27 		cmpb	$39, %dil
 3367 0043 0F95C1   		setne	%cl
 3368 0046 4080FF22 		cmpb	$34, %dil
 3369 004a 0F95C2   		setne	%dl
 3370 004d 84D1     		testb	%dl, %cl
 3371 004f 7520     		jne	.L305
 473:src/mcu_msg.c ****     while(__is_p_in_str(obj.content, p) && *p != qmark) { // calc len
 3372              		.loc 1 473 0
 3373 0051 488D7001 		leaq	1(%rax), %rsi
 3374 0055 48893424 		movq	%rsi, (%rsp)
 3375              	.LVL396:
 3376 0059 4889F0   		movq	%rsi, %rax
 474:src/mcu_msg.c ****         p++;
 3377              		.loc 1 474 0
 3378 005c EB2A     		jmp	.L299
 3379              	.LVL397:
 3380              	.L304:
 462:src/mcu_msg.c ****         return res;
 3381              		.loc 1 462 0
 3382 005e 4889E7   		movq	%rsp, %rdi
 3383 0061 E8000000 		call	msg_destroy_string
 3383      00
 3384              	.LVL398:
 463:src/mcu_msg.c ****     }
 3385              		.loc 1 463 0
 3386 0066 488B0424 		movq	(%rsp), %rax
 3387 006a 488B5424 		movq	8(%rsp), %rdx
 3387      08
 3388 006f EB43     		jmp	.L297
 3389              	.LVL399:
 3390              	.L305:
 469:src/mcu_msg.c ****         return res;
 3391              		.loc 1 469 0
 3392 0071 4889E7   		movq	%rsp, %rdi
 3393              	.LVL400:
 3394 0074 E8000000 		call	msg_destroy_string
 3394      00
 3395              	.LVL401:
 470:src/mcu_msg.c ****     }
 3396              		.loc 1 470 0
 3397 0079 488B0424 		movq	(%rsp), %rax
 3398 007d 488B5424 		movq	8(%rsp), %rdx
 3398      08
 3399 0082 EB30     		jmp	.L297
 3400              	.LVL402:
 3401              	.L301:
 475:src/mcu_msg.c ****     }
 3402              		.loc 1 475 0
 3403 0084 4883C001 		addq	$1, %rax
 3404              	.LVL403:
 3405              	.L299:
 3406              	.LBB122:
 3407              	.LBB123:
GAS LISTING /tmp/cc31R1Mf.s 			page 93


 185:src/mcu_msg.c **** }
 3408              		.loc 1 185 0
 3409 0088 4989C0   		movq	%rax, %r8
 3410 008b 4889C1   		movq	%rax, %rcx
 3411 008e 482B4C24 		subq	64(%rsp), %rcx
 3411      40
 3412 0093 0FB75424 		movzwl	72(%rsp), %edx
 3412      48
 3413              	.LVL404:
 3414              	.LBE123:
 3415              	.LBE122:
 474:src/mcu_msg.c ****         p++;
 3416              		.loc 1 474 0
 3417 0098 4839D1   		cmpq	%rdx, %rcx
 3418 009b 7D05     		jge	.L300
 474:src/mcu_msg.c ****         p++;
 3419              		.loc 1 474 0 is_stmt 0 discriminator 1
 3420 009d 403838   		cmpb	%dil, (%rax)
 3421 00a0 75E2     		jne	.L301
 3422              	.L300:
 477:src/mcu_msg.c ****     return res;
 3423              		.loc 1 477 0 is_stmt 1
 3424 00a2 4929F0   		subq	%rsi, %r8
 3425 00a5 66448944 		movw	%r8w, 8(%rsp)
 3425      2408
 478:src/mcu_msg.c **** }
 3426              		.loc 1 478 0
 3427 00ab 488B0424 		movq	(%rsp), %rax
 3428              	.LVL405:
 3429 00af 488B5424 		movq	8(%rsp), %rdx
 3429      08
 3430              	.LVL406:
 3431              	.L297:
 479:src/mcu_msg.c **** 
 3432              		.loc 1 479 0
 3433 00b4 488B7424 		movq	24(%rsp), %rsi
 3433      18
 3434 00b9 64483334 		xorq	%fs:40, %rsi
 3434      25280000 
 3434      00
 3435 00c2 7505     		jne	.L306
 3436 00c4 4883C428 		addq	$40, %rsp
 3437              	.LCFI151:
 3438              		.cfi_remember_state
 3439              		.cfi_def_cfa_offset 8
 3440 00c8 C3       		ret
 3441              	.L306:
 3442              	.LCFI152:
 3443              		.cfi_restore_state
 3444 00c9 E8000000 		call	__stack_chk_fail@PLT
 3444      00
 3445              	.LVL407:
 3446              		.cfi_endproc
 3447              	.LFE44:
 3449              		.section	.text.msg_string_hnd_create,"ax",@progbits
 3450              		.globl	msg_string_hnd_create
 3452              	msg_string_hnd_create:
GAS LISTING /tmp/cc31R1Mf.s 			page 94


 3453              	.LFB50:
 575:src/mcu_msg.c ****     msg_string_hnd_t hnd;
 3454              		.loc 1 575 0
 3455              		.cfi_startproc
 3456              	.LVL408:
 3457 0000 4889F8   		movq	%rdi, %rax
 577:src/mcu_msg.c ****     hnd.copy_to_chr_arr = __msg_str_copy_to_chr_arr;
 3458              		.loc 1 577 0
 3459 0003 48893500 		movq	%rsi, __msg_putc(%rip)
 3459      000000
 578:src/mcu_msg.c ****     hnd.copy = __msg_str_copy;
 3460              		.loc 1 578 0
 3461 000a 488D1500 		leaq	__msg_str_copy_to_chr_arr(%rip), %rdx
 3461      000000
 3462 0011 48895424 		movq	%rdx, -32(%rsp)
 3462      E0
 579:src/mcu_msg.c ****     hnd.print = __msg_print_str;
 3463              		.loc 1 579 0
 3464 0016 488D0D00 		leaq	__msg_str_copy(%rip), %rcx
 3464      000000
 3465 001d 48894C24 		movq	%rcx, -24(%rsp)
 3465      E8
 580:src/mcu_msg.c ****     return hnd;
 3466              		.loc 1 580 0
 3467 0022 488D3D00 		leaq	__msg_print_str(%rip), %rdi
 3467      000000
 3468              	.LVL409:
 3469 0029 48897C24 		movq	%rdi, -16(%rsp)
 3469      F0
 581:src/mcu_msg.c **** }
 3470              		.loc 1 581 0
 3471 002e 488B7424 		movq	-40(%rsp), %rsi
 3471      D8
 3472              	.LVL410:
 3473 0033 488B7C24 		movq	-32(%rsp), %rdi
 3473      E0
 3474 0038 488930   		movq	%rsi, (%rax)
 3475 003b 48897808 		movq	%rdi, 8(%rax)
 3476 003f 488B7424 		movq	-24(%rsp), %rsi
 3476      E8
 3477 0044 488B7C24 		movq	-16(%rsp), %rdi
 3477      F0
 3478 0049 48897010 		movq	%rsi, 16(%rax)
 3479 004d 48897818 		movq	%rdi, 24(%rax)
 582:src/mcu_msg.c **** 
 3480              		.loc 1 582 0
 3481 0051 C3       		ret
 3482              		.cfi_endproc
 3483              	.LFE50:
 3485              		.section	.text.msg_destroy_str_buff,"ax",@progbits
 3486              		.globl	msg_destroy_str_buff
 3488              	msg_destroy_str_buff:
 3489              	.LFB52:
 601:src/mcu_msg.c ****     msg_destroy_string(&buff->buff);
 3490              		.loc 1 601 0
 3491              		.cfi_startproc
 3492              	.LVL411:
GAS LISTING /tmp/cc31R1Mf.s 			page 95


 3493 0000 53       		pushq	%rbx
 3494              	.LCFI153:
 3495              		.cfi_def_cfa_offset 16
 3496              		.cfi_offset 3, -16
 3497 0001 4889FB   		movq	%rdi, %rbx
 602:src/mcu_msg.c ****     buff->p = NULL;
 3498              		.loc 1 602 0
 3499 0004 E8000000 		call	msg_destroy_string
 3499      00
 3500              	.LVL412:
 603:src/mcu_msg.c **** }
 3501              		.loc 1 603 0
 3502 0009 48C74310 		movq	$0, 16(%rbx)
 3502      00000000 
 604:src/mcu_msg.c **** 
 3503              		.loc 1 604 0
 3504 0011 5B       		popq	%rbx
 3505              	.LCFI154:
 3506              		.cfi_def_cfa_offset 8
 3507              	.LVL413:
 3508 0012 C3       		ret
 3509              		.cfi_endproc
 3510              	.LFE52:
 3512              		.section	.text.msg_init_str_buff,"ax",@progbits
 3513              		.globl	msg_init_str_buff
 3515              	msg_init_str_buff:
 3516              	.LFB53:
 607:src/mcu_msg.c ****     msg_str_buff_t b;
 3517              		.loc 1 607 0
 3518              		.cfi_startproc
 3519              	.LVL414:
 3520 0000 4889F8   		movq	%rdi, %rax
 610:src/mcu_msg.c ****     b.p = buff;
 3521              		.loc 1 610 0
 3522 0003 48897424 		movq	%rsi, -40(%rsp)
 3522      D8
 617:src/mcu_msg.c ****     return b;
 3523              		.loc 1 617 0
 3524 0008 66895424 		movw	%dx, -32(%rsp)
 3524      E0
 618:src/mcu_msg.c **** }
 3525              		.loc 1 618 0
 3526 000d 4C8B4C24 		movq	-40(%rsp), %r9
 3526      D8
 3527 0012 4C8B5424 		movq	-32(%rsp), %r10
 3527      E0
 3528 0017 4C890F   		movq	%r9, (%rdi)
 3529 001a 4C895708 		movq	%r10, 8(%rdi)
 3530 001e 48897710 		movq	%rsi, 16(%rdi)
 619:src/mcu_msg.c **** 
 3531              		.loc 1 619 0
 3532 0022 C3       		ret
 3533              		.cfi_endproc
 3534              	.LFE53:
 3536              		.section	.text.msg_wrapper_hnd_create,"ax",@progbits
 3537              		.globl	msg_wrapper_hnd_create
 3539              	msg_wrapper_hnd_create:
GAS LISTING /tmp/cc31R1Mf.s 			page 96


 3540              	.LFB58:
 699:src/mcu_msg.c ****     msg_wrap_hnd_t hnd;
 3541              		.loc 1 699 0
 3542              		.cfi_startproc
 3543              	.LVL415:
 3544 0000 4889F8   		movq	%rdi, %rax
 701:src/mcu_msg.c ****     hnd.print = __msg_wrapper_print_msg;
 3545              		.loc 1 701 0
 3546 0003 48893500 		movq	%rsi, __msg_putc(%rip)
 3546      000000
 702:src/mcu_msg.c ****     hnd.print_obj = __msg_wrapper_print_obj;
 3547              		.loc 1 702 0
 3548 000a 488D1500 		leaq	__msg_wrapper_print_msg(%rip), %rdx
 3548      000000
 3549 0011 48895424 		movq	%rdx, -40(%rsp)
 3549      D8
 703:src/mcu_msg.c ****     hnd.print_cmd = __msg_wrapper_print_cmd;
 3550              		.loc 1 703 0
 3551 0016 488D0D00 		leaq	__msg_wrapper_print_obj(%rip), %rcx
 3551      000000
 3552 001d 48894C24 		movq	%rcx, -32(%rsp)
 3552      E0
 704:src/mcu_msg.c **** #if MCU_MSG_USE_BUFFERING
 3553              		.loc 1 704 0
 3554 0022 488D3D00 		leaq	__msg_wrapper_print_cmd(%rip), %rdi
 3554      000000
 3555              	.LVL416:
 3556 0029 48897C24 		movq	%rdi, -24(%rsp)
 3556      E8
 706:src/mcu_msg.c ****     // hnd.print_obj_to_buff = __msg_wrapper_print_obj_to_buff;
 3557              		.loc 1 706 0
 3558 002e 488D1500 		leaq	__msg_wrapper_print_msg_to_buff(%rip), %rdx
 3558      000000
 3559 0035 48895424 		movq	%rdx, -16(%rsp)
 3559      F0
 710:src/mcu_msg.c **** }
 3560              		.loc 1 710 0
 3561 003a 488B7424 		movq	-40(%rsp), %rsi
 3561      D8
 3562              	.LVL417:
 3563 003f 488B7C24 		movq	-32(%rsp), %rdi
 3563      E0
 3564 0044 488930   		movq	%rsi, (%rax)
 3565 0047 48897808 		movq	%rdi, 8(%rax)
 3566 004b 488B7424 		movq	-24(%rsp), %rsi
 3566      E8
 3567 0050 488B7C24 		movq	-16(%rsp), %rdi
 3567      F0
 3568 0055 48897010 		movq	%rsi, 16(%rax)
 3569 0059 48897818 		movq	%rdi, 24(%rax)
 711:src/mcu_msg.c **** 
 3570              		.loc 1 711 0
 3571 005d C3       		ret
 3572              		.cfi_endproc
 3573              	.LFE58:
 3575              		.section	.text.msg_wrap_destroy,"ax",@progbits
 3576              		.globl	msg_wrap_destroy
GAS LISTING /tmp/cc31R1Mf.s 			page 97


 3578              	msg_wrap_destroy:
 3579              	.LFB62:
 804:src/mcu_msg.c ****     msg_destroy_string(&msg->id);
 3580              		.loc 1 804 0
 3581              		.cfi_startproc
 3582              	.LVL418:
 3583 0000 53       		pushq	%rbx
 3584              	.LCFI155:
 3585              		.cfi_def_cfa_offset 16
 3586              		.cfi_offset 3, -16
 3587 0001 4889FB   		movq	%rdi, %rbx
 805:src/mcu_msg.c ****     msg->cmd_queue = NULL;
 3588              		.loc 1 805 0
 3589 0004 E8000000 		call	msg_destroy_string
 3589      00
 3590              	.LVL419:
 806:src/mcu_msg.c ****     msg->obj_queue = NULL;
 3591              		.loc 1 806 0
 3592 0009 48C74318 		movq	$0, 24(%rbx)
 3592      00000000 
 807:src/mcu_msg.c **** }
 3593              		.loc 1 807 0
 3594 0011 48C74310 		movq	$0, 16(%rbx)
 3594      00000000 
 808:src/mcu_msg.c **** 
 3595              		.loc 1 808 0
 3596 0019 5B       		popq	%rbx
 3597              	.LCFI156:
 3598              		.cfi_def_cfa_offset 8
 3599              	.LVL420:
 3600 001a C3       		ret
 3601              		.cfi_endproc
 3602              	.LFE62:
 3604              		.section	.text.msg_wrap_destroy_obj,"ax",@progbits
 3605              		.globl	msg_wrap_destroy_obj
 3607              	msg_wrap_destroy_obj:
 3608              	.LFB63:
 811:src/mcu_msg.c ****     msg_destroy_string(&obj->id);
 3609              		.loc 1 811 0
 3610              		.cfi_startproc
 3611              	.LVL421:
 3612 0000 53       		pushq	%rbx
 3613              	.LCFI157:
 3614              		.cfi_def_cfa_offset 16
 3615              		.cfi_offset 3, -16
 3616 0001 4889FB   		movq	%rdi, %rbx
 812:src/mcu_msg.c ****     obj->int_queue = NULL;
 3617              		.loc 1 812 0
 3618 0004 E8000000 		call	msg_destroy_string
 3618      00
 3619              	.LVL422:
 813:src/mcu_msg.c ****     obj->float_queue = NULL;
 3620              		.loc 1 813 0
 3621 0009 48C74310 		movq	$0, 16(%rbx)
 3621      00000000 
 814:src/mcu_msg.c ****     obj->string_queue = NULL;
 3622              		.loc 1 814 0
GAS LISTING /tmp/cc31R1Mf.s 			page 98


 3623 0011 48C74318 		movq	$0, 24(%rbx)
 3623      00000000 
 815:src/mcu_msg.c ****     obj->next = NULL;
 3624              		.loc 1 815 0
 3625 0019 48C74320 		movq	$0, 32(%rbx)
 3625      00000000 
 816:src/mcu_msg.c **** }
 3626              		.loc 1 816 0
 3627 0021 48C74328 		movq	$0, 40(%rbx)
 3627      00000000 
 817:src/mcu_msg.c **** 
 3628              		.loc 1 817 0
 3629 0029 5B       		popq	%rbx
 3630              	.LCFI158:
 3631              		.cfi_def_cfa_offset 8
 3632              	.LVL423:
 3633 002a C3       		ret
 3634              		.cfi_endproc
 3635              	.LFE63:
 3637              		.section	.text.msg_wrap_destroy_cmd,"ax",@progbits
 3638              		.globl	msg_wrap_destroy_cmd
 3640              	msg_wrap_destroy_cmd:
 3641              	.LFB64:
 820:src/mcu_msg.c ****     msg_destroy_string(&cmd->cmd);
 3642              		.loc 1 820 0
 3643              		.cfi_startproc
 3644              	.LVL424:
 3645 0000 53       		pushq	%rbx
 3646              	.LCFI159:
 3647              		.cfi_def_cfa_offset 16
 3648              		.cfi_offset 3, -16
 3649 0001 4889FB   		movq	%rdi, %rbx
 821:src/mcu_msg.c ****     cmd->next = NULL;
 3650              		.loc 1 821 0
 3651 0004 E8000000 		call	msg_destroy_string
 3651      00
 3652              	.LVL425:
 822:src/mcu_msg.c **** }
 3653              		.loc 1 822 0
 3654 0009 48C74310 		movq	$0, 16(%rbx)
 3654      00000000 
 823:src/mcu_msg.c **** 
 3655              		.loc 1 823 0
 3656 0011 5B       		popq	%rbx
 3657              	.LCFI160:
 3658              		.cfi_def_cfa_offset 8
 3659              	.LVL426:
 3660 0012 C3       		ret
 3661              		.cfi_endproc
 3662              	.LFE64:
 3664              		.section	.text.msg_wrap_destroy_str,"ax",@progbits
 3665              		.globl	msg_wrap_destroy_str
 3667              	msg_wrap_destroy_str:
 3668              	.LFB65:
 826:src/mcu_msg.c ****     msg_destroy_string(&str->id);
 3669              		.loc 1 826 0
 3670              		.cfi_startproc
GAS LISTING /tmp/cc31R1Mf.s 			page 99


 3671              	.LVL427:
 3672 0000 53       		pushq	%rbx
 3673              	.LCFI161:
 3674              		.cfi_def_cfa_offset 16
 3675              		.cfi_offset 3, -16
 3676 0001 4889FB   		movq	%rdi, %rbx
 827:src/mcu_msg.c ****     msg_destroy_string(&str->content);
 3677              		.loc 1 827 0
 3678 0004 E8000000 		call	msg_destroy_string
 3678      00
 3679              	.LVL428:
 828:src/mcu_msg.c ****     str->next = NULL;
 3680              		.loc 1 828 0
 3681 0009 488D7B10 		leaq	16(%rbx), %rdi
 3682 000d E8000000 		call	msg_destroy_string
 3682      00
 3683              	.LVL429:
 829:src/mcu_msg.c **** }
 3684              		.loc 1 829 0
 3685 0012 48C74320 		movq	$0, 32(%rbx)
 3685      00000000 
 830:src/mcu_msg.c **** 
 3686              		.loc 1 830 0
 3687 001a 5B       		popq	%rbx
 3688              	.LCFI162:
 3689              		.cfi_def_cfa_offset 8
 3690              	.LVL430:
 3691 001b C3       		ret
 3692              		.cfi_endproc
 3693              	.LFE65:
 3695              		.section	.text.msg_wrap_destroy_int,"ax",@progbits
 3696              		.globl	msg_wrap_destroy_int
 3698              	msg_wrap_destroy_int:
 3699              	.LFB66:
 833:src/mcu_msg.c ****     msg_destroy_string(&i->id);
 3700              		.loc 1 833 0
 3701              		.cfi_startproc
 3702              	.LVL431:
 3703 0000 53       		pushq	%rbx
 3704              	.LCFI163:
 3705              		.cfi_def_cfa_offset 16
 3706              		.cfi_offset 3, -16
 3707 0001 4889FB   		movq	%rdi, %rbx
 834:src/mcu_msg.c ****     i->val = 0;
 3708              		.loc 1 834 0
 3709 0004 E8000000 		call	msg_destroy_string
 3709      00
 3710              	.LVL432:
 835:src/mcu_msg.c ****     i->next = NULL;
 3711              		.loc 1 835 0
 3712 0009 C7431000 		movl	$0, 16(%rbx)
 3712      000000
 836:src/mcu_msg.c **** }
 3713              		.loc 1 836 0
 3714 0010 48C74318 		movq	$0, 24(%rbx)
 3714      00000000 
 837:src/mcu_msg.c **** 
GAS LISTING /tmp/cc31R1Mf.s 			page 100


 3715              		.loc 1 837 0
 3716 0018 5B       		popq	%rbx
 3717              	.LCFI164:
 3718              		.cfi_def_cfa_offset 8
 3719              	.LVL433:
 3720 0019 C3       		ret
 3721              		.cfi_endproc
 3722              	.LFE66:
 3724              		.section	.text.msg_wrap_destroy_float,"ax",@progbits
 3725              		.globl	msg_wrap_destroy_float
 3727              	msg_wrap_destroy_float:
 3728              	.LFB67:
 840:src/mcu_msg.c ****     msg_destroy_string(&f->id);
 3729              		.loc 1 840 0
 3730              		.cfi_startproc
 3731              	.LVL434:
 3732 0000 53       		pushq	%rbx
 3733              	.LCFI165:
 3734              		.cfi_def_cfa_offset 16
 3735              		.cfi_offset 3, -16
 3736 0001 4889FB   		movq	%rdi, %rbx
 841:src/mcu_msg.c ****     f->val = 0.0;
 3737              		.loc 1 841 0
 3738 0004 E8000000 		call	msg_destroy_string
 3738      00
 3739              	.LVL435:
 842:src/mcu_msg.c ****     f->next = NULL;
 3740              		.loc 1 842 0
 3741 0009 C7431000 		movl	$0x00000000, 16(%rbx)
 3741      000000
 843:src/mcu_msg.c ****     f->prec = 0;
 3742              		.loc 1 843 0
 3743 0010 48C74318 		movq	$0, 24(%rbx)
 3743      00000000 
 844:src/mcu_msg.c **** }
 3744              		.loc 1 844 0
 3745 0018 C6431400 		movb	$0, 20(%rbx)
 845:src/mcu_msg.c **** 
 3746              		.loc 1 845 0
 3747 001c 5B       		popq	%rbx
 3748              	.LCFI166:
 3749              		.cfi_def_cfa_offset 8
 3750              	.LVL436:
 3751 001d C3       		ret
 3752              		.cfi_endproc
 3753              	.LFE67:
 3755              		.section	.text.msg_wrapper_init_msg,"ax",@progbits
 3756              		.globl	msg_wrapper_init_msg
 3758              	msg_wrapper_init_msg:
 3759              	.LFB68:
 850:src/mcu_msg.c ****     msg_wrap_t res;
 3760              		.loc 1 850 0
 3761              		.cfi_startproc
 3762              	.LVL437:
 3763 0000 53       		pushq	%rbx
 3764              	.LCFI167:
 3765              		.cfi_def_cfa_offset 16
GAS LISTING /tmp/cc31R1Mf.s 			page 101


 3766              		.cfi_offset 3, -16
 3767 0001 4883EC20 		subq	$32, %rsp
 3768              	.LCFI168:
 3769              		.cfi_def_cfa_offset 48
 3770 0005 4889FB   		movq	%rdi, %rbx
 852:src/mcu_msg.c ****     res.cmd_queue = NULL;
 3771              		.loc 1 852 0
 3772 0008 4889F7   		movq	%rsi, %rdi
 3773              	.LVL438:
 3774 000b E8000000 		call	msg_init_string
 3774      00
 3775              	.LVL439:
 853:src/mcu_msg.c ****     res.obj_queue = NULL;
 3776              		.loc 1 853 0
 3777 0010 48C74424 		movq	$0, 24(%rsp)
 3777      18000000 
 3777      00
 854:src/mcu_msg.c ****     return res;
 3778              		.loc 1 854 0
 3779 0019 48C74424 		movq	$0, 16(%rsp)
 3779      10000000 
 3779      00
 855:src/mcu_msg.c **** }
 3780              		.loc 1 855 0
 3781 0022 488903   		movq	%rax, (%rbx)
 3782 0025 48895308 		movq	%rdx, 8(%rbx)
 3783 0029 488B4424 		movq	16(%rsp), %rax
 3783      10
 3784 002e 488B5424 		movq	24(%rsp), %rdx
 3784      18
 3785 0033 48894310 		movq	%rax, 16(%rbx)
 3786 0037 48895318 		movq	%rdx, 24(%rbx)
 856:src/mcu_msg.c **** 
 3787              		.loc 1 856 0
 3788 003b 4889D8   		movq	%rbx, %rax
 3789 003e 4883C420 		addq	$32, %rsp
 3790              	.LCFI169:
 3791              		.cfi_def_cfa_offset 16
 3792 0042 5B       		popq	%rbx
 3793              	.LCFI170:
 3794              		.cfi_def_cfa_offset 8
 3795              	.LVL440:
 3796 0043 C3       		ret
 3797              		.cfi_endproc
 3798              	.LFE68:
 3800              		.section	.text.msg_wrapper_init_cmd,"ax",@progbits
 3801              		.globl	msg_wrapper_init_cmd
 3803              	msg_wrapper_init_cmd:
 3804              	.LFB69:
 860:src/mcu_msg.c ****     msg_wrap_cmd_t res;
 3805              		.loc 1 860 0
 3806              		.cfi_startproc
 3807              	.LVL441:
 3808 0000 53       		pushq	%rbx
 3809              	.LCFI171:
 3810              		.cfi_def_cfa_offset 16
 3811              		.cfi_offset 3, -16
GAS LISTING /tmp/cc31R1Mf.s 			page 102


 3812 0001 4883EC20 		subq	$32, %rsp
 3813              	.LCFI172:
 3814              		.cfi_def_cfa_offset 48
 3815 0005 4889FB   		movq	%rdi, %rbx
 862:src/mcu_msg.c ****     res.next = NULL;
 3816              		.loc 1 862 0
 3817 0008 4889F7   		movq	%rsi, %rdi
 3818              	.LVL442:
 3819 000b E8000000 		call	msg_init_string
 3819      00
 3820              	.LVL443:
 864:src/mcu_msg.c **** }
 3821              		.loc 1 864 0
 3822 0010 488903   		movq	%rax, (%rbx)
 3823 0013 48895308 		movq	%rdx, 8(%rbx)
 3824 0017 48C74310 		movq	$0, 16(%rbx)
 3824      00000000 
 865:src/mcu_msg.c **** 
 3825              		.loc 1 865 0
 3826 001f 4889D8   		movq	%rbx, %rax
 3827 0022 4883C420 		addq	$32, %rsp
 3828              	.LCFI173:
 3829              		.cfi_def_cfa_offset 16
 3830 0026 5B       		popq	%rbx
 3831              	.LCFI174:
 3832              		.cfi_def_cfa_offset 8
 3833              	.LVL444:
 3834 0027 C3       		ret
 3835              		.cfi_endproc
 3836              	.LFE69:
 3838              		.section	.text.msg_wrapper_init_obj,"ax",@progbits
 3839              		.globl	msg_wrapper_init_obj
 3841              	msg_wrapper_init_obj:
 3842              	.LFB70:
 868:src/mcu_msg.c ****     msg_wrap_obj_t res;
 3843              		.loc 1 868 0
 3844              		.cfi_startproc
 3845              	.LVL445:
 3846 0000 53       		pushq	%rbx
 3847              	.LCFI175:
 3848              		.cfi_def_cfa_offset 16
 3849              		.cfi_offset 3, -16
 3850 0001 4883EC30 		subq	$48, %rsp
 3851              	.LCFI176:
 3852              		.cfi_def_cfa_offset 64
 3853 0005 4889FB   		movq	%rdi, %rbx
 870:src/mcu_msg.c ****     res.int_queue = NULL;
 3854              		.loc 1 870 0
 3855 0008 4889F7   		movq	%rsi, %rdi
 3856              	.LVL446:
 3857 000b E8000000 		call	msg_init_string
 3857      00
 3858              	.LVL447:
 871:src/mcu_msg.c ****     res.float_queue = NULL;
 3859              		.loc 1 871 0
 3860 0010 48C74424 		movq	$0, 16(%rsp)
 3860      10000000 
GAS LISTING /tmp/cc31R1Mf.s 			page 103


 3860      00
 872:src/mcu_msg.c ****     res.string_queue = NULL;
 3861              		.loc 1 872 0
 3862 0019 48C74424 		movq	$0, 24(%rsp)
 3862      18000000 
 3862      00
 873:src/mcu_msg.c ****     res.next = NULL;
 3863              		.loc 1 873 0
 3864 0022 48C74424 		movq	$0, 32(%rsp)
 3864      20000000 
 3864      00
 874:src/mcu_msg.c ****     return res;
 3865              		.loc 1 874 0
 3866 002b 48C74424 		movq	$0, 40(%rsp)
 3866      28000000 
 3866      00
 875:src/mcu_msg.c **** }
 3867              		.loc 1 875 0
 3868 0034 488903   		movq	%rax, (%rbx)
 3869 0037 48895308 		movq	%rdx, 8(%rbx)
 3870 003b 488B4424 		movq	16(%rsp), %rax
 3870      10
 3871 0040 488B5424 		movq	24(%rsp), %rdx
 3871      18
 3872 0045 48894310 		movq	%rax, 16(%rbx)
 3873 0049 48895318 		movq	%rdx, 24(%rbx)
 3874 004d 488B4424 		movq	32(%rsp), %rax
 3874      20
 3875 0052 488B5424 		movq	40(%rsp), %rdx
 3875      28
 3876 0057 48894320 		movq	%rax, 32(%rbx)
 3877 005b 48895328 		movq	%rdx, 40(%rbx)
 876:src/mcu_msg.c **** 
 3878              		.loc 1 876 0
 3879 005f 4889D8   		movq	%rbx, %rax
 3880 0062 4883C430 		addq	$48, %rsp
 3881              	.LCFI177:
 3882              		.cfi_def_cfa_offset 16
 3883 0066 5B       		popq	%rbx
 3884              	.LCFI178:
 3885              		.cfi_def_cfa_offset 8
 3886              	.LVL448:
 3887 0067 C3       		ret
 3888              		.cfi_endproc
 3889              	.LFE70:
 3891              		.section	.text.msg_wrapper_init_string,"ax",@progbits
 3892              		.globl	msg_wrapper_init_string
 3894              	msg_wrapper_init_string:
 3895              	.LFB71:
 879:src/mcu_msg.c ****     msg_wrap_str_t res;
 3896              		.loc 1 879 0
 3897              		.cfi_startproc
 3898              	.LVL449:
 3899 0000 4156     		pushq	%r14
 3900              	.LCFI179:
 3901              		.cfi_def_cfa_offset 16
 3902              		.cfi_offset 14, -16
GAS LISTING /tmp/cc31R1Mf.s 			page 104


 3903 0002 4155     		pushq	%r13
 3904              	.LCFI180:
 3905              		.cfi_def_cfa_offset 24
 3906              		.cfi_offset 13, -24
 3907 0004 55       		pushq	%rbp
 3908              	.LCFI181:
 3909              		.cfi_def_cfa_offset 32
 3910              		.cfi_offset 6, -32
 3911 0005 53       		pushq	%rbx
 3912              	.LCFI182:
 3913              		.cfi_def_cfa_offset 40
 3914              		.cfi_offset 3, -40
 3915 0006 4883EC38 		subq	$56, %rsp
 3916              	.LCFI183:
 3917              		.cfi_def_cfa_offset 96
 3918 000a 4889FB   		movq	%rdi, %rbx
 3919 000d 4889D5   		movq	%rdx, %rbp
 881:src/mcu_msg.c ****     res.content = msg_init_string(content);
 3920              		.loc 1 881 0
 3921 0010 4889F7   		movq	%rsi, %rdi
 3922              	.LVL450:
 3923 0013 E8000000 		call	msg_init_string
 3923      00
 3924              	.LVL451:
 3925 0018 4989C5   		movq	%rax, %r13
 3926 001b 4989D6   		movq	%rdx, %r14
 882:src/mcu_msg.c ****     res.next = NULL;
 3927              		.loc 1 882 0
 3928 001e 4889EF   		movq	%rbp, %rdi
 3929 0021 E8000000 		call	msg_init_string
 3929      00
 3930              	.LVL452:
 884:src/mcu_msg.c **** }
 3931              		.loc 1 884 0
 3932 0026 4C892B   		movq	%r13, (%rbx)
 3933 0029 4C897308 		movq	%r14, 8(%rbx)
 3934 002d 48894310 		movq	%rax, 16(%rbx)
 3935 0031 48895318 		movq	%rdx, 24(%rbx)
 3936 0035 48C74320 		movq	$0, 32(%rbx)
 3936      00000000 
 885:src/mcu_msg.c **** 
 3937              		.loc 1 885 0
 3938 003d 4889D8   		movq	%rbx, %rax
 3939 0040 4883C438 		addq	$56, %rsp
 3940              	.LCFI184:
 3941              		.cfi_def_cfa_offset 40
 3942 0044 5B       		popq	%rbx
 3943              	.LCFI185:
 3944              		.cfi_def_cfa_offset 32
 3945              	.LVL453:
 3946 0045 5D       		popq	%rbp
 3947              	.LCFI186:
 3948              		.cfi_def_cfa_offset 24
 3949              	.LVL454:
 3950 0046 415D     		popq	%r13
 3951              	.LCFI187:
 3952              		.cfi_def_cfa_offset 16
GAS LISTING /tmp/cc31R1Mf.s 			page 105


 3953 0048 415E     		popq	%r14
 3954              	.LCFI188:
 3955              		.cfi_def_cfa_offset 8
 3956 004a C3       		ret
 3957              		.cfi_endproc
 3958              	.LFE71:
 3960              		.section	.text.msg_wrapper_init_int,"ax",@progbits
 3961              		.globl	msg_wrapper_init_int
 3963              	msg_wrapper_init_int:
 3964              	.LFB72:
 888:src/mcu_msg.c ****     msg_wrap_int_t res;
 3965              		.loc 1 888 0
 3966              		.cfi_startproc
 3967              	.LVL455:
 3968 0000 55       		pushq	%rbp
 3969              	.LCFI189:
 3970              		.cfi_def_cfa_offset 16
 3971              		.cfi_offset 6, -16
 3972 0001 53       		pushq	%rbx
 3973              	.LCFI190:
 3974              		.cfi_def_cfa_offset 24
 3975              		.cfi_offset 3, -24
 3976 0002 4883EC28 		subq	$40, %rsp
 3977              	.LCFI191:
 3978              		.cfi_def_cfa_offset 64
 3979 0006 4889FB   		movq	%rdi, %rbx
 3980 0009 89D5     		movl	%edx, %ebp
 890:src/mcu_msg.c ****     res.val = val;
 3981              		.loc 1 890 0
 3982 000b 4889F7   		movq	%rsi, %rdi
 3983              	.LVL456:
 3984 000e E8000000 		call	msg_init_string
 3984      00
 3985              	.LVL457:
 891:src/mcu_msg.c ****     res.next = NULL;
 3986              		.loc 1 891 0
 3987 0013 896C2410 		movl	%ebp, 16(%rsp)
 892:src/mcu_msg.c ****     return res;
 3988              		.loc 1 892 0
 3989 0017 48C74424 		movq	$0, 24(%rsp)
 3989      18000000 
 3989      00
 893:src/mcu_msg.c **** }
 3990              		.loc 1 893 0
 3991 0020 488903   		movq	%rax, (%rbx)
 3992 0023 48895308 		movq	%rdx, 8(%rbx)
 3993 0027 488B4424 		movq	16(%rsp), %rax
 3993      10
 3994 002c 488B5424 		movq	24(%rsp), %rdx
 3994      18
 3995 0031 48894310 		movq	%rax, 16(%rbx)
 3996 0035 48895318 		movq	%rdx, 24(%rbx)
 894:src/mcu_msg.c **** 
 3997              		.loc 1 894 0
 3998 0039 4889D8   		movq	%rbx, %rax
 3999 003c 4883C428 		addq	$40, %rsp
 4000              	.LCFI192:
GAS LISTING /tmp/cc31R1Mf.s 			page 106


 4001              		.cfi_def_cfa_offset 24
 4002 0040 5B       		popq	%rbx
 4003              	.LCFI193:
 4004              		.cfi_def_cfa_offset 16
 4005              	.LVL458:
 4006 0041 5D       		popq	%rbp
 4007              	.LCFI194:
 4008              		.cfi_def_cfa_offset 8
 4009              	.LVL459:
 4010 0042 C3       		ret
 4011              		.cfi_endproc
 4012              	.LFE72:
 4014              		.section	.text.msg_wrapper_init_float,"ax",@progbits
 4015              		.globl	msg_wrapper_init_float
 4017              	msg_wrapper_init_float:
 4018              	.LFB73:
 897:src/mcu_msg.c ****     msg_wrap_float_t res;
 4019              		.loc 1 897 0
 4020              		.cfi_startproc
 4021              	.LVL460:
 4022 0000 4154     		pushq	%r12
 4023              	.LCFI195:
 4024              		.cfi_def_cfa_offset 16
 4025              		.cfi_offset 12, -16
 4026 0002 55       		pushq	%rbp
 4027              	.LCFI196:
 4028              		.cfi_def_cfa_offset 24
 4029              		.cfi_offset 6, -24
 4030 0003 53       		pushq	%rbx
 4031              	.LCFI197:
 4032              		.cfi_def_cfa_offset 32
 4033              		.cfi_offset 3, -32
 4034 0004 4883EC20 		subq	$32, %rsp
 4035              	.LCFI198:
 4036              		.cfi_def_cfa_offset 64
 4037 0008 4889FB   		movq	%rdi, %rbx
 4038 000b 66410F7E 		movd	%xmm0, %r12d
 4038      C4
 4039 0010 89D5     		movl	%edx, %ebp
 899:src/mcu_msg.c ****     res.val = val;
 4040              		.loc 1 899 0
 4041 0012 4889F7   		movq	%rsi, %rdi
 4042              	.LVL461:
 4043 0015 E8000000 		call	msg_init_string
 4043      00
 4044              	.LVL462:
 900:src/mcu_msg.c ****     res.prec = prec;
 4045              		.loc 1 900 0
 4046 001a 44896424 		movl	%r12d, 16(%rsp)
 4046      10
 901:src/mcu_msg.c ****     res.next = NULL;
 4047              		.loc 1 901 0
 4048 001f 40886C24 		movb	%bpl, 20(%rsp)
 4048      14
 902:src/mcu_msg.c ****     return res;
 4049              		.loc 1 902 0
 4050 0024 48C74424 		movq	$0, 24(%rsp)
GAS LISTING /tmp/cc31R1Mf.s 			page 107


 4050      18000000 
 4050      00
 903:src/mcu_msg.c **** }
 4051              		.loc 1 903 0
 4052 002d 488903   		movq	%rax, (%rbx)
 4053 0030 48895308 		movq	%rdx, 8(%rbx)
 4054 0034 488B4424 		movq	16(%rsp), %rax
 4054      10
 4055 0039 488B5424 		movq	24(%rsp), %rdx
 4055      18
 4056 003e 48894310 		movq	%rax, 16(%rbx)
 4057 0042 48895318 		movq	%rdx, 24(%rbx)
 904:src/mcu_msg.c **** 
 4058              		.loc 1 904 0
 4059 0046 4889D8   		movq	%rbx, %rax
 4060 0049 4883C420 		addq	$32, %rsp
 4061              	.LCFI199:
 4062              		.cfi_def_cfa_offset 32
 4063 004d 5B       		popq	%rbx
 4064              	.LCFI200:
 4065              		.cfi_def_cfa_offset 24
 4066              	.LVL463:
 4067 004e 5D       		popq	%rbp
 4068              	.LCFI201:
 4069              		.cfi_def_cfa_offset 16
 4070 004f 415C     		popq	%r12
 4071              	.LCFI202:
 4072              		.cfi_def_cfa_offset 8
 4073              	.LVL464:
 4074 0051 C3       		ret
 4075              		.cfi_endproc
 4076              	.LFE73:
 4078              		.section	.text.msg_wrapper_add_string_to_obj,"ax",@progbits
 4079              		.globl	msg_wrapper_add_string_to_obj
 4081              	msg_wrapper_add_string_to_obj:
 4082              	.LFB74:
 908:src/mcu_msg.c ****     msg_wrap_str_t *strp;
 4083              		.loc 1 908 0
 4084              		.cfi_startproc
 4085              	.LVL465:
 910:src/mcu_msg.c ****         obj->string_queue = str;
 4086              		.loc 1 910 0
 4087 0000 488B5720 		movq	32(%rdi), %rdx
 4088 0004 4885D2   		testq	%rdx, %rdx
 4089 0007 7510     		jne	.L337
 911:src/mcu_msg.c ****         obj->string_queue->next = NULL;
 4090              		.loc 1 911 0
 4091 0009 48897720 		movq	%rsi, 32(%rdi)
 912:src/mcu_msg.c ****     } else {
 4092              		.loc 1 912 0
 4093 000d 48C74620 		movq	$0, 32(%rsi)
 4093      00000000 
 4094 0015 C3       		ret
 4095              	.LVL466:
 4096              	.L339:
 917:src/mcu_msg.c ****         strp->next = str;
 4097              		.loc 1 917 0
GAS LISTING /tmp/cc31R1Mf.s 			page 108


 4098 0016 4889C2   		movq	%rax, %rdx
 4099              	.LVL467:
 4100              	.L337:
 916:src/mcu_msg.c ****             strp = strp->next;
 4101              		.loc 1 916 0
 4102 0019 488B4220 		movq	32(%rdx), %rax
 4103 001d 4885C0   		testq	%rax, %rax
 4104 0020 75F4     		jne	.L339
 918:src/mcu_msg.c ****         str->next = NULL;
 4105              		.loc 1 918 0
 4106 0022 48897220 		movq	%rsi, 32(%rdx)
 919:src/mcu_msg.c ****     }
 4107              		.loc 1 919 0
 4108 0026 48C74620 		movq	$0, 32(%rsi)
 4108      00000000 
 921:src/mcu_msg.c **** 
 4109              		.loc 1 921 0
 4110 002e C3       		ret
 4111              		.cfi_endproc
 4112              	.LFE74:
 4114              		.section	.text.msg_wrapper_rm_string_from_obj,"ax",@progbits
 4115              		.globl	msg_wrapper_rm_string_from_obj
 4117              	msg_wrapper_rm_string_from_obj:
 4118              	.LFB75:
 925:src/mcu_msg.c ****     msg_wrap_str_t *sp, *prev;
 4119              		.loc 1 925 0
 4120              		.cfi_startproc
 4121              	.LVL468:
 927:src/mcu_msg.c ****         if(sp == str) { 
 4122              		.loc 1 927 0
 4123 0000 488B4720 		movq	32(%rdi), %rax
 4124              	.LVL469:
 4125 0004 BA000000 		movl	$0, %edx
 4125      00
 4126              	.LVL470:
 4127              	.L341:
 927:src/mcu_msg.c ****         if(sp == str) { 
 4128              		.loc 1 927 0 is_stmt 0 discriminator 1
 4129 0009 4885C0   		testq	%rax, %rax
 4130 000c 742E     		je	.L347
 928:src/mcu_msg.c ****             if(prev == NULL) { // if p is the head of the queue, reinit the head
 4131              		.loc 1 928 0 is_stmt 1
 4132 000e 4839F0   		cmpq	%rsi, %rax
 4133 0011 7409     		je	.L348
 4134              	.LVL471:
 937:src/mcu_msg.c ****     }
 4135              		.loc 1 937 0 discriminator 2
 4136 0013 4889C2   		movq	%rax, %rdx
 927:src/mcu_msg.c ****         if(sp == str) { 
 4137              		.loc 1 927 0 discriminator 2
 4138 0016 488B4020 		movq	32(%rax), %rax
 4139              	.LVL472:
 4140 001a EBED     		jmp	.L341
 4141              	.L348:
 929:src/mcu_msg.c ****                 obj->string_queue = str->next;
 4142              		.loc 1 929 0
 4143 001c 4885D2   		testq	%rdx, %rdx
GAS LISTING /tmp/cc31R1Mf.s 			page 109


 4144 001f 7411     		je	.L349
 932:src/mcu_msg.c ****             }
 4145              		.loc 1 932 0
 4146 0021 488B4620 		movq	32(%rsi), %rax
 4147              	.LVL473:
 4148 0025 48894220 		movq	%rax, 32(%rdx)
 4149              	.L344:
 934:src/mcu_msg.c ****             return;
 4150              		.loc 1 934 0
 4151 0029 48C74620 		movq	$0, 32(%rsi)
 4151      00000000 
 935:src/mcu_msg.c ****         }
 4152              		.loc 1 935 0
 4153 0031 C3       		ret
 4154              	.LVL474:
 4155              	.L349:
 930:src/mcu_msg.c ****             } else {
 4156              		.loc 1 930 0
 4157 0032 488B4620 		movq	32(%rsi), %rax
 4158              	.LVL475:
 4159 0036 48894720 		movq	%rax, 32(%rdi)
 4160 003a EBED     		jmp	.L344
 4161              	.LVL476:
 4162              	.L347:
 939:src/mcu_msg.c **** 
 4163              		.loc 1 939 0
 4164 003c F3C3     		rep ret
 4165              		.cfi_endproc
 4166              	.LFE75:
 4168              		.section	.text.msg_wrapper_add_int_to_obj,"ax",@progbits
 4169              		.globl	msg_wrapper_add_int_to_obj
 4171              	msg_wrapper_add_int_to_obj:
 4172              	.LFB76:
 942:src/mcu_msg.c ****     msg_wrap_int_t *ip;
 4173              		.loc 1 942 0
 4174              		.cfi_startproc
 4175              	.LVL477:
 944:src/mcu_msg.c ****         obj->int_queue = int_val;
 4176              		.loc 1 944 0
 4177 0000 488B5710 		movq	16(%rdi), %rdx
 4178 0004 4885D2   		testq	%rdx, %rdx
 4179 0007 7510     		jne	.L351
 945:src/mcu_msg.c ****         obj->int_queue->next = NULL;
 4180              		.loc 1 945 0
 4181 0009 48897710 		movq	%rsi, 16(%rdi)
 946:src/mcu_msg.c ****     } else {
 4182              		.loc 1 946 0
 4183 000d 48C74618 		movq	$0, 24(%rsi)
 4183      00000000 
 4184 0015 C3       		ret
 4185              	.LVL478:
 4186              	.L353:
 951:src/mcu_msg.c ****         ip->next = int_val;
 4187              		.loc 1 951 0
 4188 0016 4889C2   		movq	%rax, %rdx
 4189              	.LVL479:
 4190              	.L351:
GAS LISTING /tmp/cc31R1Mf.s 			page 110


 950:src/mcu_msg.c ****             ip = ip->next;
 4191              		.loc 1 950 0
 4192 0019 488B4218 		movq	24(%rdx), %rax
 4193 001d 4885C0   		testq	%rax, %rax
 4194 0020 75F4     		jne	.L353
 952:src/mcu_msg.c ****         int_val->next = NULL;
 4195              		.loc 1 952 0
 4196 0022 48897218 		movq	%rsi, 24(%rdx)
 953:src/mcu_msg.c ****     }
 4197              		.loc 1 953 0
 4198 0026 48C74618 		movq	$0, 24(%rsi)
 4198      00000000 
 955:src/mcu_msg.c **** 
 4199              		.loc 1 955 0
 4200 002e C3       		ret
 4201              		.cfi_endproc
 4202              	.LFE76:
 4204              		.section	.text.msg_wrapper_rm_int_from_obj,"ax",@progbits
 4205              		.globl	msg_wrapper_rm_int_from_obj
 4207              	msg_wrapper_rm_int_from_obj:
 4208              	.LFB77:
 959:src/mcu_msg.c ****     msg_wrap_int_t *ip, *prev;
 4209              		.loc 1 959 0
 4210              		.cfi_startproc
 4211              	.LVL480:
 961:src/mcu_msg.c ****         if(ip == i) {
 4212              		.loc 1 961 0
 4213 0000 488B4710 		movq	16(%rdi), %rax
 4214              	.LVL481:
 4215 0004 BA000000 		movl	$0, %edx
 4215      00
 4216              	.LVL482:
 4217              	.L355:
 961:src/mcu_msg.c ****         if(ip == i) {
 4218              		.loc 1 961 0 is_stmt 0 discriminator 1
 4219 0009 4885C0   		testq	%rax, %rax
 4220 000c 742E     		je	.L361
 962:src/mcu_msg.c ****             if(prev == NULL) { // if p is the head of the queue, reinit the head
 4221              		.loc 1 962 0 is_stmt 1
 4222 000e 4839F0   		cmpq	%rsi, %rax
 4223 0011 7409     		je	.L362
 4224              	.LVL483:
 971:src/mcu_msg.c ****     }
 4225              		.loc 1 971 0 discriminator 2
 4226 0013 4889C2   		movq	%rax, %rdx
 961:src/mcu_msg.c ****         if(ip == i) {
 4227              		.loc 1 961 0 discriminator 2
 4228 0016 488B4018 		movq	24(%rax), %rax
 4229              	.LVL484:
 4230 001a EBED     		jmp	.L355
 4231              	.L362:
 963:src/mcu_msg.c ****                 obj->int_queue = i->next;
 4232              		.loc 1 963 0
 4233 001c 4885D2   		testq	%rdx, %rdx
 4234 001f 7411     		je	.L363
 966:src/mcu_msg.c ****             }
 4235              		.loc 1 966 0
GAS LISTING /tmp/cc31R1Mf.s 			page 111


 4236 0021 488B4618 		movq	24(%rsi), %rax
 4237              	.LVL485:
 4238 0025 48894218 		movq	%rax, 24(%rdx)
 4239              	.L358:
 968:src/mcu_msg.c ****             return;
 4240              		.loc 1 968 0
 4241 0029 48C74618 		movq	$0, 24(%rsi)
 4241      00000000 
 969:src/mcu_msg.c ****         }
 4242              		.loc 1 969 0
 4243 0031 C3       		ret
 4244              	.LVL486:
 4245              	.L363:
 964:src/mcu_msg.c ****             } else {
 4246              		.loc 1 964 0
 4247 0032 488B4618 		movq	24(%rsi), %rax
 4248              	.LVL487:
 4249 0036 48894710 		movq	%rax, 16(%rdi)
 4250 003a EBED     		jmp	.L358
 4251              	.LVL488:
 4252              	.L361:
 973:src/mcu_msg.c **** 
 4253              		.loc 1 973 0
 4254 003c F3C3     		rep ret
 4255              		.cfi_endproc
 4256              	.LFE77:
 4258              		.section	.text.msg_wrapper_add_float_to_obj,"ax",@progbits
 4259              		.globl	msg_wrapper_add_float_to_obj
 4261              	msg_wrapper_add_float_to_obj:
 4262              	.LFB78:
 976:src/mcu_msg.c ****     msg_wrap_float_t *fp;
 4263              		.loc 1 976 0
 4264              		.cfi_startproc
 4265              	.LVL489:
 978:src/mcu_msg.c ****         obj->float_queue = float_val;
 4266              		.loc 1 978 0
 4267 0000 488B5718 		movq	24(%rdi), %rdx
 4268 0004 4885D2   		testq	%rdx, %rdx
 4269 0007 7510     		jne	.L365
 979:src/mcu_msg.c ****         obj->float_queue->next = NULL;
 4270              		.loc 1 979 0
 4271 0009 48897718 		movq	%rsi, 24(%rdi)
 980:src/mcu_msg.c ****     } else {
 4272              		.loc 1 980 0
 4273 000d 48C74618 		movq	$0, 24(%rsi)
 4273      00000000 
 4274 0015 C3       		ret
 4275              	.LVL490:
 4276              	.L367:
 985:src/mcu_msg.c ****         fp->next = float_val;
 4277              		.loc 1 985 0
 4278 0016 4889C2   		movq	%rax, %rdx
 4279              	.LVL491:
 4280              	.L365:
 984:src/mcu_msg.c ****             fp = fp->next;
 4281              		.loc 1 984 0
 4282 0019 488B4218 		movq	24(%rdx), %rax
GAS LISTING /tmp/cc31R1Mf.s 			page 112


 4283 001d 4885C0   		testq	%rax, %rax
 4284 0020 75F4     		jne	.L367
 986:src/mcu_msg.c ****         float_val->next = NULL;
 4285              		.loc 1 986 0
 4286 0022 48897218 		movq	%rsi, 24(%rdx)
 987:src/mcu_msg.c ****     }
 4287              		.loc 1 987 0
 4288 0026 48C74618 		movq	$0, 24(%rsi)
 4288      00000000 
 989:src/mcu_msg.c **** 
 4289              		.loc 1 989 0
 4290 002e C3       		ret
 4291              		.cfi_endproc
 4292              	.LFE78:
 4294              		.section	.text.msg_wrapper_rm_float_from_obj,"ax",@progbits
 4295              		.globl	msg_wrapper_rm_float_from_obj
 4297              	msg_wrapper_rm_float_from_obj:
 4298              	.LFB79:
 993:src/mcu_msg.c ****     msg_wrap_float_t *fp, *prev;
 4299              		.loc 1 993 0
 4300              		.cfi_startproc
 4301              	.LVL492:
 995:src/mcu_msg.c ****         if(fp == f) {
 4302              		.loc 1 995 0
 4303 0000 488B4718 		movq	24(%rdi), %rax
 4304              	.LVL493:
 4305 0004 BA000000 		movl	$0, %edx
 4305      00
 4306              	.LVL494:
 4307              	.L369:
 995:src/mcu_msg.c ****         if(fp == f) {
 4308              		.loc 1 995 0 is_stmt 0 discriminator 1
 4309 0009 4885C0   		testq	%rax, %rax
 4310 000c 742E     		je	.L375
 996:src/mcu_msg.c ****             if(prev == NULL) { // if p is the head of the queue, reinit the head
 4311              		.loc 1 996 0 is_stmt 1
 4312 000e 4839F0   		cmpq	%rsi, %rax
 4313 0011 7409     		je	.L376
 4314              	.LVL495:
1005:src/mcu_msg.c ****     }
 4315              		.loc 1 1005 0 discriminator 2
 4316 0013 4889C2   		movq	%rax, %rdx
 995:src/mcu_msg.c ****         if(fp == f) {
 4317              		.loc 1 995 0 discriminator 2
 4318 0016 488B4018 		movq	24(%rax), %rax
 4319              	.LVL496:
 4320 001a EBED     		jmp	.L369
 4321              	.L376:
 997:src/mcu_msg.c ****                 obj->float_queue = f->next;
 4322              		.loc 1 997 0
 4323 001c 4885D2   		testq	%rdx, %rdx
 4324 001f 7411     		je	.L377
1000:src/mcu_msg.c ****             }
 4325              		.loc 1 1000 0
 4326 0021 488B4618 		movq	24(%rsi), %rax
 4327              	.LVL497:
 4328 0025 48894218 		movq	%rax, 24(%rdx)
GAS LISTING /tmp/cc31R1Mf.s 			page 113


 4329              	.L372:
1002:src/mcu_msg.c ****             return;
 4330              		.loc 1 1002 0
 4331 0029 48C74618 		movq	$0, 24(%rsi)
 4331      00000000 
1003:src/mcu_msg.c ****         }
 4332              		.loc 1 1003 0
 4333 0031 C3       		ret
 4334              	.LVL498:
 4335              	.L377:
 998:src/mcu_msg.c ****             } else {
 4336              		.loc 1 998 0
 4337 0032 488B4618 		movq	24(%rsi), %rax
 4338              	.LVL499:
 4339 0036 48894718 		movq	%rax, 24(%rdi)
 4340 003a EBED     		jmp	.L372
 4341              	.LVL500:
 4342              	.L375:
1007:src/mcu_msg.c **** 
 4343              		.loc 1 1007 0
 4344 003c F3C3     		rep ret
 4345              		.cfi_endproc
 4346              	.LFE79:
 4348              		.section	.text.msg_wrapper_add_object_to_msg,"ax",@progbits
 4349              		.globl	msg_wrapper_add_object_to_msg
 4351              	msg_wrapper_add_object_to_msg:
 4352              	.LFB80:
1010:src/mcu_msg.c ****     msg_wrap_obj_t *op;
 4353              		.loc 1 1010 0
 4354              		.cfi_startproc
 4355              	.LVL501:
1012:src/mcu_msg.c ****         msg->obj_queue = obj;
 4356              		.loc 1 1012 0
 4357 0000 488B5710 		movq	16(%rdi), %rdx
 4358 0004 4885D2   		testq	%rdx, %rdx
 4359 0007 7510     		jne	.L379
1013:src/mcu_msg.c ****         msg->obj_queue->next = NULL;
 4360              		.loc 1 1013 0
 4361 0009 48897710 		movq	%rsi, 16(%rdi)
1014:src/mcu_msg.c ****     } else {
 4362              		.loc 1 1014 0
 4363 000d 48C74628 		movq	$0, 40(%rsi)
 4363      00000000 
 4364 0015 C3       		ret
 4365              	.LVL502:
 4366              	.L381:
1018:src/mcu_msg.c ****         op->next = obj;
 4367              		.loc 1 1018 0
 4368 0016 4889C2   		movq	%rax, %rdx
 4369              	.LVL503:
 4370              	.L379:
1017:src/mcu_msg.c ****             op = op->next;
 4371              		.loc 1 1017 0
 4372 0019 488B4228 		movq	40(%rdx), %rax
 4373 001d 4885C0   		testq	%rax, %rax
 4374 0020 75F4     		jne	.L381
1019:src/mcu_msg.c ****         obj->next = NULL;
GAS LISTING /tmp/cc31R1Mf.s 			page 114


 4375              		.loc 1 1019 0
 4376 0022 48897228 		movq	%rsi, 40(%rdx)
1020:src/mcu_msg.c ****     }
 4377              		.loc 1 1020 0
 4378 0026 48C74628 		movq	$0, 40(%rsi)
 4378      00000000 
1022:src/mcu_msg.c **** 
 4379              		.loc 1 1022 0
 4380 002e C3       		ret
 4381              		.cfi_endproc
 4382              	.LFE80:
 4384              		.section	.text.msg_wrapper_rm_obj_from_msg,"ax",@progbits
 4385              		.globl	msg_wrapper_rm_obj_from_msg
 4387              	msg_wrapper_rm_obj_from_msg:
 4388              	.LFB81:
1025:src/mcu_msg.c ****     msg_wrap_obj_t *op, *prev;
 4389              		.loc 1 1025 0
 4390              		.cfi_startproc
 4391              	.LVL504:
1027:src/mcu_msg.c ****         if(op == obj) {
 4392              		.loc 1 1027 0
 4393 0000 488B4710 		movq	16(%rdi), %rax
 4394              	.LVL505:
 4395 0004 BA000000 		movl	$0, %edx
 4395      00
 4396              	.LVL506:
 4397              	.L383:
1027:src/mcu_msg.c ****         if(op == obj) {
 4398              		.loc 1 1027 0 is_stmt 0 discriminator 1
 4399 0009 4885C0   		testq	%rax, %rax
 4400 000c 742E     		je	.L389
1028:src/mcu_msg.c ****             if(prev == NULL) { // if p is the head of the queue, reinit the head
 4401              		.loc 1 1028 0 is_stmt 1
 4402 000e 4839F0   		cmpq	%rsi, %rax
 4403 0011 7409     		je	.L390
 4404              	.LVL507:
1037:src/mcu_msg.c ****     }    
 4405              		.loc 1 1037 0 discriminator 2
 4406 0013 4889C2   		movq	%rax, %rdx
1027:src/mcu_msg.c ****         if(op == obj) {
 4407              		.loc 1 1027 0 discriminator 2
 4408 0016 488B4028 		movq	40(%rax), %rax
 4409              	.LVL508:
 4410 001a EBED     		jmp	.L383
 4411              	.L390:
1029:src/mcu_msg.c ****                 msg->obj_queue = obj->next;
 4412              		.loc 1 1029 0
 4413 001c 4885D2   		testq	%rdx, %rdx
 4414 001f 7411     		je	.L391
1032:src/mcu_msg.c ****             }
 4415              		.loc 1 1032 0
 4416 0021 488B4628 		movq	40(%rsi), %rax
 4417              	.LVL509:
 4418 0025 48894228 		movq	%rax, 40(%rdx)
 4419              	.L386:
1034:src/mcu_msg.c ****             return;
 4420              		.loc 1 1034 0
GAS LISTING /tmp/cc31R1Mf.s 			page 115


 4421 0029 48C74628 		movq	$0, 40(%rsi)
 4421      00000000 
1035:src/mcu_msg.c ****         }
 4422              		.loc 1 1035 0
 4423 0031 C3       		ret
 4424              	.LVL510:
 4425              	.L391:
1030:src/mcu_msg.c ****             } else {
 4426              		.loc 1 1030 0
 4427 0032 488B4628 		movq	40(%rsi), %rax
 4428              	.LVL511:
 4429 0036 48894710 		movq	%rax, 16(%rdi)
 4430 003a EBED     		jmp	.L386
 4431              	.LVL512:
 4432              	.L389:
1039:src/mcu_msg.c **** 
 4433              		.loc 1 1039 0
 4434 003c F3C3     		rep ret
 4435              		.cfi_endproc
 4436              	.LFE81:
 4438              		.section	.text.msg_wrapper_add_cmd_to_msg,"ax",@progbits
 4439              		.globl	msg_wrapper_add_cmd_to_msg
 4441              	msg_wrapper_add_cmd_to_msg:
 4442              	.LFB82:
1042:src/mcu_msg.c ****     msg_wrap_cmd_t *cp;
 4443              		.loc 1 1042 0
 4444              		.cfi_startproc
 4445              	.LVL513:
1044:src/mcu_msg.c ****         msg->cmd_queue = cmd;
 4446              		.loc 1 1044 0
 4447 0000 488B5718 		movq	24(%rdi), %rdx
 4448 0004 4885D2   		testq	%rdx, %rdx
 4449 0007 7510     		jne	.L393
1045:src/mcu_msg.c ****         msg->cmd_queue->next = NULL;
 4450              		.loc 1 1045 0
 4451 0009 48897718 		movq	%rsi, 24(%rdi)
1046:src/mcu_msg.c ****     } else {
 4452              		.loc 1 1046 0
 4453 000d 48C74610 		movq	$0, 16(%rsi)
 4453      00000000 
 4454 0015 C3       		ret
 4455              	.LVL514:
 4456              	.L395:
1050:src/mcu_msg.c ****         cp->next = cmd;
 4457              		.loc 1 1050 0
 4458 0016 4889C2   		movq	%rax, %rdx
 4459              	.LVL515:
 4460              	.L393:
1049:src/mcu_msg.c ****             cp = cp->next;
 4461              		.loc 1 1049 0
 4462 0019 488B4210 		movq	16(%rdx), %rax
 4463 001d 4885C0   		testq	%rax, %rax
 4464 0020 75F4     		jne	.L395
1051:src/mcu_msg.c ****         cmd->next = NULL;
 4465              		.loc 1 1051 0
 4466 0022 48897210 		movq	%rsi, 16(%rdx)
1052:src/mcu_msg.c ****     }
GAS LISTING /tmp/cc31R1Mf.s 			page 116


 4467              		.loc 1 1052 0
 4468 0026 48C74610 		movq	$0, 16(%rsi)
 4468      00000000 
1054:src/mcu_msg.c **** 
 4469              		.loc 1 1054 0
 4470 002e C3       		ret
 4471              		.cfi_endproc
 4472              	.LFE82:
 4474              		.section	.text.msg_wrapper_rm_cmd_from_msg,"ax",@progbits
 4475              		.globl	msg_wrapper_rm_cmd_from_msg
 4477              	msg_wrapper_rm_cmd_from_msg:
 4478              	.LFB83:
1057:src/mcu_msg.c ****     msg_wrap_cmd_t *cp, *prev;
 4479              		.loc 1 1057 0
 4480              		.cfi_startproc
 4481              	.LVL516:
1059:src/mcu_msg.c ****         if(cp == cmd) {
 4482              		.loc 1 1059 0
 4483 0000 488B4718 		movq	24(%rdi), %rax
 4484              	.LVL517:
 4485 0004 BA000000 		movl	$0, %edx
 4485      00
 4486              	.LVL518:
 4487              	.L397:
1059:src/mcu_msg.c ****         if(cp == cmd) {
 4488              		.loc 1 1059 0 is_stmt 0 discriminator 1
 4489 0009 4885C0   		testq	%rax, %rax
 4490 000c 742E     		je	.L403
1060:src/mcu_msg.c ****             if(prev == NULL) { // if p is the head of the queue, reinit the head
 4491              		.loc 1 1060 0 is_stmt 1
 4492 000e 4839F0   		cmpq	%rsi, %rax
 4493 0011 7409     		je	.L404
 4494              	.LVL519:
1069:src/mcu_msg.c ****     }    
 4495              		.loc 1 1069 0 discriminator 2
 4496 0013 4889C2   		movq	%rax, %rdx
1059:src/mcu_msg.c ****         if(cp == cmd) {
 4497              		.loc 1 1059 0 discriminator 2
 4498 0016 488B4010 		movq	16(%rax), %rax
 4499              	.LVL520:
 4500 001a EBED     		jmp	.L397
 4501              	.L404:
1061:src/mcu_msg.c ****                 msg->cmd_queue = cmd->next;
 4502              		.loc 1 1061 0
 4503 001c 4885D2   		testq	%rdx, %rdx
 4504 001f 7411     		je	.L405
1064:src/mcu_msg.c ****             }
 4505              		.loc 1 1064 0
 4506 0021 488B4610 		movq	16(%rsi), %rax
 4507              	.LVL521:
 4508 0025 48894210 		movq	%rax, 16(%rdx)
 4509              	.L400:
1066:src/mcu_msg.c ****             return;
 4510              		.loc 1 1066 0
 4511 0029 48C74610 		movq	$0, 16(%rsi)
 4511      00000000 
1067:src/mcu_msg.c ****         }
GAS LISTING /tmp/cc31R1Mf.s 			page 117


 4512              		.loc 1 1067 0
 4513 0031 C3       		ret
 4514              	.LVL522:
 4515              	.L405:
1062:src/mcu_msg.c ****             } else {
 4516              		.loc 1 1062 0
 4517 0032 488B4610 		movq	16(%rsi), %rax
 4518              	.LVL523:
 4519 0036 48894718 		movq	%rax, 24(%rdi)
 4520 003a EBED     		jmp	.L400
 4521              	.LVL524:
 4522              	.L403:
1071:src/mcu_msg.c **** 
 4523              		.loc 1 1071 0
 4524 003c F3C3     		rep ret
 4525              		.cfi_endproc
 4526              	.LFE83:
 4528              		.section	.bss.__msg_putc,"aw",@nobits
 4529              		.align 8
 4532              	__msg_putc:
 4533 0000 00000000 		.zero	8
 4533      00000000 
 4534              		.section	.rodata.cst4,"aM",@progbits,4
 4535              		.align 4
 4536              	.LC1:
 4537 0000 CDCCCC3D 		.long	1036831949
 4538              		.align 4
 4539              	.LC2:
 4540 0004 00002041 		.long	1092616192
 4541              		.text
 4542              	.Letext0:
 4543              		.file 2 "/usr/lib/gcc/x86_64-linux-gnu/7/include/stddef.h"
 4544              		.file 3 "/usr/include/x86_64-linux-gnu/bits/types.h"
 4545              		.file 4 "/usr/include/x86_64-linux-gnu/bits/libio.h"
 4546              		.file 5 "/usr/include/stdio.h"
 4547              		.file 6 "/usr/include/x86_64-linux-gnu/bits/sys_errlist.h"
 4548              		.file 7 "/usr/include/x86_64-linux-gnu/bits/stdint-intn.h"
 4549              		.file 8 "/usr/include/x86_64-linux-gnu/bits/stdint-uintn.h"
 4550              		.file 9 "inc/mcu_msg_cfg.h"
 4551              		.file 10 "inc/mcu_msg.h"
GAS LISTING /tmp/cc31R1Mf.s 			page 118


DEFINED SYMBOLS
                            *ABS*:0000000000000000 mcu_msg.c
     /tmp/cc31R1Mf.s:6      .text.__str_len:0000000000000000 __str_len
     /tmp/cc31R1Mf.s:35     .text.__skip_internal_str:0000000000000000 __skip_internal_str
     /tmp/cc31R1Mf.s:92     .text.__msg_str_copy_to_chr_arr:0000000000000000 __msg_str_copy_to_chr_arr
     /tmp/cc31R1Mf.s:119    .text.__msg_str_copy:0000000000000000 __msg_str_copy
     /tmp/cc31R1Mf.s:147    .text.__msg_print_int:0000000000000000 __msg_print_int
     /tmp/cc31R1Mf.s:4532   .bss.__msg_putc:0000000000000000 __msg_putc
     /tmp/cc31R1Mf.s:305    .text.__msg_print_float:0000000000000000 __msg_print_float
     /tmp/cc31R1Mf.s:439    .text.__msg_print_str:0000000000000000 __msg_print_str
     /tmp/cc31R1Mf.s:500    .text.__msg_putc_to_buff:0000000000000000 __msg_putc_to_buff
     /tmp/cc31R1Mf.s:533    .text.__msg_print_int_to_buff:0000000000000000 __msg_print_int_to_buff
     /tmp/cc31R1Mf.s:704    .text.__msg_print_float_to_buff:0000000000000000 __msg_print_float_to_buff
     /tmp/cc31R1Mf.s:858    .text.__msg_print_str_to_buff:0000000000000000 __msg_print_str_to_buff
     /tmp/cc31R1Mf.s:932    .text.__msg_wrapper_print_obj:0000000000000000 __msg_wrapper_print_obj
     /tmp/cc31R1Mf.s:1179   .text.__msg_wrapper_print_cmd:0000000000000000 __msg_wrapper_print_cmd
     /tmp/cc31R1Mf.s:1213   .text.__msg_wrapper_print_obj_to_buff:0000000000000000 __msg_wrapper_print_obj_to_buff
     /tmp/cc31R1Mf.s:1497   .text.__msg_wrapper_print_msg_to_buff:0000000000000000 __msg_wrapper_print_msg_to_buff
     /tmp/cc31R1Mf.s:1633   .text.__msg_wrapper_print_msg:0000000000000000 __msg_wrapper_print_msg
     /tmp/cc31R1Mf.s:1764   .text.msg_destroy_string:0000000000000000 msg_destroy_string
     /tmp/cc31R1Mf.s:1780   .text.__find_keyword:0000000000000000 __find_keyword
     /tmp/cc31R1Mf.s:2176   .text.__find_val:0000000000000000 __find_val
     /tmp/cc31R1Mf.s:2457   .text.msg_destroy:0000000000000000 msg_destroy
     /tmp/cc31R1Mf.s:2486   .text.msg_destroy_obj:0000000000000000 msg_destroy_obj
     /tmp/cc31R1Mf.s:2515   .text.msg_destroy_cmd:0000000000000000 msg_destroy_cmd
     /tmp/cc31R1Mf.s:2531   .text.msg_init_string:0000000000000000 msg_init_string
     /tmp/cc31R1Mf.s:2560   .text.msg_get:0000000000000000 msg_get
     /tmp/cc31R1Mf.s:2713   .text.msg_parser_get_obj:0000000000000000 msg_parser_get_obj
     /tmp/cc31R1Mf.s:2862   .text.msg_parser_get_cmd:0000000000000000 msg_parser_get_cmd
     /tmp/cc31R1Mf.s:2890   .text.msg_parser_get_int:0000000000000000 msg_parser_get_int
     /tmp/cc31R1Mf.s:3063   .text.msg_parser_get_float:0000000000000000 msg_parser_get_float
     /tmp/cc31R1Mf.s:3327   .text.msg_parser_get_string:0000000000000000 msg_parser_get_string
     /tmp/cc31R1Mf.s:3452   .text.msg_string_hnd_create:0000000000000000 msg_string_hnd_create
     /tmp/cc31R1Mf.s:3488   .text.msg_destroy_str_buff:0000000000000000 msg_destroy_str_buff
     /tmp/cc31R1Mf.s:3515   .text.msg_init_str_buff:0000000000000000 msg_init_str_buff
     /tmp/cc31R1Mf.s:3539   .text.msg_wrapper_hnd_create:0000000000000000 msg_wrapper_hnd_create
     /tmp/cc31R1Mf.s:3578   .text.msg_wrap_destroy:0000000000000000 msg_wrap_destroy
     /tmp/cc31R1Mf.s:3607   .text.msg_wrap_destroy_obj:0000000000000000 msg_wrap_destroy_obj
     /tmp/cc31R1Mf.s:3640   .text.msg_wrap_destroy_cmd:0000000000000000 msg_wrap_destroy_cmd
     /tmp/cc31R1Mf.s:3667   .text.msg_wrap_destroy_str:0000000000000000 msg_wrap_destroy_str
     /tmp/cc31R1Mf.s:3698   .text.msg_wrap_destroy_int:0000000000000000 msg_wrap_destroy_int
     /tmp/cc31R1Mf.s:3727   .text.msg_wrap_destroy_float:0000000000000000 msg_wrap_destroy_float
     /tmp/cc31R1Mf.s:3758   .text.msg_wrapper_init_msg:0000000000000000 msg_wrapper_init_msg
     /tmp/cc31R1Mf.s:3803   .text.msg_wrapper_init_cmd:0000000000000000 msg_wrapper_init_cmd
     /tmp/cc31R1Mf.s:3841   .text.msg_wrapper_init_obj:0000000000000000 msg_wrapper_init_obj
     /tmp/cc31R1Mf.s:3894   .text.msg_wrapper_init_string:0000000000000000 msg_wrapper_init_string
     /tmp/cc31R1Mf.s:3963   .text.msg_wrapper_init_int:0000000000000000 msg_wrapper_init_int
     /tmp/cc31R1Mf.s:4017   .text.msg_wrapper_init_float:0000000000000000 msg_wrapper_init_float
     /tmp/cc31R1Mf.s:4081   .text.msg_wrapper_add_string_to_obj:0000000000000000 msg_wrapper_add_string_to_obj
     /tmp/cc31R1Mf.s:4117   .text.msg_wrapper_rm_string_from_obj:0000000000000000 msg_wrapper_rm_string_from_obj
     /tmp/cc31R1Mf.s:4171   .text.msg_wrapper_add_int_to_obj:0000000000000000 msg_wrapper_add_int_to_obj
     /tmp/cc31R1Mf.s:4207   .text.msg_wrapper_rm_int_from_obj:0000000000000000 msg_wrapper_rm_int_from_obj
     /tmp/cc31R1Mf.s:4261   .text.msg_wrapper_add_float_to_obj:0000000000000000 msg_wrapper_add_float_to_obj
     /tmp/cc31R1Mf.s:4297   .text.msg_wrapper_rm_float_from_obj:0000000000000000 msg_wrapper_rm_float_from_obj
     /tmp/cc31R1Mf.s:4351   .text.msg_wrapper_add_object_to_msg:0000000000000000 msg_wrapper_add_object_to_msg
     /tmp/cc31R1Mf.s:4387   .text.msg_wrapper_rm_obj_from_msg:0000000000000000 msg_wrapper_rm_obj_from_msg
     /tmp/cc31R1Mf.s:4441   .text.msg_wrapper_add_cmd_to_msg:0000000000000000 msg_wrapper_add_cmd_to_msg
GAS LISTING /tmp/cc31R1Mf.s 			page 119


     /tmp/cc31R1Mf.s:4477   .text.msg_wrapper_rm_cmd_from_msg:0000000000000000 msg_wrapper_rm_cmd_from_msg
     /tmp/cc31R1Mf.s:4536   .rodata.cst4:0000000000000000 .LC1
     /tmp/cc31R1Mf.s:4539   .rodata.cst4:0000000000000004 .LC2

UNDEFINED SYMBOLS
_GLOBAL_OFFSET_TABLE_
__stack_chk_fail
