GAS LISTING /tmp/ccd0pRUN.s 			page 1


   1              		.file	"mcu_msg.c"
   2              		.text
   3              	.Ltext0:
   4              		.section	.text.__str_len,"ax",@progbits
   6              	__str_len:
   7              	.LFB34:
   8              		.file 1 "src/mcu_msg.c"
   1:src/mcu_msg.c **** /**
   2:src/mcu_msg.c ****  * @file msg_parser.c
   3:src/mcu_msg.c ****  * @author Istvan Milak (istvan.milak@gmail.com)
   4:src/mcu_msg.c ****  * @brief Simple message parser for embedded applications, eg serial comm
   5:src/mcu_msg.c ****  * @version 0.1
   6:src/mcu_msg.c ****  * @date 2019-12-15
   7:src/mcu_msg.c ****  * 
   8:src/mcu_msg.c ****  * @copyright Copyright (c) 2019
   9:src/mcu_msg.c ****  * 
  10:src/mcu_msg.c ****  */
  11:src/mcu_msg.c **** #include <stdio.h>
  12:src/mcu_msg.c **** #include "mcu_msg.h"
  13:src/mcu_msg.c **** 
  14:src/mcu_msg.c **** /*Control chars*/
  15:src/mcu_msg.c **** #define __CTRL_MSG_FLAG           '#'
  16:src/mcu_msg.c **** #define __CTRL_START_MSG          '{'
  17:src/mcu_msg.c **** #define __CTRL_STOP_MSG           '}'
  18:src/mcu_msg.c **** #define __CTRL_START_OBJ          '('
  19:src/mcu_msg.c **** #define __CTRL_STOP_OBJ           ')'
  20:src/mcu_msg.c **** #define __CTRL_OBJ_FLAG           '@'
  21:src/mcu_msg.c **** #define __CTRL_KEY_FLAG           '$'
  22:src/mcu_msg.c **** #define __CTRL_KEY_SEP            ';'
  23:src/mcu_msg.c **** #define __CTRL_KEY_EQU            '='
  24:src/mcu_msg.c **** #define __CTRL_CMD_START_FLAG     '<'
  25:src/mcu_msg.c **** #define __CTRL_CMD_STOP_FLAG      '>'
  26:src/mcu_msg.c **** 
  27:src/mcu_msg.c **** 
  28:src/mcu_msg.c **** /*typedef for internal string buffer*/
  29:src/mcu_msg.c **** typedef struct msg_str_buff {
  30:src/mcu_msg.c ****     msg_str_t  buff;
  31:src/mcu_msg.c ****     char*      p;               // pointer to the next element
  32:src/mcu_msg.c **** } msg_str_buff_t;
  33:src/mcu_msg.c **** 
  34:src/mcu_msg.c **** 
  35:src/mcu_msg.c **** static msg_str_buff_t __str_buff; // internal string buffer, must be intialized always
  36:src/mcu_msg.c **** static uint8_t __redir_outp_to_buff = 0; // redirect output to buffer indicator
  37:src/mcu_msg.c **** 
  38:src/mcu_msg.c **** /*putchar implementation: must be implemented for printing to UART or other output*/
  39:src/mcu_msg.c **** static int (*__putc)(char) = NULL; 
  40:src/mcu_msg.c **** 
  41:src/mcu_msg.c **** /*Static function declarations*/
  42:src/mcu_msg.c **** static void             __msg_enable_buff(void);
  43:src/mcu_msg.c **** static void             __msg_disable_buff(void);
  44:src/mcu_msg.c **** static void             __msg_init_str_buff(char *buff, msg_size_t buff_size);
  45:src/mcu_msg.c **** static void             __msg_reset_str_buff(char *buff, msg_size_t buff_size);
  46:src/mcu_msg.c **** static msg_size_t       __msg_putc_to_buff(char c);
  47:src/mcu_msg.c **** static void             __msg_putc(char c); //use std out or redirected string buff;
  48:src/mcu_msg.c **** 
  49:src/mcu_msg.c **** static inline uint8_t   __is_ctrl_char(char c);
  50:src/mcu_msg.c **** static inline uint8_t   __is_whitespace(char c);
GAS LISTING /tmp/ccd0pRUN.s 			page 2


  51:src/mcu_msg.c **** static msg_size_t       __str_len(char *str);
  52:src/mcu_msg.c **** static inline uint8_t   __is_p_in_str(msg_str_t str, char *p);
  53:src/mcu_msg.c **** static char*            __skip_internal_str(char *start);
  54:src/mcu_msg.c **** static msg_str_t        __find_keyword(msg_str_t str, char *keyword, char flagc, char stopc);
  55:src/mcu_msg.c **** static msg_str_t        __find_val(msg_obj_t obj, char *key);
  56:src/mcu_msg.c **** static void             __msg_print(msg_t msg);
  57:src/mcu_msg.c **** static void             __msg_print_int(int i);
  58:src/mcu_msg.c **** static void             __msg_print_float(float f, uint8_t prec);
  59:src/mcu_msg.c **** static void             __msg_print_str(msg_str_t str);
  60:src/mcu_msg.c **** static inline char      __define_qmark(msg_str_t str);
  61:src/mcu_msg.c **** 
  62:src/mcu_msg.c **** #if MCU_MSG_USE_WRAPPER
  63:src/mcu_msg.c **** static void             __msg_wrapper_print_obj(msg_wrap_obj_t obj);
  64:src/mcu_msg.c **** static inline void      __msg_wrapper_print_cmd(msg_wrap_cmd_t cmd);
  65:src/mcu_msg.c **** static void             __msg_wrapper_print_msg(msg_wrap_t msg);
  66:src/mcu_msg.c **** #endif
  67:src/mcu_msg.c **** 
  68:src/mcu_msg.c **** /////////////////////////////////////////////////////////////////////////////////////////////
  69:src/mcu_msg.c **** //                                      Parser functions                                   //
  70:src/mcu_msg.c **** /////////////////////////////////////////////////////////////////////////////////////////////
  71:src/mcu_msg.c **** 
  72:src/mcu_msg.c **** /*destroy string*/
  73:src/mcu_msg.c **** void msg_destroy_string(msg_str_t *str)
  74:src/mcu_msg.c **** {
  75:src/mcu_msg.c ****     str->s = NULL;
  76:src/mcu_msg.c ****     str->len = 0;
  77:src/mcu_msg.c **** }
  78:src/mcu_msg.c **** 
  79:src/mcu_msg.c **** /*destroy message*/
  80:src/mcu_msg.c **** void msg_destroy(msg_t *msg)
  81:src/mcu_msg.c **** {
  82:src/mcu_msg.c ****     msg_destroy_string(&msg->id);
  83:src/mcu_msg.c ****     msg_destroy_string(&msg->content);
  84:src/mcu_msg.c **** }
  85:src/mcu_msg.c **** 
  86:src/mcu_msg.c **** 
  87:src/mcu_msg.c **** /*destroy object*/
  88:src/mcu_msg.c **** void msg_destroy_obj(msg_obj_t *obj)
  89:src/mcu_msg.c **** {
  90:src/mcu_msg.c ****     msg_destroy_string(&obj->id);
  91:src/mcu_msg.c ****     msg_destroy_string(&obj->content);
  92:src/mcu_msg.c **** }
  93:src/mcu_msg.c **** 
  94:src/mcu_msg.c **** /*destroy cmd*/
  95:src/mcu_msg.c **** void msg_destroy_cmd(msg_cmd_t *cmd)
  96:src/mcu_msg.c **** {
  97:src/mcu_msg.c ****     msg_destroy_string(&cmd->cmd);
  98:src/mcu_msg.c **** }
  99:src/mcu_msg.c **** 
 100:src/mcu_msg.c **** msg_str_t msg_init_string(char *str)
 101:src/mcu_msg.c **** {
 102:src/mcu_msg.c ****     msg_str_t res;
 103:src/mcu_msg.c ****     res.s = str;
 104:src/mcu_msg.c ****     res.len = __str_len(res.s);
 105:src/mcu_msg.c ****     return res;
 106:src/mcu_msg.c **** }
 107:src/mcu_msg.c **** 
GAS LISTING /tmp/ccd0pRUN.s 			page 3


 108:src/mcu_msg.c **** /**
 109:src/mcu_msg.c ****  * @brief Argument char is control char or not
 110:src/mcu_msg.c ****  * 
 111:src/mcu_msg.c ****  * @param c char
 112:src/mcu_msg.c ****  * @return uint8_t comparison result
 113:src/mcu_msg.c ****  */
 114:src/mcu_msg.c **** static inline uint8_t __is_ctrl_char(char c)
 115:src/mcu_msg.c **** {
 116:src/mcu_msg.c ****     switch(c) {
 117:src/mcu_msg.c ****         case __CTRL_MSG_FLAG:
 118:src/mcu_msg.c ****         case __CTRL_START_MSG:
 119:src/mcu_msg.c ****         case __CTRL_STOP_MSG:
 120:src/mcu_msg.c ****         case __CTRL_START_OBJ:
 121:src/mcu_msg.c ****         case __CTRL_STOP_OBJ:
 122:src/mcu_msg.c ****         case __CTRL_OBJ_FLAG:
 123:src/mcu_msg.c ****         case __CTRL_KEY_FLAG:
 124:src/mcu_msg.c ****         case __CTRL_KEY_SEP:
 125:src/mcu_msg.c ****         case __CTRL_KEY_EQU:
 126:src/mcu_msg.c ****         case __CTRL_CMD_START_FLAG:
 127:src/mcu_msg.c ****         case __CTRL_CMD_STOP_FLAG:
 128:src/mcu_msg.c ****             return 1;
 129:src/mcu_msg.c ****         default:
 130:src/mcu_msg.c ****             return 0;
 131:src/mcu_msg.c ****     }
 132:src/mcu_msg.c **** }
 133:src/mcu_msg.c **** 
 134:src/mcu_msg.c **** /**
 135:src/mcu_msg.c ****  * @brief Char is a whitespace
 136:src/mcu_msg.c ****  * 
 137:src/mcu_msg.c ****  * @param c char
 138:src/mcu_msg.c ****  * @return uint8_t comparison result
 139:src/mcu_msg.c ****  */
 140:src/mcu_msg.c **** static inline uint8_t __is_whitespace(char c)
 141:src/mcu_msg.c **** {
 142:src/mcu_msg.c ****     switch(c) {
 143:src/mcu_msg.c ****         case  ' ':
 144:src/mcu_msg.c ****         case '\t':
 145:src/mcu_msg.c ****         case '\n':
 146:src/mcu_msg.c ****         case '\v':
 147:src/mcu_msg.c ****         case '\f':
 148:src/mcu_msg.c ****         case '\r':
 149:src/mcu_msg.c ****             return 1;
 150:src/mcu_msg.c ****         default:
 151:src/mcu_msg.c ****             return 0;
 152:src/mcu_msg.c ****     }
 153:src/mcu_msg.c **** }
 154:src/mcu_msg.c **** 
 155:src/mcu_msg.c **** /**
 156:src/mcu_msg.c ****  * @brief Argument char is valid keyword char or not
 157:src/mcu_msg.c ****  * 
 158:src/mcu_msg.c ****  * @param c char
 159:src/mcu_msg.c ****  * @return uint8_t comparison result
 160:src/mcu_msg.c ****  */
 161:src/mcu_msg.c **** 
 162:src/mcu_msg.c **** #define is_valid_keyword_char(c)        ((c == '_') || (c >= 'a' && c <= 'z') || (c >= 'A' && c <= 
 163:src/mcu_msg.c ****                                         (c >= '0' && c <= '9'))
 164:src/mcu_msg.c **** 
GAS LISTING /tmp/ccd0pRUN.s 			page 4


 165:src/mcu_msg.c **** /**
 166:src/mcu_msg.c ****  * @brief strlen implementation for internal usage
 167:src/mcu_msg.c ****  * 
 168:src/mcu_msg.c ****  * @param str string 
 169:src/mcu_msg.c ****  * @return msg_size_t length of string 
 170:src/mcu_msg.c ****  */
 171:src/mcu_msg.c **** static msg_size_t __str_len(char *str)
 172:src/mcu_msg.c **** {
   9              		.loc 1 172 0
  10              		.cfi_startproc
  11              	.LVL0:
 173:src/mcu_msg.c ****     char *p = str;
  12              		.loc 1 173 0
  13 0000 4889F8   		movq	%rdi, %rax
 174:src/mcu_msg.c ****     while(*p)
  14              		.loc 1 174 0
  15 0003 EB04     		jmp	.L2
  16              	.LVL1:
  17              	.L3:
 175:src/mcu_msg.c ****         p++;
  18              		.loc 1 175 0
  19 0005 4883C001 		addq	$1, %rax
  20              	.LVL2:
  21              	.L2:
 174:src/mcu_msg.c ****     while(*p)
  22              		.loc 1 174 0
  23 0009 803800   		cmpb	$0, (%rax)
  24 000c 75F7     		jne	.L3
 176:src/mcu_msg.c ****     return (p - str);
  25              		.loc 1 176 0
  26 000e 4829F8   		subq	%rdi, %rax
  27              	.LVL3:
 177:src/mcu_msg.c **** }
  28              		.loc 1 177 0
  29 0011 C3       		ret
  30              		.cfi_endproc
  31              	.LFE34:
  33              		.section	.text.__skip_internal_str,"ax",@progbits
  35              	__skip_internal_str:
  36              	.LFB36:
 178:src/mcu_msg.c **** 
 179:src/mcu_msg.c **** /**
 180:src/mcu_msg.c ****  * @brief Deciding char pointer is in the string buffer or not
 181:src/mcu_msg.c ****  * 
 182:src/mcu_msg.c ****  * @param str string buffer with start pointer and length
 183:src/mcu_msg.c ****  * @param p current pointer
 184:src/mcu_msg.c ****  * @return uint8_t return boole result
 185:src/mcu_msg.c ****  */
 186:src/mcu_msg.c **** static inline uint8_t __is_p_in_str(msg_str_t str, char *p)
 187:src/mcu_msg.c **** {
 188:src/mcu_msg.c ****     return ((p - str.s) < str.len);
 189:src/mcu_msg.c **** }
 190:src/mcu_msg.c **** 
 191:src/mcu_msg.c **** /**
 192:src/mcu_msg.c ****  * @brief Skiping internal string from start qoution mark to end qmark
 193:src/mcu_msg.c ****  * 
 194:src/mcu_msg.c ****  * @param start start pointer
GAS LISTING /tmp/ccd0pRUN.s 			page 5


 195:src/mcu_msg.c ****  * @return char* return end pointer
 196:src/mcu_msg.c ****  */
 197:src/mcu_msg.c **** static char *__skip_internal_str(char *start)
 198:src/mcu_msg.c **** {
  37              		.loc 1 198 0
  38              		.cfi_startproc
  39              	.LVL4:
 199:src/mcu_msg.c ****     char *p = start;
 200:src/mcu_msg.c ****     char qmark = *start;
  40              		.loc 1 200 0
  41 0000 0FB60F   		movzbl	(%rdi), %ecx
  42              	.LVL5:
 201:src/mcu_msg.c ****     if((qmark != '\'' && qmark != '"')) return NULL;
  43              		.loc 1 201 0
  44 0003 80F927   		cmpb	$39, %cl
  45 0006 0F95C2   		setne	%dl
  46 0009 80F922   		cmpb	$34, %cl
  47 000c 0F95C0   		setne	%al
  48 000f 84C2     		testb	%al, %dl
  49 0011 751E     		jne	.L9
 202:src/mcu_msg.c ****     ++p;
  50              		.loc 1 202 0
  51 0013 488D4701 		leaq	1(%rdi), %rax
  52              	.LVL6:
 203:src/mcu_msg.c ****     while(*p && (*p != qmark)) {
  53              		.loc 1 203 0
  54 0017 EB04     		jmp	.L6
  55              	.L8:
 204:src/mcu_msg.c ****         p++;
  56              		.loc 1 204 0
  57 0019 4883C001 		addq	$1, %rax
  58              	.LVL7:
  59              	.L6:
 203:src/mcu_msg.c ****     while(*p && (*p != qmark)) {
  60              		.loc 1 203 0
  61 001d 0FB610   		movzbl	(%rax), %edx
  62 0020 84D2     		testb	%dl, %dl
  63 0022 7404     		je	.L7
 203:src/mcu_msg.c ****     while(*p && (*p != qmark)) {
  64              		.loc 1 203 0 is_stmt 0 discriminator 1
  65 0024 38CA     		cmpb	%cl, %dl
  66 0026 75F1     		jne	.L8
  67              	.L7:
 205:src/mcu_msg.c ****     }
 206:src/mcu_msg.c ****     
 207:src/mcu_msg.c ****     return *p ? ++p : NULL;
  68              		.loc 1 207 0 is_stmt 1
  69 0028 84D2     		testb	%dl, %dl
  70 002a 740B     		je	.L10
  71              		.loc 1 207 0 is_stmt 0 discriminator 1
  72 002c 4883C001 		addq	$1, %rax
  73              	.LVL8:
  74 0030 C3       		ret
  75              	.LVL9:
  76              	.L9:
 201:src/mcu_msg.c ****     ++p;
  77              		.loc 1 201 0 is_stmt 1
GAS LISTING /tmp/ccd0pRUN.s 			page 6


  78 0031 B8000000 		movl	$0, %eax
  78      00
  79 0036 C3       		ret
  80              	.LVL10:
  81              	.L10:
  82              		.loc 1 207 0
  83 0037 B8000000 		movl	$0, %eax
  83      00
  84              	.LVL11:
 208:src/mcu_msg.c **** }
  85              		.loc 1 208 0
  86 003c C3       		ret
  87              		.cfi_endproc
  88              	.LFE36:
  90              		.section	.text.__msg_enable_buff,"ax",@progbits
  92              	__msg_enable_buff:
  93              	.LFB45:
 209:src/mcu_msg.c **** 
 210:src/mcu_msg.c **** /**
 211:src/mcu_msg.c ****  * @brief find the position of the keyword int message string (first occurance)
 212:src/mcu_msg.c ****  * if the keyword found in the message string, the next (none space) char must be stopc
 213:src/mcu_msg.c ****  * @param str source string
 214:src/mcu_msg.c ****  * @param keyword keword has to be found
 215:src/mcu_msg.c ****  * @param flagc flag, eg. '@', '$'
 216:src/mcu_msg.c ****  * @param stopc stop character eg. '(', '='
 217:src/mcu_msg.c ****  * @return msg_str_t location and size of the keyword (whitout flag) or NULL if keyword not found
 218:src/mcu_msg.c ****  */
 219:src/mcu_msg.c **** static msg_str_t __find_keyword(msg_str_t str, char *keyword, char flagc, char stopc)
 220:src/mcu_msg.c **** {
 221:src/mcu_msg.c **** 
 222:src/mcu_msg.c ****     msg_str_t res;
 223:src/mcu_msg.c ****     char *p = str.s;
 224:src/mcu_msg.c ****     uint8_t equal;
 225:src/mcu_msg.c ****     msg_size_t i;
 226:src/mcu_msg.c ****     res.len = __str_len(keyword);
 227:src/mcu_msg.c ****     while(__is_p_in_str(str, p) && *p) {
 228:src/mcu_msg.c ****         if(*p == '\'' || *p == '"') { //skip internal strings
 229:src/mcu_msg.c ****             p = __skip_internal_str(p);
 230:src/mcu_msg.c ****         }
 231:src/mcu_msg.c ****         if(__is_p_in_str(str, p)  && *p == flagc) { // if flag char detected start the analization
 232:src/mcu_msg.c ****             res.s = p + 1;
 233:src/mcu_msg.c ****             equal = 1;
 234:src/mcu_msg.c ****             for(i = 0; __is_p_in_str(str, res.s + i) && i < res.len; i++) { // if not equal during 
 235:src/mcu_msg.c ****                 if((*(res.s + i) != *(keyword + i)) || __is_ctrl_char(*(res.s + i)) || 
 236:src/mcu_msg.c ****                                     !is_valid_keyword_char(*(res.s + i))) {
 237:src/mcu_msg.c ****                     equal = 0;
 238:src/mcu_msg.c ****                     break;
 239:src/mcu_msg.c ****                 }
 240:src/mcu_msg.c ****             }
 241:src/mcu_msg.c ****             while(__is_p_in_str(str, res.s + i) && __is_whitespace(*(res.s + i))) i++; //skip space
 242:src/mcu_msg.c ****             if(equal && *(res.s + i) == stopc) { //if the stop char is the next, whitout spaces, re
 243:src/mcu_msg.c ****                 return res;
 244:src/mcu_msg.c ****             } else {
 245:src/mcu_msg.c ****                 p = res.s + i; // if not matched, return continue the iteration from last checked c
 246:src/mcu_msg.c ****             }
 247:src/mcu_msg.c ****         }
 248:src/mcu_msg.c ****         p++;
GAS LISTING /tmp/ccd0pRUN.s 			page 7


 249:src/mcu_msg.c ****     }
 250:src/mcu_msg.c ****     // if not found (loop finished whitout match) return with a destroyed string
 251:src/mcu_msg.c ****     msg_destroy_string(&res);
 252:src/mcu_msg.c ****     return res;
 253:src/mcu_msg.c **** }
 254:src/mcu_msg.c **** 
 255:src/mcu_msg.c **** 
 256:src/mcu_msg.c **** /**
 257:src/mcu_msg.c ****  * @brief Getting the value start position for particular key in message object
 258:src/mcu_msg.c ****  * 
 259:src/mcu_msg.c ****  * @param obj message object
 260:src/mcu_msg.c ****  * @param key key for search
 261:src/mcu_msg.c ****  * @return char* location of the value start point or NULL if the key was not found
 262:src/mcu_msg.c ****  */
 263:src/mcu_msg.c **** 
 264:src/mcu_msg.c **** static msg_str_t __find_val(msg_obj_t obj, char *key)
 265:src/mcu_msg.c **** {
 266:src/mcu_msg.c ****     msg_str_t res  = __find_keyword(obj.content, key, __CTRL_KEY_FLAG, __CTRL_KEY_EQU); //object st
 267:src/mcu_msg.c ****     char *p;
 268:src/mcu_msg.c ****     if(res.s == NULL) { //if keyword not found, return with NULLs and 0 lengths
 269:src/mcu_msg.c ****         msg_destroy_string(&res);
 270:src/mcu_msg.c ****         return res;
 271:src/mcu_msg.c ****     }
 272:src/mcu_msg.c ****     if(*res.s != __CTRL_KEY_EQU) { // move pointer to 'equal'
 273:src/mcu_msg.c ****         while(__is_p_in_str(obj.content, res.s + 1) && *res.s != __CTRL_KEY_EQU) res.s++;
 274:src/mcu_msg.c ****     }
 275:src/mcu_msg.c ****     res.s++;
 276:src/mcu_msg.c ****     while(__is_p_in_str(obj.content, res.s) && __is_whitespace(*res.s)) res.s++; //skip spaces afte
 277:src/mcu_msg.c **** 
 278:src/mcu_msg.c ****     p = res.s;
 279:src/mcu_msg.c ****     while(__is_p_in_str(obj.content, p) && !__is_whitespace(*p) && !__is_ctrl_char(*p)) p++; //calc
 280:src/mcu_msg.c ****     res.len = p - res.s;
 281:src/mcu_msg.c **** 
 282:src/mcu_msg.c ****     return res;
 283:src/mcu_msg.c **** }
 284:src/mcu_msg.c **** 
 285:src/mcu_msg.c **** 
 286:src/mcu_msg.c **** /*get message*/
 287:src/mcu_msg.c **** msg_t msg_get(char *raw_str, char *id, msg_size_t len)
 288:src/mcu_msg.c **** {
 289:src/mcu_msg.c ****     msg_t res;
 290:src/mcu_msg.c ****     res.content.s = raw_str;
 291:src/mcu_msg.c ****     res.content.len = len;
 292:src/mcu_msg.c ****     res.id = __find_keyword(res.content, id, __CTRL_MSG_FLAG, __CTRL_START_MSG); //object start wit
 293:src/mcu_msg.c ****     char *p;
 294:src/mcu_msg.c ****     if(res.id.s == NULL) { //if keyword not found, return with NULLs and 0 lengths
 295:src/mcu_msg.c ****         msg_destroy(&res);
 296:src/mcu_msg.c ****         return res;
 297:src/mcu_msg.c ****     }
 298:src/mcu_msg.c ****     p = res.id.s + res.id.len; //init pointer to end of the id
 299:src/mcu_msg.c ****     if (*p != __CTRL_START_MSG) { // if the next char is not START_MSG, move to the start flag
 300:src/mcu_msg.c ****         while(__is_p_in_str(res.content, p + 1) && *p != __CTRL_START_MSG) p++;
 301:src/mcu_msg.c ****     }
 302:src/mcu_msg.c ****     res.content.s = ++p; // set content string pointer to the current pos
 303:src/mcu_msg.c ****     while(__is_p_in_str(res.content, p) && *p != __CTRL_STOP_MSG) { //calc length
 304:src/mcu_msg.c ****         p++;
 305:src/mcu_msg.c ****     }
GAS LISTING /tmp/ccd0pRUN.s 			page 8


 306:src/mcu_msg.c ****     res.content.len = p - res.content.s;
 307:src/mcu_msg.c ****     return res;
 308:src/mcu_msg.c **** }
 309:src/mcu_msg.c **** 
 310:src/mcu_msg.c **** 
 311:src/mcu_msg.c **** 
 312:src/mcu_msg.c **** msg_obj_t msg_parser_get_obj(msg_t msg, char *id)
 313:src/mcu_msg.c **** {
 314:src/mcu_msg.c ****     msg_obj_t res;
 315:src/mcu_msg.c ****     res.id = __find_keyword(msg.content, id, __CTRL_OBJ_FLAG, __CTRL_START_OBJ); //object start wit
 316:src/mcu_msg.c ****     char *p;
 317:src/mcu_msg.c ****     if(res.id.s == NULL) { //if keyword not found, return with NULLs and 0 lengths
 318:src/mcu_msg.c ****         msg_destroy_obj(&res);
 319:src/mcu_msg.c ****         return res;
 320:src/mcu_msg.c ****     }
 321:src/mcu_msg.c **** 
 322:src/mcu_msg.c ****     p = res.id.s + res.id.len;
 323:src/mcu_msg.c ****     if (*p != __CTRL_START_OBJ) {
 324:src/mcu_msg.c ****         while(__is_p_in_str(msg.content, p + 1) && *p != __CTRL_START_OBJ) p++;
 325:src/mcu_msg.c ****     }
 326:src/mcu_msg.c ****     res.content.s = ++p;
 327:src/mcu_msg.c ****     while(__is_p_in_str(msg.content, p) && *p != __CTRL_STOP_OBJ) {
 328:src/mcu_msg.c ****         p++;
 329:src/mcu_msg.c ****     }
 330:src/mcu_msg.c ****     res.content.len = p - res.content.s;
 331:src/mcu_msg.c ****     return res;
 332:src/mcu_msg.c **** }
 333:src/mcu_msg.c **** 
 334:src/mcu_msg.c **** msg_cmd_t msg_parser_get_cmd(msg_t msg, char *cmd_id)
 335:src/mcu_msg.c **** {
 336:src/mcu_msg.c ****     msg_cmd_t res;
 337:src/mcu_msg.c ****     // return with the find result
 338:src/mcu_msg.c ****     res.cmd = __find_keyword(msg.content, cmd_id, __CTRL_CMD_START_FLAG, __CTRL_CMD_STOP_FLAG);
 339:src/mcu_msg.c ****     return res;
 340:src/mcu_msg.c **** }
 341:src/mcu_msg.c **** 
 342:src/mcu_msg.c **** int8_t msg_parser_get_int(int *res_val, msg_obj_t obj, char *key)
 343:src/mcu_msg.c **** {
 344:src/mcu_msg.c ****     msg_str_t sval = __find_val(obj, key);
 345:src/mcu_msg.c ****     msg_size_t i;
 346:src/mcu_msg.c ****     unsigned m = 1;
 347:src/mcu_msg.c ****     int sign = 1;
 348:src/mcu_msg.c ****     int8_t res = 0; // result of function
 349:src/mcu_msg.c **** 
 350:src/mcu_msg.c ****     if(sval.s == NULL)  //key nout found
 351:src/mcu_msg.c ****         return -1;
 352:src/mcu_msg.c **** 
 353:src/mcu_msg.c **** 
 354:src/mcu_msg.c ****     switch(*sval.s) { //if the sign is defined, set the sign variable and increment the pointer
 355:src/mcu_msg.c ****         case '+':
 356:src/mcu_msg.c ****             sign = 1;
 357:src/mcu_msg.c ****             sval.s++;
 358:src/mcu_msg.c ****         break;
 359:src/mcu_msg.c ****         
 360:src/mcu_msg.c ****         case '-':
 361:src/mcu_msg.c ****             sign = -1;
 362:src/mcu_msg.c ****             sval.s++;
GAS LISTING /tmp/ccd0pRUN.s 			page 9


 363:src/mcu_msg.c ****         break;
 364:src/mcu_msg.c ****         
 365:src/mcu_msg.c ****         default:
 366:src/mcu_msg.c ****         break;
 367:src/mcu_msg.c ****     }
 368:src/mcu_msg.c **** 
 369:src/mcu_msg.c ****     for(i = 0; __is_p_in_str(obj.content, sval.s) && !__is_whitespace(*sval.s) && *sval.s != __CTRL
 370:src/mcu_msg.c ****         if(*sval.s < '0' || *sval.s > '9') {    // if non valid number, return with error
 371:src/mcu_msg.c ****             return -1;
 372:src/mcu_msg.c ****         }
 373:src/mcu_msg.c ****     }
 374:src/mcu_msg.c **** 
 375:src/mcu_msg.c ****     *res_val = 0;
 376:src/mcu_msg.c ****     --sval.s;
 377:src/mcu_msg.c ****     while(i--) { //convert value to integer
 378:src/mcu_msg.c ****         *res_val += (*sval.s-- - '0') * m;
 379:src/mcu_msg.c ****         m *= 10;
 380:src/mcu_msg.c ****         res++;
 381:src/mcu_msg.c ****     }
 382:src/mcu_msg.c ****     
 383:src/mcu_msg.c ****     *res_val *= sign; //corrigate with the sign
 384:src/mcu_msg.c **** 
 385:src/mcu_msg.c ****     return res; // return with the digit count, if correct
 386:src/mcu_msg.c **** }
 387:src/mcu_msg.c **** 
 388:src/mcu_msg.c **** 
 389:src/mcu_msg.c **** int8_t msg_parser_get_float(float *res_val, msg_obj_t obj, char *key)
 390:src/mcu_msg.c **** {
 391:src/mcu_msg.c ****     msg_str_t sval = __find_val(obj, key);
 392:src/mcu_msg.c ****     char *pf;
 393:src/mcu_msg.c ****     msg_size_t i;
 394:src/mcu_msg.c ****     unsigned m = 1;
 395:src/mcu_msg.c ****     float mf = 0.1;
 396:src/mcu_msg.c ****     int sign = 1;
 397:src/mcu_msg.c ****     int8_t res = 0; // result of function
 398:src/mcu_msg.c **** 
 399:src/mcu_msg.c ****     if(sval.s == NULL)  //key nout found
 400:src/mcu_msg.c ****         return -1;
 401:src/mcu_msg.c **** 
 402:src/mcu_msg.c **** 
 403:src/mcu_msg.c ****     switch(*sval.s) { //if the sign is defined, set the sign variable and increment the pointer
 404:src/mcu_msg.c ****         case '+':
 405:src/mcu_msg.c ****             sign = 1;
 406:src/mcu_msg.c ****             sval.s++;
 407:src/mcu_msg.c ****         break;
 408:src/mcu_msg.c ****         
 409:src/mcu_msg.c ****         case '-':
 410:src/mcu_msg.c ****             sign = -1;
 411:src/mcu_msg.c ****             sval.s++;
 412:src/mcu_msg.c ****         break;
 413:src/mcu_msg.c ****         
 414:src/mcu_msg.c ****         default:
 415:src/mcu_msg.c ****         break;
 416:src/mcu_msg.c ****     }
 417:src/mcu_msg.c **** 
 418:src/mcu_msg.c ****     //move p to dec separator or end of the value
 419:src/mcu_msg.c ****     for(i = 0; __is_p_in_str(obj.content, sval.s) && !__is_whitespace(*sval.s) && *sval.s != __CTRL
GAS LISTING /tmp/ccd0pRUN.s 			page 10


 420:src/mcu_msg.c ****         if((*sval.s < '0' || *sval.s > '9')) {    // if non valid number, return with error
 421:src/mcu_msg.c ****             return -1;
 422:src/mcu_msg.c ****         }
 423:src/mcu_msg.c ****     }
 424:src/mcu_msg.c **** 
 425:src/mcu_msg.c ****     *res_val = 0.0;
 426:src/mcu_msg.c ****     
 427:src/mcu_msg.c ****     if(*sval.s == '.') {
 428:src/mcu_msg.c ****         pf = sval.s + 1;
 429:src/mcu_msg.c ****         res++;
 430:src/mcu_msg.c ****     } else {
 431:src/mcu_msg.c ****         pf = NULL;
 432:src/mcu_msg.c ****     }
 433:src/mcu_msg.c **** 
 434:src/mcu_msg.c ****     --sval.s;
 435:src/mcu_msg.c ****     while(i--) { // convert integer part
 436:src/mcu_msg.c ****         *res_val += (*sval.s-- - '0') * m;
 437:src/mcu_msg.c ****         m *= 10;
 438:src/mcu_msg.c ****         res++;
 439:src/mcu_msg.c ****     }
 440:src/mcu_msg.c ****     
 441:src/mcu_msg.c ****     // calculate floating point section after '.' (if there is)
 442:src/mcu_msg.c ****     for(; pf != NULL && __is_p_in_str(obj.content, pf) && !__is_whitespace(*pf) && *pf != __CTRL_KE
 443:src/mcu_msg.c ****         if(*pf < '0' || *pf > '9') {    // if non valid number, return with error
 444:src/mcu_msg.c ****             return -1;
 445:src/mcu_msg.c ****         }
 446:src/mcu_msg.c ****         *res_val += (*pf - '0') * mf;
 447:src/mcu_msg.c ****         mf /= 10;
 448:src/mcu_msg.c ****         res++; 
 449:src/mcu_msg.c ****     }
 450:src/mcu_msg.c **** 
 451:src/mcu_msg.c ****     *res_val *= sign; //corrigate with the sign
 452:src/mcu_msg.c **** 
 453:src/mcu_msg.c ****     return res; // return with the digit count + '.' separator, if correct
 454:src/mcu_msg.c **** }
 455:src/mcu_msg.c **** 
 456:src/mcu_msg.c **** 
 457:src/mcu_msg.c **** 
 458:src/mcu_msg.c **** msg_str_t msg_parser_get_string(msg_obj_t obj, char *key)
 459:src/mcu_msg.c **** {
 460:src/mcu_msg.c ****     msg_str_t res = __find_val(obj, key);
 461:src/mcu_msg.c ****     char qmark;
 462:src/mcu_msg.c ****     char *p;
 463:src/mcu_msg.c **** 
 464:src/mcu_msg.c ****     if(res.s == NULL) {
 465:src/mcu_msg.c ****         msg_destroy_string(&res);
 466:src/mcu_msg.c ****         return res;
 467:src/mcu_msg.c ****     }
 468:src/mcu_msg.c ****         
 469:src/mcu_msg.c ****     qmark = *res.s;
 470:src/mcu_msg.c **** 
 471:src/mcu_msg.c ****     if(qmark != '\'' && qmark != '"') { // qmark not found, this is not a string
 472:src/mcu_msg.c ****         msg_destroy_string(&res);
 473:src/mcu_msg.c ****         return res;
 474:src/mcu_msg.c ****     }
 475:src/mcu_msg.c **** 
 476:src/mcu_msg.c ****     p = ++res.s;
GAS LISTING /tmp/ccd0pRUN.s 			page 11


 477:src/mcu_msg.c ****     while(__is_p_in_str(obj.content, p) && *p != qmark) { // calc len
 478:src/mcu_msg.c ****         p++;
 479:src/mcu_msg.c ****     }
 480:src/mcu_msg.c ****     res.len = p - res.s;
 481:src/mcu_msg.c ****     return res;
 482:src/mcu_msg.c **** }
 483:src/mcu_msg.c **** 
 484:src/mcu_msg.c **** 
 485:src/mcu_msg.c **** static void __msg_enable_buff(void)
 486:src/mcu_msg.c **** {
  94              		.loc 1 486 0
  95              		.cfi_startproc
 487:src/mcu_msg.c ****     __redir_outp_to_buff = 1;
  96              		.loc 1 487 0
  97 0000 C6050000 		movb	$1, __redir_outp_to_buff(%rip)
  97      000001
 488:src/mcu_msg.c **** }
  98              		.loc 1 488 0
  99 0007 C3       		ret
 100              		.cfi_endproc
 101              	.LFE45:
 103              		.section	.text.__msg_disable_buff,"ax",@progbits
 105              	__msg_disable_buff:
 106              	.LFB46:
 489:src/mcu_msg.c **** 
 490:src/mcu_msg.c **** static void __msg_disable_buff(void)
 491:src/mcu_msg.c **** {
 107              		.loc 1 491 0
 108              		.cfi_startproc
 492:src/mcu_msg.c ****     __redir_outp_to_buff = 0;
 109              		.loc 1 492 0
 110 0000 C6050000 		movb	$0, __redir_outp_to_buff(%rip)
 110      000000
 493:src/mcu_msg.c **** }
 111              		.loc 1 493 0
 112 0007 C3       		ret
 113              		.cfi_endproc
 114              	.LFE46:
 116              		.section	.text.__msg_init_str_buff,"ax",@progbits
 118              	__msg_init_str_buff:
 119              	.LFB47:
 494:src/mcu_msg.c **** 
 495:src/mcu_msg.c **** static void __msg_init_str_buff(char *buff, msg_size_t buff_size)
 496:src/mcu_msg.c **** {
 120              		.loc 1 496 0
 121              		.cfi_startproc
 122              	.LVL12:
 497:src/mcu_msg.c ****     __str_buff.buff.len = buff_size;
 123              		.loc 1 497 0
 124 0000 66893500 		movw	%si, 8+__str_buff(%rip)
 124      000000
 498:src/mcu_msg.c ****     __str_buff.buff.s = buff;
 125              		.loc 1 498 0
 126 0007 48893D00 		movq	%rdi, __str_buff(%rip)
 126      000000
 499:src/mcu_msg.c ****     __str_buff.p = __str_buff.buff.s;
 127              		.loc 1 499 0
GAS LISTING /tmp/ccd0pRUN.s 			page 12


 128 000e 48893D00 		movq	%rdi, 16+__str_buff(%rip)
 128      000000
 500:src/mcu_msg.c **** }
 129              		.loc 1 500 0
 130 0015 C3       		ret
 131              		.cfi_endproc
 132              	.LFE47:
 134              		.section	.text.__msg_reset_str_buff,"ax",@progbits
 136              	__msg_reset_str_buff:
 137              	.LFB48:
 501:src/mcu_msg.c **** 
 502:src/mcu_msg.c **** static void __msg_reset_str_buff(char *buff, msg_size_t buff_size)
 503:src/mcu_msg.c **** {
 138              		.loc 1 503 0
 139              		.cfi_startproc
 140              	.LVL13:
 504:src/mcu_msg.c ****     __str_buff.p = __str_buff.buff.s; //reset pointer (set to the start position)
 141              		.loc 1 504 0
 142 0000 488B0500 		movq	__str_buff(%rip), %rax
 142      000000
 143 0007 48890500 		movq	%rax, 16+__str_buff(%rip)
 143      000000
 505:src/mcu_msg.c **** }
 144              		.loc 1 505 0
 145 000e C3       		ret
 146              		.cfi_endproc
 147              	.LFE48:
 149              		.section	.text.__msg_putc_to_buff,"ax",@progbits
 151              	__msg_putc_to_buff:
 152              	.LFB49:
 506:src/mcu_msg.c **** 
 507:src/mcu_msg.c **** static msg_size_t __msg_putc_to_buff(char c)
 508:src/mcu_msg.c **** {
 153              		.loc 1 508 0
 154              		.cfi_startproc
 155              	.LVL14:
 509:src/mcu_msg.c **** 
 510:src/mcu_msg.c ****     if(!__str_buff.buff.s || !__str_buff.buff.len) return 0;
 156              		.loc 1 510 0
 157 0000 488B1500 		movq	__str_buff(%rip), %rdx
 157      000000
 158 0007 4885D2   		testq	%rdx, %rdx
 159 000a 7435     		je	.L17
 160              		.loc 1 510 0 is_stmt 0 discriminator 2
 161 000c 0FB70500 		movzwl	8+__str_buff(%rip), %eax
 161      000000
 162 0013 6685C0   		testw	%ax, %ax
 163 0016 7434     		je	.L15
 511:src/mcu_msg.c **** 
 512:src/mcu_msg.c ****     if((__str_buff.p - __str_buff.buff.s) >= __str_buff.buff.len) // return null if position is out
 164              		.loc 1 512 0 is_stmt 1
 165 0018 488B0D00 		movq	16+__str_buff(%rip), %rcx
 165      000000
 166 001f 4989C8   		movq	%rcx, %r8
 167 0022 4929D0   		subq	%rdx, %r8
 168 0025 0FB7F0   		movzwl	%ax, %esi
 169 0028 4939F0   		cmpq	%rsi, %r8
GAS LISTING /tmp/ccd0pRUN.s 			page 13


 170 002b 7D1A     		jge	.L18
 513:src/mcu_msg.c ****         return 0;
 514:src/mcu_msg.c ****     *__str_buff.p = c;
 171              		.loc 1 514 0
 172 002d 408839   		movb	%dil, (%rcx)
 515:src/mcu_msg.c ****     __str_buff.p++;
 173              		.loc 1 515 0
 174 0030 4883C101 		addq	$1, %rcx
 175 0034 48890D00 		movq	%rcx, 16+__str_buff(%rip)
 175      000000
 516:src/mcu_msg.c ****     return __str_buff.buff.len - (__str_buff.p - __str_buff.buff.s); // return with the empty space
 176              		.loc 1 516 0
 177 003b 4829D1   		subq	%rdx, %rcx
 178 003e 29C8     		subl	%ecx, %eax
 179 0040 C3       		ret
 180              	.L17:
 510:src/mcu_msg.c **** 
 181              		.loc 1 510 0
 182 0041 B8000000 		movl	$0, %eax
 182      00
 183 0046 C3       		ret
 184              	.L18:
 513:src/mcu_msg.c ****     *__str_buff.p = c;
 185              		.loc 1 513 0
 186 0047 B8000000 		movl	$0, %eax
 186      00
 187              	.L15:
 517:src/mcu_msg.c **** }
 188              		.loc 1 517 0
 189 004c F3C3     		rep ret
 190              		.cfi_endproc
 191              	.LFE49:
 193              		.section	.text.__msg_putc,"ax",@progbits
 195              	__msg_putc:
 196              	.LFB50:
 518:src/mcu_msg.c **** 
 519:src/mcu_msg.c **** static void __msg_putc(char c)
 520:src/mcu_msg.c **** {
 197              		.loc 1 520 0
 198              		.cfi_startproc
 199              	.LVL15:
 200 0000 4883EC08 		subq	$8, %rsp
 201              	.LCFI0:
 202              		.cfi_def_cfa_offset 16
 521:src/mcu_msg.c ****     if (__redir_outp_to_buff) { // if output is redirected, use the internal string buffer
 203              		.loc 1 521 0
 204 0004 803D0000 		cmpb	$0, __redir_outp_to_buff(%rip)
 204      000000
 205 000b 750F     		jne	.L23
 522:src/mcu_msg.c ****         __msg_putc_to_buff(c);
 523:src/mcu_msg.c ****     } else {
 524:src/mcu_msg.c ****         __putc(c);
 206              		.loc 1 524 0
 207 000d 400FBEFF 		movsbl	%dil, %edi
 208 0011 FF150000 		call	*__putc(%rip)
 208      0000
 209              	.LVL16:
GAS LISTING /tmp/ccd0pRUN.s 			page 14


 210              	.L19:
 525:src/mcu_msg.c ****     }
 526:src/mcu_msg.c **** }
 211              		.loc 1 526 0
 212 0017 4883C408 		addq	$8, %rsp
 213              	.LCFI1:
 214              		.cfi_remember_state
 215              		.cfi_def_cfa_offset 8
 216 001b C3       		ret
 217              	.LVL17:
 218              	.L23:
 219              	.LCFI2:
 220              		.cfi_restore_state
 522:src/mcu_msg.c ****         __msg_putc_to_buff(c);
 221              		.loc 1 522 0
 222 001c 400FBEFF 		movsbl	%dil, %edi
 223 0020 E8000000 		call	__msg_putc_to_buff
 223      00
 224              	.LVL18:
 225 0025 EBF0     		jmp	.L19
 226              		.cfi_endproc
 227              	.LFE50:
 229              		.section	.text.__msg_print_int,"ax",@progbits
 231              	__msg_print_int:
 232              	.LFB51:
 527:src/mcu_msg.c **** 
 528:src/mcu_msg.c **** static void __msg_print_int(int i)
 529:src/mcu_msg.c **** {
 233              		.loc 1 529 0
 234              		.cfi_startproc
 235              	.LVL19:
 236 0000 4154     		pushq	%r12
 237              	.LCFI3:
 238              		.cfi_def_cfa_offset 16
 239              		.cfi_offset 12, -16
 240 0002 55       		pushq	%rbp
 241              	.LCFI4:
 242              		.cfi_def_cfa_offset 24
 243              		.cfi_offset 6, -24
 244 0003 53       		pushq	%rbx
 245              	.LCFI5:
 246              		.cfi_def_cfa_offset 32
 247              		.cfi_offset 3, -32
 530:src/mcu_msg.c ****     // int8_t sign = i < 0 ? -1: 1;
 531:src/mcu_msg.c ****     unsigned val = i < 0 ? ~i + 1 : i;
 248              		.loc 1 531 0
 249 0004 89F8     		movl	%edi, %eax
 250 0006 C1F81F   		sarl	$31, %eax
 251 0009 89C3     		movl	%eax, %ebx
 252 000b 31FB     		xorl	%edi, %ebx
 253 000d 29C3     		subl	%eax, %ebx
 254              	.LVL20:
 532:src/mcu_msg.c ****                                   // 4294967295   65535
 533:src/mcu_msg.c ****     unsigned div = sizeof(int) > 2 ? 1000000000UL : 10000UL;
 534:src/mcu_msg.c ****     uint8_t dig;
 535:src/mcu_msg.c ****     uint8_t first_dig = 0;
 536:src/mcu_msg.c **** 
GAS LISTING /tmp/ccd0pRUN.s 			page 15


 537:src/mcu_msg.c ****     if(!i) {
 255              		.loc 1 537 0
 256 000f 85FF     		testl	%edi, %edi
 257 0011 7411     		je	.L36
 538:src/mcu_msg.c ****         __msg_putc('0');
 539:src/mcu_msg.c ****         return;
 540:src/mcu_msg.c ****     }
 541:src/mcu_msg.c ****     if(i < 0) __msg_putc('-');
 258              		.loc 1 541 0
 259 0013 85FF     		testl	%edi, %edi
 260 0015 781C     		js	.L37
 261              	.LVL21:
 262              	.L27:
 542:src/mcu_msg.c ****     while(div) {
 543:src/mcu_msg.c ****         dig = 0;
 544:src/mcu_msg.c ****         while(val >= div) {
 545:src/mcu_msg.c ****             val -= div;
 546:src/mcu_msg.c ****             dig += 1;
 547:src/mcu_msg.c ****         }
 548:src/mcu_msg.c ****         div /= 10;
 549:src/mcu_msg.c ****         if(!first_dig && dig) {
 550:src/mcu_msg.c ****             first_dig = 1;
 263              		.loc 1 550 0
 264 0017 41BC0000 		movl	$0, %r12d
 264      0000
 265 001d BD00CA9A 		movl	$1000000000, %ebp
 265      3B
 266 0022 EB53     		jmp	.L28
 267              	.LVL22:
 268              	.L36:
 538:src/mcu_msg.c ****         __msg_putc('0');
 269              		.loc 1 538 0
 270 0024 BF300000 		movl	$48, %edi
 270      00
 271              	.LVL23:
 272 0029 E8000000 		call	__msg_putc
 272      00
 273              	.LVL24:
 274              	.L24:
 551:src/mcu_msg.c ****         }
 552:src/mcu_msg.c ****         if(first_dig) __msg_putc('0' + dig);
 553:src/mcu_msg.c ****     }
 554:src/mcu_msg.c ****     
 555:src/mcu_msg.c **** }
 275              		.loc 1 555 0
 276 002e 5B       		popq	%rbx
 277              	.LCFI6:
 278              		.cfi_remember_state
 279              		.cfi_def_cfa_offset 24
 280 002f 5D       		popq	%rbp
 281              	.LCFI7:
 282              		.cfi_def_cfa_offset 16
 283 0030 415C     		popq	%r12
 284              	.LCFI8:
 285              		.cfi_def_cfa_offset 8
 286 0032 C3       		ret
 287              	.LVL25:
GAS LISTING /tmp/ccd0pRUN.s 			page 16


 288              	.L37:
 289              	.LCFI9:
 290              		.cfi_restore_state
 541:src/mcu_msg.c ****     while(div) {
 291              		.loc 1 541 0 discriminator 1
 292 0033 BF2D0000 		movl	$45, %edi
 292      00
 293              	.LVL26:
 294 0038 E8000000 		call	__msg_putc
 294      00
 295              	.LVL27:
 296 003d EBD8     		jmp	.L27
 297              	.LVL28:
 298              	.L29:
 545:src/mcu_msg.c ****             dig += 1;
 299              		.loc 1 545 0
 300 003f 29EB     		subl	%ebp, %ebx
 301              	.LVL29:
 546:src/mcu_msg.c ****         }
 302              		.loc 1 546 0
 303 0041 83C701   		addl	$1, %edi
 304              	.LVL30:
 305              	.L32:
 544:src/mcu_msg.c ****             val -= div;
 306              		.loc 1 544 0
 307 0044 39EB     		cmpl	%ebp, %ebx
 308 0046 73F7     		jnb	.L29
 548:src/mcu_msg.c ****         if(!first_dig && dig) {
 309              		.loc 1 548 0
 310 0048 BACDCCCC 		movl	$-858993459, %edx
 310      CC
 311 004d 89E8     		movl	%ebp, %eax
 312 004f F7E2     		mull	%edx
 313              	.LVL31:
 314 0051 C1EA03   		shrl	$3, %edx
 315 0054 89D5     		movl	%edx, %ebp
 316              	.LVL32:
 549:src/mcu_msg.c ****             first_dig = 1;
 317              		.loc 1 549 0
 318 0056 4489E0   		movl	%r12d, %eax
 319 0059 83F001   		xorl	$1, %eax
 320 005c 4084FF   		testb	%dil, %dil
 321 005f 0F95C2   		setne	%dl
 322              	.LVL33:
 323 0062 84C2     		testb	%al, %dl
 324 0064 751C     		jne	.L33
 552:src/mcu_msg.c ****     }
 325              		.loc 1 552 0
 326 0066 4584E4   		testb	%r12b, %r12b
 327 0069 740C     		je	.L28
 328              	.LVL34:
 329              	.L30:
 552:src/mcu_msg.c ****     }
 330              		.loc 1 552 0 is_stmt 0 discriminator 1
 331 006b 83C730   		addl	$48, %edi
 332              	.LVL35:
 333 006e 400FBEFF 		movsbl	%dil, %edi
GAS LISTING /tmp/ccd0pRUN.s 			page 17


 334 0072 E8000000 		call	__msg_putc
 334      00
 335              	.LVL36:
 336              	.L28:
 542:src/mcu_msg.c ****         dig = 0;
 337              		.loc 1 542 0 is_stmt 1
 338 0077 85ED     		testl	%ebp, %ebp
 339 0079 74B3     		je	.L24
 543:src/mcu_msg.c ****         while(val >= div) {
 340              		.loc 1 543 0
 341 007b BF000000 		movl	$0, %edi
 341      00
 342 0080 EBC2     		jmp	.L32
 343              	.LVL37:
 344              	.L33:
 550:src/mcu_msg.c ****         }
 345              		.loc 1 550 0
 346 0082 41BC0100 		movl	$1, %r12d
 346      0000
 347              	.LVL38:
 348 0088 EBE1     		jmp	.L30
 349              		.cfi_endproc
 350              	.LFE51:
 352              		.section	.text.__msg_print_float,"ax",@progbits
 354              	__msg_print_float:
 355              	.LFB52:
 556:src/mcu_msg.c **** 
 557:src/mcu_msg.c **** static void __msg_print_float(float f, uint8_t prec)
 558:src/mcu_msg.c **** {
 356              		.loc 1 558 0
 357              		.cfi_startproc
 358              	.LVL39:
 359 0000 53       		pushq	%rbx
 360              	.LCFI10:
 361              		.cfi_def_cfa_offset 16
 362              		.cfi_offset 3, -16
 363 0001 4883EC10 		subq	$16, %rsp
 364              	.LCFI11:
 365              		.cfi_def_cfa_offset 32
 366 0005 89F9     		movl	%edi, %ecx
 559:src/mcu_msg.c ****     int i_part = (int)f;
 367              		.loc 1 559 0
 368 0007 F30F2CF8 		cvttss2si	%xmm0, %edi
 369              	.LVL40:
 560:src/mcu_msg.c ****     float f_part = f < 0 ? (f - (float)i_part) * -1  : (f - (float)i_part);
 370              		.loc 1 560 0
 371 000b 660FEFC9 		pxor	%xmm1, %xmm1
 372 000f 0F2EC8   		ucomiss	%xmm0, %xmm1
 373 0012 771E     		ja	.L49
 374              		.loc 1 560 0 is_stmt 0 discriminator 2
 375 0014 660FEFC9 		pxor	%xmm1, %xmm1
 376 0018 F30F2ACF 		cvtsi2ss	%edi, %xmm1
 377 001c F30F5CC1 		subss	%xmm1, %xmm0
 378              	.LVL41:
 379 0020 F30F1144 		movss	%xmm0, 12(%rsp)
 379      240C
 380              	.L41:
GAS LISTING /tmp/ccd0pRUN.s 			page 18


 381              	.LVL42:
 561:src/mcu_msg.c ****     unsigned mul = 1;
 562:src/mcu_msg.c ****     uint8_t j;
 563:src/mcu_msg.c ****     for(j = 0; j < prec; j++ ) mul *= 10;
 382              		.loc 1 563 0 is_stmt 1 discriminator 4
 383 0026 B8000000 		movl	$0, %eax
 383      00
 561:src/mcu_msg.c ****     unsigned mul = 1;
 384              		.loc 1 561 0 discriminator 4
 385 002b BB010000 		movl	$1, %ebx
 385      00
 386              		.loc 1 563 0 discriminator 4
 387 0030 EB24     		jmp	.L42
 388              	.LVL43:
 389              	.L49:
 560:src/mcu_msg.c ****     float f_part = f < 0 ? (f - (float)i_part) * -1  : (f - (float)i_part);
 390              		.loc 1 560 0 discriminator 1
 391 0032 660FEFC9 		pxor	%xmm1, %xmm1
 392 0036 F30F2ACF 		cvtsi2ss	%edi, %xmm1
 393 003a F30F5CC1 		subss	%xmm1, %xmm0
 394              	.LVL44:
 395 003e 0F570500 		xorps	.LC1(%rip), %xmm0
 395      000000
 396 0045 F30F1144 		movss	%xmm0, 12(%rsp)
 396      240C
 397 004b EBD9     		jmp	.L41
 398              	.LVL45:
 399              	.L43:
 400              		.loc 1 563 0 discriminator 3
 401 004d 8D149B   		leal	(%rbx,%rbx,4), %edx
 402 0050 8D1C12   		leal	(%rdx,%rdx), %ebx
 403              	.LVL46:
 404 0053 83C001   		addl	$1, %eax
 405              	.LVL47:
 406              	.L42:
 407              		.loc 1 563 0 is_stmt 0 discriminator 1
 408 0056 38C8     		cmpb	%cl, %al
 409 0058 72F3     		jb	.L43
 564:src/mcu_msg.c ****     __msg_print_int(i_part);
 410              		.loc 1 564 0 is_stmt 1
 411 005a E8000000 		call	__msg_print_int
 411      00
 412              	.LVL48:
 565:src/mcu_msg.c ****     __msg_putc('.');
 413              		.loc 1 565 0
 414 005f BF2E0000 		movl	$46, %edi
 414      00
 415 0064 E8000000 		call	__msg_putc
 415      00
 416              	.LVL49:
 566:src/mcu_msg.c ****     __msg_print_int((unsigned)(f_part * mul));
 417              		.loc 1 566 0
 418 0069 89DB     		movl	%ebx, %ebx
 419 006b 660FEFC0 		pxor	%xmm0, %xmm0
 420 006f F3480F2A 		cvtsi2ssq	%rbx, %xmm0
 420      C3
 421 0074 F30F5944 		mulss	12(%rsp), %xmm0
GAS LISTING /tmp/ccd0pRUN.s 			page 19


 421      240C
 422 007a F3480F2C 		cvttss2siq	%xmm0, %rdi
 422      F8
 423 007f E8000000 		call	__msg_print_int
 423      00
 424              	.LVL50:
 567:src/mcu_msg.c **** }
 425              		.loc 1 567 0
 426 0084 4883C410 		addq	$16, %rsp
 427              	.LCFI12:
 428              		.cfi_def_cfa_offset 16
 429 0088 5B       		popq	%rbx
 430              	.LCFI13:
 431              		.cfi_def_cfa_offset 8
 432              	.LVL51:
 433 0089 C3       		ret
 434              		.cfi_endproc
 435              	.LFE52:
 437              		.section	.text.__msg_print_str,"ax",@progbits
 439              	__msg_print_str:
 440              	.LFB53:
 568:src/mcu_msg.c **** 
 569:src/mcu_msg.c **** 
 570:src/mcu_msg.c **** static void __msg_print_str(msg_str_t str)
 571:src/mcu_msg.c **** {
 441              		.loc 1 571 0
 442              		.cfi_startproc
 443              	.LVL52:
 444 0000 4154     		pushq	%r12
 445              	.LCFI14:
 446              		.cfi_def_cfa_offset 16
 447              		.cfi_offset 12, -16
 448 0002 55       		pushq	%rbp
 449              	.LCFI15:
 450              		.cfi_def_cfa_offset 24
 451              		.cfi_offset 6, -24
 452 0003 53       		pushq	%rbx
 453              	.LCFI16:
 454              		.cfi_def_cfa_offset 32
 455              		.cfi_offset 3, -32
 456 0004 4989FC   		movq	%rdi, %r12
 457 0007 4889F5   		movq	%rsi, %rbp
 458              	.LVL53:
 572:src/mcu_msg.c ****     msg_size_t i;
 573:src/mcu_msg.c ****     if(!__msg_putc) { //if function pointer is NULL, return
 574:src/mcu_msg.c ****         return;
 575:src/mcu_msg.c ****     }
 576:src/mcu_msg.c ****     for(i = 0; i < str.len; __msg_putc(*(str.s + i)), i++);
 459              		.loc 1 576 0
 460 000a BB000000 		movl	$0, %ebx
 460      00
 461 000f EB10     		jmp	.L51
 462              	.LVL54:
 463              	.L52:
 464              		.loc 1 576 0 is_stmt 0 discriminator 3
 465 0011 0FB7C3   		movzwl	%bx, %eax
 466 0014 410FBE3C 		movsbl	(%r12,%rax), %edi
GAS LISTING /tmp/ccd0pRUN.s 			page 20


 466      04
 467 0019 E8000000 		call	__msg_putc
 467      00
 468              	.LVL55:
 469 001e 83C301   		addl	$1, %ebx
 470              	.LVL56:
 471              	.L51:
 472              		.loc 1 576 0 discriminator 1
 473 0021 6639DD   		cmpw	%bx, %bp
 474 0024 77EB     		ja	.L52
 577:src/mcu_msg.c **** }
 475              		.loc 1 577 0 is_stmt 1
 476 0026 5B       		popq	%rbx
 477              	.LCFI17:
 478              		.cfi_def_cfa_offset 24
 479              	.LVL57:
 480 0027 5D       		popq	%rbp
 481              	.LCFI18:
 482              		.cfi_def_cfa_offset 16
 483 0028 415C     		popq	%r12
 484              	.LCFI19:
 485              		.cfi_def_cfa_offset 8
 486 002a C3       		ret
 487              		.cfi_endproc
 488              	.LFE53:
 490              		.section	.text.__msg_print,"ax",@progbits
 492              	__msg_print:
 493              	.LFB54:
 578:src/mcu_msg.c **** 
 579:src/mcu_msg.c **** static void __msg_print(msg_t msg)
 580:src/mcu_msg.c **** {
 494              		.loc 1 580 0
 495              		.cfi_startproc
 496 0000 4883EC08 		subq	$8, %rsp
 497              	.LCFI20:
 498              		.cfi_def_cfa_offset 16
 581:src/mcu_msg.c ****     __msg_print_str(msg.content);
 499              		.loc 1 581 0
 500 0004 488B7C24 		movq	32(%rsp), %rdi
 500      20
 501 0009 488B7424 		movq	40(%rsp), %rsi
 501      28
 502 000e E8000000 		call	__msg_print_str
 502      00
 503              	.LVL58:
 582:src/mcu_msg.c **** }
 504              		.loc 1 582 0
 505 0013 4883C408 		addq	$8, %rsp
 506              	.LCFI21:
 507              		.cfi_def_cfa_offset 8
 508 0017 C3       		ret
 509              		.cfi_endproc
 510              	.LFE54:
 512              		.section	.text.__msg_wrapper_print_obj,"ax",@progbits
 514              	__msg_wrapper_print_obj:
 515              	.LFB57:
 583:src/mcu_msg.c **** 
GAS LISTING /tmp/ccd0pRUN.s 			page 21


 584:src/mcu_msg.c **** /**
 585:src/mcu_msg.c ****  * @brief Create string handler and set the basic functions
 586:src/mcu_msg.c ****  * 
 587:src/mcu_msg.c ****  * @param putc expected print function, set to NULL if you don't need the print feature
 588:src/mcu_msg.c ****  * @return msg_string_hnd_t handler
 589:src/mcu_msg.c ****  */
 590:src/mcu_msg.c **** msg_hnd_t msg_hnd_create(int (*putc)(char))
 591:src/mcu_msg.c **** {
 592:src/mcu_msg.c **** 
 593:src/mcu_msg.c ****     msg_hnd_t hnd;
 594:src/mcu_msg.c **** 
 595:src/mcu_msg.c ****     // init string buff
 596:src/mcu_msg.c ****     __str_buff.p = __str_buff.buff.s = NULL;
 597:src/mcu_msg.c ****     __str_buff.buff.len = 0;
 598:src/mcu_msg.c **** 
 599:src/mcu_msg.c ****     __putc = putc;            // init putchar
 600:src/mcu_msg.c **** 
 601:src/mcu_msg.c ****     //features
 602:src/mcu_msg.c ****     hnd.print_msg         = __msg_print;
 603:src/mcu_msg.c ****     hnd.print_str         = __msg_print_str;
 604:src/mcu_msg.c ****     hnd.print_int         = __msg_print_int;
 605:src/mcu_msg.c ****     hnd.print_float       = __msg_print_float;
 606:src/mcu_msg.c ****     hnd.enable_buff       = __msg_enable_buff;
 607:src/mcu_msg.c ****     hnd.disable_buff      = __msg_disable_buff;
 608:src/mcu_msg.c ****     hnd.init_str_buff     = __msg_init_str_buff;
 609:src/mcu_msg.c ****     hnd.reset_str_buff    = __msg_reset_str_buff;
 610:src/mcu_msg.c ****     hnd.print_wrapper_msg = __msg_wrapper_print_msg;
 611:src/mcu_msg.c ****     
 612:src/mcu_msg.c ****     return hnd;
 613:src/mcu_msg.c **** }
 614:src/mcu_msg.c **** 
 615:src/mcu_msg.c **** static inline char __define_qmark(msg_str_t str)
 616:src/mcu_msg.c **** {
 617:src/mcu_msg.c ****     char *p = str.s;
 618:src/mcu_msg.c ****     while(__is_p_in_str(str, p) && *p) {
 619:src/mcu_msg.c ****         switch(*p) {
 620:src/mcu_msg.c ****             case '"' :  return '\'';
 621:src/mcu_msg.c ****             case '\'' : return '"';
 622:src/mcu_msg.c ****             default: break;
 623:src/mcu_msg.c ****         }
 624:src/mcu_msg.c ****         p++;
 625:src/mcu_msg.c ****     }
 626:src/mcu_msg.c ****     return '"'; // default
 627:src/mcu_msg.c **** }
 628:src/mcu_msg.c **** 
 629:src/mcu_msg.c **** 
 630:src/mcu_msg.c **** /////////////////////////////////////////////////////////////////////////////////////////////
 631:src/mcu_msg.c **** //                                     Wrapper functions                                   //
 632:src/mcu_msg.c **** /////////////////////////////////////////////////////////////////////////////////////////////
 633:src/mcu_msg.c **** #if MCU_MSG_USE_WRAPPER
 634:src/mcu_msg.c **** 
 635:src/mcu_msg.c **** 
 636:src/mcu_msg.c **** #define __print_key_equ(key_str)        __msg_putc(__CTRL_KEY_FLAG); \
 637:src/mcu_msg.c ****                                         __msg_print_str(key_str);    \
 638:src/mcu_msg.c ****                                         __msg_putc(__CTRL_KEY_EQU)
 639:src/mcu_msg.c **** 
 640:src/mcu_msg.c **** #define __print_msg_start(msg)          __msg_putc(__CTRL_MSG_FLAG); \
GAS LISTING /tmp/ccd0pRUN.s 			page 22


 641:src/mcu_msg.c ****                                         __msg_print_str(msg.id);     \
 642:src/mcu_msg.c ****                                         __msg_putc(__CTRL_START_MSG)
 643:src/mcu_msg.c **** 
 644:src/mcu_msg.c **** 
 645:src/mcu_msg.c **** #define __print_obj_start(obj)          __msg_putc(__CTRL_OBJ_FLAG);  \
 646:src/mcu_msg.c ****                                         __msg_print_str(obj.id);      \
 647:src/mcu_msg.c ****                                         __msg_putc(__CTRL_START_OBJ)  
 648:src/mcu_msg.c **** 
 649:src/mcu_msg.c **** static void __msg_wrapper_print_obj(msg_wrap_obj_t obj)
 650:src/mcu_msg.c **** {
 516              		.loc 1 650 0
 517              		.cfi_startproc
 518 0000 4154     		pushq	%r12
 519              	.LCFI22:
 520              		.cfi_def_cfa_offset 16
 521              		.cfi_offset 12, -16
 522 0002 55       		pushq	%rbp
 523              	.LCFI23:
 524              		.cfi_def_cfa_offset 24
 525              		.cfi_offset 6, -24
 526 0003 53       		pushq	%rbx
 527              	.LCFI24:
 528              		.cfi_def_cfa_offset 32
 529              		.cfi_offset 3, -32
 651:src/mcu_msg.c ****     msg_wrap_str_t *sp;
 652:src/mcu_msg.c ****     msg_wrap_int_t *ip;
 653:src/mcu_msg.c ****     msg_wrap_float_t *fp;
 654:src/mcu_msg.c ****     char qmark;
 655:src/mcu_msg.c **** 
 656:src/mcu_msg.c ****     __print_obj_start(obj);
 530              		.loc 1 656 0
 531 0004 BF400000 		movl	$64, %edi
 531      00
 532 0009 E8000000 		call	__msg_putc
 532      00
 533              	.LVL59:
 534 000e 488B7C24 		movq	32(%rsp), %rdi
 534      20
 535 0013 488B7424 		movq	40(%rsp), %rsi
 535      28
 536 0018 E8000000 		call	__msg_print_str
 536      00
 537              	.LVL60:
 538 001d BF280000 		movl	$40, %edi
 538      00
 539 0022 E8000000 		call	__msg_putc
 539      00
 540              	.LVL61:
 657:src/mcu_msg.c ****     
 658:src/mcu_msg.c **** 
 659:src/mcu_msg.c ****     // print integers
 660:src/mcu_msg.c ****     
 661:src/mcu_msg.c ****     for(ip = obj.int_queue; ip != NULL; ip = ip->next) {
 541              		.loc 1 661 0
 542 0027 4C8B6424 		movq	48(%rsp), %r12
 542      30
 543              	.LVL62:
GAS LISTING /tmp/ccd0pRUN.s 			page 23


 544 002c 4C89E3   		movq	%r12, %rbx
 545 002f EB04     		jmp	.L57
 546              	.LVL63:
 547              	.L58:
 548              		.loc 1 661 0 is_stmt 0 discriminator 2
 549 0031 488B5B18 		movq	24(%rbx), %rbx
 550              	.LVL64:
 551              	.L57:
 552              		.loc 1 661 0 discriminator 1
 553 0035 4885DB   		testq	%rbx, %rbx
 554 0038 743B     		je	.L77
 662:src/mcu_msg.c ****         __print_key_equ(ip->id);
 555              		.loc 1 662 0 is_stmt 1
 556 003a BF240000 		movl	$36, %edi
 556      00
 557 003f E8000000 		call	__msg_putc
 557      00
 558              	.LVL65:
 559 0044 488B3B   		movq	(%rbx), %rdi
 560 0047 488B7308 		movq	8(%rbx), %rsi
 561 004b E8000000 		call	__msg_print_str
 561      00
 562              	.LVL66:
 563 0050 BF3D0000 		movl	$61, %edi
 563      00
 564 0055 E8000000 		call	__msg_putc
 564      00
 565              	.LVL67:
 663:src/mcu_msg.c ****         __msg_print_int(ip->val);
 566              		.loc 1 663 0
 567 005a 8B7B10   		movl	16(%rbx), %edi
 568 005d E8000000 		call	__msg_print_int
 568      00
 569              	.LVL68:
 664:src/mcu_msg.c ****         if(ip->next != NULL) __msg_putc(__CTRL_KEY_SEP);
 570              		.loc 1 664 0
 571 0062 48837B18 		cmpq	$0, 24(%rbx)
 571      00
 572 0067 74C8     		je	.L58
 573              		.loc 1 664 0 is_stmt 0 discriminator 1
 574 0069 BF3B0000 		movl	$59, %edi
 574      00
 575 006e E8000000 		call	__msg_putc
 575      00
 576              	.LVL69:
 577 0073 EBBC     		jmp	.L58
 578              	.L77:
 665:src/mcu_msg.c ****     }
 666:src/mcu_msg.c **** 
 667:src/mcu_msg.c ****     // print floats
 668:src/mcu_msg.c ****     if(obj.float_queue != NULL && obj.int_queue != NULL) __msg_putc(__CTRL_KEY_SEP);
 579              		.loc 1 668 0 is_stmt 1
 580 0075 488B6C24 		movq	56(%rsp), %rbp
 580      38
 581 007a 4885ED   		testq	%rbp, %rbp
 582 007d 740F     		je	.L60
 583              		.loc 1 668 0 is_stmt 0 discriminator 1
GAS LISTING /tmp/ccd0pRUN.s 			page 24


 584 007f 4D85E4   		testq	%r12, %r12
 585 0082 740A     		je	.L60
 586              		.loc 1 668 0 discriminator 2
 587 0084 BF3B0000 		movl	$59, %edi
 587      00
 588 0089 E8000000 		call	__msg_putc
 588      00
 589              	.LVL70:
 590              	.L60:
 661:src/mcu_msg.c ****         __print_key_equ(ip->id);
 591              		.loc 1 661 0 is_stmt 1 discriminator 1
 592 008e 4889EB   		movq	%rbp, %rbx
 593              	.LVL71:
 594 0091 EB04     		jmp	.L61
 595              	.LVL72:
 596              	.L62:
 669:src/mcu_msg.c ****     for(fp = obj.float_queue; fp != NULL; fp = fp->next) {
 597              		.loc 1 669 0 discriminator 2
 598 0093 488B5B18 		movq	24(%rbx), %rbx
 599              	.LVL73:
 600              	.L61:
 601              		.loc 1 669 0 is_stmt 0 discriminator 1
 602 0097 4885DB   		testq	%rbx, %rbx
 603 009a 7441     		je	.L78
 670:src/mcu_msg.c ****         __print_key_equ(fp->id);
 604              		.loc 1 670 0 is_stmt 1
 605 009c BF240000 		movl	$36, %edi
 605      00
 606 00a1 E8000000 		call	__msg_putc
 606      00
 607              	.LVL74:
 608 00a6 488B3B   		movq	(%rbx), %rdi
 609 00a9 488B7308 		movq	8(%rbx), %rsi
 610 00ad E8000000 		call	__msg_print_str
 610      00
 611              	.LVL75:
 612 00b2 BF3D0000 		movl	$61, %edi
 612      00
 613 00b7 E8000000 		call	__msg_putc
 613      00
 614              	.LVL76:
 671:src/mcu_msg.c ****         __msg_print_float(fp->val, fp->prec);
 615              		.loc 1 671 0
 616 00bc 0FB67B14 		movzbl	20(%rbx), %edi
 617 00c0 F30F1043 		movss	16(%rbx), %xmm0
 617      10
 618 00c5 E8000000 		call	__msg_print_float
 618      00
 619              	.LVL77:
 672:src/mcu_msg.c ****         if(fp->next != NULL) __msg_putc(__CTRL_KEY_SEP);
 620              		.loc 1 672 0
 621 00ca 48837B18 		cmpq	$0, 24(%rbx)
 621      00
 622 00cf 74C2     		je	.L62
 623              		.loc 1 672 0 is_stmt 0 discriminator 1
 624 00d1 BF3B0000 		movl	$59, %edi
 624      00
GAS LISTING /tmp/ccd0pRUN.s 			page 25


 625 00d6 E8000000 		call	__msg_putc
 625      00
 626              	.LVL78:
 627 00db EBB6     		jmp	.L62
 628              	.L78:
 673:src/mcu_msg.c ****     }
 674:src/mcu_msg.c ****     // print strings
 675:src/mcu_msg.c ****     if(obj.string_queue != NULL && obj.float_queue != NULL) __msg_putc(__CTRL_KEY_SEP);
 629              		.loc 1 675 0 is_stmt 1
 630 00dd 488B5C24 		movq	64(%rsp), %rbx
 630      40
 631              	.LVL79:
 632 00e2 4885DB   		testq	%rbx, %rbx
 633 00e5 744A     		je	.L65
 634              		.loc 1 675 0 is_stmt 0 discriminator 1
 635 00e7 4885ED   		testq	%rbp, %rbp
 636 00ea 7445     		je	.L65
 637              		.loc 1 675 0 discriminator 2
 638 00ec BF3B0000 		movl	$59, %edi
 638      00
 639 00f1 E8000000 		call	__msg_putc
 639      00
 640              	.LVL80:
 641 00f6 EB39     		jmp	.L65
 642              	.LVL81:
 643              	.L68:
 644              	.LBB54:
 645              	.LBB55:
 620:src/mcu_msg.c ****             case '\'' : return '"';
 646              		.loc 1 620 0 is_stmt 1
 647 00f8 BD270000 		movl	$39, %ebp
 647      00
 648              	.L69:
 649              	.LVL82:
 650              	.LBE55:
 651              	.LBE54:
 676:src/mcu_msg.c ****     for(sp = obj.string_queue; sp != NULL; sp = sp->next) {
 677:src/mcu_msg.c ****         __print_key_equ(sp->id);
 678:src/mcu_msg.c ****         qmark = __define_qmark(sp->content);
 679:src/mcu_msg.c ****         __msg_putc(qmark);
 652              		.loc 1 679 0
 653 00fd 400FBEED 		movsbl	%bpl, %ebp
 654 0101 89EF     		movl	%ebp, %edi
 655 0103 E8000000 		call	__msg_putc
 655      00
 656              	.LVL83:
 680:src/mcu_msg.c ****         __msg_print_str(sp->content);
 657              		.loc 1 680 0
 658 0108 488B7B10 		movq	16(%rbx), %rdi
 659 010c 488B7318 		movq	24(%rbx), %rsi
 660 0110 E8000000 		call	__msg_print_str
 660      00
 661              	.LVL84:
 681:src/mcu_msg.c ****         __msg_putc(qmark);
 662              		.loc 1 681 0
 663 0115 89EF     		movl	%ebp, %edi
 664 0117 E8000000 		call	__msg_putc
GAS LISTING /tmp/ccd0pRUN.s 			page 26


 664      00
 665              	.LVL85:
 682:src/mcu_msg.c ****         if(sp->next != NULL) __msg_putc(__CTRL_KEY_SEP);
 666              		.loc 1 682 0
 667 011c 48837B20 		cmpq	$0, 32(%rbx)
 667      00
 668 0121 740A     		je	.L71
 669              		.loc 1 682 0 is_stmt 0 discriminator 1
 670 0123 BF3B0000 		movl	$59, %edi
 670      00
 671 0128 E8000000 		call	__msg_putc
 671      00
 672              	.LVL86:
 673              	.L71:
 676:src/mcu_msg.c ****         __print_key_equ(sp->id);
 674              		.loc 1 676 0 is_stmt 1 discriminator 2
 675 012d 488B5B20 		movq	32(%rbx), %rbx
 676              	.LVL87:
 677              	.L65:
 676:src/mcu_msg.c ****         __print_key_equ(sp->id);
 678              		.loc 1 676 0 is_stmt 0 discriminator 1
 679 0131 4885DB   		testq	%rbx, %rbx
 680 0134 7470     		je	.L79
 677:src/mcu_msg.c ****         qmark = __define_qmark(sp->content);
 681              		.loc 1 677 0 is_stmt 1
 682 0136 BF240000 		movl	$36, %edi
 682      00
 683 013b E8000000 		call	__msg_putc
 683      00
 684              	.LVL88:
 685 0140 488B3B   		movq	(%rbx), %rdi
 686 0143 488B7308 		movq	8(%rbx), %rsi
 687 0147 E8000000 		call	__msg_print_str
 687      00
 688              	.LVL89:
 689 014c BF3D0000 		movl	$61, %edi
 689      00
 690 0151 E8000000 		call	__msg_putc
 690      00
 691              	.LVL90:
 692 0156 488B4B10 		movq	16(%rbx), %rcx
 693 015a 488B7B18 		movq	24(%rbx), %rdi
 694              	.LBB59:
 695              	.LBB58:
 617:src/mcu_msg.c ****     while(__is_p_in_str(str, p) && *p) {
 696              		.loc 1 617 0
 697 015e 4889CA   		movq	%rcx, %rdx
 698              	.LVL91:
 699              	.L66:
 700              	.LBB56:
 701              	.LBB57:
 188:src/mcu_msg.c **** }
 702              		.loc 1 188 0
 703 0161 4889D6   		movq	%rdx, %rsi
 704 0164 4829CE   		subq	%rcx, %rsi
 705 0167 0FB7C7   		movzwl	%di, %eax
 706              	.LVL92:
GAS LISTING /tmp/ccd0pRUN.s 			page 27


 707              	.LBE57:
 708              	.LBE56:
 618:src/mcu_msg.c ****         switch(*p) {
 709              		.loc 1 618 0
 710 016a 4839C6   		cmpq	%rax, %rsi
 711 016d 7D2D     		jge	.L74
 712 016f 0FB602   		movzbl	(%rdx), %eax
 713 0172 84C0     		testb	%al, %al
 714 0174 7412     		je	.L80
 619:src/mcu_msg.c ****             case '"' :  return '\'';
 715              		.loc 1 619 0
 716 0176 3C22     		cmpb	$34, %al
 717 0178 0F847AFF 		je	.L68
 717      FFFF
 718 017e 3C27     		cmpb	$39, %al
 719 0180 7410     		je	.L73
 624:src/mcu_msg.c ****     }
 720              		.loc 1 624 0
 721 0182 4883C201 		addq	$1, %rdx
 722              	.LVL93:
 723 0186 EBD9     		jmp	.L66
 724              	.L80:
 626:src/mcu_msg.c **** }
 725              		.loc 1 626 0
 726 0188 BD220000 		movl	$34, %ebp
 726      00
 727 018d E96BFFFF 		jmp	.L69
 727      FF
 728              	.L73:
 621:src/mcu_msg.c ****             default: break;
 729              		.loc 1 621 0
 730 0192 BD220000 		movl	$34, %ebp
 730      00
 731 0197 E961FFFF 		jmp	.L69
 731      FF
 732              	.L74:
 626:src/mcu_msg.c **** }
 733              		.loc 1 626 0
 734 019c BD220000 		movl	$34, %ebp
 734      00
 735 01a1 E957FFFF 		jmp	.L69
 735      FF
 736              	.LVL94:
 737              	.L79:
 738              	.LBE58:
 739              	.LBE59:
 683:src/mcu_msg.c ****     }
 684:src/mcu_msg.c **** 
 685:src/mcu_msg.c ****     __msg_putc(__CTRL_STOP_OBJ);
 740              		.loc 1 685 0
 741 01a6 BF290000 		movl	$41, %edi
 741      00
 742 01ab E8000000 		call	__msg_putc
 742      00
 743              	.LVL95:
 686:src/mcu_msg.c **** }
 744              		.loc 1 686 0
GAS LISTING /tmp/ccd0pRUN.s 			page 28


 745 01b0 5B       		popq	%rbx
 746              	.LCFI25:
 747              		.cfi_def_cfa_offset 24
 748              	.LVL96:
 749 01b1 5D       		popq	%rbp
 750              	.LCFI26:
 751              		.cfi_def_cfa_offset 16
 752 01b2 415C     		popq	%r12
 753              	.LCFI27:
 754              		.cfi_def_cfa_offset 8
 755 01b4 C3       		ret
 756              		.cfi_endproc
 757              	.LFE57:
 759              		.section	.text.__msg_wrapper_print_msg,"ax",@progbits
 761              	__msg_wrapper_print_msg:
 762              	.LFB59:
 687:src/mcu_msg.c **** 
 688:src/mcu_msg.c **** 
 689:src/mcu_msg.c **** 
 690:src/mcu_msg.c **** static inline void __msg_wrapper_print_cmd(msg_wrap_cmd_t cmd)
 691:src/mcu_msg.c **** {
 692:src/mcu_msg.c ****     if(cmd.cmd.s != NULL) {
 693:src/mcu_msg.c ****         __msg_putc(__CTRL_CMD_START_FLAG);
 694:src/mcu_msg.c ****         __msg_print_str(cmd.cmd);
 695:src/mcu_msg.c ****         __msg_putc(__CTRL_CMD_STOP_FLAG);
 696:src/mcu_msg.c ****     }
 697:src/mcu_msg.c **** }
 698:src/mcu_msg.c **** 
 699:src/mcu_msg.c **** 
 700:src/mcu_msg.c **** 
 701:src/mcu_msg.c **** static void __msg_wrapper_print_msg(msg_wrap_t msg)
 702:src/mcu_msg.c **** {
 763              		.loc 1 702 0
 764              		.cfi_startproc
 765 0000 53       		pushq	%rbx
 766              	.LCFI28:
 767              		.cfi_def_cfa_offset 16
 768              		.cfi_offset 3, -16
 769 0001 4883EC20 		subq	$32, %rsp
 770              	.LCFI29:
 771              		.cfi_def_cfa_offset 48
 703:src/mcu_msg.c ****     msg_wrap_obj_t *pobj;
 704:src/mcu_msg.c ****     msg_wrap_cmd_t *pcmd;
 705:src/mcu_msg.c **** 
 706:src/mcu_msg.c ****     if(!__msg_putc || msg.id.s == NULL) // return if putchar not implemented
 772              		.loc 1 706 0
 773 0005 48837C24 		cmpq	$0, 48(%rsp)
 773      3000
 774 000b 0F84AC00 		je	.L81
 774      0000
 707:src/mcu_msg.c ****         return;
 708:src/mcu_msg.c ****     __print_msg_start(msg);
 775              		.loc 1 708 0
 776 0011 BF230000 		movl	$35, %edi
 776      00
 777 0016 E8000000 		call	__msg_putc
 777      00
GAS LISTING /tmp/ccd0pRUN.s 			page 29


 778              	.LVL97:
 779 001b 488B7C24 		movq	48(%rsp), %rdi
 779      30
 780 0020 488B7424 		movq	56(%rsp), %rsi
 780      38
 781 0025 E8000000 		call	__msg_print_str
 781      00
 782              	.LVL98:
 783 002a BF7B0000 		movl	$123, %edi
 783      00
 784 002f E8000000 		call	__msg_putc
 784      00
 785              	.LVL99:
 709:src/mcu_msg.c ****     
 710:src/mcu_msg.c ****     pcmd = msg.cmd_queue;
 786              		.loc 1 710 0
 787 0034 488B5C24 		movq	72(%rsp), %rbx
 787      48
 788              	.LVL100:
 711:src/mcu_msg.c ****     while(pcmd != NULL) {
 789              		.loc 1 711 0
 790 0039 EB04     		jmp	.L83
 791              	.L84:
 712:src/mcu_msg.c ****         __msg_wrapper_print_cmd(*pcmd);
 713:src/mcu_msg.c ****         pcmd = pcmd->next;   
 792              		.loc 1 713 0
 793 003b 488B5B10 		movq	16(%rbx), %rbx
 794              	.LVL101:
 795              	.L83:
 711:src/mcu_msg.c ****     while(pcmd != NULL) {
 796              		.loc 1 711 0
 797 003f 4885DB   		testq	%rbx, %rbx
 798 0042 7445     		je	.L89
 799 0044 488B03   		movq	(%rbx), %rax
 800 0047 488B4B08 		movq	8(%rbx), %rcx
 801 004b 4889C2   		movq	%rax, %rdx
 802 004e 48890424 		movq	%rax, (%rsp)
 803 0052 48894C24 		movq	%rcx, 8(%rsp)
 803      08
 804 0057 488B4310 		movq	16(%rbx), %rax
 805 005b 48894424 		movq	%rax, 16(%rsp)
 805      10
 806              	.LBB62:
 807              	.LBB63:
 692:src/mcu_msg.c ****         __msg_putc(__CTRL_CMD_START_FLAG);
 808              		.loc 1 692 0
 809 0060 4885D2   		testq	%rdx, %rdx
 810 0063 74D6     		je	.L84
 693:src/mcu_msg.c ****         __msg_print_str(cmd.cmd);
 811              		.loc 1 693 0
 812 0065 BF3C0000 		movl	$60, %edi
 812      00
 813 006a E8000000 		call	__msg_putc
 813      00
 814              	.LVL102:
 694:src/mcu_msg.c ****         __msg_putc(__CTRL_CMD_STOP_FLAG);
 815              		.loc 1 694 0
GAS LISTING /tmp/ccd0pRUN.s 			page 30


 816 006f 488B3C24 		movq	(%rsp), %rdi
 817 0073 488B7424 		movq	8(%rsp), %rsi
 817      08
 818 0078 E8000000 		call	__msg_print_str
 818      00
 819              	.LVL103:
 695:src/mcu_msg.c ****     }
 820              		.loc 1 695 0
 821 007d BF3E0000 		movl	$62, %edi
 821      00
 822 0082 E8000000 		call	__msg_putc
 822      00
 823              	.LVL104:
 824 0087 EBB2     		jmp	.L84
 825              	.L89:
 826              	.LBE63:
 827              	.LBE62:
 714:src/mcu_msg.c ****     }
 715:src/mcu_msg.c ****     pobj = msg.obj_queue;
 828              		.loc 1 715 0
 829 0089 488B5C24 		movq	64(%rsp), %rbx
 829      40
 830              	.LVL105:
 716:src/mcu_msg.c ****     while(pobj != NULL) {
 831              		.loc 1 716 0
 832 008e EB1E     		jmp	.L86
 833              	.L87:
 717:src/mcu_msg.c ****         __msg_wrapper_print_obj(*pobj);
 834              		.loc 1 717 0
 835 0090 FF7328   		pushq	40(%rbx)
 836              	.LCFI30:
 837              		.cfi_def_cfa_offset 56
 838 0093 FF7320   		pushq	32(%rbx)
 839              	.LCFI31:
 840              		.cfi_def_cfa_offset 64
 841 0096 FF7318   		pushq	24(%rbx)
 842              	.LCFI32:
 843              		.cfi_def_cfa_offset 72
 844 0099 FF7310   		pushq	16(%rbx)
 845              	.LCFI33:
 846              		.cfi_def_cfa_offset 80
 847 009c FF7308   		pushq	8(%rbx)
 848              	.LCFI34:
 849              		.cfi_def_cfa_offset 88
 850 009f FF33     		pushq	(%rbx)
 851              	.LCFI35:
 852              		.cfi_def_cfa_offset 96
 853 00a1 E8000000 		call	__msg_wrapper_print_obj
 853      00
 854              	.LVL106:
 718:src/mcu_msg.c ****         pobj = pobj->next;  
 855              		.loc 1 718 0
 856 00a6 488B5B28 		movq	40(%rbx), %rbx
 857              	.LVL107:
 858 00aa 4883C430 		addq	$48, %rsp
 859              	.LCFI36:
 860              		.cfi_def_cfa_offset 48
GAS LISTING /tmp/ccd0pRUN.s 			page 31


 861              	.L86:
 716:src/mcu_msg.c ****     while(pobj != NULL) {
 862              		.loc 1 716 0
 863 00ae 4885DB   		testq	%rbx, %rbx
 864 00b1 75DD     		jne	.L87
 719:src/mcu_msg.c ****     }
 720:src/mcu_msg.c ****     __msg_putc(__CTRL_STOP_MSG);
 865              		.loc 1 720 0
 866 00b3 BF7D0000 		movl	$125, %edi
 866      00
 867 00b8 E8000000 		call	__msg_putc
 867      00
 868              	.LVL108:
 869              	.L81:
 721:src/mcu_msg.c **** }
 870              		.loc 1 721 0
 871 00bd 4883C420 		addq	$32, %rsp
 872              	.LCFI37:
 873              		.cfi_def_cfa_offset 16
 874 00c1 5B       		popq	%rbx
 875              	.LCFI38:
 876              		.cfi_def_cfa_offset 8
 877 00c2 C3       		ret
 878              		.cfi_endproc
 879              	.LFE59:
 881              		.section	.text.msg_destroy_string,"ax",@progbits
 882              		.globl	msg_destroy_string
 884              	msg_destroy_string:
 885              	.LFB27:
  74:src/mcu_msg.c ****     str->s = NULL;
 886              		.loc 1 74 0
 887              		.cfi_startproc
 888              	.LVL109:
  75:src/mcu_msg.c ****     str->len = 0;
 889              		.loc 1 75 0
 890 0000 48C70700 		movq	$0, (%rdi)
 890      000000
  76:src/mcu_msg.c **** }
 891              		.loc 1 76 0
 892 0007 66C74708 		movw	$0, 8(%rdi)
 892      0000
  77:src/mcu_msg.c **** 
 893              		.loc 1 77 0
 894 000d C3       		ret
 895              		.cfi_endproc
 896              	.LFE27:
 898              		.section	.text.__find_keyword,"ax",@progbits
 900              	__find_keyword:
 901              	.LFB37:
 220:src/mcu_msg.c **** 
 902              		.loc 1 220 0
 903              		.cfi_startproc
 904              	.LVL110:
 905 0000 4157     		pushq	%r15
 906              	.LCFI39:
 907              		.cfi_def_cfa_offset 16
 908              		.cfi_offset 15, -16
GAS LISTING /tmp/ccd0pRUN.s 			page 32


 909 0002 4156     		pushq	%r14
 910              	.LCFI40:
 911              		.cfi_def_cfa_offset 24
 912              		.cfi_offset 14, -24
 913 0004 4155     		pushq	%r13
 914              	.LCFI41:
 915              		.cfi_def_cfa_offset 32
 916              		.cfi_offset 13, -32
 917 0006 4154     		pushq	%r12
 918              	.LCFI42:
 919              		.cfi_def_cfa_offset 40
 920              		.cfi_offset 12, -40
 921 0008 55       		pushq	%rbp
 922              	.LCFI43:
 923              		.cfi_def_cfa_offset 48
 924              		.cfi_offset 6, -48
 925 0009 53       		pushq	%rbx
 926              	.LCFI44:
 927              		.cfi_def_cfa_offset 56
 928              		.cfi_offset 3, -56
 929 000a 4883EC38 		subq	$56, %rsp
 930              	.LCFI45:
 931              		.cfi_def_cfa_offset 112
 932 000e 4989FC   		movq	%rdi, %r12
 933 0011 4889F5   		movq	%rsi, %rbp
 934 0014 4989D6   		movq	%rdx, %r14
 935 0017 4189CF   		movl	%ecx, %r15d
 936 001a 44884424 		movb	%r8b, 15(%rsp)
 936      0F
 220:src/mcu_msg.c **** 
 937              		.loc 1 220 0
 938 001f 64488B04 		movq	%fs:40, %rax
 938      25280000 
 938      00
 939 0028 48894424 		movq	%rax, 40(%rsp)
 939      28
 940 002d 31C0     		xorl	%eax, %eax
 223:src/mcu_msg.c ****     uint8_t equal;
 941              		.loc 1 223 0
 942 002f 4889FB   		movq	%rdi, %rbx
 943              	.LVL111:
 226:src/mcu_msg.c ****     while(__is_p_in_str(str, p) && *p) {
 944              		.loc 1 226 0
 945 0032 4889D7   		movq	%rdx, %rdi
 946              	.LVL112:
 947 0035 E8000000 		call	__str_len
 947      00
 948              	.LVL113:
 949 003a 4189C5   		movl	%eax, %r13d
 950 003d 66894424 		movw	%ax, 24(%rsp)
 950      18
 227:src/mcu_msg.c ****         if(*p == '\'' || *p == '"') { //skip internal strings
 951              		.loc 1 227 0
 952 0042 E9D50000 		jmp	.L92
 952      00
 953              	.L115:
 229:src/mcu_msg.c ****         }
GAS LISTING /tmp/ccd0pRUN.s 			page 33


 954              		.loc 1 229 0
 955 0047 4889DF   		movq	%rbx, %rdi
 956 004a E8000000 		call	__skip_internal_str
 956      00
 957              	.LVL114:
 958 004f 4889C3   		movq	%rax, %rbx
 959              	.LVL115:
 960 0052 E9EC0000 		jmp	.L93
 960      00
 961              	.LVL116:
 962              	.L97:
 236:src/mcu_msg.c ****                     equal = 0;
 963              		.loc 1 236 0
 964 0057 8D4A9F   		leal	-97(%rdx), %ecx
 965 005a 80F919   		cmpb	$25, %cl
 966 005d 400F97C7 		seta	%dil
 967 0061 80FA5F   		cmpb	$95, %dl
 968 0064 0F95C1   		setne	%cl
 235:src/mcu_msg.c ****                                     !is_valid_keyword_char(*(res.s + i))) {
 969              		.loc 1 235 0
 970 0067 4084CF   		testb	%cl, %dil
 971 006a 7410     		je	.L99
 236:src/mcu_msg.c ****                     equal = 0;
 972              		.loc 1 236 0
 973 006c 8D4ABF   		leal	-65(%rdx), %ecx
 974 006f 80F919   		cmpb	$25, %cl
 975 0072 7608     		jbe	.L99
 236:src/mcu_msg.c ****                     equal = 0;
 976              		.loc 1 236 0 is_stmt 0 discriminator 1
 977 0074 83EA30   		subl	$48, %edx
 978 0077 80FA09   		cmpb	$9, %dl
 979 007a 7757     		ja	.L110
 980              	.L99:
 234:src/mcu_msg.c ****                 if((*(res.s + i) != *(keyword + i)) || __is_ctrl_char(*(res.s + i)) || 
 981              		.loc 1 234 0 is_stmt 1 discriminator 2
 982 007c 83C001   		addl	$1, %eax
 983              	.LVL117:
 984              	.L95:
 234:src/mcu_msg.c ****                 if((*(res.s + i) != *(keyword + i)) || __is_ctrl_char(*(res.s + i)) || 
 985              		.loc 1 234 0 is_stmt 0 discriminator 1
 986 007f 0FB7C8   		movzwl	%ax, %ecx
 987 0082 488D140E 		leaq	(%rsi,%rcx), %rdx
 988              	.LVL118:
 989              	.LBB64:
 990              	.LBB65:
 188:src/mcu_msg.c **** }
 991              		.loc 1 188 0 is_stmt 1 discriminator 1
 992 0086 4989D0   		movq	%rdx, %r8
 993 0089 4D29E0   		subq	%r12, %r8
 994 008c 0FB7FD   		movzwl	%bp, %edi
 995              	.LVL119:
 996              	.LBE65:
 997              	.LBE64:
 234:src/mcu_msg.c ****                 if((*(res.s + i) != *(keyword + i)) || __is_ctrl_char(*(res.s + i)) || 
 998              		.loc 1 234 0 discriminator 1
 999 008f 4939F8   		cmpq	%rdi, %r8
 1000 0092 7D46     		jge	.L111
GAS LISTING /tmp/ccd0pRUN.s 			page 34


 234:src/mcu_msg.c ****                 if((*(res.s + i) != *(keyword + i)) || __is_ctrl_char(*(res.s + i)) || 
 1001              		.loc 1 234 0 is_stmt 0 discriminator 3
 1002 0094 664139C5 		cmpw	%ax, %r13w
 1003 0098 7624     		jbe	.L113
 235:src/mcu_msg.c ****                                     !is_valid_keyword_char(*(res.s + i))) {
 1004              		.loc 1 235 0 is_stmt 1
 1005 009a 0FB612   		movzbl	(%rdx), %edx
 1006 009d 413A140E 		cmpb	(%r14,%rcx), %dl
 1007 00a1 7522     		jne	.L108
 1008              	.LVL120:
 1009              	.LBB66:
 1010              	.LBB67:
 116:src/mcu_msg.c ****         case __CTRL_MSG_FLAG:
 1011              		.loc 1 116 0 discriminator 1
 1012 00a3 8D4ADD   		leal	-35(%rdx), %ecx
 1013 00a6 80F95A   		cmpb	$90, %cl
 1014 00a9 77AC     		ja	.L97
 1015 00ab 0FB6C9   		movzbl	%cl, %ecx
 1016 00ae 488D3D00 		leaq	.L98(%rip), %rdi
 1016      000000
 1017 00b5 48630C8F 		movslq	(%rdi,%rcx,4), %rcx
 1018 00b9 4801F9   		addq	%rdi, %rcx
 1019 00bc FFE1     		jmp	*%rcx
 1020              		.section	.rodata.__find_keyword,"a",@progbits
 1021              		.align 4
 1022              		.align 4
 1023              	.L98:
 1024 0000 00000000 		.long	.L109-.L98
 1025 0004 00000000 		.long	.L109-.L98
 1026 0008 00000000 		.long	.L97-.L98
 1027 000c 00000000 		.long	.L97-.L98
 1028 0010 00000000 		.long	.L97-.L98
 1029 0014 00000000 		.long	.L109-.L98
 1030 0018 00000000 		.long	.L109-.L98
 1031 001c 00000000 		.long	.L97-.L98
 1032 0020 00000000 		.long	.L97-.L98
 1033 0024 00000000 		.long	.L97-.L98
 1034 0028 00000000 		.long	.L97-.L98
 1035 002c 00000000 		.long	.L97-.L98
 1036 0030 00000000 		.long	.L97-.L98
 1037 0034 00000000 		.long	.L97-.L98
 1038 0038 00000000 		.long	.L97-.L98
 1039 003c 00000000 		.long	.L97-.L98
 1040 0040 00000000 		.long	.L97-.L98
 1041 0044 00000000 		.long	.L97-.L98
 1042 0048 00000000 		.long	.L97-.L98
 1043 004c 00000000 		.long	.L97-.L98
 1044 0050 00000000 		.long	.L97-.L98
 1045 0054 00000000 		.long	.L97-.L98
 1046 0058 00000000 		.long	.L97-.L98
 1047 005c 00000000 		.long	.L97-.L98
 1048 0060 00000000 		.long	.L109-.L98
 1049 0064 00000000 		.long	.L109-.L98
 1050 0068 00000000 		.long	.L109-.L98
 1051 006c 00000000 		.long	.L109-.L98
 1052 0070 00000000 		.long	.L97-.L98
 1053 0074 00000000 		.long	.L109-.L98
GAS LISTING /tmp/ccd0pRUN.s 			page 35


 1054 0078 00000000 		.long	.L97-.L98
 1055 007c 00000000 		.long	.L97-.L98
 1056 0080 00000000 		.long	.L97-.L98
 1057 0084 00000000 		.long	.L97-.L98
 1058 0088 00000000 		.long	.L97-.L98
 1059 008c 00000000 		.long	.L97-.L98
 1060 0090 00000000 		.long	.L97-.L98
 1061 0094 00000000 		.long	.L97-.L98
 1062 0098 00000000 		.long	.L97-.L98
 1063 009c 00000000 		.long	.L97-.L98
 1064 00a0 00000000 		.long	.L97-.L98
 1065 00a4 00000000 		.long	.L97-.L98
 1066 00a8 00000000 		.long	.L97-.L98
 1067 00ac 00000000 		.long	.L97-.L98
 1068 00b0 00000000 		.long	.L97-.L98
 1069 00b4 00000000 		.long	.L97-.L98
 1070 00b8 00000000 		.long	.L97-.L98
 1071 00bc 00000000 		.long	.L97-.L98
 1072 00c0 00000000 		.long	.L97-.L98
 1073 00c4 00000000 		.long	.L97-.L98
 1074 00c8 00000000 		.long	.L97-.L98
 1075 00cc 00000000 		.long	.L97-.L98
 1076 00d0 00000000 		.long	.L97-.L98
 1077 00d4 00000000 		.long	.L97-.L98
 1078 00d8 00000000 		.long	.L97-.L98
 1079 00dc 00000000 		.long	.L97-.L98
 1080 00e0 00000000 		.long	.L97-.L98
 1081 00e4 00000000 		.long	.L97-.L98
 1082 00e8 00000000 		.long	.L97-.L98
 1083 00ec 00000000 		.long	.L97-.L98
 1084 00f0 00000000 		.long	.L97-.L98
 1085 00f4 00000000 		.long	.L97-.L98
 1086 00f8 00000000 		.long	.L97-.L98
 1087 00fc 00000000 		.long	.L97-.L98
 1088 0100 00000000 		.long	.L97-.L98
 1089 0104 00000000 		.long	.L97-.L98
 1090 0108 00000000 		.long	.L97-.L98
 1091 010c 00000000 		.long	.L97-.L98
 1092 0110 00000000 		.long	.L97-.L98
 1093 0114 00000000 		.long	.L97-.L98
 1094 0118 00000000 		.long	.L97-.L98
 1095 011c 00000000 		.long	.L97-.L98
 1096 0120 00000000 		.long	.L97-.L98
 1097 0124 00000000 		.long	.L97-.L98
 1098 0128 00000000 		.long	.L97-.L98
 1099 012c 00000000 		.long	.L97-.L98
 1100 0130 00000000 		.long	.L97-.L98
 1101 0134 00000000 		.long	.L97-.L98
 1102 0138 00000000 		.long	.L97-.L98
 1103 013c 00000000 		.long	.L97-.L98
 1104 0140 00000000 		.long	.L97-.L98
 1105 0144 00000000 		.long	.L97-.L98
 1106 0148 00000000 		.long	.L97-.L98
 1107 014c 00000000 		.long	.L97-.L98
 1108 0150 00000000 		.long	.L97-.L98
 1109 0154 00000000 		.long	.L97-.L98
 1110 0158 00000000 		.long	.L97-.L98
GAS LISTING /tmp/ccd0pRUN.s 			page 36


 1111 015c 00000000 		.long	.L97-.L98
 1112 0160 00000000 		.long	.L109-.L98
 1113 0164 00000000 		.long	.L97-.L98
 1114 0168 00000000 		.long	.L109-.L98
 1115              		.section	.text.__find_keyword
 1116              	.LVL121:
 1117              	.L113:
 1118              	.LBE67:
 1119              	.LBE66:
 233:src/mcu_msg.c ****             for(i = 0; __is_p_in_str(str, res.s + i) && i < res.len; i++) { // if not equal during 
 1120              		.loc 1 233 0
 1121 00be BF010000 		movl	$1, %edi
 1121      00
 1122 00c3 EB1F     		jmp	.L103
 1123              	.L108:
 237:src/mcu_msg.c ****                     break;
 1124              		.loc 1 237 0
 1125 00c5 BF000000 		movl	$0, %edi
 1125      00
 1126 00ca EB18     		jmp	.L103
 1127              	.LVL122:
 1128              	.L109:
 1129 00cc BF000000 		movl	$0, %edi
 1129      00
 1130 00d1 EB11     		jmp	.L103
 1131              	.LVL123:
 1132              	.L110:
 1133 00d3 BF000000 		movl	$0, %edi
 1133      00
 1134 00d8 EB0A     		jmp	.L103
 1135              	.L111:
 233:src/mcu_msg.c ****             for(i = 0; __is_p_in_str(str, res.s + i) && i < res.len; i++) { // if not equal during 
 1136              		.loc 1 233 0
 1137 00da BF010000 		movl	$1, %edi
 1137      00
 1138 00df EB03     		jmp	.L103
 1139              	.LVL124:
 1140              	.L102:
 241:src/mcu_msg.c ****             if(equal && *(res.s + i) == stopc) { //if the stop char is the next, whitout spaces, re
 1141              		.loc 1 241 0
 1142 00e1 83C001   		addl	$1, %eax
 1143              	.LVL125:
 1144              	.L103:
 241:src/mcu_msg.c ****             if(equal && *(res.s + i) == stopc) { //if the stop char is the next, whitout spaces, re
 1145              		.loc 1 241 0 is_stmt 0 discriminator 1
 1146 00e4 0FB7D8   		movzwl	%ax, %ebx
 1147 00e7 4801F3   		addq	%rsi, %rbx
 1148              	.LVL126:
 1149              	.LBB68:
 1150              	.LBB69:
 188:src/mcu_msg.c **** }
 1151              		.loc 1 188 0 is_stmt 1 discriminator 1
 1152 00ea 4889D9   		movq	%rbx, %rcx
 1153 00ed 4C29E1   		subq	%r12, %rcx
 1154 00f0 0FB7D5   		movzwl	%bp, %edx
 1155              	.LVL127:
 1156              	.LBE69:
GAS LISTING /tmp/ccd0pRUN.s 			page 37


 1157              	.LBE68:
 241:src/mcu_msg.c ****             if(equal && *(res.s + i) == stopc) { //if the stop char is the next, whitout spaces, re
 1158              		.loc 1 241 0 discriminator 1
 1159 00f3 4839D1   		cmpq	%rdx, %rcx
 1160 00f6 7D12     		jge	.L101
 241:src/mcu_msg.c ****             if(equal && *(res.s + i) == stopc) { //if the stop char is the next, whitout spaces, re
 1161              		.loc 1 241 0 is_stmt 0 discriminator 2
 1162 00f8 0FB613   		movzbl	(%rbx), %edx
 1163              	.LVL128:
 1164              	.LBB70:
 1165              	.LBB71:
 142:src/mcu_msg.c ****         case  ' ':
 1166              		.loc 1 142 0 is_stmt 1 discriminator 2
 1167 00fb 80FA09   		cmpb	$9, %dl
 1168 00fe 7C0A     		jl	.L101
 1169 0100 80FA0D   		cmpb	$13, %dl
 1170 0103 7EDC     		jle	.L102
 1171 0105 80FA20   		cmpb	$32, %dl
 1172 0108 74D7     		je	.L102
 1173              	.LVL129:
 1174              	.L101:
 1175              	.LBE71:
 1176              	.LBE70:
 242:src/mcu_msg.c ****                 return res;
 1177              		.loc 1 242 0
 1178 010a 4084FF   		testb	%dil, %dil
 1179 010d 7409     		je	.L94
 242:src/mcu_msg.c ****                 return res;
 1180              		.loc 1 242 0 is_stmt 0 discriminator 1
 1181 010f 0FB64424 		movzbl	15(%rsp), %eax
 1181      0F
 1182              	.LVL130:
 1183 0114 3803     		cmpb	%al, (%rbx)
 1184 0116 7451     		je	.L114
 1185              	.LVL131:
 1186              	.L94:
 248:src/mcu_msg.c ****     }
 1187              		.loc 1 248 0 is_stmt 1
 1188 0118 4883C301 		addq	$1, %rbx
 1189              	.LVL132:
 1190              	.L92:
 1191              	.LBB72:
 1192              	.LBB73:
 188:src/mcu_msg.c **** }
 1193              		.loc 1 188 0
 1194 011c 4889DA   		movq	%rbx, %rdx
 1195 011f 4C29E2   		subq	%r12, %rdx
 1196 0122 0FB7C5   		movzwl	%bp, %eax
 1197              	.LVL133:
 1198              	.LBE73:
 1199              	.LBE72:
 227:src/mcu_msg.c ****         if(*p == '\'' || *p == '"') { //skip internal strings
 1200              		.loc 1 227 0
 1201 0125 4839C2   		cmpq	%rax, %rdx
 1202 0128 7D4B     		jge	.L105
 227:src/mcu_msg.c ****         if(*p == '\'' || *p == '"') { //skip internal strings
 1203              		.loc 1 227 0 is_stmt 0 discriminator 1
GAS LISTING /tmp/ccd0pRUN.s 			page 38


 1204 012a 0FB603   		movzbl	(%rbx), %eax
 1205 012d 84C0     		testb	%al, %al
 1206 012f 7444     		je	.L105
 228:src/mcu_msg.c ****             p = __skip_internal_str(p);
 1207              		.loc 1 228 0 is_stmt 1
 1208 0131 3C27     		cmpb	$39, %al
 1209 0133 0F94C2   		sete	%dl
 1210 0136 3C22     		cmpb	$34, %al
 1211 0138 0F94C0   		sete	%al
 1212 013b 08C2     		orb	%al, %dl
 1213 013d 0F8504FF 		jne	.L115
 1213      FFFF
 1214              	.L93:
 1215              	.LVL134:
 1216              	.LBB74:
 1217              	.LBB75:
 188:src/mcu_msg.c **** }
 1218              		.loc 1 188 0
 1219 0143 4889D8   		movq	%rbx, %rax
 1220 0146 4C29E0   		subq	%r12, %rax
 1221 0149 0FB7D5   		movzwl	%bp, %edx
 1222              	.LVL135:
 1223              	.LBE75:
 1224              	.LBE74:
 231:src/mcu_msg.c ****             res.s = p + 1;
 1225              		.loc 1 231 0
 1226 014c 4839C2   		cmpq	%rax, %rdx
 1227 014f 7EC7     		jle	.L94
 231:src/mcu_msg.c ****             res.s = p + 1;
 1228              		.loc 1 231 0 is_stmt 0 discriminator 1
 1229 0151 44383B   		cmpb	%r15b, (%rbx)
 1230 0154 75C2     		jne	.L94
 232:src/mcu_msg.c ****             equal = 1;
 1231              		.loc 1 232 0 is_stmt 1
 1232 0156 488D7301 		leaq	1(%rbx), %rsi
 1233 015a 48897424 		movq	%rsi, 16(%rsp)
 1233      10
 1234              	.LVL136:
 234:src/mcu_msg.c ****                 if((*(res.s + i) != *(keyword + i)) || __is_ctrl_char(*(res.s + i)) || 
 1235              		.loc 1 234 0
 1236 015f B8000000 		movl	$0, %eax
 1236      00
 1237 0164 E916FFFF 		jmp	.L95
 1237      FF
 1238              	.LVL137:
 1239              	.L114:
 243:src/mcu_msg.c ****             } else {
 1240              		.loc 1 243 0
 1241 0169 488B4424 		movq	16(%rsp), %rax
 1241      10
 1242 016e 488B5424 		movq	24(%rsp), %rdx
 1242      18
 1243 0173 EB14     		jmp	.L104
 1244              	.LVL138:
 1245              	.L105:
 251:src/mcu_msg.c ****     return res;
 1246              		.loc 1 251 0
GAS LISTING /tmp/ccd0pRUN.s 			page 39


 1247 0175 488D7C24 		leaq	16(%rsp), %rdi
 1247      10
 1248 017a E8000000 		call	msg_destroy_string
 1248      00
 1249              	.LVL139:
 252:src/mcu_msg.c **** }
 1250              		.loc 1 252 0
 1251 017f 488B4424 		movq	16(%rsp), %rax
 1251      10
 1252 0184 488B5424 		movq	24(%rsp), %rdx
 1252      18
 1253              	.LVL140:
 1254              	.L104:
 253:src/mcu_msg.c **** 
 1255              		.loc 1 253 0
 1256 0189 488B7424 		movq	40(%rsp), %rsi
 1256      28
 1257 018e 64483334 		xorq	%fs:40, %rsi
 1257      25280000 
 1257      00
 1258 0197 750F     		jne	.L116
 1259 0199 4883C438 		addq	$56, %rsp
 1260              	.LCFI46:
 1261              		.cfi_remember_state
 1262              		.cfi_def_cfa_offset 56
 1263 019d 5B       		popq	%rbx
 1264              	.LCFI47:
 1265              		.cfi_def_cfa_offset 48
 1266 019e 5D       		popq	%rbp
 1267              	.LCFI48:
 1268              		.cfi_def_cfa_offset 40
 1269              	.LVL141:
 1270 019f 415C     		popq	%r12
 1271              	.LCFI49:
 1272              		.cfi_def_cfa_offset 32
 1273 01a1 415D     		popq	%r13
 1274              	.LCFI50:
 1275              		.cfi_def_cfa_offset 24
 1276 01a3 415E     		popq	%r14
 1277              	.LCFI51:
 1278              		.cfi_def_cfa_offset 16
 1279              	.LVL142:
 1280 01a5 415F     		popq	%r15
 1281              	.LCFI52:
 1282              		.cfi_def_cfa_offset 8
 1283              	.LVL143:
 1284 01a7 C3       		ret
 1285              	.LVL144:
 1286              	.L116:
 1287              	.LCFI53:
 1288              		.cfi_restore_state
 1289 01a8 E8000000 		call	__stack_chk_fail@PLT
 1289      00
 1290              	.LVL145:
 1291              		.cfi_endproc
 1292              	.LFE37:
 1294              		.section	.text.__find_val,"ax",@progbits
GAS LISTING /tmp/ccd0pRUN.s 			page 40


 1296              	__find_val:
 1297              	.LFB38:
 265:src/mcu_msg.c ****     msg_str_t res  = __find_keyword(obj.content, key, __CTRL_KEY_FLAG, __CTRL_KEY_EQU); //object st
 1298              		.loc 1 265 0
 1299              		.cfi_startproc
 1300              	.LVL146:
 1301 0000 4883EC28 		subq	$40, %rsp
 1302              	.LCFI54:
 1303              		.cfi_def_cfa_offset 48
 1304 0004 4889FA   		movq	%rdi, %rdx
 265:src/mcu_msg.c ****     msg_str_t res  = __find_keyword(obj.content, key, __CTRL_KEY_FLAG, __CTRL_KEY_EQU); //object st
 1305              		.loc 1 265 0
 1306 0007 64488B04 		movq	%fs:40, %rax
 1306      25280000 
 1306      00
 1307 0010 48894424 		movq	%rax, 24(%rsp)
 1307      18
 1308 0015 31C0     		xorl	%eax, %eax
 266:src/mcu_msg.c ****     char *p;
 1309              		.loc 1 266 0
 1310 0017 41B83D00 		movl	$61, %r8d
 1310      0000
 1311 001d B9240000 		movl	$36, %ecx
 1311      00
 1312 0022 488B7C24 		movq	64(%rsp), %rdi
 1312      40
 1313              	.LVL147:
 1314 0027 488B7424 		movq	72(%rsp), %rsi
 1314      48
 1315 002c E8000000 		call	__find_keyword
 1315      00
 1316              	.LVL148:
 1317 0031 48890424 		movq	%rax, (%rsp)
 1318 0035 48895424 		movq	%rdx, 8(%rsp)
 1318      08
 268:src/mcu_msg.c ****         msg_destroy_string(&res);
 1319              		.loc 1 268 0
 1320 003a 4885C0   		testq	%rax, %rax
 1321 003d 7413     		je	.L133
 272:src/mcu_msg.c ****         while(__is_p_in_str(obj.content, res.s + 1) && *res.s != __CTRL_KEY_EQU) res.s++;
 1322              		.loc 1 272 0
 1323 003f 80383D   		cmpb	$61, (%rax)
 1324 0042 7528     		jne	.L120
 1325              	.L121:
 275:src/mcu_msg.c ****     while(__is_p_in_str(obj.content, res.s) && __is_whitespace(*res.s)) res.s++; //skip spaces afte
 1326              		.loc 1 275 0
 1327 0044 488B0424 		movq	(%rsp), %rax
 1328 0048 4883C001 		addq	$1, %rax
 1329 004c 48890424 		movq	%rax, (%rsp)
 276:src/mcu_msg.c **** 
 1330              		.loc 1 276 0
 1331 0050 EB43     		jmp	.L125
 1332              	.L133:
 269:src/mcu_msg.c ****         return res;
 1333              		.loc 1 269 0
 1334 0052 4889E7   		movq	%rsp, %rdi
 1335 0055 E8000000 		call	msg_destroy_string
GAS LISTING /tmp/ccd0pRUN.s 			page 41


 1335      00
 1336              	.LVL149:
 270:src/mcu_msg.c ****     }
 1337              		.loc 1 270 0
 1338 005a 488B0424 		movq	(%rsp), %rax
 1339 005e 488B5424 		movq	8(%rsp), %rdx
 1339      08
 1340 0063 E9B10000 		jmp	.L119
 1340      00
 1341              	.L122:
 273:src/mcu_msg.c ****     }
 1342              		.loc 1 273 0 discriminator 3
 1343 0068 48891424 		movq	%rdx, (%rsp)
 1344              	.L120:
 273:src/mcu_msg.c ****     }
 1345              		.loc 1 273 0 is_stmt 0 discriminator 1
 1346 006c 488B0424 		movq	(%rsp), %rax
 1347 0070 488D5001 		leaq	1(%rax), %rdx
 1348              	.LVL150:
 1349              	.LBB76:
 1350              	.LBB77:
 188:src/mcu_msg.c **** }
 1351              		.loc 1 188 0 is_stmt 1 discriminator 1
 1352 0074 4889D1   		movq	%rdx, %rcx
 1353 0077 482B4C24 		subq	64(%rsp), %rcx
 1353      40
 1354 007c 0FB77424 		movzwl	72(%rsp), %esi
 1354      48
 1355              	.LVL151:
 1356              	.LBE77:
 1357              	.LBE76:
 273:src/mcu_msg.c ****     }
 1358              		.loc 1 273 0 discriminator 1
 1359 0081 4839CE   		cmpq	%rcx, %rsi
 1360 0084 7EBE     		jle	.L121
 273:src/mcu_msg.c ****     }
 1361              		.loc 1 273 0 is_stmt 0 discriminator 2
 1362 0086 80383D   		cmpb	$61, (%rax)
 1363 0089 75DD     		jne	.L122
 1364 008b EBB7     		jmp	.L121
 1365              	.LVL152:
 1366              	.L124:
 276:src/mcu_msg.c **** 
 1367              		.loc 1 276 0 is_stmt 1
 1368 008d 4883C001 		addq	$1, %rax
 1369 0091 48890424 		movq	%rax, (%rsp)
 1370              	.L125:
 276:src/mcu_msg.c **** 
 1371              		.loc 1 276 0 is_stmt 0 discriminator 1
 1372 0095 488B0424 		movq	(%rsp), %rax
 1373              	.LVL153:
 1374              	.LBB78:
 1375              	.LBB79:
 188:src/mcu_msg.c **** }
 1376              		.loc 1 188 0 is_stmt 1 discriminator 1
 1377 0099 4889C7   		movq	%rax, %rdi
 1378 009c 4889C1   		movq	%rax, %rcx
GAS LISTING /tmp/ccd0pRUN.s 			page 42


 1379 009f 482B4C24 		subq	64(%rsp), %rcx
 1379      40
 1380 00a4 0FB75424 		movzwl	72(%rsp), %edx
 1380      48
 1381              	.LVL154:
 1382              	.LBE79:
 1383              	.LBE78:
 276:src/mcu_msg.c **** 
 1384              		.loc 1 276 0 discriminator 1
 1385 00a9 4839D1   		cmpq	%rdx, %rcx
 1386 00ac 7D18     		jge	.L130
 276:src/mcu_msg.c **** 
 1387              		.loc 1 276 0 is_stmt 0 discriminator 2
 1388 00ae 0FB610   		movzbl	(%rax), %edx
 1389              	.LVL155:
 1390              	.LBB80:
 1391              	.LBB81:
 142:src/mcu_msg.c ****         case  ' ':
 1392              		.loc 1 142 0 is_stmt 1 discriminator 2
 1393 00b1 80FA09   		cmpb	$9, %dl
 1394 00b4 7C10     		jl	.L130
 1395 00b6 80FA0D   		cmpb	$13, %dl
 1396 00b9 7ED2     		jle	.L124
 1397 00bb 80FA20   		cmpb	$32, %dl
 1398 00be 74CD     		je	.L124
 1399 00c0 EB04     		jmp	.L130
 1400              	.LVL156:
 1401              	.L128:
 1402              	.LBE81:
 1403              	.LBE80:
 279:src/mcu_msg.c ****     res.len = p - res.s;
 1404              		.loc 1 279 0
 1405 00c2 4883C001 		addq	$1, %rax
 1406              	.LVL157:
 1407              	.L130:
 1408              	.LBB82:
 1409              	.LBB83:
 188:src/mcu_msg.c **** }
 1410              		.loc 1 188 0 discriminator 1
 1411 00c6 4889C6   		movq	%rax, %rsi
 1412 00c9 4889C1   		movq	%rax, %rcx
 1413 00cc 482B4C24 		subq	64(%rsp), %rcx
 1413      40
 1414 00d1 0FB75424 		movzwl	72(%rsp), %edx
 1414      48
 1415              	.LVL158:
 1416              	.LBE83:
 1417              	.LBE82:
 279:src/mcu_msg.c ****     res.len = p - res.s;
 1418              		.loc 1 279 0 discriminator 1
 1419 00d6 4839D1   		cmpq	%rdx, %rcx
 1420 00d9 7D2D     		jge	.L126
 279:src/mcu_msg.c ****     res.len = p - res.s;
 1421              		.loc 1 279 0 is_stmt 0 discriminator 2
 1422 00db 0FB610   		movzbl	(%rax), %edx
 1423              	.LVL159:
 1424              	.LBB84:
GAS LISTING /tmp/ccd0pRUN.s 			page 43


 1425              	.LBB85:
 142:src/mcu_msg.c ****         case  ' ':
 1426              		.loc 1 142 0 is_stmt 1 discriminator 2
 1427 00de 80FA09   		cmpb	$9, %dl
 1428 00e1 7C0A     		jl	.L127
 1429 00e3 80FA0D   		cmpb	$13, %dl
 1430 00e6 7E20     		jle	.L126
 1431 00e8 80FA20   		cmpb	$32, %dl
 1432 00eb 741B     		je	.L126
 1433              	.L127:
 1434              	.LVL160:
 1435              	.LBE85:
 1436              	.LBE84:
 1437              	.LBB86:
 1438              	.LBB87:
 116:src/mcu_msg.c ****         case __CTRL_MSG_FLAG:
 1439              		.loc 1 116 0
 1440 00ed 83EA23   		subl	$35, %edx
 1441              	.LVL161:
 1442 00f0 80FA5A   		cmpb	$90, %dl
 1443 00f3 77CD     		ja	.L128
 1444 00f5 0FB6D2   		movzbl	%dl, %edx
 1445 00f8 488D0D00 		leaq	.L129(%rip), %rcx
 1445      000000
 1446 00ff 48631491 		movslq	(%rcx,%rdx,4), %rdx
 1447 0103 4801CA   		addq	%rcx, %rdx
 1448 0106 FFE2     		jmp	*%rdx
 1449              		.section	.rodata.__find_val,"a",@progbits
 1450              		.align 4
 1451              		.align 4
 1452              	.L129:
 1453 0000 00000000 		.long	.L126-.L129
 1454 0004 00000000 		.long	.L126-.L129
 1455 0008 00000000 		.long	.L128-.L129
 1456 000c 00000000 		.long	.L128-.L129
 1457 0010 00000000 		.long	.L128-.L129
 1458 0014 00000000 		.long	.L126-.L129
 1459 0018 00000000 		.long	.L126-.L129
 1460 001c 00000000 		.long	.L128-.L129
 1461 0020 00000000 		.long	.L128-.L129
 1462 0024 00000000 		.long	.L128-.L129
 1463 0028 00000000 		.long	.L128-.L129
 1464 002c 00000000 		.long	.L128-.L129
 1465 0030 00000000 		.long	.L128-.L129
 1466 0034 00000000 		.long	.L128-.L129
 1467 0038 00000000 		.long	.L128-.L129
 1468 003c 00000000 		.long	.L128-.L129
 1469 0040 00000000 		.long	.L128-.L129
 1470 0044 00000000 		.long	.L128-.L129
 1471 0048 00000000 		.long	.L128-.L129
 1472 004c 00000000 		.long	.L128-.L129
 1473 0050 00000000 		.long	.L128-.L129
 1474 0054 00000000 		.long	.L128-.L129
 1475 0058 00000000 		.long	.L128-.L129
 1476 005c 00000000 		.long	.L128-.L129
 1477 0060 00000000 		.long	.L126-.L129
 1478 0064 00000000 		.long	.L126-.L129
GAS LISTING /tmp/ccd0pRUN.s 			page 44


 1479 0068 00000000 		.long	.L126-.L129
 1480 006c 00000000 		.long	.L126-.L129
 1481 0070 00000000 		.long	.L128-.L129
 1482 0074 00000000 		.long	.L126-.L129
 1483 0078 00000000 		.long	.L128-.L129
 1484 007c 00000000 		.long	.L128-.L129
 1485 0080 00000000 		.long	.L128-.L129
 1486 0084 00000000 		.long	.L128-.L129
 1487 0088 00000000 		.long	.L128-.L129
 1488 008c 00000000 		.long	.L128-.L129
 1489 0090 00000000 		.long	.L128-.L129
 1490 0094 00000000 		.long	.L128-.L129
 1491 0098 00000000 		.long	.L128-.L129
 1492 009c 00000000 		.long	.L128-.L129
 1493 00a0 00000000 		.long	.L128-.L129
 1494 00a4 00000000 		.long	.L128-.L129
 1495 00a8 00000000 		.long	.L128-.L129
 1496 00ac 00000000 		.long	.L128-.L129
 1497 00b0 00000000 		.long	.L128-.L129
 1498 00b4 00000000 		.long	.L128-.L129
 1499 00b8 00000000 		.long	.L128-.L129
 1500 00bc 00000000 		.long	.L128-.L129
 1501 00c0 00000000 		.long	.L128-.L129
 1502 00c4 00000000 		.long	.L128-.L129
 1503 00c8 00000000 		.long	.L128-.L129
 1504 00cc 00000000 		.long	.L128-.L129
 1505 00d0 00000000 		.long	.L128-.L129
 1506 00d4 00000000 		.long	.L128-.L129
 1507 00d8 00000000 		.long	.L128-.L129
 1508 00dc 00000000 		.long	.L128-.L129
 1509 00e0 00000000 		.long	.L128-.L129
 1510 00e4 00000000 		.long	.L128-.L129
 1511 00e8 00000000 		.long	.L128-.L129
 1512 00ec 00000000 		.long	.L128-.L129
 1513 00f0 00000000 		.long	.L128-.L129
 1514 00f4 00000000 		.long	.L128-.L129
 1515 00f8 00000000 		.long	.L128-.L129
 1516 00fc 00000000 		.long	.L128-.L129
 1517 0100 00000000 		.long	.L128-.L129
 1518 0104 00000000 		.long	.L128-.L129
 1519 0108 00000000 		.long	.L128-.L129
 1520 010c 00000000 		.long	.L128-.L129
 1521 0110 00000000 		.long	.L128-.L129
 1522 0114 00000000 		.long	.L128-.L129
 1523 0118 00000000 		.long	.L128-.L129
 1524 011c 00000000 		.long	.L128-.L129
 1525 0120 00000000 		.long	.L128-.L129
 1526 0124 00000000 		.long	.L128-.L129
 1527 0128 00000000 		.long	.L128-.L129
 1528 012c 00000000 		.long	.L128-.L129
 1529 0130 00000000 		.long	.L128-.L129
 1530 0134 00000000 		.long	.L128-.L129
 1531 0138 00000000 		.long	.L128-.L129
 1532 013c 00000000 		.long	.L128-.L129
 1533 0140 00000000 		.long	.L128-.L129
 1534 0144 00000000 		.long	.L128-.L129
 1535 0148 00000000 		.long	.L128-.L129
GAS LISTING /tmp/ccd0pRUN.s 			page 45


 1536 014c 00000000 		.long	.L128-.L129
 1537 0150 00000000 		.long	.L128-.L129
 1538 0154 00000000 		.long	.L128-.L129
 1539 0158 00000000 		.long	.L128-.L129
 1540 015c 00000000 		.long	.L128-.L129
 1541 0160 00000000 		.long	.L126-.L129
 1542 0164 00000000 		.long	.L128-.L129
 1543 0168 00000000 		.long	.L126-.L129
 1544              		.section	.text.__find_val
 1545              	.LVL162:
 1546              	.L126:
 1547              	.LBE87:
 1548              	.LBE86:
 280:src/mcu_msg.c **** 
 1549              		.loc 1 280 0
 1550 0108 4829FE   		subq	%rdi, %rsi
 1551 010b 66897424 		movw	%si, 8(%rsp)
 1551      08
 282:src/mcu_msg.c **** }
 1552              		.loc 1 282 0
 1553 0110 488B0424 		movq	(%rsp), %rax
 1554              	.LVL163:
 1555 0114 488B5424 		movq	8(%rsp), %rdx
 1555      08
 1556              	.L119:
 283:src/mcu_msg.c **** 
 1557              		.loc 1 283 0
 1558 0119 488B7C24 		movq	24(%rsp), %rdi
 1558      18
 1559 011e 6448333C 		xorq	%fs:40, %rdi
 1559      25280000 
 1559      00
 1560 0127 7505     		jne	.L134
 1561 0129 4883C428 		addq	$40, %rsp
 1562              	.LCFI55:
 1563              		.cfi_remember_state
 1564              		.cfi_def_cfa_offset 8
 1565 012d C3       		ret
 1566              	.L134:
 1567              	.LCFI56:
 1568              		.cfi_restore_state
 1569 012e E8000000 		call	__stack_chk_fail@PLT
 1569      00
 1570              	.LVL164:
 1571              		.cfi_endproc
 1572              	.LFE38:
 1574              		.section	.text.msg_destroy,"ax",@progbits
 1575              		.globl	msg_destroy
 1577              	msg_destroy:
 1578              	.LFB28:
  81:src/mcu_msg.c ****     msg_destroy_string(&msg->id);
 1579              		.loc 1 81 0
 1580              		.cfi_startproc
 1581              	.LVL165:
 1582 0000 53       		pushq	%rbx
 1583              	.LCFI57:
 1584              		.cfi_def_cfa_offset 16
GAS LISTING /tmp/ccd0pRUN.s 			page 46


 1585              		.cfi_offset 3, -16
 1586 0001 4889FB   		movq	%rdi, %rbx
  82:src/mcu_msg.c ****     msg_destroy_string(&msg->content);
 1587              		.loc 1 82 0
 1588 0004 E8000000 		call	msg_destroy_string
 1588      00
 1589              	.LVL166:
  83:src/mcu_msg.c **** }
 1590              		.loc 1 83 0
 1591 0009 488D7B10 		leaq	16(%rbx), %rdi
 1592 000d E8000000 		call	msg_destroy_string
 1592      00
 1593              	.LVL167:
  84:src/mcu_msg.c **** 
 1594              		.loc 1 84 0
 1595 0012 5B       		popq	%rbx
 1596              	.LCFI58:
 1597              		.cfi_def_cfa_offset 8
 1598              	.LVL168:
 1599 0013 C3       		ret
 1600              		.cfi_endproc
 1601              	.LFE28:
 1603              		.section	.text.msg_destroy_obj,"ax",@progbits
 1604              		.globl	msg_destroy_obj
 1606              	msg_destroy_obj:
 1607              	.LFB29:
  89:src/mcu_msg.c ****     msg_destroy_string(&obj->id);
 1608              		.loc 1 89 0
 1609              		.cfi_startproc
 1610              	.LVL169:
 1611 0000 53       		pushq	%rbx
 1612              	.LCFI59:
 1613              		.cfi_def_cfa_offset 16
 1614              		.cfi_offset 3, -16
 1615 0001 4889FB   		movq	%rdi, %rbx
  90:src/mcu_msg.c ****     msg_destroy_string(&obj->content);
 1616              		.loc 1 90 0
 1617 0004 E8000000 		call	msg_destroy_string
 1617      00
 1618              	.LVL170:
  91:src/mcu_msg.c **** }
 1619              		.loc 1 91 0
 1620 0009 488D7B10 		leaq	16(%rbx), %rdi
 1621 000d E8000000 		call	msg_destroy_string
 1621      00
 1622              	.LVL171:
  92:src/mcu_msg.c **** 
 1623              		.loc 1 92 0
 1624 0012 5B       		popq	%rbx
 1625              	.LCFI60:
 1626              		.cfi_def_cfa_offset 8
 1627              	.LVL172:
 1628 0013 C3       		ret
 1629              		.cfi_endproc
 1630              	.LFE29:
 1632              		.section	.text.msg_destroy_cmd,"ax",@progbits
 1633              		.globl	msg_destroy_cmd
GAS LISTING /tmp/ccd0pRUN.s 			page 47


 1635              	msg_destroy_cmd:
 1636              	.LFB30:
  96:src/mcu_msg.c ****     msg_destroy_string(&cmd->cmd);
 1637              		.loc 1 96 0
 1638              		.cfi_startproc
 1639              	.LVL173:
  97:src/mcu_msg.c **** }
 1640              		.loc 1 97 0
 1641 0000 E8000000 		call	msg_destroy_string
 1641      00
 1642              	.LVL174:
  98:src/mcu_msg.c **** 
 1643              		.loc 1 98 0
 1644 0005 F3C3     		rep ret
 1645              		.cfi_endproc
 1646              	.LFE30:
 1648              		.section	.text.msg_init_string,"ax",@progbits
 1649              		.globl	msg_init_string
 1651              	msg_init_string:
 1652              	.LFB31:
 101:src/mcu_msg.c ****     msg_str_t res;
 1653              		.loc 1 101 0
 1654              		.cfi_startproc
 1655              	.LVL175:
 1656 0000 53       		pushq	%rbx
 1657              	.LCFI61:
 1658              		.cfi_def_cfa_offset 16
 1659              		.cfi_offset 3, -16
 1660 0001 4889FB   		movq	%rdi, %rbx
 104:src/mcu_msg.c ****     return res;
 1661              		.loc 1 104 0
 1662 0004 E8000000 		call	__str_len
 1662      00
 1663              	.LVL176:
 1664 0009 BA000000 		movl	$0, %edx
 1664      00
 1665              	.LVL177:
 1666 000e 6689C2   		movw	%ax, %dx
 106:src/mcu_msg.c **** 
 1667              		.loc 1 106 0
 1668 0011 4889D8   		movq	%rbx, %rax
 1669 0014 5B       		popq	%rbx
 1670              	.LCFI62:
 1671              		.cfi_def_cfa_offset 8
 1672              	.LVL178:
 1673 0015 C3       		ret
 1674              		.cfi_endproc
 1675              	.LFE31:
 1677              		.section	.text.msg_get,"ax",@progbits
 1678              		.globl	msg_get
 1680              	msg_get:
 1681              	.LFB39:
 288:src/mcu_msg.c ****     msg_t res;
 1682              		.loc 1 288 0
 1683              		.cfi_startproc
 1684              	.LVL179:
 1685 0000 53       		pushq	%rbx
GAS LISTING /tmp/ccd0pRUN.s 			page 48


 1686              	.LCFI63:
 1687              		.cfi_def_cfa_offset 16
 1688              		.cfi_offset 3, -16
 1689 0001 4883EC30 		subq	$48, %rsp
 1690              	.LCFI64:
 1691              		.cfi_def_cfa_offset 64
 1692 0005 4889FB   		movq	%rdi, %rbx
 288:src/mcu_msg.c ****     msg_t res;
 1693              		.loc 1 288 0
 1694 0008 64488B04 		movq	%fs:40, %rax
 1694      25280000 
 1694      00
 1695 0011 48894424 		movq	%rax, 40(%rsp)
 1695      28
 1696 0016 31C0     		xorl	%eax, %eax
 290:src/mcu_msg.c ****     res.content.len = len;
 1697              		.loc 1 290 0
 1698 0018 48897424 		movq	%rsi, 16(%rsp)
 1698      10
 291:src/mcu_msg.c ****     res.id = __find_keyword(res.content, id, __CTRL_MSG_FLAG, __CTRL_START_MSG); //object start wit
 1699              		.loc 1 291 0
 1700 001d 66894C24 		movw	%cx, 24(%rsp)
 1700      18
 292:src/mcu_msg.c ****     char *p;
 1701              		.loc 1 292 0
 1702 0022 41B87B00 		movl	$123, %r8d
 1702      0000
 1703 0028 B9230000 		movl	$35, %ecx
 1703      00
 1704              	.LVL180:
 1705 002d 4889F7   		movq	%rsi, %rdi
 1706              	.LVL181:
 1707 0030 488B7424 		movq	24(%rsp), %rsi
 1707      18
 1708              	.LVL182:
 1709 0035 E8000000 		call	__find_keyword
 1709      00
 1710              	.LVL183:
 1711 003a 48890424 		movq	%rax, (%rsp)
 1712 003e 48895424 		movq	%rdx, 8(%rsp)
 1712      08
 294:src/mcu_msg.c ****         msg_destroy(&res);
 1713              		.loc 1 294 0
 1714 0043 4885C0   		testq	%rax, %rax
 1715 0046 741B     		je	.L153
 298:src/mcu_msg.c ****     if (*p != __CTRL_START_MSG) { // if the next char is not START_MSG, move to the start flag
 1716              		.loc 1 298 0
 1717 0048 0FB75424 		movzwl	8(%rsp), %edx
 1717      08
 1718 004d 4801D0   		addq	%rdx, %rax
 1719              	.LVL184:
 299:src/mcu_msg.c ****         while(__is_p_in_str(res.content, p + 1) && *p != __CTRL_START_MSG) p++;
 1720              		.loc 1 299 0
 1721 0050 80387B   		cmpb	$123, (%rax)
 1722 0053 753D     		jne	.L146
 1723              	.L145:
 302:src/mcu_msg.c ****     while(__is_p_in_str(res.content, p) && *p != __CTRL_STOP_MSG) { //calc length
GAS LISTING /tmp/ccd0pRUN.s 			page 49


 1724              		.loc 1 302 0
 1725 0055 488D5001 		leaq	1(%rax), %rdx
 1726              	.LVL185:
 1727 0059 48895424 		movq	%rdx, 16(%rsp)
 1727      10
 1728 005e 4889D0   		movq	%rdx, %rax
 303:src/mcu_msg.c ****         p++;
 1729              		.loc 1 303 0
 1730 0061 EB50     		jmp	.L147
 1731              	.LVL186:
 1732              	.L153:
 295:src/mcu_msg.c ****         return res;
 1733              		.loc 1 295 0
 1734 0063 4889E7   		movq	%rsp, %rdi
 1735 0066 E8000000 		call	msg_destroy
 1735      00
 1736              	.LVL187:
 296:src/mcu_msg.c ****     }
 1737              		.loc 1 296 0
 1738 006b 488B0424 		movq	(%rsp), %rax
 1739 006f 488B5424 		movq	8(%rsp), %rdx
 1739      08
 1740 0074 488903   		movq	%rax, (%rbx)
 1741 0077 48895308 		movq	%rdx, 8(%rbx)
 1742 007b 488B4424 		movq	16(%rsp), %rax
 1742      10
 1743 0080 488B5424 		movq	24(%rsp), %rdx
 1743      18
 1744 0085 48894310 		movq	%rax, 16(%rbx)
 1745 0089 48895318 		movq	%rdx, 24(%rbx)
 1746 008d EB68     		jmp	.L142
 1747              	.LVL188:
 1748              	.L151:
 300:src/mcu_msg.c ****     }
 1749              		.loc 1 300 0
 1750 008f 4889D0   		movq	%rdx, %rax
 1751              	.LVL189:
 1752              	.L146:
 300:src/mcu_msg.c ****     }
 1753              		.loc 1 300 0 is_stmt 0 discriminator 1
 1754 0092 488D5001 		leaq	1(%rax), %rdx
 1755              	.LVL190:
 1756              	.LBB88:
 1757              	.LBB89:
 188:src/mcu_msg.c **** }
 1758              		.loc 1 188 0 is_stmt 1 discriminator 1
 1759 0096 4889D6   		movq	%rdx, %rsi
 1760 0099 482B7424 		subq	16(%rsp), %rsi
 1760      10
 1761 009e 0FB74C24 		movzwl	24(%rsp), %ecx
 1761      18
 1762              	.LVL191:
 1763              	.LBE89:
 1764              	.LBE88:
 300:src/mcu_msg.c ****     }
 1765              		.loc 1 300 0 discriminator 1
 1766 00a3 4839CE   		cmpq	%rcx, %rsi
GAS LISTING /tmp/ccd0pRUN.s 			page 50


 1767 00a6 7DAD     		jge	.L145
 300:src/mcu_msg.c ****     }
 1768              		.loc 1 300 0 is_stmt 0 discriminator 2
 1769 00a8 80387B   		cmpb	$123, (%rax)
 1770 00ab 75E2     		jne	.L151
 1771 00ad EBA6     		jmp	.L145
 1772              	.L149:
 304:src/mcu_msg.c ****     }
 1773              		.loc 1 304 0 is_stmt 1
 1774 00af 4883C001 		addq	$1, %rax
 1775              	.LVL192:
 1776              	.L147:
 1777              	.LBB90:
 1778              	.LBB91:
 188:src/mcu_msg.c **** }
 1779              		.loc 1 188 0
 1780 00b3 4889C7   		movq	%rax, %rdi
 1781 00b6 4889C6   		movq	%rax, %rsi
 1782 00b9 482B7424 		subq	16(%rsp), %rsi
 1782      10
 1783 00be 0FB74C24 		movzwl	24(%rsp), %ecx
 1783      18
 1784              	.LVL193:
 1785              	.LBE91:
 1786              	.LBE90:
 303:src/mcu_msg.c ****         p++;
 1787              		.loc 1 303 0
 1788 00c3 4839CE   		cmpq	%rcx, %rsi
 1789 00c6 7D05     		jge	.L148
 303:src/mcu_msg.c ****         p++;
 1790              		.loc 1 303 0 is_stmt 0 discriminator 1
 1791 00c8 80387D   		cmpb	$125, (%rax)
 1792 00cb 75E2     		jne	.L149
 1793              	.L148:
 306:src/mcu_msg.c ****     return res;
 1794              		.loc 1 306 0 is_stmt 1
 1795 00cd 4829D7   		subq	%rdx, %rdi
 1796 00d0 66897C24 		movw	%di, 24(%rsp)
 1796      18
 307:src/mcu_msg.c **** }
 1797              		.loc 1 307 0
 1798 00d5 488B0424 		movq	(%rsp), %rax
 1799              	.LVL194:
 1800 00d9 488B5424 		movq	8(%rsp), %rdx
 1800      08
 1801 00de 488903   		movq	%rax, (%rbx)
 1802 00e1 48895308 		movq	%rdx, 8(%rbx)
 1803 00e5 488B4424 		movq	16(%rsp), %rax
 1803      10
 1804 00ea 488B5424 		movq	24(%rsp), %rdx
 1804      18
 1805 00ef 48894310 		movq	%rax, 16(%rbx)
 1806 00f3 48895318 		movq	%rdx, 24(%rbx)
 1807              	.L142:
 308:src/mcu_msg.c **** 
 1808              		.loc 1 308 0
 1809 00f7 4889D8   		movq	%rbx, %rax
GAS LISTING /tmp/ccd0pRUN.s 			page 51


 1810 00fa 488B5C24 		movq	40(%rsp), %rbx
 1810      28
 1811 00ff 6448331C 		xorq	%fs:40, %rbx
 1811      25280000 
 1811      00
 1812              	.LVL195:
 1813 0108 7506     		jne	.L154
 1814 010a 4883C430 		addq	$48, %rsp
 1815              	.LCFI65:
 1816              		.cfi_remember_state
 1817              		.cfi_def_cfa_offset 16
 1818 010e 5B       		popq	%rbx
 1819              	.LCFI66:
 1820              		.cfi_def_cfa_offset 8
 1821 010f C3       		ret
 1822              	.L154:
 1823              	.LCFI67:
 1824              		.cfi_restore_state
 1825 0110 E8000000 		call	__stack_chk_fail@PLT
 1825      00
 1826              	.LVL196:
 1827              		.cfi_endproc
 1828              	.LFE39:
 1830              		.section	.text.msg_parser_get_obj,"ax",@progbits
 1831              		.globl	msg_parser_get_obj
 1833              	msg_parser_get_obj:
 1834              	.LFB40:
 313:src/mcu_msg.c ****     msg_obj_t res;
 1835              		.loc 1 313 0
 1836              		.cfi_startproc
 1837              	.LVL197:
 1838 0000 53       		pushq	%rbx
 1839              	.LCFI68:
 1840              		.cfi_def_cfa_offset 16
 1841              		.cfi_offset 3, -16
 1842 0001 4883EC30 		subq	$48, %rsp
 1843              	.LCFI69:
 1844              		.cfi_def_cfa_offset 64
 1845 0005 4889FB   		movq	%rdi, %rbx
 1846 0008 4889F2   		movq	%rsi, %rdx
 313:src/mcu_msg.c ****     msg_obj_t res;
 1847              		.loc 1 313 0
 1848 000b 64488B04 		movq	%fs:40, %rax
 1848      25280000 
 1848      00
 1849 0014 48894424 		movq	%rax, 40(%rsp)
 1849      28
 1850 0019 31C0     		xorl	%eax, %eax
 315:src/mcu_msg.c ****     char *p;
 1851              		.loc 1 315 0
 1852 001b 41B82800 		movl	$40, %r8d
 1852      0000
 1853 0021 B9400000 		movl	$64, %ecx
 1853      00
 1854 0026 488B7C24 		movq	80(%rsp), %rdi
 1854      50
 1855              	.LVL198:
GAS LISTING /tmp/ccd0pRUN.s 			page 52


 1856 002b 488B7424 		movq	88(%rsp), %rsi
 1856      58
 1857              	.LVL199:
 1858 0030 E8000000 		call	__find_keyword
 1858      00
 1859              	.LVL200:
 1860 0035 48890424 		movq	%rax, (%rsp)
 1861 0039 48895424 		movq	%rdx, 8(%rsp)
 1861      08
 317:src/mcu_msg.c ****         msg_destroy_obj(&res);
 1862              		.loc 1 317 0
 1863 003e 4885C0   		testq	%rax, %rax
 1864 0041 741B     		je	.L166
 322:src/mcu_msg.c ****     if (*p != __CTRL_START_OBJ) {
 1865              		.loc 1 322 0
 1866 0043 0FB75424 		movzwl	8(%rsp), %edx
 1866      08
 1867 0048 4801D0   		addq	%rdx, %rax
 1868              	.LVL201:
 323:src/mcu_msg.c ****         while(__is_p_in_str(msg.content, p + 1) && *p != __CTRL_START_OBJ) p++;
 1869              		.loc 1 323 0
 1870 004b 803828   		cmpb	$40, (%rax)
 1871 004e 753D     		jne	.L159
 1872              	.L158:
 326:src/mcu_msg.c ****     while(__is_p_in_str(msg.content, p) && *p != __CTRL_STOP_OBJ) {
 1873              		.loc 1 326 0
 1874 0050 488D5001 		leaq	1(%rax), %rdx
 1875              	.LVL202:
 1876 0054 48895424 		movq	%rdx, 16(%rsp)
 1876      10
 1877 0059 4889D0   		movq	%rdx, %rax
 327:src/mcu_msg.c ****         p++;
 1878              		.loc 1 327 0
 1879 005c EB50     		jmp	.L160
 1880              	.LVL203:
 1881              	.L166:
 318:src/mcu_msg.c ****         return res;
 1882              		.loc 1 318 0
 1883 005e 4889E7   		movq	%rsp, %rdi
 1884 0061 E8000000 		call	msg_destroy_obj
 1884      00
 1885              	.LVL204:
 319:src/mcu_msg.c ****     }
 1886              		.loc 1 319 0
 1887 0066 488B0424 		movq	(%rsp), %rax
 1888 006a 488B5424 		movq	8(%rsp), %rdx
 1888      08
 1889 006f 488903   		movq	%rax, (%rbx)
 1890 0072 48895308 		movq	%rdx, 8(%rbx)
 1891 0076 488B4424 		movq	16(%rsp), %rax
 1891      10
 1892 007b 488B5424 		movq	24(%rsp), %rdx
 1892      18
 1893 0080 48894310 		movq	%rax, 16(%rbx)
 1894 0084 48895318 		movq	%rdx, 24(%rbx)
 1895 0088 EB68     		jmp	.L155
 1896              	.LVL205:
GAS LISTING /tmp/ccd0pRUN.s 			page 53


 1897              	.L164:
 324:src/mcu_msg.c ****     }
 1898              		.loc 1 324 0
 1899 008a 4889D0   		movq	%rdx, %rax
 1900              	.LVL206:
 1901              	.L159:
 324:src/mcu_msg.c ****     }
 1902              		.loc 1 324 0 is_stmt 0 discriminator 1
 1903 008d 488D5001 		leaq	1(%rax), %rdx
 1904              	.LVL207:
 1905              	.LBB92:
 1906              	.LBB93:
 188:src/mcu_msg.c **** }
 1907              		.loc 1 188 0 is_stmt 1 discriminator 1
 1908 0091 4889D6   		movq	%rdx, %rsi
 1909 0094 482B7424 		subq	80(%rsp), %rsi
 1909      50
 1910 0099 0FB74C24 		movzwl	88(%rsp), %ecx
 1910      58
 1911              	.LVL208:
 1912              	.LBE93:
 1913              	.LBE92:
 324:src/mcu_msg.c ****     }
 1914              		.loc 1 324 0 discriminator 1
 1915 009e 4839CE   		cmpq	%rcx, %rsi
 1916 00a1 7DAD     		jge	.L158
 324:src/mcu_msg.c ****     }
 1917              		.loc 1 324 0 is_stmt 0 discriminator 2
 1918 00a3 803828   		cmpb	$40, (%rax)
 1919 00a6 75E2     		jne	.L164
 1920 00a8 EBA6     		jmp	.L158
 1921              	.L162:
 328:src/mcu_msg.c ****     }
 1922              		.loc 1 328 0 is_stmt 1
 1923 00aa 4883C001 		addq	$1, %rax
 1924              	.LVL209:
 1925              	.L160:
 1926              	.LBB94:
 1927              	.LBB95:
 188:src/mcu_msg.c **** }
 1928              		.loc 1 188 0
 1929 00ae 4889C7   		movq	%rax, %rdi
 1930 00b1 4889C6   		movq	%rax, %rsi
 1931 00b4 482B7424 		subq	80(%rsp), %rsi
 1931      50
 1932 00b9 0FB74C24 		movzwl	88(%rsp), %ecx
 1932      58
 1933              	.LVL210:
 1934              	.LBE95:
 1935              	.LBE94:
 327:src/mcu_msg.c ****         p++;
 1936              		.loc 1 327 0
 1937 00be 4839CE   		cmpq	%rcx, %rsi
 1938 00c1 7D05     		jge	.L161
 327:src/mcu_msg.c ****         p++;
 1939              		.loc 1 327 0 is_stmt 0 discriminator 1
 1940 00c3 803829   		cmpb	$41, (%rax)
GAS LISTING /tmp/ccd0pRUN.s 			page 54


 1941 00c6 75E2     		jne	.L162
 1942              	.L161:
 330:src/mcu_msg.c ****     return res;
 1943              		.loc 1 330 0 is_stmt 1
 1944 00c8 4829D7   		subq	%rdx, %rdi
 1945 00cb 66897C24 		movw	%di, 24(%rsp)
 1945      18
 331:src/mcu_msg.c **** }
 1946              		.loc 1 331 0
 1947 00d0 488B0424 		movq	(%rsp), %rax
 1948              	.LVL211:
 1949 00d4 488B5424 		movq	8(%rsp), %rdx
 1949      08
 1950 00d9 488903   		movq	%rax, (%rbx)
 1951 00dc 48895308 		movq	%rdx, 8(%rbx)
 1952 00e0 488B4424 		movq	16(%rsp), %rax
 1952      10
 1953 00e5 488B5424 		movq	24(%rsp), %rdx
 1953      18
 1954 00ea 48894310 		movq	%rax, 16(%rbx)
 1955 00ee 48895318 		movq	%rdx, 24(%rbx)
 1956              	.L155:
 332:src/mcu_msg.c **** 
 1957              		.loc 1 332 0
 1958 00f2 4889D8   		movq	%rbx, %rax
 1959 00f5 488B5C24 		movq	40(%rsp), %rbx
 1959      28
 1960 00fa 6448331C 		xorq	%fs:40, %rbx
 1960      25280000 
 1960      00
 1961              	.LVL212:
 1962 0103 7506     		jne	.L167
 1963 0105 4883C430 		addq	$48, %rsp
 1964              	.LCFI70:
 1965              		.cfi_remember_state
 1966              		.cfi_def_cfa_offset 16
 1967 0109 5B       		popq	%rbx
 1968              	.LCFI71:
 1969              		.cfi_def_cfa_offset 8
 1970 010a C3       		ret
 1971              	.L167:
 1972              	.LCFI72:
 1973              		.cfi_restore_state
 1974 010b E8000000 		call	__stack_chk_fail@PLT
 1974      00
 1975              	.LVL213:
 1976              		.cfi_endproc
 1977              	.LFE40:
 1979              		.section	.text.msg_parser_get_cmd,"ax",@progbits
 1980              		.globl	msg_parser_get_cmd
 1982              	msg_parser_get_cmd:
 1983              	.LFB41:
 335:src/mcu_msg.c ****     msg_cmd_t res;
 1984              		.loc 1 335 0
 1985              		.cfi_startproc
 1986              	.LVL214:
 1987 0000 4883EC08 		subq	$8, %rsp
GAS LISTING /tmp/ccd0pRUN.s 			page 55


 1988              	.LCFI73:
 1989              		.cfi_def_cfa_offset 16
 1990 0004 4889FA   		movq	%rdi, %rdx
 338:src/mcu_msg.c ****     return res;
 1991              		.loc 1 338 0
 1992 0007 41B83E00 		movl	$62, %r8d
 1992      0000
 1993 000d B93C0000 		movl	$60, %ecx
 1993      00
 1994 0012 488B7C24 		movq	32(%rsp), %rdi
 1994      20
 1995              	.LVL215:
 1996 0017 488B7424 		movq	40(%rsp), %rsi
 1996      28
 1997 001c E8000000 		call	__find_keyword
 1997      00
 1998              	.LVL216:
 340:src/mcu_msg.c **** 
 1999              		.loc 1 340 0
 2000 0021 4883C408 		addq	$8, %rsp
 2001              	.LCFI74:
 2002              		.cfi_def_cfa_offset 8
 2003 0025 C3       		ret
 2004              		.cfi_endproc
 2005              	.LFE41:
 2007              		.section	.text.msg_parser_get_int,"ax",@progbits
 2008              		.globl	msg_parser_get_int
 2010              	msg_parser_get_int:
 2011              	.LFB42:
 343:src/mcu_msg.c ****     msg_str_t sval = __find_val(obj, key);
 2012              		.loc 1 343 0
 2013              		.cfi_startproc
 2014              	.LVL217:
 2015 0000 53       		pushq	%rbx
 2016              	.LCFI75:
 2017              		.cfi_def_cfa_offset 16
 2018              		.cfi_offset 3, -16
 2019 0001 4889FB   		movq	%rdi, %rbx
 344:src/mcu_msg.c ****     msg_size_t i;
 2020              		.loc 1 344 0
 2021 0004 FF742428 		pushq	40(%rsp)
 2022              	.LCFI76:
 2023              		.cfi_def_cfa_offset 24
 2024 0008 FF742428 		pushq	40(%rsp)
 2025              	.LCFI77:
 2026              		.cfi_def_cfa_offset 32
 2027 000c FF742428 		pushq	40(%rsp)
 2028              	.LCFI78:
 2029              		.cfi_def_cfa_offset 40
 2030 0010 FF742428 		pushq	40(%rsp)
 2031              	.LCFI79:
 2032              		.cfi_def_cfa_offset 48
 2033 0014 4889F7   		movq	%rsi, %rdi
 2034              	.LVL218:
 2035 0017 E8000000 		call	__find_val
 2035      00
 2036              	.LVL219:
GAS LISTING /tmp/ccd0pRUN.s 			page 56


 350:src/mcu_msg.c ****         return -1;
 2037              		.loc 1 350 0
 2038 001c 4883C420 		addq	$32, %rsp
 2039              	.LCFI80:
 2040              		.cfi_def_cfa_offset 16
 2041              	.LVL220:
 2042 0020 4885C0   		testq	%rax, %rax
 2043 0023 0F84AD00 		je	.L181
 2043      0000
 2044 0029 4889C2   		movq	%rax, %rdx
 354:src/mcu_msg.c ****         case '+':
 2045              		.loc 1 354 0
 2046 002c 0FB600   		movzbl	(%rax), %eax
 2047 002f 3C2B     		cmpb	$43, %al
 2048 0031 740C     		je	.L173
 2049 0033 3C2D     		cmpb	$45, %al
 2050 0035 7419     		je	.L174
 347:src/mcu_msg.c ****     int8_t res = 0; // result of function
 2051              		.loc 1 347 0
 2052 0037 41B80100 		movl	$1, %r8d
 2052      0000
 2053 003d EB0A     		jmp	.L172
 2054              	.L173:
 357:src/mcu_msg.c ****         break;
 2055              		.loc 1 357 0
 2056 003f 488D5201 		leaq	1(%rdx), %rdx
 356:src/mcu_msg.c ****             sval.s++;
 2057              		.loc 1 356 0
 2058 0043 41B80100 		movl	$1, %r8d
 2058      0000
 2059              	.LVL221:
 2060              	.L172:
 369:src/mcu_msg.c ****         if(*sval.s < '0' || *sval.s > '9') {    // if non valid number, return with error
 2061              		.loc 1 369 0
 2062 0049 BE000000 		movl	$0, %esi
 2062      00
 2063 004e EB1E     		jmp	.L175
 2064              	.LVL222:
 2065              	.L174:
 362:src/mcu_msg.c ****         break;
 2066              		.loc 1 362 0
 2067 0050 488D5201 		leaq	1(%rdx), %rdx
 361:src/mcu_msg.c ****             sval.s++;
 2068              		.loc 1 361 0
 2069 0054 41B8FFFF 		movl	$-1, %r8d
 2069      FFFF
 363:src/mcu_msg.c ****         
 2070              		.loc 1 363 0
 2071 005a EBED     		jmp	.L172
 2072              	.LVL223:
 2073              	.L177:
 369:src/mcu_msg.c ****         if(*sval.s < '0' || *sval.s > '9') {    // if non valid number, return with error
 2074              		.loc 1 369 0
 2075 005c 3C3B     		cmpb	$59, %al
 2076 005e 7432     		je	.L176
 370:src/mcu_msg.c ****             return -1;
 2077              		.loc 1 370 0
GAS LISTING /tmp/ccd0pRUN.s 			page 57


 2078 0060 83E830   		subl	$48, %eax
 2079 0063 3C09     		cmpb	$9, %al
 2080 0065 7776     		ja	.L183
 369:src/mcu_msg.c ****         if(*sval.s < '0' || *sval.s > '9') {    // if non valid number, return with error
 2081              		.loc 1 369 0 discriminator 2
 2082 0067 83C601   		addl	$1, %esi
 2083              	.LVL224:
 2084 006a 488D5701 		leaq	1(%rdi), %rdx
 2085              	.LVL225:
 2086              	.L175:
 369:src/mcu_msg.c ****         if(*sval.s < '0' || *sval.s > '9') {    // if non valid number, return with error
 2087              		.loc 1 369 0 is_stmt 0 discriminator 1
 2088 006e 4889D7   		movq	%rdx, %rdi
 2089              	.LVL226:
 2090              	.LBB96:
 2091              	.LBB97:
 188:src/mcu_msg.c **** }
 2092              		.loc 1 188 0 is_stmt 1 discriminator 1
 2093 0071 4889D1   		movq	%rdx, %rcx
 2094 0074 482B4C24 		subq	32(%rsp), %rcx
 2094      20
 2095 0079 0FB74424 		movzwl	40(%rsp), %eax
 2095      28
 2096              	.LVL227:
 2097              	.LBE97:
 2098              	.LBE96:
 369:src/mcu_msg.c ****         if(*sval.s < '0' || *sval.s > '9') {    // if non valid number, return with error
 2099              		.loc 1 369 0 discriminator 1
 2100 007e 4839C1   		cmpq	%rax, %rcx
 2101 0081 7D0F     		jge	.L176
 369:src/mcu_msg.c ****         if(*sval.s < '0' || *sval.s > '9') {    // if non valid number, return with error
 2102              		.loc 1 369 0 is_stmt 0 discriminator 3
 2103 0083 0FB602   		movzbl	(%rdx), %eax
 2104              	.LVL228:
 2105              	.LBB98:
 2106              	.LBB99:
 142:src/mcu_msg.c ****         case  ' ':
 2107              		.loc 1 142 0 is_stmt 1 discriminator 3
 2108 0086 3C09     		cmpb	$9, %al
 2109 0088 7CD2     		jl	.L177
 2110 008a 3C0D     		cmpb	$13, %al
 2111 008c 7E04     		jle	.L176
 2112 008e 3C20     		cmpb	$32, %al
 2113 0090 75CA     		jne	.L177
 2114              	.LVL229:
 2115              	.L176:
 2116              	.LBE99:
 2117              	.LBE98:
 375:src/mcu_msg.c ****     --sval.s;
 2118              		.loc 1 375 0
 2119 0092 C7030000 		movl	$0, (%rbx)
 2119      0000
 376:src/mcu_msg.c ****     while(i--) { //convert value to integer
 2120              		.loc 1 376 0
 2121 0098 488D57FF 		leaq	-1(%rdi), %rdx
 348:src/mcu_msg.c **** 
 2122              		.loc 1 348 0
GAS LISTING /tmp/ccd0pRUN.s 			page 58


 2123 009c B8000000 		movl	$0, %eax
 2123      00
 346:src/mcu_msg.c ****     int sign = 1;
 2124              		.loc 1 346 0
 2125 00a1 B9010000 		movl	$1, %ecx
 2125      00
 377:src/mcu_msg.c ****         *res_val += (*sval.s-- - '0') * m;
 2126              		.loc 1 377 0
 2127 00a6 EB1D     		jmp	.L179
 2128              	.LVL230:
 2129              	.L180:
 378:src/mcu_msg.c ****         m *= 10;
 2130              		.loc 1 378 0
 2131 00a8 4889D6   		movq	%rdx, %rsi
 2132 00ab 4883EA01 		subq	$1, %rdx
 2133 00af 0FBE36   		movsbl	(%rsi), %esi
 2134 00b2 83EE30   		subl	$48, %esi
 2135 00b5 0FAFF1   		imull	%ecx, %esi
 2136 00b8 0133     		addl	%esi, (%rbx)
 379:src/mcu_msg.c ****         res++;
 2137              		.loc 1 379 0
 2138 00ba 8D3489   		leal	(%rcx,%rcx,4), %esi
 2139 00bd 8D0C36   		leal	(%rsi,%rsi), %ecx
 2140              	.LVL231:
 380:src/mcu_msg.c ****     }
 2141              		.loc 1 380 0
 2142 00c0 83C001   		addl	$1, %eax
 2143              	.LVL232:
 377:src/mcu_msg.c ****         *res_val += (*sval.s-- - '0') * m;
 2144              		.loc 1 377 0
 2145 00c3 89FE     		movl	%edi, %esi
 2146              	.LVL233:
 2147              	.L179:
 2148 00c5 8D7EFF   		leal	-1(%rsi), %edi
 2149              	.LVL234:
 2150 00c8 6685F6   		testw	%si, %si
 2151 00cb 75DB     		jne	.L180
 383:src/mcu_msg.c **** 
 2152              		.loc 1 383 0
 2153 00cd 440FAF03 		imull	(%rbx), %r8d
 2154              	.LVL235:
 2155 00d1 448903   		movl	%r8d, (%rbx)
 2156              	.LVL236:
 2157              	.L170:
 386:src/mcu_msg.c **** 
 2158              		.loc 1 386 0
 2159 00d4 5B       		popq	%rbx
 2160              	.LCFI81:
 2161              		.cfi_remember_state
 2162              		.cfi_def_cfa_offset 8
 2163              	.LVL237:
 2164 00d5 C3       		ret
 2165              	.LVL238:
 2166              	.L181:
 2167              	.LCFI82:
 2168              		.cfi_restore_state
 351:src/mcu_msg.c **** 
GAS LISTING /tmp/ccd0pRUN.s 			page 59


 2169              		.loc 1 351 0
 2170 00d6 B8FFFFFF 		movl	$-1, %eax
 2170      FF
 2171 00db EBF7     		jmp	.L170
 2172              	.LVL239:
 2173              	.L183:
 371:src/mcu_msg.c ****         }
 2174              		.loc 1 371 0
 2175 00dd B8FFFFFF 		movl	$-1, %eax
 2175      FF
 2176 00e2 EBF0     		jmp	.L170
 2177              		.cfi_endproc
 2178              	.LFE42:
 2180              		.section	.text.msg_parser_get_float,"ax",@progbits
 2181              		.globl	msg_parser_get_float
 2183              	msg_parser_get_float:
 2184              	.LFB43:
 390:src/mcu_msg.c ****     msg_str_t sval = __find_val(obj, key);
 2185              		.loc 1 390 0
 2186              		.cfi_startproc
 2187              	.LVL240:
 2188 0000 53       		pushq	%rbx
 2189              	.LCFI83:
 2190              		.cfi_def_cfa_offset 16
 2191              		.cfi_offset 3, -16
 2192 0001 4889FB   		movq	%rdi, %rbx
 391:src/mcu_msg.c ****     char *pf;
 2193              		.loc 1 391 0
 2194 0004 FF742428 		pushq	40(%rsp)
 2195              	.LCFI84:
 2196              		.cfi_def_cfa_offset 24
 2197 0008 FF742428 		pushq	40(%rsp)
 2198              	.LCFI85:
 2199              		.cfi_def_cfa_offset 32
 2200 000c FF742428 		pushq	40(%rsp)
 2201              	.LCFI86:
 2202              		.cfi_def_cfa_offset 40
 2203 0010 FF742428 		pushq	40(%rsp)
 2204              	.LCFI87:
 2205              		.cfi_def_cfa_offset 48
 2206 0014 4889F7   		movq	%rsi, %rdi
 2207              	.LVL241:
 2208 0017 E8000000 		call	__find_val
 2208      00
 2209              	.LVL242:
 2210 001c 4889C1   		movq	%rax, %rcx
 2211              	.LVL243:
 399:src/mcu_msg.c ****         return -1;
 2212              		.loc 1 399 0
 2213 001f 4883C420 		addq	$32, %rsp
 2214              	.LCFI88:
 2215              		.cfi_def_cfa_offset 16
 2216 0023 4885C0   		testq	%rax, %rax
 2217 0026 0F844C01 		je	.L204
 2217      0000
 2218 002c 4889C2   		movq	%rax, %rdx
 403:src/mcu_msg.c ****         case '+':
GAS LISTING /tmp/ccd0pRUN.s 			page 60


 2219              		.loc 1 403 0
 2220 002f 0FB601   		movzbl	(%rcx), %eax
 2221 0032 3C2B     		cmpb	$43, %al
 2222 0034 740B     		je	.L189
 2223 0036 3C2D     		cmpb	$45, %al
 2224 0038 7417     		je	.L190
 396:src/mcu_msg.c ****     int8_t res = 0; // result of function
 2225              		.loc 1 396 0
 2226 003a BF010000 		movl	$1, %edi
 2226      00
 2227 003f EB09     		jmp	.L188
 2228              	.L189:
 406:src/mcu_msg.c ****         break;
 2229              		.loc 1 406 0
 2230 0041 488D4A01 		leaq	1(%rdx), %rcx
 405:src/mcu_msg.c ****             sval.s++;
 2231              		.loc 1 405 0
 2232 0045 BF010000 		movl	$1, %edi
 2232      00
 2233              	.LVL244:
 2234              	.L188:
 419:src/mcu_msg.c ****         if((*sval.s < '0' || *sval.s > '9')) {    // if non valid number, return with error
 2235              		.loc 1 419 0
 2236 004a BA000000 		movl	$0, %edx
 2236      00
 2237 004f EB25     		jmp	.L191
 2238              	.LVL245:
 2239              	.L190:
 411:src/mcu_msg.c ****         break;
 2240              		.loc 1 411 0
 2241 0051 488D4A01 		leaq	1(%rdx), %rcx
 410:src/mcu_msg.c ****             sval.s++;
 2242              		.loc 1 410 0
 2243 0055 BFFFFFFF 		movl	$-1, %edi
 2243      FF
 412:src/mcu_msg.c ****         
 2244              		.loc 1 412 0
 2245 005a EBEE     		jmp	.L188
 2246              	.LVL246:
 2247              	.L193:
 419:src/mcu_msg.c ****         if((*sval.s < '0' || *sval.s > '9')) {    // if non valid number, return with error
 2248              		.loc 1 419 0
 2249 005c 3C3B     		cmpb	$59, %al
 2250 005e 743A     		je	.L192
 419:src/mcu_msg.c ****         if((*sval.s < '0' || *sval.s > '9')) {    // if non valid number, return with error
 2251              		.loc 1 419 0 is_stmt 0 discriminator 5
 2252 0060 3C2E     		cmpb	$46, %al
 2253 0062 7436     		je	.L192
 420:src/mcu_msg.c ****             return -1;
 2254              		.loc 1 420 0 is_stmt 1
 2255 0064 83E830   		subl	$48, %eax
 2256 0067 3C09     		cmpb	$9, %al
 2257 0069 0F871001 		ja	.L206
 2257      0000
 419:src/mcu_msg.c ****         if((*sval.s < '0' || *sval.s > '9')) {    // if non valid number, return with error
 2258              		.loc 1 419 0 discriminator 2
 2259 006f 83C201   		addl	$1, %edx
GAS LISTING /tmp/ccd0pRUN.s 			page 61


 2260              	.LVL247:
 2261 0072 488D4E01 		leaq	1(%rsi), %rcx
 2262              	.LVL248:
 2263              	.L191:
 419:src/mcu_msg.c ****         if((*sval.s < '0' || *sval.s > '9')) {    // if non valid number, return with error
 2264              		.loc 1 419 0 is_stmt 0 discriminator 1
 2265 0076 4889CE   		movq	%rcx, %rsi
 2266              	.LVL249:
 2267              	.LBB100:
 2268              	.LBB101:
 188:src/mcu_msg.c **** }
 2269              		.loc 1 188 0 is_stmt 1 discriminator 1
 2270 0079 4989C8   		movq	%rcx, %r8
 2271 007c 4C2B4424 		subq	32(%rsp), %r8
 2271      20
 2272 0081 0FB74424 		movzwl	40(%rsp), %eax
 2272      28
 2273              	.LVL250:
 2274              	.LBE101:
 2275              	.LBE100:
 419:src/mcu_msg.c ****         if((*sval.s < '0' || *sval.s > '9')) {    // if non valid number, return with error
 2276              		.loc 1 419 0 discriminator 1
 2277 0086 4939C0   		cmpq	%rax, %r8
 2278 0089 7D0F     		jge	.L192
 419:src/mcu_msg.c ****         if((*sval.s < '0' || *sval.s > '9')) {    // if non valid number, return with error
 2279              		.loc 1 419 0 is_stmt 0 discriminator 3
 2280 008b 0FB601   		movzbl	(%rcx), %eax
 2281              	.LVL251:
 2282              	.LBB102:
 2283              	.LBB103:
 142:src/mcu_msg.c ****         case  ' ':
 2284              		.loc 1 142 0 is_stmt 1 discriminator 3
 2285 008e 3C09     		cmpb	$9, %al
 2286 0090 7CCA     		jl	.L193
 2287 0092 3C0D     		cmpb	$13, %al
 2288 0094 7E04     		jle	.L192
 2289 0096 3C20     		cmpb	$32, %al
 2290 0098 75C2     		jne	.L193
 2291              	.LVL252:
 2292              	.L192:
 2293              	.LBE103:
 2294              	.LBE102:
 425:src/mcu_msg.c ****     
 2295              		.loc 1 425 0
 2296 009a C7030000 		movl	$0x00000000, (%rbx)
 2296      0000
 427:src/mcu_msg.c ****         pf = sval.s + 1;
 2297              		.loc 1 427 0
 2298 00a0 803E2E   		cmpb	$46, (%rsi)
 2299 00a3 7416     		je	.L211
 397:src/mcu_msg.c **** 
 2300              		.loc 1 397 0
 2301 00a5 B8000000 		movl	$0, %eax
 2301      00
 431:src/mcu_msg.c ****     }
 2302              		.loc 1 431 0
 2303 00aa 41B80000 		movl	$0, %r8d
GAS LISTING /tmp/ccd0pRUN.s 			page 62


 2303      0000
 2304              	.LVL253:
 2305              	.L195:
 434:src/mcu_msg.c ****     while(i--) { // convert integer part
 2306              		.loc 1 434 0
 2307 00b0 488D4EFF 		leaq	-1(%rsi), %rcx
 394:src/mcu_msg.c ****     float mf = 0.1;
 2308              		.loc 1 394 0
 2309 00b4 BE010000 		movl	$1, %esi
 2309      00
 435:src/mcu_msg.c ****         *res_val += (*sval.s-- - '0') * m;
 2310              		.loc 1 435 0
 2311 00b9 EB38     		jmp	.L196
 2312              	.LVL254:
 2313              	.L211:
 428:src/mcu_msg.c ****         res++;
 2314              		.loc 1 428 0
 2315 00bb 4C8D4601 		leaq	1(%rsi), %r8
 2316              	.LVL255:
 429:src/mcu_msg.c ****     } else {
 2317              		.loc 1 429 0
 2318 00bf B8010000 		movl	$1, %eax
 2318      00
 2319 00c4 EBEA     		jmp	.L195
 2320              	.LVL256:
 2321              	.L199:
 436:src/mcu_msg.c ****         m *= 10;
 2322              		.loc 1 436 0
 2323 00c6 4889CA   		movq	%rcx, %rdx
 2324 00c9 4883E901 		subq	$1, %rcx
 2325 00cd 0FBE12   		movsbl	(%rdx), %edx
 2326 00d0 83EA30   		subl	$48, %edx
 2327 00d3 0FAFD6   		imull	%esi, %edx
 2328 00d6 660FEFC0 		pxor	%xmm0, %xmm0
 2329 00da F3480F2A 		cvtsi2ssq	%rdx, %xmm0
 2329      C2
 2330 00df F30F5803 		addss	(%rbx), %xmm0
 2331 00e3 F30F1103 		movss	%xmm0, (%rbx)
 437:src/mcu_msg.c ****         res++;
 2332              		.loc 1 437 0
 2333 00e7 8D14B6   		leal	(%rsi,%rsi,4), %edx
 2334 00ea 8D3412   		leal	(%rdx,%rdx), %esi
 2335              	.LVL257:
 438:src/mcu_msg.c ****     }
 2336              		.loc 1 438 0
 2337 00ed 83C001   		addl	$1, %eax
 2338              	.LVL258:
 435:src/mcu_msg.c ****         *res_val += (*sval.s-- - '0') * m;
 2339              		.loc 1 435 0
 2340 00f0 4489CA   		movl	%r9d, %edx
 2341              	.LVL259:
 2342              	.L196:
 2343 00f3 448D4AFF 		leal	-1(%rdx), %r9d
 2344              	.LVL260:
 2345 00f7 6685D2   		testw	%dx, %dx
 2346 00fa 75CA     		jne	.L199
 395:src/mcu_msg.c ****     int sign = 1;
GAS LISTING /tmp/ccd0pRUN.s 			page 63


 2347              		.loc 1 395 0
 2348 00fc F30F100D 		movss	.LC2(%rip), %xmm1
 2348      00000000 
 2349 0104 EB33     		jmp	.L200
 2350              	.LVL261:
 2351              	.L202:
 442:src/mcu_msg.c ****         if(*pf < '0' || *pf > '9') {    // if non valid number, return with error
 2352              		.loc 1 442 0
 2353 0106 80F93B   		cmpb	$59, %cl
 2354 0109 745B     		je	.L201
 443:src/mcu_msg.c ****             return -1;
 2355              		.loc 1 443 0
 2356 010b 83E930   		subl	$48, %ecx
 2357 010e 80F909   		cmpb	$9, %cl
 2358 0111 7773     		ja	.L208
 446:src/mcu_msg.c ****         mf /= 10;
 2359              		.loc 1 446 0
 2360 0113 83EA30   		subl	$48, %edx
 2361 0116 660FEFC0 		pxor	%xmm0, %xmm0
 2362 011a F30F2AC2 		cvtsi2ss	%edx, %xmm0
 2363 011e F30F59C1 		mulss	%xmm1, %xmm0
 2364 0122 F30F5803 		addss	(%rbx), %xmm0
 2365 0126 F30F1103 		movss	%xmm0, (%rbx)
 447:src/mcu_msg.c ****         res++; 
 2366              		.loc 1 447 0
 2367 012a F30F5E0D 		divss	.LC3(%rip), %xmm1
 2367      00000000 
 2368              	.LVL262:
 448:src/mcu_msg.c ****     }
 2369              		.loc 1 448 0
 2370 0132 83C001   		addl	$1, %eax
 2371              	.LVL263:
 442:src/mcu_msg.c ****         if(*pf < '0' || *pf > '9') {    // if non valid number, return with error
 2372              		.loc 1 442 0
 2373 0135 4983C001 		addq	$1, %r8
 2374              	.LVL264:
 2375              	.L200:
 442:src/mcu_msg.c ****         if(*pf < '0' || *pf > '9') {    // if non valid number, return with error
 2376              		.loc 1 442 0 is_stmt 0 discriminator 1
 2377 0139 4D85C0   		testq	%r8, %r8
 2378 013c 7428     		je	.L201
 2379              	.LVL265:
 2380              	.LBB104:
 2381              	.LBB105:
 188:src/mcu_msg.c **** }
 2382              		.loc 1 188 0 is_stmt 1 discriminator 2
 2383 013e 4C89C1   		movq	%r8, %rcx
 2384 0141 482B4C24 		subq	32(%rsp), %rcx
 2384      20
 2385 0146 0FB75424 		movzwl	40(%rsp), %edx
 2385      28
 2386              	.LVL266:
 2387              	.LBE105:
 2388              	.LBE104:
 442:src/mcu_msg.c ****         if(*pf < '0' || *pf > '9') {    // if non valid number, return with error
 2389              		.loc 1 442 0 discriminator 2
 2390 014b 4839D1   		cmpq	%rdx, %rcx
GAS LISTING /tmp/ccd0pRUN.s 			page 64


 2391 014e 7D16     		jge	.L201
 442:src/mcu_msg.c ****         if(*pf < '0' || *pf > '9') {    // if non valid number, return with error
 2392              		.loc 1 442 0 is_stmt 0 discriminator 3
 2393 0150 410FB608 		movzbl	(%r8), %ecx
 2394 0154 0FBED1   		movsbl	%cl, %edx
 2395              	.LVL267:
 2396              	.LBB106:
 2397              	.LBB107:
 142:src/mcu_msg.c ****         case  ' ':
 2398              		.loc 1 142 0 is_stmt 1 discriminator 3
 2399 0157 80F909   		cmpb	$9, %cl
 2400 015a 7CAA     		jl	.L202
 2401 015c 80F90D   		cmpb	$13, %cl
 2402 015f 7E05     		jle	.L201
 2403 0161 80F920   		cmpb	$32, %cl
 2404 0164 75A0     		jne	.L202
 2405              	.LVL268:
 2406              	.L201:
 2407              	.LBE107:
 2408              	.LBE106:
 451:src/mcu_msg.c **** 
 2409              		.loc 1 451 0
 2410 0166 660FEFC0 		pxor	%xmm0, %xmm0
 2411 016a F30F2AC7 		cvtsi2ss	%edi, %xmm0
 2412 016e F30F5903 		mulss	(%rbx), %xmm0
 2413 0172 F30F1103 		movss	%xmm0, (%rbx)
 2414              	.LVL269:
 2415              	.L186:
 454:src/mcu_msg.c **** 
 2416              		.loc 1 454 0
 2417 0176 5B       		popq	%rbx
 2418              	.LCFI89:
 2419              		.cfi_remember_state
 2420              		.cfi_def_cfa_offset 8
 2421              	.LVL270:
 2422 0177 C3       		ret
 2423              	.LVL271:
 2424              	.L204:
 2425              	.LCFI90:
 2426              		.cfi_restore_state
 400:src/mcu_msg.c **** 
 2427              		.loc 1 400 0
 2428 0178 B8FFFFFF 		movl	$-1, %eax
 2428      FF
 2429 017d EBF7     		jmp	.L186
 2430              	.LVL272:
 2431              	.L206:
 421:src/mcu_msg.c ****         }
 2432              		.loc 1 421 0
 2433 017f B8FFFFFF 		movl	$-1, %eax
 2433      FF
 2434 0184 EBF0     		jmp	.L186
 2435              	.LVL273:
 2436              	.L208:
 444:src/mcu_msg.c ****         }
 2437              		.loc 1 444 0
 2438 0186 B8FFFFFF 		movl	$-1, %eax
GAS LISTING /tmp/ccd0pRUN.s 			page 65


 2438      FF
 2439              	.LVL274:
 2440 018b EBE9     		jmp	.L186
 2441              		.cfi_endproc
 2442              	.LFE43:
 2444              		.section	.text.msg_parser_get_string,"ax",@progbits
 2445              		.globl	msg_parser_get_string
 2447              	msg_parser_get_string:
 2448              	.LFB44:
 459:src/mcu_msg.c ****     msg_str_t res = __find_val(obj, key);
 2449              		.loc 1 459 0
 2450              		.cfi_startproc
 2451              	.LVL275:
 2452 0000 4883EC28 		subq	$40, %rsp
 2453              	.LCFI91:
 2454              		.cfi_def_cfa_offset 48
 459:src/mcu_msg.c ****     msg_str_t res = __find_val(obj, key);
 2455              		.loc 1 459 0
 2456 0004 64488B04 		movq	%fs:40, %rax
 2456      25280000 
 2456      00
 2457 000d 48894424 		movq	%rax, 24(%rsp)
 2457      18
 2458 0012 31C0     		xorl	%eax, %eax
 460:src/mcu_msg.c ****     char qmark;
 2459              		.loc 1 460 0
 2460 0014 FF742448 		pushq	72(%rsp)
 2461              	.LCFI92:
 2462              		.cfi_def_cfa_offset 56
 2463 0018 FF742448 		pushq	72(%rsp)
 2464              	.LCFI93:
 2465              		.cfi_def_cfa_offset 64
 2466 001c FF742448 		pushq	72(%rsp)
 2467              	.LCFI94:
 2468              		.cfi_def_cfa_offset 72
 2469 0020 FF742448 		pushq	72(%rsp)
 2470              	.LCFI95:
 2471              		.cfi_def_cfa_offset 80
 2472 0024 E8000000 		call	__find_val
 2472      00
 2473              	.LVL276:
 2474 0029 48894424 		movq	%rax, 32(%rsp)
 2474      20
 2475 002e 48895424 		movq	%rdx, 40(%rsp)
 2475      28
 464:src/mcu_msg.c ****         msg_destroy_string(&res);
 2476              		.loc 1 464 0
 2477 0033 4883C420 		addq	$32, %rsp
 2478              	.LCFI96:
 2479              		.cfi_def_cfa_offset 48
 2480 0037 4885C0   		testq	%rax, %rax
 2481 003a 7422     		je	.L221
 469:src/mcu_msg.c **** 
 2482              		.loc 1 469 0
 2483 003c 0FB638   		movzbl	(%rax), %edi
 2484              	.LVL277:
 471:src/mcu_msg.c ****         msg_destroy_string(&res);
GAS LISTING /tmp/ccd0pRUN.s 			page 66


 2485              		.loc 1 471 0
 2486 003f 4080FF27 		cmpb	$39, %dil
 2487 0043 0F95C1   		setne	%cl
 2488 0046 4080FF22 		cmpb	$34, %dil
 2489 004a 0F95C2   		setne	%dl
 2490 004d 84D1     		testb	%dl, %cl
 2491 004f 7520     		jne	.L222
 476:src/mcu_msg.c ****     while(__is_p_in_str(obj.content, p) && *p != qmark) { // calc len
 2492              		.loc 1 476 0
 2493 0051 488D7001 		leaq	1(%rax), %rsi
 2494 0055 48893424 		movq	%rsi, (%rsp)
 2495              	.LVL278:
 2496 0059 4889F0   		movq	%rsi, %rax
 477:src/mcu_msg.c ****         p++;
 2497              		.loc 1 477 0
 2498 005c EB2A     		jmp	.L216
 2499              	.LVL279:
 2500              	.L221:
 465:src/mcu_msg.c ****         return res;
 2501              		.loc 1 465 0
 2502 005e 4889E7   		movq	%rsp, %rdi
 2503 0061 E8000000 		call	msg_destroy_string
 2503      00
 2504              	.LVL280:
 466:src/mcu_msg.c ****     }
 2505              		.loc 1 466 0
 2506 0066 488B0424 		movq	(%rsp), %rax
 2507 006a 488B5424 		movq	8(%rsp), %rdx
 2507      08
 2508 006f EB43     		jmp	.L214
 2509              	.LVL281:
 2510              	.L222:
 472:src/mcu_msg.c ****         return res;
 2511              		.loc 1 472 0
 2512 0071 4889E7   		movq	%rsp, %rdi
 2513              	.LVL282:
 2514 0074 E8000000 		call	msg_destroy_string
 2514      00
 2515              	.LVL283:
 473:src/mcu_msg.c ****     }
 2516              		.loc 1 473 0
 2517 0079 488B0424 		movq	(%rsp), %rax
 2518 007d 488B5424 		movq	8(%rsp), %rdx
 2518      08
 2519 0082 EB30     		jmp	.L214
 2520              	.LVL284:
 2521              	.L218:
 478:src/mcu_msg.c ****     }
 2522              		.loc 1 478 0
 2523 0084 4883C001 		addq	$1, %rax
 2524              	.LVL285:
 2525              	.L216:
 2526              	.LBB108:
 2527              	.LBB109:
 188:src/mcu_msg.c **** }
 2528              		.loc 1 188 0
 2529 0088 4989C0   		movq	%rax, %r8
GAS LISTING /tmp/ccd0pRUN.s 			page 67


 2530 008b 4889C1   		movq	%rax, %rcx
 2531 008e 482B4C24 		subq	64(%rsp), %rcx
 2531      40
 2532 0093 0FB75424 		movzwl	72(%rsp), %edx
 2532      48
 2533              	.LVL286:
 2534              	.LBE109:
 2535              	.LBE108:
 477:src/mcu_msg.c ****         p++;
 2536              		.loc 1 477 0
 2537 0098 4839D1   		cmpq	%rdx, %rcx
 2538 009b 7D05     		jge	.L217
 477:src/mcu_msg.c ****         p++;
 2539              		.loc 1 477 0 is_stmt 0 discriminator 1
 2540 009d 403838   		cmpb	%dil, (%rax)
 2541 00a0 75E2     		jne	.L218
 2542              	.L217:
 480:src/mcu_msg.c ****     return res;
 2543              		.loc 1 480 0 is_stmt 1
 2544 00a2 4929F0   		subq	%rsi, %r8
 2545 00a5 66448944 		movw	%r8w, 8(%rsp)
 2545      2408
 481:src/mcu_msg.c **** }
 2546              		.loc 1 481 0
 2547 00ab 488B0424 		movq	(%rsp), %rax
 2548              	.LVL287:
 2549 00af 488B5424 		movq	8(%rsp), %rdx
 2549      08
 2550              	.LVL288:
 2551              	.L214:
 482:src/mcu_msg.c **** 
 2552              		.loc 1 482 0
 2553 00b4 488B7424 		movq	24(%rsp), %rsi
 2553      18
 2554 00b9 64483334 		xorq	%fs:40, %rsi
 2554      25280000 
 2554      00
 2555 00c2 7505     		jne	.L223
 2556 00c4 4883C428 		addq	$40, %rsp
 2557              	.LCFI97:
 2558              		.cfi_remember_state
 2559              		.cfi_def_cfa_offset 8
 2560 00c8 C3       		ret
 2561              	.L223:
 2562              	.LCFI98:
 2563              		.cfi_restore_state
 2564 00c9 E8000000 		call	__stack_chk_fail@PLT
 2564      00
 2565              	.LVL289:
 2566              		.cfi_endproc
 2567              	.LFE44:
 2569              		.section	.text.msg_hnd_create,"ax",@progbits
 2570              		.globl	msg_hnd_create
 2572              	msg_hnd_create:
 2573              	.LFB55:
 591:src/mcu_msg.c **** 
 2574              		.loc 1 591 0
GAS LISTING /tmp/ccd0pRUN.s 			page 68


 2575              		.cfi_startproc
 2576              	.LVL290:
 2577 0000 4889F8   		movq	%rdi, %rax
 596:src/mcu_msg.c ****     __str_buff.buff.len = 0;
 2578              		.loc 1 596 0
 2579 0003 48C70500 		movq	$0, __str_buff(%rip)
 2579      00000000 
 2579      000000
 2580 000e 48C70500 		movq	$0, 16+__str_buff(%rip)
 2580      00000000 
 2580      000000
 597:src/mcu_msg.c **** 
 2581              		.loc 1 597 0
 2582 0019 66C70500 		movw	$0, 8+__str_buff(%rip)
 2582      00000000 
 2582      00
 599:src/mcu_msg.c **** 
 2583              		.loc 1 599 0
 2584 0022 48893500 		movq	%rsi, __putc(%rip)
 2584      000000
 602:src/mcu_msg.c ****     hnd.print_str         = __msg_print_str;
 2585              		.loc 1 602 0
 2586 0029 488D1500 		leaq	__msg_print(%rip), %rdx
 2586      000000
 2587 0030 48895424 		movq	%rdx, -80(%rsp)
 2587      B0
 603:src/mcu_msg.c ****     hnd.print_int         = __msg_print_int;
 2588              		.loc 1 603 0
 2589 0035 488D0D00 		leaq	__msg_print_str(%rip), %rcx
 2589      000000
 2590 003c 48894C24 		movq	%rcx, -72(%rsp)
 2590      B8
 604:src/mcu_msg.c ****     hnd.print_float       = __msg_print_float;
 2591              		.loc 1 604 0
 2592 0041 488D3D00 		leaq	__msg_print_int(%rip), %rdi
 2592      000000
 2593              	.LVL291:
 2594 0048 48897C24 		movq	%rdi, -64(%rsp)
 2594      C0
 605:src/mcu_msg.c ****     hnd.enable_buff       = __msg_enable_buff;
 2595              		.loc 1 605 0
 2596 004d 488D1500 		leaq	__msg_print_float(%rip), %rdx
 2596      000000
 2597 0054 48895424 		movq	%rdx, -56(%rsp)
 2597      C8
 606:src/mcu_msg.c ****     hnd.disable_buff      = __msg_disable_buff;
 2598              		.loc 1 606 0
 2599 0059 488D0D00 		leaq	__msg_enable_buff(%rip), %rcx
 2599      000000
 2600 0060 48894C24 		movq	%rcx, -48(%rsp)
 2600      D0
 607:src/mcu_msg.c ****     hnd.init_str_buff     = __msg_init_str_buff;
 2601              		.loc 1 607 0
 2602 0065 488D3D00 		leaq	__msg_disable_buff(%rip), %rdi
 2602      000000
 2603 006c 48897C24 		movq	%rdi, -40(%rsp)
 2603      D8
GAS LISTING /tmp/ccd0pRUN.s 			page 69


 608:src/mcu_msg.c ****     hnd.reset_str_buff    = __msg_reset_str_buff;
 2604              		.loc 1 608 0
 2605 0071 488D1500 		leaq	__msg_init_str_buff(%rip), %rdx
 2605      000000
 2606 0078 48895424 		movq	%rdx, -32(%rsp)
 2606      E0
 609:src/mcu_msg.c ****     hnd.print_wrapper_msg = __msg_wrapper_print_msg;
 2607              		.loc 1 609 0
 2608 007d 488D0D00 		leaq	__msg_reset_str_buff(%rip), %rcx
 2608      000000
 2609 0084 48894C24 		movq	%rcx, -24(%rsp)
 2609      E8
 610:src/mcu_msg.c ****     
 2610              		.loc 1 610 0
 2611 0089 488D3D00 		leaq	__msg_wrapper_print_msg(%rip), %rdi
 2611      000000
 2612 0090 48897C24 		movq	%rdi, -16(%rsp)
 2612      F0
 612:src/mcu_msg.c **** }
 2613              		.loc 1 612 0
 2614 0095 488B7424 		movq	-88(%rsp), %rsi
 2614      A8
 2615              	.LVL292:
 2616 009a 488B7C24 		movq	-80(%rsp), %rdi
 2616      B0
 2617 009f 488930   		movq	%rsi, (%rax)
 2618 00a2 48897808 		movq	%rdi, 8(%rax)
 2619 00a6 488B7424 		movq	-72(%rsp), %rsi
 2619      B8
 2620 00ab 488B7C24 		movq	-64(%rsp), %rdi
 2620      C0
 2621 00b0 48897010 		movq	%rsi, 16(%rax)
 2622 00b4 48897818 		movq	%rdi, 24(%rax)
 2623 00b8 488B7424 		movq	-56(%rsp), %rsi
 2623      C8
 2624 00bd 488B7C24 		movq	-48(%rsp), %rdi
 2624      D0
 2625 00c2 48897020 		movq	%rsi, 32(%rax)
 2626 00c6 48897828 		movq	%rdi, 40(%rax)
 2627 00ca 488B7424 		movq	-40(%rsp), %rsi
 2627      D8
 2628 00cf 488B7C24 		movq	-32(%rsp), %rdi
 2628      E0
 2629 00d4 48897030 		movq	%rsi, 48(%rax)
 2630 00d8 48897838 		movq	%rdi, 56(%rax)
 2631 00dc 488B7424 		movq	-24(%rsp), %rsi
 2631      E8
 2632 00e1 488B7C24 		movq	-16(%rsp), %rdi
 2632      F0
 2633 00e6 48897040 		movq	%rsi, 64(%rax)
 2634 00ea 48897848 		movq	%rdi, 72(%rax)
 613:src/mcu_msg.c **** 
 2635              		.loc 1 613 0
 2636 00ee C3       		ret
 2637              		.cfi_endproc
 2638              	.LFE55:
 2640              		.section	.text.msg_wrap_destroy,"ax",@progbits
GAS LISTING /tmp/ccd0pRUN.s 			page 70


 2641              		.globl	msg_wrap_destroy
 2643              	msg_wrap_destroy:
 2644              	.LFB60:
 722:src/mcu_msg.c **** 
 723:src/mcu_msg.c **** 
 724:src/mcu_msg.c **** 
 725:src/mcu_msg.c **** 
 726:src/mcu_msg.c **** void msg_wrap_destroy(msg_wrap_t *msg)
 727:src/mcu_msg.c **** {
 2645              		.loc 1 727 0
 2646              		.cfi_startproc
 2647              	.LVL293:
 2648 0000 53       		pushq	%rbx
 2649              	.LCFI99:
 2650              		.cfi_def_cfa_offset 16
 2651              		.cfi_offset 3, -16
 2652 0001 4889FB   		movq	%rdi, %rbx
 728:src/mcu_msg.c ****     msg_destroy_string(&msg->id);
 2653              		.loc 1 728 0
 2654 0004 E8000000 		call	msg_destroy_string
 2654      00
 2655              	.LVL294:
 729:src/mcu_msg.c ****     msg->cmd_queue = NULL;
 2656              		.loc 1 729 0
 2657 0009 48C74318 		movq	$0, 24(%rbx)
 2657      00000000 
 730:src/mcu_msg.c ****     msg->obj_queue = NULL;
 2658              		.loc 1 730 0
 2659 0011 48C74310 		movq	$0, 16(%rbx)
 2659      00000000 
 731:src/mcu_msg.c **** }
 2660              		.loc 1 731 0
 2661 0019 5B       		popq	%rbx
 2662              	.LCFI100:
 2663              		.cfi_def_cfa_offset 8
 2664              	.LVL295:
 2665 001a C3       		ret
 2666              		.cfi_endproc
 2667              	.LFE60:
 2669              		.section	.text.msg_wrap_destroy_obj,"ax",@progbits
 2670              		.globl	msg_wrap_destroy_obj
 2672              	msg_wrap_destroy_obj:
 2673              	.LFB61:
 732:src/mcu_msg.c **** 
 733:src/mcu_msg.c **** void msg_wrap_destroy_obj(msg_wrap_obj_t *obj)
 734:src/mcu_msg.c **** {
 2674              		.loc 1 734 0
 2675              		.cfi_startproc
 2676              	.LVL296:
 2677 0000 53       		pushq	%rbx
 2678              	.LCFI101:
 2679              		.cfi_def_cfa_offset 16
 2680              		.cfi_offset 3, -16
 2681 0001 4889FB   		movq	%rdi, %rbx
 735:src/mcu_msg.c ****     msg_destroy_string(&obj->id);
 2682              		.loc 1 735 0
 2683 0004 E8000000 		call	msg_destroy_string
GAS LISTING /tmp/ccd0pRUN.s 			page 71


 2683      00
 2684              	.LVL297:
 736:src/mcu_msg.c ****     obj->int_queue = NULL;
 2685              		.loc 1 736 0
 2686 0009 48C74310 		movq	$0, 16(%rbx)
 2686      00000000 
 737:src/mcu_msg.c ****     obj->float_queue = NULL;
 2687              		.loc 1 737 0
 2688 0011 48C74318 		movq	$0, 24(%rbx)
 2688      00000000 
 738:src/mcu_msg.c ****     obj->string_queue = NULL;
 2689              		.loc 1 738 0
 2690 0019 48C74320 		movq	$0, 32(%rbx)
 2690      00000000 
 739:src/mcu_msg.c ****     obj->next = NULL;
 2691              		.loc 1 739 0
 2692 0021 48C74328 		movq	$0, 40(%rbx)
 2692      00000000 
 740:src/mcu_msg.c **** }
 2693              		.loc 1 740 0
 2694 0029 5B       		popq	%rbx
 2695              	.LCFI102:
 2696              		.cfi_def_cfa_offset 8
 2697              	.LVL298:
 2698 002a C3       		ret
 2699              		.cfi_endproc
 2700              	.LFE61:
 2702              		.section	.text.msg_wrap_destroy_cmd,"ax",@progbits
 2703              		.globl	msg_wrap_destroy_cmd
 2705              	msg_wrap_destroy_cmd:
 2706              	.LFB62:
 741:src/mcu_msg.c **** 
 742:src/mcu_msg.c **** void msg_wrap_destroy_cmd(msg_wrap_cmd_t *cmd)
 743:src/mcu_msg.c **** {
 2707              		.loc 1 743 0
 2708              		.cfi_startproc
 2709              	.LVL299:
 2710 0000 53       		pushq	%rbx
 2711              	.LCFI103:
 2712              		.cfi_def_cfa_offset 16
 2713              		.cfi_offset 3, -16
 2714 0001 4889FB   		movq	%rdi, %rbx
 744:src/mcu_msg.c ****     msg_destroy_string(&cmd->cmd);
 2715              		.loc 1 744 0
 2716 0004 E8000000 		call	msg_destroy_string
 2716      00
 2717              	.LVL300:
 745:src/mcu_msg.c ****     cmd->next = NULL;
 2718              		.loc 1 745 0
 2719 0009 48C74310 		movq	$0, 16(%rbx)
 2719      00000000 
 746:src/mcu_msg.c **** }
 2720              		.loc 1 746 0
 2721 0011 5B       		popq	%rbx
 2722              	.LCFI104:
 2723              		.cfi_def_cfa_offset 8
 2724              	.LVL301:
GAS LISTING /tmp/ccd0pRUN.s 			page 72


 2725 0012 C3       		ret
 2726              		.cfi_endproc
 2727              	.LFE62:
 2729              		.section	.text.msg_wrap_destroy_str,"ax",@progbits
 2730              		.globl	msg_wrap_destroy_str
 2732              	msg_wrap_destroy_str:
 2733              	.LFB63:
 747:src/mcu_msg.c **** 
 748:src/mcu_msg.c **** void msg_wrap_destroy_str(msg_wrap_str_t *str)
 749:src/mcu_msg.c **** {
 2734              		.loc 1 749 0
 2735              		.cfi_startproc
 2736              	.LVL302:
 2737 0000 53       		pushq	%rbx
 2738              	.LCFI105:
 2739              		.cfi_def_cfa_offset 16
 2740              		.cfi_offset 3, -16
 2741 0001 4889FB   		movq	%rdi, %rbx
 750:src/mcu_msg.c ****     msg_destroy_string(&str->id);
 2742              		.loc 1 750 0
 2743 0004 E8000000 		call	msg_destroy_string
 2743      00
 2744              	.LVL303:
 751:src/mcu_msg.c ****     msg_destroy_string(&str->content);
 2745              		.loc 1 751 0
 2746 0009 488D7B10 		leaq	16(%rbx), %rdi
 2747 000d E8000000 		call	msg_destroy_string
 2747      00
 2748              	.LVL304:
 752:src/mcu_msg.c ****     str->next = NULL;
 2749              		.loc 1 752 0
 2750 0012 48C74320 		movq	$0, 32(%rbx)
 2750      00000000 
 753:src/mcu_msg.c **** }
 2751              		.loc 1 753 0
 2752 001a 5B       		popq	%rbx
 2753              	.LCFI106:
 2754              		.cfi_def_cfa_offset 8
 2755              	.LVL305:
 2756 001b C3       		ret
 2757              		.cfi_endproc
 2758              	.LFE63:
 2760              		.section	.text.msg_wrap_destroy_int,"ax",@progbits
 2761              		.globl	msg_wrap_destroy_int
 2763              	msg_wrap_destroy_int:
 2764              	.LFB64:
 754:src/mcu_msg.c **** 
 755:src/mcu_msg.c **** void msg_wrap_destroy_int(msg_wrap_int_t *i)
 756:src/mcu_msg.c **** {
 2765              		.loc 1 756 0
 2766              		.cfi_startproc
 2767              	.LVL306:
 2768 0000 53       		pushq	%rbx
 2769              	.LCFI107:
 2770              		.cfi_def_cfa_offset 16
 2771              		.cfi_offset 3, -16
 2772 0001 4889FB   		movq	%rdi, %rbx
GAS LISTING /tmp/ccd0pRUN.s 			page 73


 757:src/mcu_msg.c ****     msg_destroy_string(&i->id);
 2773              		.loc 1 757 0
 2774 0004 E8000000 		call	msg_destroy_string
 2774      00
 2775              	.LVL307:
 758:src/mcu_msg.c ****     i->val = 0;
 2776              		.loc 1 758 0
 2777 0009 C7431000 		movl	$0, 16(%rbx)
 2777      000000
 759:src/mcu_msg.c ****     i->next = NULL;
 2778              		.loc 1 759 0
 2779 0010 48C74318 		movq	$0, 24(%rbx)
 2779      00000000 
 760:src/mcu_msg.c **** }
 2780              		.loc 1 760 0
 2781 0018 5B       		popq	%rbx
 2782              	.LCFI108:
 2783              		.cfi_def_cfa_offset 8
 2784              	.LVL308:
 2785 0019 C3       		ret
 2786              		.cfi_endproc
 2787              	.LFE64:
 2789              		.section	.text.msg_wrap_destroy_float,"ax",@progbits
 2790              		.globl	msg_wrap_destroy_float
 2792              	msg_wrap_destroy_float:
 2793              	.LFB65:
 761:src/mcu_msg.c **** 
 762:src/mcu_msg.c **** void msg_wrap_destroy_float(msg_wrap_float_t *f)
 763:src/mcu_msg.c **** {
 2794              		.loc 1 763 0
 2795              		.cfi_startproc
 2796              	.LVL309:
 2797 0000 53       		pushq	%rbx
 2798              	.LCFI109:
 2799              		.cfi_def_cfa_offset 16
 2800              		.cfi_offset 3, -16
 2801 0001 4889FB   		movq	%rdi, %rbx
 764:src/mcu_msg.c ****     msg_destroy_string(&f->id);
 2802              		.loc 1 764 0
 2803 0004 E8000000 		call	msg_destroy_string
 2803      00
 2804              	.LVL310:
 765:src/mcu_msg.c ****     f->val = 0.0;
 2805              		.loc 1 765 0
 2806 0009 C7431000 		movl	$0x00000000, 16(%rbx)
 2806      000000
 766:src/mcu_msg.c ****     f->next = NULL;
 2807              		.loc 1 766 0
 2808 0010 48C74318 		movq	$0, 24(%rbx)
 2808      00000000 
 767:src/mcu_msg.c ****     f->prec = 0;
 2809              		.loc 1 767 0
 2810 0018 C6431400 		movb	$0, 20(%rbx)
 768:src/mcu_msg.c **** }
 2811              		.loc 1 768 0
 2812 001c 5B       		popq	%rbx
 2813              	.LCFI110:
GAS LISTING /tmp/ccd0pRUN.s 			page 74


 2814              		.cfi_def_cfa_offset 8
 2815              	.LVL311:
 2816 001d C3       		ret
 2817              		.cfi_endproc
 2818              	.LFE65:
 2820              		.section	.text.msg_wrapper_init_msg,"ax",@progbits
 2821              		.globl	msg_wrapper_init_msg
 2823              	msg_wrapper_init_msg:
 2824              	.LFB66:
 769:src/mcu_msg.c **** 
 770:src/mcu_msg.c **** 
 771:src/mcu_msg.c **** 
 772:src/mcu_msg.c **** msg_wrap_t msg_wrapper_init_msg(char *msg_id)
 773:src/mcu_msg.c **** {
 2825              		.loc 1 773 0
 2826              		.cfi_startproc
 2827              	.LVL312:
 2828 0000 53       		pushq	%rbx
 2829              	.LCFI111:
 2830              		.cfi_def_cfa_offset 16
 2831              		.cfi_offset 3, -16
 2832 0001 4883EC20 		subq	$32, %rsp
 2833              	.LCFI112:
 2834              		.cfi_def_cfa_offset 48
 2835 0005 4889FB   		movq	%rdi, %rbx
 774:src/mcu_msg.c ****     msg_wrap_t res;
 775:src/mcu_msg.c ****     res.id = msg_init_string(msg_id);
 2836              		.loc 1 775 0
 2837 0008 4889F7   		movq	%rsi, %rdi
 2838              	.LVL313:
 2839 000b E8000000 		call	msg_init_string
 2839      00
 2840              	.LVL314:
 776:src/mcu_msg.c ****     res.cmd_queue = NULL;
 2841              		.loc 1 776 0
 2842 0010 48C74424 		movq	$0, 24(%rsp)
 2842      18000000 
 2842      00
 777:src/mcu_msg.c ****     res.obj_queue = NULL;
 2843              		.loc 1 777 0
 2844 0019 48C74424 		movq	$0, 16(%rsp)
 2844      10000000 
 2844      00
 778:src/mcu_msg.c ****     return res;
 2845              		.loc 1 778 0
 2846 0022 488903   		movq	%rax, (%rbx)
 2847 0025 48895308 		movq	%rdx, 8(%rbx)
 2848 0029 488B4424 		movq	16(%rsp), %rax
 2848      10
 2849 002e 488B5424 		movq	24(%rsp), %rdx
 2849      18
 2850 0033 48894310 		movq	%rax, 16(%rbx)
 2851 0037 48895318 		movq	%rdx, 24(%rbx)
 779:src/mcu_msg.c **** }
 2852              		.loc 1 779 0
 2853 003b 4889D8   		movq	%rbx, %rax
 2854 003e 4883C420 		addq	$32, %rsp
GAS LISTING /tmp/ccd0pRUN.s 			page 75


 2855              	.LCFI113:
 2856              		.cfi_def_cfa_offset 16
 2857 0042 5B       		popq	%rbx
 2858              	.LCFI114:
 2859              		.cfi_def_cfa_offset 8
 2860              	.LVL315:
 2861 0043 C3       		ret
 2862              		.cfi_endproc
 2863              	.LFE66:
 2865              		.section	.text.msg_wrapper_init_cmd,"ax",@progbits
 2866              		.globl	msg_wrapper_init_cmd
 2868              	msg_wrapper_init_cmd:
 2869              	.LFB67:
 780:src/mcu_msg.c **** 
 781:src/mcu_msg.c **** 
 782:src/mcu_msg.c **** msg_wrap_cmd_t msg_wrapper_init_cmd(char *cmd)
 783:src/mcu_msg.c **** {
 2870              		.loc 1 783 0
 2871              		.cfi_startproc
 2872              	.LVL316:
 2873 0000 53       		pushq	%rbx
 2874              	.LCFI115:
 2875              		.cfi_def_cfa_offset 16
 2876              		.cfi_offset 3, -16
 2877 0001 4883EC20 		subq	$32, %rsp
 2878              	.LCFI116:
 2879              		.cfi_def_cfa_offset 48
 2880 0005 4889FB   		movq	%rdi, %rbx
 784:src/mcu_msg.c ****     msg_wrap_cmd_t res;
 785:src/mcu_msg.c ****     res.cmd = msg_init_string(cmd);
 2881              		.loc 1 785 0
 2882 0008 4889F7   		movq	%rsi, %rdi
 2883              	.LVL317:
 2884 000b E8000000 		call	msg_init_string
 2884      00
 2885              	.LVL318:
 786:src/mcu_msg.c ****     res.next = NULL;
 787:src/mcu_msg.c ****     return res;
 2886              		.loc 1 787 0
 2887 0010 488903   		movq	%rax, (%rbx)
 2888 0013 48895308 		movq	%rdx, 8(%rbx)
 2889 0017 48C74310 		movq	$0, 16(%rbx)
 2889      00000000 
 788:src/mcu_msg.c **** }
 2890              		.loc 1 788 0
 2891 001f 4889D8   		movq	%rbx, %rax
 2892 0022 4883C420 		addq	$32, %rsp
 2893              	.LCFI117:
 2894              		.cfi_def_cfa_offset 16
 2895 0026 5B       		popq	%rbx
 2896              	.LCFI118:
 2897              		.cfi_def_cfa_offset 8
 2898              	.LVL319:
 2899 0027 C3       		ret
 2900              		.cfi_endproc
 2901              	.LFE67:
 2903              		.section	.text.msg_wrapper_init_obj,"ax",@progbits
GAS LISTING /tmp/ccd0pRUN.s 			page 76


 2904              		.globl	msg_wrapper_init_obj
 2906              	msg_wrapper_init_obj:
 2907              	.LFB68:
 789:src/mcu_msg.c **** 
 790:src/mcu_msg.c **** msg_wrap_obj_t msg_wrapper_init_obj(char *obj_id)
 791:src/mcu_msg.c **** {
 2908              		.loc 1 791 0
 2909              		.cfi_startproc
 2910              	.LVL320:
 2911 0000 53       		pushq	%rbx
 2912              	.LCFI119:
 2913              		.cfi_def_cfa_offset 16
 2914              		.cfi_offset 3, -16
 2915 0001 4883EC30 		subq	$48, %rsp
 2916              	.LCFI120:
 2917              		.cfi_def_cfa_offset 64
 2918 0005 4889FB   		movq	%rdi, %rbx
 792:src/mcu_msg.c ****     msg_wrap_obj_t res;
 793:src/mcu_msg.c ****     res.id = msg_init_string(obj_id);
 2919              		.loc 1 793 0
 2920 0008 4889F7   		movq	%rsi, %rdi
 2921              	.LVL321:
 2922 000b E8000000 		call	msg_init_string
 2922      00
 2923              	.LVL322:
 794:src/mcu_msg.c ****     res.int_queue = NULL;
 2924              		.loc 1 794 0
 2925 0010 48C74424 		movq	$0, 16(%rsp)
 2925      10000000 
 2925      00
 795:src/mcu_msg.c ****     res.float_queue = NULL;
 2926              		.loc 1 795 0
 2927 0019 48C74424 		movq	$0, 24(%rsp)
 2927      18000000 
 2927      00
 796:src/mcu_msg.c ****     res.string_queue = NULL;
 2928              		.loc 1 796 0
 2929 0022 48C74424 		movq	$0, 32(%rsp)
 2929      20000000 
 2929      00
 797:src/mcu_msg.c ****     res.next = NULL;
 2930              		.loc 1 797 0
 2931 002b 48C74424 		movq	$0, 40(%rsp)
 2931      28000000 
 2931      00
 798:src/mcu_msg.c ****     return res;
 2932              		.loc 1 798 0
 2933 0034 488903   		movq	%rax, (%rbx)
 2934 0037 48895308 		movq	%rdx, 8(%rbx)
 2935 003b 488B4424 		movq	16(%rsp), %rax
 2935      10
 2936 0040 488B5424 		movq	24(%rsp), %rdx
 2936      18
 2937 0045 48894310 		movq	%rax, 16(%rbx)
 2938 0049 48895318 		movq	%rdx, 24(%rbx)
 2939 004d 488B4424 		movq	32(%rsp), %rax
 2939      20
GAS LISTING /tmp/ccd0pRUN.s 			page 77


 2940 0052 488B5424 		movq	40(%rsp), %rdx
 2940      28
 2941 0057 48894320 		movq	%rax, 32(%rbx)
 2942 005b 48895328 		movq	%rdx, 40(%rbx)
 799:src/mcu_msg.c **** }
 2943              		.loc 1 799 0
 2944 005f 4889D8   		movq	%rbx, %rax
 2945 0062 4883C430 		addq	$48, %rsp
 2946              	.LCFI121:
 2947              		.cfi_def_cfa_offset 16
 2948 0066 5B       		popq	%rbx
 2949              	.LCFI122:
 2950              		.cfi_def_cfa_offset 8
 2951              	.LVL323:
 2952 0067 C3       		ret
 2953              		.cfi_endproc
 2954              	.LFE68:
 2956              		.section	.text.msg_wrapper_init_string,"ax",@progbits
 2957              		.globl	msg_wrapper_init_string
 2959              	msg_wrapper_init_string:
 2960              	.LFB69:
 800:src/mcu_msg.c **** 
 801:src/mcu_msg.c **** msg_wrap_str_t msg_wrapper_init_string(char *id, char *content)
 802:src/mcu_msg.c **** {
 2961              		.loc 1 802 0
 2962              		.cfi_startproc
 2963              	.LVL324:
 2964 0000 4156     		pushq	%r14
 2965              	.LCFI123:
 2966              		.cfi_def_cfa_offset 16
 2967              		.cfi_offset 14, -16
 2968 0002 4155     		pushq	%r13
 2969              	.LCFI124:
 2970              		.cfi_def_cfa_offset 24
 2971              		.cfi_offset 13, -24
 2972 0004 55       		pushq	%rbp
 2973              	.LCFI125:
 2974              		.cfi_def_cfa_offset 32
 2975              		.cfi_offset 6, -32
 2976 0005 53       		pushq	%rbx
 2977              	.LCFI126:
 2978              		.cfi_def_cfa_offset 40
 2979              		.cfi_offset 3, -40
 2980 0006 4883EC38 		subq	$56, %rsp
 2981              	.LCFI127:
 2982              		.cfi_def_cfa_offset 96
 2983 000a 4889FB   		movq	%rdi, %rbx
 2984 000d 4889D5   		movq	%rdx, %rbp
 803:src/mcu_msg.c ****     msg_wrap_str_t res;
 804:src/mcu_msg.c ****     res.id = msg_init_string(id);
 2985              		.loc 1 804 0
 2986 0010 4889F7   		movq	%rsi, %rdi
 2987              	.LVL325:
 2988 0013 E8000000 		call	msg_init_string
 2988      00
 2989              	.LVL326:
 2990 0018 4989C5   		movq	%rax, %r13
GAS LISTING /tmp/ccd0pRUN.s 			page 78


 2991 001b 4989D6   		movq	%rdx, %r14
 805:src/mcu_msg.c ****     res.content = msg_init_string(content);
 2992              		.loc 1 805 0
 2993 001e 4889EF   		movq	%rbp, %rdi
 2994 0021 E8000000 		call	msg_init_string
 2994      00
 2995              	.LVL327:
 806:src/mcu_msg.c ****     res.next = NULL;
 807:src/mcu_msg.c ****     return res;
 2996              		.loc 1 807 0
 2997 0026 4C892B   		movq	%r13, (%rbx)
 2998 0029 4C897308 		movq	%r14, 8(%rbx)
 2999 002d 48894310 		movq	%rax, 16(%rbx)
 3000 0031 48895318 		movq	%rdx, 24(%rbx)
 3001 0035 48C74320 		movq	$0, 32(%rbx)
 3001      00000000 
 808:src/mcu_msg.c **** }
 3002              		.loc 1 808 0
 3003 003d 4889D8   		movq	%rbx, %rax
 3004 0040 4883C438 		addq	$56, %rsp
 3005              	.LCFI128:
 3006              		.cfi_def_cfa_offset 40
 3007 0044 5B       		popq	%rbx
 3008              	.LCFI129:
 3009              		.cfi_def_cfa_offset 32
 3010              	.LVL328:
 3011 0045 5D       		popq	%rbp
 3012              	.LCFI130:
 3013              		.cfi_def_cfa_offset 24
 3014              	.LVL329:
 3015 0046 415D     		popq	%r13
 3016              	.LCFI131:
 3017              		.cfi_def_cfa_offset 16
 3018 0048 415E     		popq	%r14
 3019              	.LCFI132:
 3020              		.cfi_def_cfa_offset 8
 3021 004a C3       		ret
 3022              		.cfi_endproc
 3023              	.LFE69:
 3025              		.section	.text.msg_wrapper_init_int,"ax",@progbits
 3026              		.globl	msg_wrapper_init_int
 3028              	msg_wrapper_init_int:
 3029              	.LFB70:
 809:src/mcu_msg.c **** 
 810:src/mcu_msg.c **** msg_wrap_int_t msg_wrapper_init_int(char *id, int val)
 811:src/mcu_msg.c **** {
 3030              		.loc 1 811 0
 3031              		.cfi_startproc
 3032              	.LVL330:
 3033 0000 55       		pushq	%rbp
 3034              	.LCFI133:
 3035              		.cfi_def_cfa_offset 16
 3036              		.cfi_offset 6, -16
 3037 0001 53       		pushq	%rbx
 3038              	.LCFI134:
 3039              		.cfi_def_cfa_offset 24
 3040              		.cfi_offset 3, -24
GAS LISTING /tmp/ccd0pRUN.s 			page 79


 3041 0002 4883EC28 		subq	$40, %rsp
 3042              	.LCFI135:
 3043              		.cfi_def_cfa_offset 64
 3044 0006 4889FB   		movq	%rdi, %rbx
 3045 0009 89D5     		movl	%edx, %ebp
 812:src/mcu_msg.c ****     msg_wrap_int_t res;
 813:src/mcu_msg.c ****     res.id = msg_init_string(id);
 3046              		.loc 1 813 0
 3047 000b 4889F7   		movq	%rsi, %rdi
 3048              	.LVL331:
 3049 000e E8000000 		call	msg_init_string
 3049      00
 3050              	.LVL332:
 814:src/mcu_msg.c ****     res.val = val;
 3051              		.loc 1 814 0
 3052 0013 896C2410 		movl	%ebp, 16(%rsp)
 815:src/mcu_msg.c ****     res.next = NULL;
 3053              		.loc 1 815 0
 3054 0017 48C74424 		movq	$0, 24(%rsp)
 3054      18000000 
 3054      00
 816:src/mcu_msg.c ****     return res;
 3055              		.loc 1 816 0
 3056 0020 488903   		movq	%rax, (%rbx)
 3057 0023 48895308 		movq	%rdx, 8(%rbx)
 3058 0027 488B4424 		movq	16(%rsp), %rax
 3058      10
 3059 002c 488B5424 		movq	24(%rsp), %rdx
 3059      18
 3060 0031 48894310 		movq	%rax, 16(%rbx)
 3061 0035 48895318 		movq	%rdx, 24(%rbx)
 817:src/mcu_msg.c **** }
 3062              		.loc 1 817 0
 3063 0039 4889D8   		movq	%rbx, %rax
 3064 003c 4883C428 		addq	$40, %rsp
 3065              	.LCFI136:
 3066              		.cfi_def_cfa_offset 24
 3067 0040 5B       		popq	%rbx
 3068              	.LCFI137:
 3069              		.cfi_def_cfa_offset 16
 3070              	.LVL333:
 3071 0041 5D       		popq	%rbp
 3072              	.LCFI138:
 3073              		.cfi_def_cfa_offset 8
 3074              	.LVL334:
 3075 0042 C3       		ret
 3076              		.cfi_endproc
 3077              	.LFE70:
 3079              		.section	.text.msg_wrapper_init_float,"ax",@progbits
 3080              		.globl	msg_wrapper_init_float
 3082              	msg_wrapper_init_float:
 3083              	.LFB71:
 818:src/mcu_msg.c **** 
 819:src/mcu_msg.c **** msg_wrap_float_t msg_wrapper_init_float(char *id, float val, uint8_t prec)
 820:src/mcu_msg.c **** {
 3084              		.loc 1 820 0
 3085              		.cfi_startproc
GAS LISTING /tmp/ccd0pRUN.s 			page 80


 3086              	.LVL335:
 3087 0000 4154     		pushq	%r12
 3088              	.LCFI139:
 3089              		.cfi_def_cfa_offset 16
 3090              		.cfi_offset 12, -16
 3091 0002 55       		pushq	%rbp
 3092              	.LCFI140:
 3093              		.cfi_def_cfa_offset 24
 3094              		.cfi_offset 6, -24
 3095 0003 53       		pushq	%rbx
 3096              	.LCFI141:
 3097              		.cfi_def_cfa_offset 32
 3098              		.cfi_offset 3, -32
 3099 0004 4883EC20 		subq	$32, %rsp
 3100              	.LCFI142:
 3101              		.cfi_def_cfa_offset 64
 3102 0008 4889FB   		movq	%rdi, %rbx
 3103 000b 66410F7E 		movd	%xmm0, %r12d
 3103      C4
 3104 0010 89D5     		movl	%edx, %ebp
 821:src/mcu_msg.c ****     msg_wrap_float_t res;
 822:src/mcu_msg.c ****     res.id = msg_init_string(id);
 3105              		.loc 1 822 0
 3106 0012 4889F7   		movq	%rsi, %rdi
 3107              	.LVL336:
 3108 0015 E8000000 		call	msg_init_string
 3108      00
 3109              	.LVL337:
 823:src/mcu_msg.c ****     res.val = val;
 3110              		.loc 1 823 0
 3111 001a 44896424 		movl	%r12d, 16(%rsp)
 3111      10
 824:src/mcu_msg.c ****     res.prec = prec;
 3112              		.loc 1 824 0
 3113 001f 40886C24 		movb	%bpl, 20(%rsp)
 3113      14
 825:src/mcu_msg.c ****     res.next = NULL;
 3114              		.loc 1 825 0
 3115 0024 48C74424 		movq	$0, 24(%rsp)
 3115      18000000 
 3115      00
 826:src/mcu_msg.c ****     return res;
 3116              		.loc 1 826 0
 3117 002d 488903   		movq	%rax, (%rbx)
 3118 0030 48895308 		movq	%rdx, 8(%rbx)
 3119 0034 488B4424 		movq	16(%rsp), %rax
 3119      10
 3120 0039 488B5424 		movq	24(%rsp), %rdx
 3120      18
 3121 003e 48894310 		movq	%rax, 16(%rbx)
 3122 0042 48895318 		movq	%rdx, 24(%rbx)
 827:src/mcu_msg.c **** }
 3123              		.loc 1 827 0
 3124 0046 4889D8   		movq	%rbx, %rax
 3125 0049 4883C420 		addq	$32, %rsp
 3126              	.LCFI143:
 3127              		.cfi_def_cfa_offset 32
GAS LISTING /tmp/ccd0pRUN.s 			page 81


 3128 004d 5B       		popq	%rbx
 3129              	.LCFI144:
 3130              		.cfi_def_cfa_offset 24
 3131              	.LVL338:
 3132 004e 5D       		popq	%rbp
 3133              	.LCFI145:
 3134              		.cfi_def_cfa_offset 16
 3135 004f 415C     		popq	%r12
 3136              	.LCFI146:
 3137              		.cfi_def_cfa_offset 8
 3138              	.LVL339:
 3139 0051 C3       		ret
 3140              		.cfi_endproc
 3141              	.LFE71:
 3143              		.section	.text.msg_wrapper_add_string_to_obj,"ax",@progbits
 3144              		.globl	msg_wrapper_add_string_to_obj
 3146              	msg_wrapper_add_string_to_obj:
 3147              	.LFB72:
 828:src/mcu_msg.c **** 
 829:src/mcu_msg.c **** 
 830:src/mcu_msg.c **** void msg_wrapper_add_string_to_obj(msg_wrap_obj_t *obj, msg_wrap_str_t *str)
 831:src/mcu_msg.c **** {
 3148              		.loc 1 831 0
 3149              		.cfi_startproc
 3150              	.LVL340:
 832:src/mcu_msg.c ****     msg_wrap_str_t *strp;
 833:src/mcu_msg.c ****     if(obj->string_queue == NULL) { //empty
 3151              		.loc 1 833 0
 3152 0000 488B5720 		movq	32(%rdi), %rdx
 3153 0004 4885D2   		testq	%rdx, %rdx
 3154 0007 7510     		jne	.L250
 834:src/mcu_msg.c ****         obj->string_queue = str;
 3155              		.loc 1 834 0
 3156 0009 48897720 		movq	%rsi, 32(%rdi)
 835:src/mcu_msg.c ****         obj->string_queue->next = NULL;
 3157              		.loc 1 835 0
 3158 000d 48C74620 		movq	$0, 32(%rsi)
 3158      00000000 
 3159 0015 C3       		ret
 3160              	.LVL341:
 3161              	.L252:
 836:src/mcu_msg.c ****     } else {
 837:src/mcu_msg.c ****         strp = obj->string_queue;
 838:src/mcu_msg.c **** 
 839:src/mcu_msg.c ****         while(strp->next != NULL) 
 840:src/mcu_msg.c ****             strp = strp->next;
 3162              		.loc 1 840 0
 3163 0016 4889C2   		movq	%rax, %rdx
 3164              	.LVL342:
 3165              	.L250:
 839:src/mcu_msg.c ****             strp = strp->next;
 3166              		.loc 1 839 0
 3167 0019 488B4220 		movq	32(%rdx), %rax
 3168 001d 4885C0   		testq	%rax, %rax
 3169 0020 75F4     		jne	.L252
 841:src/mcu_msg.c ****         strp->next = str;
 3170              		.loc 1 841 0
GAS LISTING /tmp/ccd0pRUN.s 			page 82


 3171 0022 48897220 		movq	%rsi, 32(%rdx)
 842:src/mcu_msg.c ****         str->next = NULL;
 3172              		.loc 1 842 0
 3173 0026 48C74620 		movq	$0, 32(%rsi)
 3173      00000000 
 843:src/mcu_msg.c ****     }
 844:src/mcu_msg.c **** }
 3174              		.loc 1 844 0
 3175 002e C3       		ret
 3176              		.cfi_endproc
 3177              	.LFE72:
 3179              		.section	.text.msg_wrapper_rm_string_from_obj,"ax",@progbits
 3180              		.globl	msg_wrapper_rm_string_from_obj
 3182              	msg_wrapper_rm_string_from_obj:
 3183              	.LFB73:
 845:src/mcu_msg.c **** 
 846:src/mcu_msg.c **** 
 847:src/mcu_msg.c **** void msg_wrapper_rm_string_from_obj(msg_wrap_obj_t *obj, msg_wrap_str_t *str)
 848:src/mcu_msg.c **** {
 3184              		.loc 1 848 0
 3185              		.cfi_startproc
 3186              	.LVL343:
 849:src/mcu_msg.c ****     msg_wrap_str_t *sp, *prev;
 850:src/mcu_msg.c ****     for(sp = obj->string_queue, prev = NULL; sp != NULL; sp = sp->next){
 3187              		.loc 1 850 0
 3188 0000 488B4720 		movq	32(%rdi), %rax
 3189              	.LVL344:
 3190 0004 BA000000 		movl	$0, %edx
 3190      00
 3191              	.LVL345:
 3192              	.L254:
 3193              		.loc 1 850 0 is_stmt 0 discriminator 1
 3194 0009 4885C0   		testq	%rax, %rax
 3195 000c 742E     		je	.L260
 851:src/mcu_msg.c ****         if(sp == str) { 
 3196              		.loc 1 851 0 is_stmt 1
 3197 000e 4839F0   		cmpq	%rsi, %rax
 3198 0011 7409     		je	.L261
 3199              	.LVL346:
 852:src/mcu_msg.c ****             if(prev == NULL) { // if p is the head of the queue, reinit the head
 853:src/mcu_msg.c ****                 obj->string_queue = str->next;
 854:src/mcu_msg.c ****             } else {
 855:src/mcu_msg.c ****                 prev->next = str->next; //skip the expected
 856:src/mcu_msg.c ****             }
 857:src/mcu_msg.c ****             str->next = NULL; // reset next
 858:src/mcu_msg.c ****             return;
 859:src/mcu_msg.c ****         }
 860:src/mcu_msg.c ****         prev = sp;
 3200              		.loc 1 860 0 discriminator 2
 3201 0013 4889C2   		movq	%rax, %rdx
 850:src/mcu_msg.c ****         if(sp == str) { 
 3202              		.loc 1 850 0 discriminator 2
 3203 0016 488B4020 		movq	32(%rax), %rax
 3204              	.LVL347:
 3205 001a EBED     		jmp	.L254
 3206              	.L261:
 852:src/mcu_msg.c ****             if(prev == NULL) { // if p is the head of the queue, reinit the head
GAS LISTING /tmp/ccd0pRUN.s 			page 83


 3207              		.loc 1 852 0
 3208 001c 4885D2   		testq	%rdx, %rdx
 3209 001f 7411     		je	.L262
 855:src/mcu_msg.c ****             }
 3210              		.loc 1 855 0
 3211 0021 488B4620 		movq	32(%rsi), %rax
 3212              	.LVL348:
 3213 0025 48894220 		movq	%rax, 32(%rdx)
 3214              	.L257:
 857:src/mcu_msg.c ****             return;
 3215              		.loc 1 857 0
 3216 0029 48C74620 		movq	$0, 32(%rsi)
 3216      00000000 
 858:src/mcu_msg.c ****         }
 3217              		.loc 1 858 0
 3218 0031 C3       		ret
 3219              	.LVL349:
 3220              	.L262:
 853:src/mcu_msg.c ****             } else {
 3221              		.loc 1 853 0
 3222 0032 488B4620 		movq	32(%rsi), %rax
 3223              	.LVL350:
 3224 0036 48894720 		movq	%rax, 32(%rdi)
 3225 003a EBED     		jmp	.L257
 3226              	.LVL351:
 3227              	.L260:
 861:src/mcu_msg.c ****     }
 862:src/mcu_msg.c **** }
 3228              		.loc 1 862 0
 3229 003c F3C3     		rep ret
 3230              		.cfi_endproc
 3231              	.LFE73:
 3233              		.section	.text.msg_wrapper_add_int_to_obj,"ax",@progbits
 3234              		.globl	msg_wrapper_add_int_to_obj
 3236              	msg_wrapper_add_int_to_obj:
 3237              	.LFB74:
 863:src/mcu_msg.c **** 
 864:src/mcu_msg.c **** void msg_wrapper_add_int_to_obj(msg_wrap_obj_t *obj, msg_wrap_int_t *int_val)
 865:src/mcu_msg.c **** {
 3238              		.loc 1 865 0
 3239              		.cfi_startproc
 3240              	.LVL352:
 866:src/mcu_msg.c ****     msg_wrap_int_t *ip;
 867:src/mcu_msg.c ****     if(obj->int_queue == NULL) { //first element
 3241              		.loc 1 867 0
 3242 0000 488B5710 		movq	16(%rdi), %rdx
 3243 0004 4885D2   		testq	%rdx, %rdx
 3244 0007 7510     		jne	.L264
 868:src/mcu_msg.c ****         obj->int_queue = int_val;
 3245              		.loc 1 868 0
 3246 0009 48897710 		movq	%rsi, 16(%rdi)
 869:src/mcu_msg.c ****         obj->int_queue->next = NULL;
 3247              		.loc 1 869 0
 3248 000d 48C74618 		movq	$0, 24(%rsi)
 3248      00000000 
 3249 0015 C3       		ret
 3250              	.LVL353:
GAS LISTING /tmp/ccd0pRUN.s 			page 84


 3251              	.L266:
 870:src/mcu_msg.c ****     } else {
 871:src/mcu_msg.c ****         ip = obj->int_queue;
 872:src/mcu_msg.c **** 
 873:src/mcu_msg.c ****         while(ip->next != NULL) 
 874:src/mcu_msg.c ****             ip = ip->next;
 3252              		.loc 1 874 0
 3253 0016 4889C2   		movq	%rax, %rdx
 3254              	.LVL354:
 3255              	.L264:
 873:src/mcu_msg.c ****             ip = ip->next;
 3256              		.loc 1 873 0
 3257 0019 488B4218 		movq	24(%rdx), %rax
 3258 001d 4885C0   		testq	%rax, %rax
 3259 0020 75F4     		jne	.L266
 875:src/mcu_msg.c ****         ip->next = int_val;
 3260              		.loc 1 875 0
 3261 0022 48897218 		movq	%rsi, 24(%rdx)
 876:src/mcu_msg.c ****         int_val->next = NULL;
 3262              		.loc 1 876 0
 3263 0026 48C74618 		movq	$0, 24(%rsi)
 3263      00000000 
 877:src/mcu_msg.c ****     }
 878:src/mcu_msg.c **** }
 3264              		.loc 1 878 0
 3265 002e C3       		ret
 3266              		.cfi_endproc
 3267              	.LFE74:
 3269              		.section	.text.msg_wrapper_rm_int_from_obj,"ax",@progbits
 3270              		.globl	msg_wrapper_rm_int_from_obj
 3272              	msg_wrapper_rm_int_from_obj:
 3273              	.LFB75:
 879:src/mcu_msg.c **** 
 880:src/mcu_msg.c **** 
 881:src/mcu_msg.c **** void msg_wrapper_rm_int_from_obj(msg_wrap_obj_t *obj, msg_wrap_int_t *i)
 882:src/mcu_msg.c **** {
 3274              		.loc 1 882 0
 3275              		.cfi_startproc
 3276              	.LVL355:
 883:src/mcu_msg.c ****     msg_wrap_int_t *ip, *prev;
 884:src/mcu_msg.c ****     for(ip = obj->int_queue, prev = NULL; ip != NULL; ip = ip->next){
 3277              		.loc 1 884 0
 3278 0000 488B4710 		movq	16(%rdi), %rax
 3279              	.LVL356:
 3280 0004 BA000000 		movl	$0, %edx
 3280      00
 3281              	.LVL357:
 3282              	.L268:
 3283              		.loc 1 884 0 is_stmt 0 discriminator 1
 3284 0009 4885C0   		testq	%rax, %rax
 3285 000c 742E     		je	.L274
 885:src/mcu_msg.c ****         if(ip == i) {
 3286              		.loc 1 885 0 is_stmt 1
 3287 000e 4839F0   		cmpq	%rsi, %rax
 3288 0011 7409     		je	.L275
 3289              	.LVL358:
 886:src/mcu_msg.c ****             if(prev == NULL) { // if p is the head of the queue, reinit the head
GAS LISTING /tmp/ccd0pRUN.s 			page 85


 887:src/mcu_msg.c ****                 obj->int_queue = i->next;
 888:src/mcu_msg.c ****             } else {
 889:src/mcu_msg.c ****                 prev->next = i->next; //skip the expected
 890:src/mcu_msg.c ****             }
 891:src/mcu_msg.c ****             i->next = NULL; // reset next
 892:src/mcu_msg.c ****             return;
 893:src/mcu_msg.c ****         }
 894:src/mcu_msg.c ****         prev = ip;
 3290              		.loc 1 894 0 discriminator 2
 3291 0013 4889C2   		movq	%rax, %rdx
 884:src/mcu_msg.c ****         if(ip == i) {
 3292              		.loc 1 884 0 discriminator 2
 3293 0016 488B4018 		movq	24(%rax), %rax
 3294              	.LVL359:
 3295 001a EBED     		jmp	.L268
 3296              	.L275:
 886:src/mcu_msg.c ****             if(prev == NULL) { // if p is the head of the queue, reinit the head
 3297              		.loc 1 886 0
 3298 001c 4885D2   		testq	%rdx, %rdx
 3299 001f 7411     		je	.L276
 889:src/mcu_msg.c ****             }
 3300              		.loc 1 889 0
 3301 0021 488B4618 		movq	24(%rsi), %rax
 3302              	.LVL360:
 3303 0025 48894218 		movq	%rax, 24(%rdx)
 3304              	.L271:
 891:src/mcu_msg.c ****             return;
 3305              		.loc 1 891 0
 3306 0029 48C74618 		movq	$0, 24(%rsi)
 3306      00000000 
 892:src/mcu_msg.c ****         }
 3307              		.loc 1 892 0
 3308 0031 C3       		ret
 3309              	.LVL361:
 3310              	.L276:
 887:src/mcu_msg.c ****             } else {
 3311              		.loc 1 887 0
 3312 0032 488B4618 		movq	24(%rsi), %rax
 3313              	.LVL362:
 3314 0036 48894710 		movq	%rax, 16(%rdi)
 3315 003a EBED     		jmp	.L271
 3316              	.LVL363:
 3317              	.L274:
 895:src/mcu_msg.c ****     }
 896:src/mcu_msg.c **** }
 3318              		.loc 1 896 0
 3319 003c F3C3     		rep ret
 3320              		.cfi_endproc
 3321              	.LFE75:
 3323              		.section	.text.msg_wrapper_add_float_to_obj,"ax",@progbits
 3324              		.globl	msg_wrapper_add_float_to_obj
 3326              	msg_wrapper_add_float_to_obj:
 3327              	.LFB76:
 897:src/mcu_msg.c **** 
 898:src/mcu_msg.c **** void msg_wrapper_add_float_to_obj(msg_wrap_obj_t *obj, msg_wrap_float_t *float_val)
 899:src/mcu_msg.c **** {
 3328              		.loc 1 899 0
GAS LISTING /tmp/ccd0pRUN.s 			page 86


 3329              		.cfi_startproc
 3330              	.LVL364:
 900:src/mcu_msg.c ****     msg_wrap_float_t *fp;
 901:src/mcu_msg.c ****     if(obj->float_queue == NULL) { //first element
 3331              		.loc 1 901 0
 3332 0000 488B5718 		movq	24(%rdi), %rdx
 3333 0004 4885D2   		testq	%rdx, %rdx
 3334 0007 7510     		jne	.L278
 902:src/mcu_msg.c ****         obj->float_queue = float_val;
 3335              		.loc 1 902 0
 3336 0009 48897718 		movq	%rsi, 24(%rdi)
 903:src/mcu_msg.c ****         obj->float_queue->next = NULL;
 3337              		.loc 1 903 0
 3338 000d 48C74618 		movq	$0, 24(%rsi)
 3338      00000000 
 3339 0015 C3       		ret
 3340              	.LVL365:
 3341              	.L280:
 904:src/mcu_msg.c ****     } else {
 905:src/mcu_msg.c ****         fp = obj->float_queue;
 906:src/mcu_msg.c **** 
 907:src/mcu_msg.c ****         while(fp->next != NULL) 
 908:src/mcu_msg.c ****             fp = fp->next;
 3342              		.loc 1 908 0
 3343 0016 4889C2   		movq	%rax, %rdx
 3344              	.LVL366:
 3345              	.L278:
 907:src/mcu_msg.c ****             fp = fp->next;
 3346              		.loc 1 907 0
 3347 0019 488B4218 		movq	24(%rdx), %rax
 3348 001d 4885C0   		testq	%rax, %rax
 3349 0020 75F4     		jne	.L280
 909:src/mcu_msg.c ****         fp->next = float_val;
 3350              		.loc 1 909 0
 3351 0022 48897218 		movq	%rsi, 24(%rdx)
 910:src/mcu_msg.c ****         float_val->next = NULL;
 3352              		.loc 1 910 0
 3353 0026 48C74618 		movq	$0, 24(%rsi)
 3353      00000000 
 911:src/mcu_msg.c ****     }
 912:src/mcu_msg.c **** }
 3354              		.loc 1 912 0
 3355 002e C3       		ret
 3356              		.cfi_endproc
 3357              	.LFE76:
 3359              		.section	.text.msg_wrapper_rm_float_from_obj,"ax",@progbits
 3360              		.globl	msg_wrapper_rm_float_from_obj
 3362              	msg_wrapper_rm_float_from_obj:
 3363              	.LFB77:
 913:src/mcu_msg.c **** 
 914:src/mcu_msg.c **** 
 915:src/mcu_msg.c **** void msg_wrapper_rm_float_from_obj(msg_wrap_obj_t *obj, msg_wrap_float_t *f)
 916:src/mcu_msg.c **** {
 3364              		.loc 1 916 0
 3365              		.cfi_startproc
 3366              	.LVL367:
 917:src/mcu_msg.c ****     msg_wrap_float_t *fp, *prev;
GAS LISTING /tmp/ccd0pRUN.s 			page 87


 918:src/mcu_msg.c ****     for(fp = obj->float_queue, prev = NULL; fp != NULL; fp = fp->next){
 3367              		.loc 1 918 0
 3368 0000 488B4718 		movq	24(%rdi), %rax
 3369              	.LVL368:
 3370 0004 BA000000 		movl	$0, %edx
 3370      00
 3371              	.LVL369:
 3372              	.L282:
 3373              		.loc 1 918 0 is_stmt 0 discriminator 1
 3374 0009 4885C0   		testq	%rax, %rax
 3375 000c 742E     		je	.L288
 919:src/mcu_msg.c ****         if(fp == f) {
 3376              		.loc 1 919 0 is_stmt 1
 3377 000e 4839F0   		cmpq	%rsi, %rax
 3378 0011 7409     		je	.L289
 3379              	.LVL370:
 920:src/mcu_msg.c ****             if(prev == NULL) { // if p is the head of the queue, reinit the head
 921:src/mcu_msg.c ****                 obj->float_queue = f->next;
 922:src/mcu_msg.c ****             } else {
 923:src/mcu_msg.c ****                 prev->next = f->next; //skip the expected
 924:src/mcu_msg.c ****             }
 925:src/mcu_msg.c ****             f->next = NULL; // reset next
 926:src/mcu_msg.c ****             return;
 927:src/mcu_msg.c ****         }
 928:src/mcu_msg.c ****         prev = fp;
 3380              		.loc 1 928 0 discriminator 2
 3381 0013 4889C2   		movq	%rax, %rdx
 918:src/mcu_msg.c ****         if(fp == f) {
 3382              		.loc 1 918 0 discriminator 2
 3383 0016 488B4018 		movq	24(%rax), %rax
 3384              	.LVL371:
 3385 001a EBED     		jmp	.L282
 3386              	.L289:
 920:src/mcu_msg.c ****             if(prev == NULL) { // if p is the head of the queue, reinit the head
 3387              		.loc 1 920 0
 3388 001c 4885D2   		testq	%rdx, %rdx
 3389 001f 7411     		je	.L290
 923:src/mcu_msg.c ****             }
 3390              		.loc 1 923 0
 3391 0021 488B4618 		movq	24(%rsi), %rax
 3392              	.LVL372:
 3393 0025 48894218 		movq	%rax, 24(%rdx)
 3394              	.L285:
 925:src/mcu_msg.c ****             return;
 3395              		.loc 1 925 0
 3396 0029 48C74618 		movq	$0, 24(%rsi)
 3396      00000000 
 926:src/mcu_msg.c ****         }
 3397              		.loc 1 926 0
 3398 0031 C3       		ret
 3399              	.LVL373:
 3400              	.L290:
 921:src/mcu_msg.c ****             } else {
 3401              		.loc 1 921 0
 3402 0032 488B4618 		movq	24(%rsi), %rax
 3403              	.LVL374:
 3404 0036 48894718 		movq	%rax, 24(%rdi)
GAS LISTING /tmp/ccd0pRUN.s 			page 88


 3405 003a EBED     		jmp	.L285
 3406              	.LVL375:
 3407              	.L288:
 929:src/mcu_msg.c ****     }
 930:src/mcu_msg.c **** }
 3408              		.loc 1 930 0
 3409 003c F3C3     		rep ret
 3410              		.cfi_endproc
 3411              	.LFE77:
 3413              		.section	.text.msg_wrapper_add_object_to_msg,"ax",@progbits
 3414              		.globl	msg_wrapper_add_object_to_msg
 3416              	msg_wrapper_add_object_to_msg:
 3417              	.LFB78:
 931:src/mcu_msg.c **** 
 932:src/mcu_msg.c **** void msg_wrapper_add_object_to_msg(msg_wrap_t *msg, msg_wrap_obj_t *obj)
 933:src/mcu_msg.c **** {
 3418              		.loc 1 933 0
 3419              		.cfi_startproc
 3420              	.LVL376:
 934:src/mcu_msg.c ****     msg_wrap_obj_t *op;
 935:src/mcu_msg.c ****     if(msg->obj_queue == NULL) { //if empty 
 3421              		.loc 1 935 0
 3422 0000 488B5710 		movq	16(%rdi), %rdx
 3423 0004 4885D2   		testq	%rdx, %rdx
 3424 0007 7510     		jne	.L292
 936:src/mcu_msg.c ****         msg->obj_queue = obj;
 3425              		.loc 1 936 0
 3426 0009 48897710 		movq	%rsi, 16(%rdi)
 937:src/mcu_msg.c ****         msg->obj_queue->next = NULL;
 3427              		.loc 1 937 0
 3428 000d 48C74628 		movq	$0, 40(%rsi)
 3428      00000000 
 3429 0015 C3       		ret
 3430              	.LVL377:
 3431              	.L294:
 938:src/mcu_msg.c ****     } else {
 939:src/mcu_msg.c ****         op = msg->obj_queue;
 940:src/mcu_msg.c ****         while(op->next != NULL)
 941:src/mcu_msg.c ****             op = op->next;
 3432              		.loc 1 941 0
 3433 0016 4889C2   		movq	%rax, %rdx
 3434              	.LVL378:
 3435              	.L292:
 940:src/mcu_msg.c ****             op = op->next;
 3436              		.loc 1 940 0
 3437 0019 488B4228 		movq	40(%rdx), %rax
 3438 001d 4885C0   		testq	%rax, %rax
 3439 0020 75F4     		jne	.L294
 942:src/mcu_msg.c ****         op->next = obj;
 3440              		.loc 1 942 0
 3441 0022 48897228 		movq	%rsi, 40(%rdx)
 943:src/mcu_msg.c ****         obj->next = NULL;
 3442              		.loc 1 943 0
 3443 0026 48C74628 		movq	$0, 40(%rsi)
 3443      00000000 
 944:src/mcu_msg.c ****     }
 945:src/mcu_msg.c **** }
GAS LISTING /tmp/ccd0pRUN.s 			page 89


 3444              		.loc 1 945 0
 3445 002e C3       		ret
 3446              		.cfi_endproc
 3447              	.LFE78:
 3449              		.section	.text.msg_wrapper_rm_obj_from_msg,"ax",@progbits
 3450              		.globl	msg_wrapper_rm_obj_from_msg
 3452              	msg_wrapper_rm_obj_from_msg:
 3453              	.LFB79:
 946:src/mcu_msg.c **** 
 947:src/mcu_msg.c **** void msg_wrapper_rm_obj_from_msg(msg_wrap_t *msg, msg_wrap_obj_t *obj)
 948:src/mcu_msg.c **** {
 3454              		.loc 1 948 0
 3455              		.cfi_startproc
 3456              	.LVL379:
 949:src/mcu_msg.c ****     msg_wrap_obj_t *op, *prev;
 950:src/mcu_msg.c ****     for(op = msg->obj_queue, prev = NULL; op != NULL; op = op->next){
 3457              		.loc 1 950 0
 3458 0000 488B4710 		movq	16(%rdi), %rax
 3459              	.LVL380:
 3460 0004 BA000000 		movl	$0, %edx
 3460      00
 3461              	.LVL381:
 3462              	.L296:
 3463              		.loc 1 950 0 is_stmt 0 discriminator 1
 3464 0009 4885C0   		testq	%rax, %rax
 3465 000c 742E     		je	.L302
 951:src/mcu_msg.c ****         if(op == obj) {
 3466              		.loc 1 951 0 is_stmt 1
 3467 000e 4839F0   		cmpq	%rsi, %rax
 3468 0011 7409     		je	.L303
 3469              	.LVL382:
 952:src/mcu_msg.c ****             if(prev == NULL) { // if p is the head of the queue, reinit the head
 953:src/mcu_msg.c ****                 msg->obj_queue = obj->next;
 954:src/mcu_msg.c ****             } else {
 955:src/mcu_msg.c ****                 prev->next = obj->next; //skip the expected
 956:src/mcu_msg.c ****             }
 957:src/mcu_msg.c ****             obj->next = NULL; // reset next
 958:src/mcu_msg.c ****             return;
 959:src/mcu_msg.c ****         }
 960:src/mcu_msg.c ****         prev = op;
 3470              		.loc 1 960 0 discriminator 2
 3471 0013 4889C2   		movq	%rax, %rdx
 950:src/mcu_msg.c ****         if(op == obj) {
 3472              		.loc 1 950 0 discriminator 2
 3473 0016 488B4028 		movq	40(%rax), %rax
 3474              	.LVL383:
 3475 001a EBED     		jmp	.L296
 3476              	.L303:
 952:src/mcu_msg.c ****             if(prev == NULL) { // if p is the head of the queue, reinit the head
 3477              		.loc 1 952 0
 3478 001c 4885D2   		testq	%rdx, %rdx
 3479 001f 7411     		je	.L304
 955:src/mcu_msg.c ****             }
 3480              		.loc 1 955 0
 3481 0021 488B4628 		movq	40(%rsi), %rax
 3482              	.LVL384:
 3483 0025 48894228 		movq	%rax, 40(%rdx)
GAS LISTING /tmp/ccd0pRUN.s 			page 90


 3484              	.L299:
 957:src/mcu_msg.c ****             return;
 3485              		.loc 1 957 0
 3486 0029 48C74628 		movq	$0, 40(%rsi)
 3486      00000000 
 958:src/mcu_msg.c ****         }
 3487              		.loc 1 958 0
 3488 0031 C3       		ret
 3489              	.LVL385:
 3490              	.L304:
 953:src/mcu_msg.c ****             } else {
 3491              		.loc 1 953 0
 3492 0032 488B4628 		movq	40(%rsi), %rax
 3493              	.LVL386:
 3494 0036 48894710 		movq	%rax, 16(%rdi)
 3495 003a EBED     		jmp	.L299
 3496              	.LVL387:
 3497              	.L302:
 961:src/mcu_msg.c ****     }    
 962:src/mcu_msg.c **** }
 3498              		.loc 1 962 0
 3499 003c F3C3     		rep ret
 3500              		.cfi_endproc
 3501              	.LFE79:
 3503              		.section	.text.msg_wrapper_add_cmd_to_msg,"ax",@progbits
 3504              		.globl	msg_wrapper_add_cmd_to_msg
 3506              	msg_wrapper_add_cmd_to_msg:
 3507              	.LFB80:
 963:src/mcu_msg.c **** 
 964:src/mcu_msg.c **** void msg_wrapper_add_cmd_to_msg(msg_wrap_t *msg, msg_wrap_cmd_t *cmd)
 965:src/mcu_msg.c **** {
 3508              		.loc 1 965 0
 3509              		.cfi_startproc
 3510              	.LVL388:
 966:src/mcu_msg.c ****     msg_wrap_cmd_t *cp;
 967:src/mcu_msg.c ****     if(msg->cmd_queue == NULL) { //if empty 
 3511              		.loc 1 967 0
 3512 0000 488B5718 		movq	24(%rdi), %rdx
 3513 0004 4885D2   		testq	%rdx, %rdx
 3514 0007 7510     		jne	.L306
 968:src/mcu_msg.c ****         msg->cmd_queue = cmd;
 3515              		.loc 1 968 0
 3516 0009 48897718 		movq	%rsi, 24(%rdi)
 969:src/mcu_msg.c ****         msg->cmd_queue->next = NULL;
 3517              		.loc 1 969 0
 3518 000d 48C74610 		movq	$0, 16(%rsi)
 3518      00000000 
 3519 0015 C3       		ret
 3520              	.LVL389:
 3521              	.L308:
 970:src/mcu_msg.c ****     } else {
 971:src/mcu_msg.c ****         cp = msg->cmd_queue;
 972:src/mcu_msg.c ****         while(cp->next != NULL)
 973:src/mcu_msg.c ****             cp = cp->next;
 3522              		.loc 1 973 0
 3523 0016 4889C2   		movq	%rax, %rdx
 3524              	.LVL390:
GAS LISTING /tmp/ccd0pRUN.s 			page 91


 3525              	.L306:
 972:src/mcu_msg.c ****             cp = cp->next;
 3526              		.loc 1 972 0
 3527 0019 488B4210 		movq	16(%rdx), %rax
 3528 001d 4885C0   		testq	%rax, %rax
 3529 0020 75F4     		jne	.L308
 974:src/mcu_msg.c ****         cp->next = cmd;
 3530              		.loc 1 974 0
 3531 0022 48897210 		movq	%rsi, 16(%rdx)
 975:src/mcu_msg.c ****         cmd->next = NULL;
 3532              		.loc 1 975 0
 3533 0026 48C74610 		movq	$0, 16(%rsi)
 3533      00000000 
 976:src/mcu_msg.c ****     }
 977:src/mcu_msg.c **** }
 3534              		.loc 1 977 0
 3535 002e C3       		ret
 3536              		.cfi_endproc
 3537              	.LFE80:
 3539              		.section	.text.msg_wrapper_rm_cmd_from_msg,"ax",@progbits
 3540              		.globl	msg_wrapper_rm_cmd_from_msg
 3542              	msg_wrapper_rm_cmd_from_msg:
 3543              	.LFB81:
 978:src/mcu_msg.c **** 
 979:src/mcu_msg.c **** void msg_wrapper_rm_cmd_from_msg(msg_wrap_t *msg, msg_wrap_cmd_t *cmd)
 980:src/mcu_msg.c **** {
 3544              		.loc 1 980 0
 3545              		.cfi_startproc
 3546              	.LVL391:
 981:src/mcu_msg.c ****     msg_wrap_cmd_t *cp, *prev;
 982:src/mcu_msg.c ****     for(cp = msg->cmd_queue, prev = NULL; cp != NULL; cp = cp->next){
 3547              		.loc 1 982 0
 3548 0000 488B4718 		movq	24(%rdi), %rax
 3549              	.LVL392:
 3550 0004 BA000000 		movl	$0, %edx
 3550      00
 3551              	.LVL393:
 3552              	.L310:
 3553              		.loc 1 982 0 is_stmt 0 discriminator 1
 3554 0009 4885C0   		testq	%rax, %rax
 3555 000c 742E     		je	.L316
 983:src/mcu_msg.c ****         if(cp == cmd) {
 3556              		.loc 1 983 0 is_stmt 1
 3557 000e 4839F0   		cmpq	%rsi, %rax
 3558 0011 7409     		je	.L317
 3559              	.LVL394:
 984:src/mcu_msg.c ****             if(prev == NULL) { // if p is the head of the queue, reinit the head
 985:src/mcu_msg.c ****                 msg->cmd_queue = cmd->next;
 986:src/mcu_msg.c ****             } else {
 987:src/mcu_msg.c ****                 prev->next = cmd->next; //skip the expected
 988:src/mcu_msg.c ****             }
 989:src/mcu_msg.c ****             cmd->next = NULL; // reset next
 990:src/mcu_msg.c ****             return;
 991:src/mcu_msg.c ****         }
 992:src/mcu_msg.c ****         prev = cp;
 3560              		.loc 1 992 0 discriminator 2
 3561 0013 4889C2   		movq	%rax, %rdx
GAS LISTING /tmp/ccd0pRUN.s 			page 92


 982:src/mcu_msg.c ****         if(cp == cmd) {
 3562              		.loc 1 982 0 discriminator 2
 3563 0016 488B4010 		movq	16(%rax), %rax
 3564              	.LVL395:
 3565 001a EBED     		jmp	.L310
 3566              	.L317:
 984:src/mcu_msg.c ****             if(prev == NULL) { // if p is the head of the queue, reinit the head
 3567              		.loc 1 984 0
 3568 001c 4885D2   		testq	%rdx, %rdx
 3569 001f 7411     		je	.L318
 987:src/mcu_msg.c ****             }
 3570              		.loc 1 987 0
 3571 0021 488B4610 		movq	16(%rsi), %rax
 3572              	.LVL396:
 3573 0025 48894210 		movq	%rax, 16(%rdx)
 3574              	.L313:
 989:src/mcu_msg.c ****             return;
 3575              		.loc 1 989 0
 3576 0029 48C74610 		movq	$0, 16(%rsi)
 3576      00000000 
 990:src/mcu_msg.c ****         }
 3577              		.loc 1 990 0
 3578 0031 C3       		ret
 3579              	.LVL397:
 3580              	.L318:
 985:src/mcu_msg.c ****             } else {
 3581              		.loc 1 985 0
 3582 0032 488B4610 		movq	16(%rsi), %rax
 3583              	.LVL398:
 3584 0036 48894718 		movq	%rax, 24(%rdi)
 3585 003a EBED     		jmp	.L313
 3586              	.LVL399:
 3587              	.L316:
 993:src/mcu_msg.c ****     }    
 994:src/mcu_msg.c **** }
 3588              		.loc 1 994 0
 3589 003c F3C3     		rep ret
 3590              		.cfi_endproc
 3591              	.LFE81:
 3593              		.section	.bss.__putc,"aw",@nobits
 3594              		.align 8
 3597              	__putc:
 3598 0000 00000000 		.zero	8
 3598      00000000 
 3599              		.section	.bss.__redir_outp_to_buff,"aw",@nobits
 3602              	__redir_outp_to_buff:
 3603 0000 00       		.zero	1
 3604              		.section	.bss.__str_buff,"aw",@nobits
 3605              		.align 16
 3608              	__str_buff:
 3609 0000 00000000 		.zero	24
 3609      00000000 
 3609      00000000 
 3609      00000000 
 3609      00000000 
 3610              		.section	.rodata.cst16,"aM",@progbits,16
 3611              		.align 16
GAS LISTING /tmp/ccd0pRUN.s 			page 93


 3612              	.LC1:
 3613 0000 00000080 		.long	2147483648
 3614 0004 00000000 		.long	0
 3615 0008 00000000 		.long	0
 3616 000c 00000000 		.long	0
 3617              		.section	.rodata.cst4,"aM",@progbits,4
 3618              		.align 4
 3619              	.LC2:
 3620 0000 CDCCCC3D 		.long	1036831949
 3621              		.align 4
 3622              	.LC3:
 3623 0004 00002041 		.long	1092616192
 3624              		.text
 3625              	.Letext0:
 3626              		.file 2 "/usr/lib/gcc/x86_64-linux-gnu/7/include/stddef.h"
 3627              		.file 3 "/usr/include/x86_64-linux-gnu/bits/types.h"
 3628              		.file 4 "/usr/include/x86_64-linux-gnu/bits/libio.h"
 3629              		.file 5 "/usr/include/stdio.h"
 3630              		.file 6 "/usr/include/x86_64-linux-gnu/bits/sys_errlist.h"
 3631              		.file 7 "/usr/include/x86_64-linux-gnu/bits/stdint-intn.h"
 3632              		.file 8 "/usr/include/x86_64-linux-gnu/bits/stdint-uintn.h"
 3633              		.file 9 "inc/mcu_msg_cfg.h"
 3634              		.file 10 "inc/mcu_msg.h"
GAS LISTING /tmp/ccd0pRUN.s 			page 94


DEFINED SYMBOLS
                            *ABS*:0000000000000000 mcu_msg.c
     /tmp/ccd0pRUN.s:6      .text.__str_len:0000000000000000 __str_len
     /tmp/ccd0pRUN.s:35     .text.__skip_internal_str:0000000000000000 __skip_internal_str
     /tmp/ccd0pRUN.s:92     .text.__msg_enable_buff:0000000000000000 __msg_enable_buff
     /tmp/ccd0pRUN.s:3602   .bss.__redir_outp_to_buff:0000000000000000 __redir_outp_to_buff
     /tmp/ccd0pRUN.s:105    .text.__msg_disable_buff:0000000000000000 __msg_disable_buff
     /tmp/ccd0pRUN.s:118    .text.__msg_init_str_buff:0000000000000000 __msg_init_str_buff
     /tmp/ccd0pRUN.s:3608   .bss.__str_buff:0000000000000000 __str_buff
     /tmp/ccd0pRUN.s:136    .text.__msg_reset_str_buff:0000000000000000 __msg_reset_str_buff
     /tmp/ccd0pRUN.s:151    .text.__msg_putc_to_buff:0000000000000000 __msg_putc_to_buff
     /tmp/ccd0pRUN.s:195    .text.__msg_putc:0000000000000000 __msg_putc
     /tmp/ccd0pRUN.s:3597   .bss.__putc:0000000000000000 __putc
     /tmp/ccd0pRUN.s:231    .text.__msg_print_int:0000000000000000 __msg_print_int
     /tmp/ccd0pRUN.s:354    .text.__msg_print_float:0000000000000000 __msg_print_float
     /tmp/ccd0pRUN.s:439    .text.__msg_print_str:0000000000000000 __msg_print_str
     /tmp/ccd0pRUN.s:492    .text.__msg_print:0000000000000000 __msg_print
     /tmp/ccd0pRUN.s:514    .text.__msg_wrapper_print_obj:0000000000000000 __msg_wrapper_print_obj
     /tmp/ccd0pRUN.s:761    .text.__msg_wrapper_print_msg:0000000000000000 __msg_wrapper_print_msg
     /tmp/ccd0pRUN.s:884    .text.msg_destroy_string:0000000000000000 msg_destroy_string
     /tmp/ccd0pRUN.s:900    .text.__find_keyword:0000000000000000 __find_keyword
     /tmp/ccd0pRUN.s:1296   .text.__find_val:0000000000000000 __find_val
     /tmp/ccd0pRUN.s:1577   .text.msg_destroy:0000000000000000 msg_destroy
     /tmp/ccd0pRUN.s:1606   .text.msg_destroy_obj:0000000000000000 msg_destroy_obj
     /tmp/ccd0pRUN.s:1635   .text.msg_destroy_cmd:0000000000000000 msg_destroy_cmd
     /tmp/ccd0pRUN.s:1651   .text.msg_init_string:0000000000000000 msg_init_string
     /tmp/ccd0pRUN.s:1680   .text.msg_get:0000000000000000 msg_get
     /tmp/ccd0pRUN.s:1833   .text.msg_parser_get_obj:0000000000000000 msg_parser_get_obj
     /tmp/ccd0pRUN.s:1982   .text.msg_parser_get_cmd:0000000000000000 msg_parser_get_cmd
     /tmp/ccd0pRUN.s:2010   .text.msg_parser_get_int:0000000000000000 msg_parser_get_int
     /tmp/ccd0pRUN.s:2183   .text.msg_parser_get_float:0000000000000000 msg_parser_get_float
     /tmp/ccd0pRUN.s:2447   .text.msg_parser_get_string:0000000000000000 msg_parser_get_string
     /tmp/ccd0pRUN.s:2572   .text.msg_hnd_create:0000000000000000 msg_hnd_create
     /tmp/ccd0pRUN.s:2643   .text.msg_wrap_destroy:0000000000000000 msg_wrap_destroy
     /tmp/ccd0pRUN.s:2672   .text.msg_wrap_destroy_obj:0000000000000000 msg_wrap_destroy_obj
     /tmp/ccd0pRUN.s:2705   .text.msg_wrap_destroy_cmd:0000000000000000 msg_wrap_destroy_cmd
     /tmp/ccd0pRUN.s:2732   .text.msg_wrap_destroy_str:0000000000000000 msg_wrap_destroy_str
     /tmp/ccd0pRUN.s:2763   .text.msg_wrap_destroy_int:0000000000000000 msg_wrap_destroy_int
     /tmp/ccd0pRUN.s:2792   .text.msg_wrap_destroy_float:0000000000000000 msg_wrap_destroy_float
     /tmp/ccd0pRUN.s:2823   .text.msg_wrapper_init_msg:0000000000000000 msg_wrapper_init_msg
     /tmp/ccd0pRUN.s:2868   .text.msg_wrapper_init_cmd:0000000000000000 msg_wrapper_init_cmd
     /tmp/ccd0pRUN.s:2906   .text.msg_wrapper_init_obj:0000000000000000 msg_wrapper_init_obj
     /tmp/ccd0pRUN.s:2959   .text.msg_wrapper_init_string:0000000000000000 msg_wrapper_init_string
     /tmp/ccd0pRUN.s:3028   .text.msg_wrapper_init_int:0000000000000000 msg_wrapper_init_int
     /tmp/ccd0pRUN.s:3082   .text.msg_wrapper_init_float:0000000000000000 msg_wrapper_init_float
     /tmp/ccd0pRUN.s:3146   .text.msg_wrapper_add_string_to_obj:0000000000000000 msg_wrapper_add_string_to_obj
     /tmp/ccd0pRUN.s:3182   .text.msg_wrapper_rm_string_from_obj:0000000000000000 msg_wrapper_rm_string_from_obj
     /tmp/ccd0pRUN.s:3236   .text.msg_wrapper_add_int_to_obj:0000000000000000 msg_wrapper_add_int_to_obj
     /tmp/ccd0pRUN.s:3272   .text.msg_wrapper_rm_int_from_obj:0000000000000000 msg_wrapper_rm_int_from_obj
     /tmp/ccd0pRUN.s:3326   .text.msg_wrapper_add_float_to_obj:0000000000000000 msg_wrapper_add_float_to_obj
     /tmp/ccd0pRUN.s:3362   .text.msg_wrapper_rm_float_from_obj:0000000000000000 msg_wrapper_rm_float_from_obj
     /tmp/ccd0pRUN.s:3416   .text.msg_wrapper_add_object_to_msg:0000000000000000 msg_wrapper_add_object_to_msg
     /tmp/ccd0pRUN.s:3452   .text.msg_wrapper_rm_obj_from_msg:0000000000000000 msg_wrapper_rm_obj_from_msg
     /tmp/ccd0pRUN.s:3506   .text.msg_wrapper_add_cmd_to_msg:0000000000000000 msg_wrapper_add_cmd_to_msg
     /tmp/ccd0pRUN.s:3542   .text.msg_wrapper_rm_cmd_from_msg:0000000000000000 msg_wrapper_rm_cmd_from_msg
     /tmp/ccd0pRUN.s:3612   .rodata.cst16:0000000000000000 .LC1
     /tmp/ccd0pRUN.s:3619   .rodata.cst4:0000000000000000 .LC2
GAS LISTING /tmp/ccd0pRUN.s 			page 95


     /tmp/ccd0pRUN.s:3622   .rodata.cst4:0000000000000004 .LC3

UNDEFINED SYMBOLS
_GLOBAL_OFFSET_TABLE_
__stack_chk_fail
