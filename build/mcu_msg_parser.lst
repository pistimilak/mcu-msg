GAS LISTING /tmp/ccvnMFoE.s 			page 1


   1              		.file	"mcu_msg_parser.c"
   2              		.text
   3              	.Ltext0:
   4              		.section	.text.is_ctrl_char,"ax",@progbits
   6              	is_ctrl_char:
   7              	.LFB27:
   8              		.file 1 "src/mcu_msg_parser.c"
   1:src/mcu_msg_parser.c **** /**
   2:src/mcu_msg_parser.c ****  * @file mcu_msg_parser.c
   3:src/mcu_msg_parser.c ****  * @author Istvan Milak (istvan.milak@gmail.com)
   4:src/mcu_msg_parser.c ****  * @brief Simple message parser for embedded applications, eg serial comm
   5:src/mcu_msg_parser.c ****  * @version 0.1
   6:src/mcu_msg_parser.c ****  * @date 2019-12-15
   7:src/mcu_msg_parser.c ****  * 
   8:src/mcu_msg_parser.c ****  * @copyright Copyright (c) 2019
   9:src/mcu_msg_parser.c ****  * 
  10:src/mcu_msg_parser.c ****  */
  11:src/mcu_msg_parser.c **** #include <stdio.h>
  12:src/mcu_msg_parser.c **** #include "mcu_msg_parser.h"
  13:src/mcu_msg_parser.c **** 
  14:src/mcu_msg_parser.c **** /*Control chars*/
  15:src/mcu_msg_parser.c **** #define CTRL_START_MSG      '{'
  16:src/mcu_msg_parser.c **** #define CTRL_STOP_MSG       '}'
  17:src/mcu_msg_parser.c **** #define CTRL_START_OBJ      '('
  18:src/mcu_msg_parser.c **** #define CTRL_STOP_OBJ       ')'
  19:src/mcu_msg_parser.c **** #define CTRL_OBJ_FLAG       '@'
  20:src/mcu_msg_parser.c **** #define CTRL_KEY_FLAG       '$'
  21:src/mcu_msg_parser.c **** #define CTRL_KEY_SEP        ';'
  22:src/mcu_msg_parser.c **** #define CTRL_KEY_EQU        '='
  23:src/mcu_msg_parser.c **** 
  24:src/mcu_msg_parser.c **** 
  25:src/mcu_msg_parser.c **** /**
  26:src/mcu_msg_parser.c ****  * @brief Argument char is control char or not
  27:src/mcu_msg_parser.c ****  * 
  28:src/mcu_msg_parser.c ****  * @param c char
  29:src/mcu_msg_parser.c ****  * @return uint8_t comparison result
  30:src/mcu_msg_parser.c ****  */
  31:src/mcu_msg_parser.c **** static uint8_t is_ctrl_char(char c)
  32:src/mcu_msg_parser.c **** {
   9              		.loc 1 32 0
  10              		.cfi_startproc
  11              	.LVL0:
  33:src/mcu_msg_parser.c ****     switch(c) {
  12              		.loc 1 33 0
  13 0000 4080FF3B 		cmpb	$59, %dil
  14 0004 7441     		je	.L3
  15 0006 4080FF3B 		cmpb	$59, %dil
  16 000a 7E1A     		jle	.L7
  17 000c 4080FF40 		cmpb	$64, %dil
  18 0010 7435     		je	.L3
  19 0012 4080FF40 		cmpb	$64, %dil
  20 0016 7E29     		jle	.L8
  21 0018 4080FF7B 		cmpb	$123, %dil
  22 001c 7429     		je	.L3
  23 001e 4080FF7D 		cmpb	$125, %dil
  24 0022 7517     		jne	.L6
  25 0024 EB21     		jmp	.L3
GAS LISTING /tmp/ccvnMFoE.s 			page 2


  26              	.L7:
  27 0026 4080FF24 		cmpb	$36, %dil
  28 002a 741B     		je	.L3
  29 002c 4080FF24 		cmpb	$36, %dil
  30 0030 7C09     		jl	.L6
  31 0032 83EF28   		subl	$40, %edi
  32              	.LVL1:
  33 0035 4080FF01 		cmpb	$1, %dil
  34 0039 760C     		jbe	.L3
  35              	.L6:
  34:src/mcu_msg_parser.c ****         case CTRL_START_MSG:
  35:src/mcu_msg_parser.c ****         case CTRL_STOP_MSG:
  36:src/mcu_msg_parser.c ****         case CTRL_START_OBJ:
  37:src/mcu_msg_parser.c ****         case CTRL_STOP_OBJ:
  38:src/mcu_msg_parser.c ****         case CTRL_OBJ_FLAG:
  39:src/mcu_msg_parser.c ****         case CTRL_KEY_FLAG:
  40:src/mcu_msg_parser.c ****         case CTRL_KEY_SEP:
  41:src/mcu_msg_parser.c ****         case CTRL_KEY_EQU:
  42:src/mcu_msg_parser.c ****             return 1;
  43:src/mcu_msg_parser.c ****         default:
  44:src/mcu_msg_parser.c ****             return 0;
  36              		.loc 1 44 0
  37 003b B8000000 		movl	$0, %eax
  37      00
  45:src/mcu_msg_parser.c ****     }
  46:src/mcu_msg_parser.c **** }
  38              		.loc 1 46 0
  39 0040 C3       		ret
  40              	.LVL2:
  41              	.L8:
  33:src/mcu_msg_parser.c ****         case CTRL_START_MSG:
  42              		.loc 1 33 0
  43 0041 4080FF3D 		cmpb	$61, %dil
  44 0045 75F4     		jne	.L6
  45              	.LVL3:
  46              	.L3:
  42:src/mcu_msg_parser.c ****         default:
  47              		.loc 1 42 0
  48 0047 B8010000 		movl	$1, %eax
  48      00
  49 004c C3       		ret
  50              		.cfi_endproc
  51              	.LFE27:
  53              		.section	.text.is_valid_keyword_char,"ax",@progbits
  55              	is_valid_keyword_char:
  56              	.LFB28:
  47:src/mcu_msg_parser.c **** 
  48:src/mcu_msg_parser.c **** 
  49:src/mcu_msg_parser.c **** /**
  50:src/mcu_msg_parser.c ****  * @brief Argument char is valid keyword char or not
  51:src/mcu_msg_parser.c ****  * 
  52:src/mcu_msg_parser.c ****  * @param c char
  53:src/mcu_msg_parser.c ****  * @return uint8_t comparison result
  54:src/mcu_msg_parser.c ****  */
  55:src/mcu_msg_parser.c **** static uint8_t is_valid_keyword_char(char c)
  56:src/mcu_msg_parser.c **** {
  57              		.loc 1 56 0
GAS LISTING /tmp/ccvnMFoE.s 			page 3


  58              		.cfi_startproc
  59              	.LVL4:
  57:src/mcu_msg_parser.c ****     return (c == '_') || (c >= 'a' && c <= 'z') || 
  60              		.loc 1 57 0
  61 0000 4080FF5F 		cmpb	$95, %dil
  62 0004 0F94C2   		sete	%dl
  63 0007 8D479F   		leal	-97(%rdi), %eax
  64 000a 3C19     		cmpb	$25, %al
  65 000c 0F96C0   		setbe	%al
  58:src/mcu_msg_parser.c ****                     (c >= 'A' && c <= 'Z') || 
  59:src/mcu_msg_parser.c ****                     (c >= '0' && c <= '9') ? 1 : 0;
  66              		.loc 1 59 0
  67 000f 08C2     		orb	%al, %dl
  68 0011 751C     		jne	.L11
  58:src/mcu_msg_parser.c ****                     (c >= 'A' && c <= 'Z') || 
  69              		.loc 1 58 0
  70 0013 8D47BF   		leal	-65(%rdi), %eax
  57:src/mcu_msg_parser.c ****     return (c == '_') || (c >= 'a' && c <= 'z') || 
  71              		.loc 1 57 0
  72 0016 3C19     		cmpb	$25, %al
  73 0018 761B     		jbe	.L12
  74              		.loc 1 59 0 discriminator 2
  75 001a 83EF30   		subl	$48, %edi
  76              	.LVL5:
  77 001d 4080FF09 		cmpb	$9, %dil
  78 0021 7606     		jbe	.L14
  79              		.loc 1 59 0 is_stmt 0
  80 0023 B8000000 		movl	$0, %eax
  80      00
  60:src/mcu_msg_parser.c **** }
  81              		.loc 1 60 0 is_stmt 1
  82 0028 C3       		ret
  83              	.L14:
  59:src/mcu_msg_parser.c **** }
  84              		.loc 1 59 0
  85 0029 B8010000 		movl	$1, %eax
  85      00
  86 002e C3       		ret
  87              	.LVL6:
  88              	.L11:
  89 002f B8010000 		movl	$1, %eax
  89      00
  90 0034 C3       		ret
  91              	.L12:
  92 0035 B8010000 		movl	$1, %eax
  92      00
  93 003a C3       		ret
  94              		.cfi_endproc
  95              	.LFE28:
  97              		.section	.text.str_len,"ax",@progbits
  99              	str_len:
 100              	.LFB29:
  61:src/mcu_msg_parser.c **** 
  62:src/mcu_msg_parser.c **** 
  63:src/mcu_msg_parser.c **** /**
  64:src/mcu_msg_parser.c ****  * @brief strlen implementation for internal usage
  65:src/mcu_msg_parser.c ****  * 
GAS LISTING /tmp/ccvnMFoE.s 			page 4


  66:src/mcu_msg_parser.c ****  * @param str string 
  67:src/mcu_msg_parser.c ****  * @return mcu_msg_size_t length of string 
  68:src/mcu_msg_parser.c ****  */
  69:src/mcu_msg_parser.c **** static mcu_msg_size_t str_len(char *str)
  70:src/mcu_msg_parser.c **** {
 101              		.loc 1 70 0
 102              		.cfi_startproc
 103              	.LVL7:
  71:src/mcu_msg_parser.c ****     mcu_msg_size_t res = 0;
 104              		.loc 1 71 0
 105 0000 B8000000 		movl	$0, %eax
 105      00
  72:src/mcu_msg_parser.c ****     char *p = str;
  73:src/mcu_msg_parser.c ****     while(*p) {
 106              		.loc 1 73 0
 107 0005 EB07     		jmp	.L16
 108              	.LVL8:
 109              	.L17:
  74:src/mcu_msg_parser.c ****         res++;
 110              		.loc 1 74 0
 111 0007 83C001   		addl	$1, %eax
 112              	.LVL9:
  75:src/mcu_msg_parser.c ****         p++;
 113              		.loc 1 75 0
 114 000a 4883C701 		addq	$1, %rdi
 115              	.LVL10:
 116              	.L16:
  73:src/mcu_msg_parser.c ****         res++;
 117              		.loc 1 73 0
 118 000e 803F00   		cmpb	$0, (%rdi)
 119 0011 75F4     		jne	.L17
  76:src/mcu_msg_parser.c ****     }
  77:src/mcu_msg_parser.c ****     return res;
  78:src/mcu_msg_parser.c **** }
 120              		.loc 1 78 0
 121 0013 F3C3     		rep ret
 122              		.cfi_endproc
 123              	.LFE29:
 125              		.section	.text.find_keyword,"ax",@progbits
 127              	find_keyword:
 128              	.LFB30:
  79:src/mcu_msg_parser.c **** 
  80:src/mcu_msg_parser.c **** /**
  81:src/mcu_msg_parser.c ****  * @brief find the position of the keyword int message string (first occurance)
  82:src/mcu_msg_parser.c ****  * if the keyword found in the message string, the next (none space) char must be stopc
  83:src/mcu_msg_parser.c ****  * @param msg message
  84:src/mcu_msg_parser.c ****  * @param len message length
  85:src/mcu_msg_parser.c ****  * @param keyword keword has to be found
  86:src/mcu_msg_parser.c ****  * @param flagc flag, eg. '@', '$'
  87:src/mcu_msg_parser.c ****  * @param stopc stop character eg. '(', '='
  88:src/mcu_msg_parser.c ****  * @return char* location of the keyword (whitout flag) or NULL if keyword not found
  89:src/mcu_msg_parser.c ****  */
  90:src/mcu_msg_parser.c **** static char *find_keyword(char *msg, mcu_msg_size_t len, char *keyword, char flagc, char stopc)
  91:src/mcu_msg_parser.c **** {
 129              		.loc 1 91 0
 130              		.cfi_startproc
 131              	.LVL11:
GAS LISTING /tmp/ccvnMFoE.s 			page 5


 132 0000 4157     		pushq	%r15
 133              	.LCFI0:
 134              		.cfi_def_cfa_offset 16
 135              		.cfi_offset 15, -16
 136 0002 4156     		pushq	%r14
 137              	.LCFI1:
 138              		.cfi_def_cfa_offset 24
 139              		.cfi_offset 14, -24
 140 0004 4155     		pushq	%r13
 141              	.LCFI2:
 142              		.cfi_def_cfa_offset 32
 143              		.cfi_offset 13, -32
 144 0006 4154     		pushq	%r12
 145              	.LCFI3:
 146              		.cfi_def_cfa_offset 40
 147              		.cfi_offset 12, -40
 148 0008 55       		pushq	%rbp
 149              	.LCFI4:
 150              		.cfi_def_cfa_offset 48
 151              		.cfi_offset 6, -48
 152 0009 53       		pushq	%rbx
 153              	.LCFI5:
 154              		.cfi_def_cfa_offset 56
 155              		.cfi_offset 3, -56
 156 000a 4883EC18 		subq	$24, %rsp
 157              	.LCFI6:
 158              		.cfi_def_cfa_offset 80
 159 000e 4989FE   		movq	%rdi, %r14
 160 0011 4889D7   		movq	%rdx, %rdi
 161              	.LVL12:
 162 0014 48895424 		movq	%rdx, 8(%rsp)
 162      08
 163 0019 4189F5   		movl	%esi, %r13d
 164 001c 884C2416 		movb	%cl, 22(%rsp)
 165 0020 44884424 		movb	%r8b, 23(%rsp)
 165      17
 166              	.LVL13:
  92:src/mcu_msg_parser.c ****     char *p = msg;
  93:src/mcu_msg_parser.c ****     char *loc;
  94:src/mcu_msg_parser.c ****     uint8_t equal;
  95:src/mcu_msg_parser.c ****     mcu_msg_size_t i;
  96:src/mcu_msg_parser.c ****     mcu_msg_size_t key_len = str_len(keyword);
 167              		.loc 1 96 0
 168 0025 E8000000 		call	str_len
 168      00
 169              	.LVL14:
 170 002a 66894424 		movw	%ax, 20(%rsp)
 170      14
 171              	.LVL15:
  92:src/mcu_msg_parser.c ****     char *p = msg;
 172              		.loc 1 92 0
 173 002f 4C89F2   		movq	%r14, %rdx
  97:src/mcu_msg_parser.c ****     while((p - msg) < len && *p) {
 174              		.loc 1 97 0
 175 0032 EB36     		jmp	.L19
 176              	.LVL16:
 177              	.L35:
GAS LISTING /tmp/ccvnMFoE.s 			page 6


  98:src/mcu_msg_parser.c ****         if(((p - msg) < len - 1) && *p == flagc) {
  99:src/mcu_msg_parser.c ****             loc = p + 1;
 100:src/mcu_msg_parser.c ****             // exp_key = keyword;
 101:src/mcu_msg_parser.c ****             equal = 1;
 178              		.loc 1 101 0
 179 0034 B8010000 		movl	$1, %eax
 179      00
 180 0039 EB03     		jmp	.L24
 181              	.LVL17:
 182              	.L26:
 102:src/mcu_msg_parser.c ****             for(i = 0; (loc + i - msg) < len && i < key_len; i++) {
 103:src/mcu_msg_parser.c ****                 if((*(loc + i) != *(keyword + i)) || is_ctrl_char(*(loc + i)) || 
 104:src/mcu_msg_parser.c ****                                     !is_valid_keyword_char(*(loc + i))) {
 105:src/mcu_msg_parser.c ****                     equal = 0;
 106:src/mcu_msg_parser.c ****                     break;
 107:src/mcu_msg_parser.c ****                 }
 108:src/mcu_msg_parser.c ****             }
 109:src/mcu_msg_parser.c ****             while((loc + i - msg) < len && *(loc + i) == ' ') i++; //skip spaces
 183              		.loc 1 109 0 discriminator 3
 184 003b 83C301   		addl	$1, %ebx
 185              	.LVL18:
 186              	.L24:
 187              		.loc 1 109 0 is_stmt 0 discriminator 1
 188 003e 0FB7D3   		movzwl	%bx, %edx
 189 0041 4C01FA   		addq	%r15, %rdx
 190 0044 4889D1   		movq	%rdx, %rcx
 191 0047 482B0C24 		subq	(%rsp), %rcx
 192 004b 4C39E1   		cmpq	%r12, %rcx
 193 004e 7D05     		jge	.L25
 194              		.loc 1 109 0 discriminator 2
 195 0050 803A20   		cmpb	$32, (%rdx)
 196 0053 74E6     		je	.L26
 197              	.L25:
 110:src/mcu_msg_parser.c ****             if(equal && *(loc + i) == stopc) {
 198              		.loc 1 110 0 is_stmt 1
 199 0055 84C0     		testb	%al, %al
 200 0057 740D     		je	.L20
 201              		.loc 1 110 0 is_stmt 0 discriminator 1
 202 0059 0FB64424 		movzbl	23(%rsp), %eax
 202      17
 203              	.LVL19:
 204 005e 3802     		cmpb	%al, (%rdx)
 205 0060 0F84C000 		je	.L18
 205      0000
 206              	.LVL20:
 207              	.L20:
 111:src/mcu_msg_parser.c ****                 return loc;
 112:src/mcu_msg_parser.c ****             } else {
 113:src/mcu_msg_parser.c ****                 p = loc + i;
 114:src/mcu_msg_parser.c ****             }
 115:src/mcu_msg_parser.c ****         }
 116:src/mcu_msg_parser.c ****         p++;
 208              		.loc 1 116 0 is_stmt 1
 209 0066 4883C201 		addq	$1, %rdx
 210              	.LVL21:
 211              	.L19:
  97:src/mcu_msg_parser.c ****         if(((p - msg) < len - 1) && *p == flagc) {
GAS LISTING /tmp/ccvnMFoE.s 			page 7


 212              		.loc 1 97 0
 213 006a 4C893424 		movq	%r14, (%rsp)
 214 006e 4889D1   		movq	%rdx, %rcx
 215 0071 4C29F1   		subq	%r14, %rcx
 216 0074 450FB7E5 		movzwl	%r13w, %r12d
 217 0078 4C39E1   		cmpq	%r12, %rcx
 218 007b 0F8D9F00 		jge	.L32
 218      0000
  97:src/mcu_msg_parser.c ****         if(((p - msg) < len - 1) && *p == flagc) {
 219              		.loc 1 97 0 is_stmt 0 discriminator 1
 220 0081 0FB632   		movzbl	(%rdx), %esi
 221 0084 4084F6   		testb	%sil, %sil
 222 0087 0F848B00 		je	.L34
 222      0000
  98:src/mcu_msg_parser.c ****             loc = p + 1;
 223              		.loc 1 98 0 is_stmt 1
 224 008d 410FB7C5 		movzwl	%r13w, %eax
 225 0091 83E801   		subl	$1, %eax
 226 0094 4898     		cltq
 227 0096 4839C8   		cmpq	%rcx, %rax
 228 0099 7ECB     		jle	.L20
  98:src/mcu_msg_parser.c ****             loc = p + 1;
 229              		.loc 1 98 0 is_stmt 0 discriminator 1
 230 009b 403A7424 		cmpb	22(%rsp), %sil
 230      16
 231 00a0 75C4     		jne	.L20
  99:src/mcu_msg_parser.c ****             // exp_key = keyword;
 232              		.loc 1 99 0 is_stmt 1
 233 00a2 4C8D7A01 		leaq	1(%rdx), %r15
 234              	.LVL22:
 102:src/mcu_msg_parser.c ****                 if((*(loc + i) != *(keyword + i)) || is_ctrl_char(*(loc + i)) || 
 235              		.loc 1 102 0
 236 00a6 BB000000 		movl	$0, %ebx
 236      00
 237              	.LVL23:
 238              	.L21:
 102:src/mcu_msg_parser.c ****                 if((*(loc + i) != *(keyword + i)) || is_ctrl_char(*(loc + i)) || 
 239              		.loc 1 102 0 is_stmt 0 discriminator 1
 240 00ab 0FB7C3   		movzwl	%bx, %eax
 241 00ae 498D1407 		leaq	(%r15,%rax), %rdx
 242 00b2 4889D1   		movq	%rdx, %rcx
 243 00b5 482B0C24 		subq	(%rsp), %rcx
 244 00b9 4C39E1   		cmpq	%r12, %rcx
 245 00bc 7D50     		jge	.L31
 102:src/mcu_msg_parser.c ****                 if((*(loc + i) != *(keyword + i)) || is_ctrl_char(*(loc + i)) || 
 246              		.loc 1 102 0 discriminator 3
 247 00be 663B5C24 		cmpw	20(%rsp), %bx
 247      14
 248 00c3 0F836BFF 		jnb	.L35
 248      FFFF
 103:src/mcu_msg_parser.c ****                                     !is_valid_keyword_char(*(loc + i))) {
 249              		.loc 1 103 0 is_stmt 1
 250 00c9 0FB62A   		movzbl	(%rdx), %ebp
 251 00cc 488B7424 		movq	8(%rsp), %rsi
 251      08
 252 00d1 403A2C06 		cmpb	(%rsi,%rax), %bpl
 253 00d5 7523     		jne	.L29
GAS LISTING /tmp/ccvnMFoE.s 			page 8


 103:src/mcu_msg_parser.c ****                                     !is_valid_keyword_char(*(loc + i))) {
 254              		.loc 1 103 0 is_stmt 0 discriminator 1
 255 00d7 400FBEED 		movsbl	%bpl, %ebp
 256 00db 89EF     		movl	%ebp, %edi
 257 00dd E8000000 		call	is_ctrl_char
 257      00
 258              	.LVL24:
 259 00e2 84C0     		testb	%al, %al
 260 00e4 751E     		jne	.L30
 104:src/mcu_msg_parser.c ****                     equal = 0;
 261              		.loc 1 104 0 is_stmt 1 discriminator 2
 262 00e6 89EF     		movl	%ebp, %edi
 263 00e8 E8000000 		call	is_valid_keyword_char
 263      00
 264              	.LVL25:
 103:src/mcu_msg_parser.c ****                                     !is_valid_keyword_char(*(loc + i))) {
 265              		.loc 1 103 0 discriminator 2
 266 00ed 84C0     		testb	%al, %al
 267 00ef 0F8449FF 		je	.L24
 267      FFFF
 102:src/mcu_msg_parser.c ****                 if((*(loc + i) != *(keyword + i)) || is_ctrl_char(*(loc + i)) || 
 268              		.loc 1 102 0 discriminator 2
 269 00f5 83C301   		addl	$1, %ebx
 270              	.LVL26:
 271 00f8 EBB1     		jmp	.L21
 272              	.L29:
 105:src/mcu_msg_parser.c ****                     break;
 273              		.loc 1 105 0
 274 00fa B8000000 		movl	$0, %eax
 274      00
 275 00ff E93AFFFF 		jmp	.L24
 275      FF
 276              	.L30:
 277 0104 B8000000 		movl	$0, %eax
 277      00
 278 0109 E930FFFF 		jmp	.L24
 278      FF
 279              	.L31:
 101:src/mcu_msg_parser.c ****             for(i = 0; (loc + i - msg) < len && i < key_len; i++) {
 280              		.loc 1 101 0
 281 010e B8010000 		movl	$1, %eax
 281      00
 282 0113 E926FFFF 		jmp	.L24
 282      FF
 283              	.LVL27:
 284              	.L34:
 117:src/mcu_msg_parser.c ****     }
 118:src/mcu_msg_parser.c ****     return NULL;
 285              		.loc 1 118 0
 286 0118 41BF0000 		movl	$0, %r15d
 286      0000
 287 011e EB06     		jmp	.L18
 288              	.L32:
 289 0120 41BF0000 		movl	$0, %r15d
 289      0000
 290              	.LVL28:
 291              	.L18:
GAS LISTING /tmp/ccvnMFoE.s 			page 9


 119:src/mcu_msg_parser.c **** }
 292              		.loc 1 119 0
 293 0126 4C89F8   		movq	%r15, %rax
 294 0129 4883C418 		addq	$24, %rsp
 295              	.LCFI7:
 296              		.cfi_def_cfa_offset 56
 297 012d 5B       		popq	%rbx
 298              	.LCFI8:
 299              		.cfi_def_cfa_offset 48
 300 012e 5D       		popq	%rbp
 301              	.LCFI9:
 302              		.cfi_def_cfa_offset 40
 303 012f 415C     		popq	%r12
 304              	.LCFI10:
 305              		.cfi_def_cfa_offset 32
 306 0131 415D     		popq	%r13
 307              	.LCFI11:
 308              		.cfi_def_cfa_offset 24
 309              	.LVL29:
 310 0133 415E     		popq	%r14
 311              	.LCFI12:
 312              		.cfi_def_cfa_offset 16
 313              	.LVL30:
 314 0135 415F     		popq	%r15
 315              	.LCFI13:
 316              		.cfi_def_cfa_offset 8
 317 0137 C3       		ret
 318              		.cfi_endproc
 319              	.LFE30:
 321              		.section	.text.find_val,"ax",@progbits
 323              	find_val:
 324              	.LFB31:
 120:src/mcu_msg_parser.c **** 
 121:src/mcu_msg_parser.c **** 
 122:src/mcu_msg_parser.c **** /**
 123:src/mcu_msg_parser.c ****  * @brief Getting the value start position for particular key in message object
 124:src/mcu_msg_parser.c ****  * 
 125:src/mcu_msg_parser.c ****  * @param obj message object
 126:src/mcu_msg_parser.c ****  * @param key key for search
 127:src/mcu_msg_parser.c ****  * @return char* location of the value start point or NULL if the key was not found
 128:src/mcu_msg_parser.c ****  */
 129:src/mcu_msg_parser.c **** static char *find_val(mcu_msg_obj_t obj, char *key)
 130:src/mcu_msg_parser.c **** {
 325              		.loc 1 130 0
 326              		.cfi_startproc
 327              	.LVL31:
 328 0000 4156     		pushq	%r14
 329              	.LCFI14:
 330              		.cfi_def_cfa_offset 16
 331              		.cfi_offset 14, -16
 332 0002 4155     		pushq	%r13
 333              	.LCFI15:
 334              		.cfi_def_cfa_offset 24
 335              		.cfi_offset 13, -24
 336 0004 4154     		pushq	%r12
 337              	.LCFI16:
 338              		.cfi_def_cfa_offset 32
GAS LISTING /tmp/ccvnMFoE.s 			page 10


 339              		.cfi_offset 12, -32
 340 0006 55       		pushq	%rbp
 341              	.LCFI17:
 342              		.cfi_def_cfa_offset 40
 343              		.cfi_offset 6, -40
 344 0007 53       		pushq	%rbx
 345              	.LCFI18:
 346              		.cfi_def_cfa_offset 48
 347              		.cfi_offset 3, -48
 348 0008 4989FE   		movq	%rdi, %r14
 131:src/mcu_msg_parser.c ****     char *loc = find_keyword(obj.content, obj.content_len, key, CTRL_KEY_FLAG, CTRL_KEY_EQU); //obj
 349              		.loc 1 131 0
 350 000b 440FB764 		movzwl	66(%rsp), %r12d
 350      2442
 351 0011 450FB7EC 		movzwl	%r12w, %r13d
 352 0015 488B6C24 		movq	56(%rsp), %rbp
 352      38
 353 001a 41B83D00 		movl	$61, %r8d
 353      0000
 354 0020 B9240000 		movl	$36, %ecx
 354      00
 355 0025 4889FA   		movq	%rdi, %rdx
 356 0028 4489EE   		movl	%r13d, %esi
 357 002b 4889EF   		movq	%rbp, %rdi
 358              	.LVL32:
 359 002e E8000000 		call	find_keyword
 359      00
 360              	.LVL33:
 361 0033 4889C3   		movq	%rax, %rbx
 362              	.LVL34:
 132:src/mcu_msg_parser.c ****     char *p;
 133:src/mcu_msg_parser.c ****     if(loc == NULL) { //if keyword not found, return with NULLs and 0 lengths
 363              		.loc 1 133 0
 364 0036 4885C0   		testq	%rax, %rax
 365 0039 744D     		je	.L36
 134:src/mcu_msg_parser.c ****         return NULL;
 135:src/mcu_msg_parser.c ****     }
 136:src/mcu_msg_parser.c ****     p = loc + str_len(key);
 366              		.loc 1 136 0
 367 003b 4C89F7   		movq	%r14, %rdi
 368 003e E8000000 		call	str_len
 368      00
 369              	.LVL35:
 370 0043 0FB7C0   		movzwl	%ax, %eax
 371 0046 4801C3   		addq	%rax, %rbx
 372              	.LVL36:
 137:src/mcu_msg_parser.c ****     if(*p != CTRL_KEY_EQU) {
 373              		.loc 1 137 0
 374 0049 803B3D   		cmpb	$61, (%rbx)
 375 004c 750A     		jne	.L38
 376              	.L39:
 138:src/mcu_msg_parser.c ****         while(((p - obj.content) < (obj.content_len - 1)) && *p != CTRL_KEY_EQU) p++;
 139:src/mcu_msg_parser.c ****     }
 140:src/mcu_msg_parser.c ****     p++;
 377              		.loc 1 140 0
 378 004e 4883C301 		addq	$1, %rbx
 379              	.LVL37:
GAS LISTING /tmp/ccvnMFoE.s 			page 11


 141:src/mcu_msg_parser.c ****     while((p - obj.content) < obj.content_len && *p == ' ') p++; //skip spaces after equal
 380              		.loc 1 141 0
 381 0052 EB20     		jmp	.L41
 382              	.L40:
 138:src/mcu_msg_parser.c ****         while(((p - obj.content) < (obj.content_len - 1)) && *p != CTRL_KEY_EQU) p++;
 383              		.loc 1 138 0 discriminator 3
 384 0054 4883C301 		addq	$1, %rbx
 385              	.LVL38:
 386              	.L38:
 138:src/mcu_msg_parser.c ****         while(((p - obj.content) < (obj.content_len - 1)) && *p != CTRL_KEY_EQU) p++;
 387              		.loc 1 138 0 is_stmt 0 discriminator 1
 388 0058 4889DA   		movq	%rbx, %rdx
 389 005b 4829EA   		subq	%rbp, %rdx
 390 005e 418D45FF 		leal	-1(%r13), %eax
 391 0062 4898     		cltq
 392 0064 4839C2   		cmpq	%rax, %rdx
 393 0067 7DE5     		jge	.L39
 138:src/mcu_msg_parser.c ****         while(((p - obj.content) < (obj.content_len - 1)) && *p != CTRL_KEY_EQU) p++;
 394              		.loc 1 138 0 discriminator 2
 395 0069 803B3D   		cmpb	$61, (%rbx)
 396 006c 75E6     		jne	.L40
 397 006e EBDE     		jmp	.L39
 398              	.L42:
 399              		.loc 1 141 0 is_stmt 1 discriminator 3
 400 0070 4883C301 		addq	$1, %rbx
 401              	.LVL39:
 402              	.L41:
 403              		.loc 1 141 0 is_stmt 0 discriminator 1
 404 0074 4889DA   		movq	%rbx, %rdx
 405 0077 4829EA   		subq	%rbp, %rdx
 406 007a 410FB7C4 		movzwl	%r12w, %eax
 407 007e 4839C2   		cmpq	%rax, %rdx
 408 0081 7D05     		jge	.L36
 409              		.loc 1 141 0 discriminator 2
 410 0083 803B20   		cmpb	$32, (%rbx)
 411 0086 74E8     		je	.L42
 412              	.LVL40:
 413              	.L36:
 142:src/mcu_msg_parser.c ****     return p;
 143:src/mcu_msg_parser.c **** }
 414              		.loc 1 143 0 is_stmt 1
 415 0088 4889D8   		movq	%rbx, %rax
 416 008b 5B       		popq	%rbx
 417              	.LCFI19:
 418              		.cfi_def_cfa_offset 40
 419 008c 5D       		popq	%rbp
 420              	.LCFI20:
 421              		.cfi_def_cfa_offset 32
 422 008d 415C     		popq	%r12
 423              	.LCFI21:
 424              		.cfi_def_cfa_offset 24
 425 008f 415D     		popq	%r13
 426              	.LCFI22:
 427              		.cfi_def_cfa_offset 16
 428 0091 415E     		popq	%r14
 429              	.LCFI23:
 430              		.cfi_def_cfa_offset 8
GAS LISTING /tmp/ccvnMFoE.s 			page 12


 431              	.LVL41:
 432 0093 C3       		ret
 433              		.cfi_endproc
 434              	.LFE31:
 436              		.section	.text.mcu_msg_parser_get_obj,"ax",@progbits
 437              		.globl	mcu_msg_parser_get_obj
 439              	mcu_msg_parser_get_obj:
 440              	.LFB32:
 144:src/mcu_msg_parser.c **** 
 145:src/mcu_msg_parser.c **** 
 146:src/mcu_msg_parser.c **** 
 147:src/mcu_msg_parser.c **** mcu_msg_obj_t mcu_msg_parser_get_obj(char *msg, char *obj, mcu_msg_size_t len)
 148:src/mcu_msg_parser.c **** {
 441              		.loc 1 148 0
 442              		.cfi_startproc
 443              	.LVL42:
 444 0000 4157     		pushq	%r15
 445              	.LCFI24:
 446              		.cfi_def_cfa_offset 16
 447              		.cfi_offset 15, -16
 448 0002 4156     		pushq	%r14
 449              	.LCFI25:
 450              		.cfi_def_cfa_offset 24
 451              		.cfi_offset 14, -24
 452 0004 4155     		pushq	%r13
 453              	.LCFI26:
 454              		.cfi_def_cfa_offset 32
 455              		.cfi_offset 13, -32
 456 0006 4154     		pushq	%r12
 457              	.LCFI27:
 458              		.cfi_def_cfa_offset 40
 459              		.cfi_offset 12, -40
 460 0008 55       		pushq	%rbp
 461              	.LCFI28:
 462              		.cfi_def_cfa_offset 48
 463              		.cfi_offset 6, -48
 464 0009 53       		pushq	%rbx
 465              	.LCFI29:
 466              		.cfi_def_cfa_offset 56
 467              		.cfi_offset 3, -56
 468 000a 4883EC28 		subq	$40, %rsp
 469              	.LCFI30:
 470              		.cfi_def_cfa_offset 96
 471 000e 4989FD   		movq	%rdi, %r13
 472 0011 4889F5   		movq	%rsi, %rbp
 473 0014 4989D7   		movq	%rdx, %r15
 474 0017 4189CC   		movl	%ecx, %r12d
 149:src/mcu_msg_parser.c ****     mcu_msg_obj_t res;
 150:src/mcu_msg_parser.c ****     char *loc = find_keyword(msg, len, obj, CTRL_OBJ_FLAG, CTRL_START_OBJ); //object start with @ a
 475              		.loc 1 150 0
 476 001a 440FB7F1 		movzwl	%cx, %r14d
 477 001e 41B82800 		movl	$40, %r8d
 477      0000
 478 0024 B9400000 		movl	$64, %ecx
 478      00
 479              	.LVL43:
 480 0029 4489F6   		movl	%r14d, %esi
GAS LISTING /tmp/ccvnMFoE.s 			page 13


 481              	.LVL44:
 482 002c 4889EF   		movq	%rbp, %rdi
 483              	.LVL45:
 484 002f E8000000 		call	find_keyword
 484      00
 485              	.LVL46:
 151:src/mcu_msg_parser.c ****     char *p;
 152:src/mcu_msg_parser.c ****     if(loc == NULL) { //if keyword not found, return with NULLs and 0 lengths
 486              		.loc 1 152 0
 487 0034 4885C0   		testq	%rax, %rax
 488 0037 7431     		je	.L54
 489 0039 4889C3   		movq	%rax, %rbx
 153:src/mcu_msg_parser.c ****         res.name = NULL;
 154:src/mcu_msg_parser.c ****         res.content = NULL;
 155:src/mcu_msg_parser.c ****         res.name_len = 0;
 156:src/mcu_msg_parser.c ****         res.content_len = 0;
 157:src/mcu_msg_parser.c ****         return res;
 158:src/mcu_msg_parser.c ****     }
 159:src/mcu_msg_parser.c **** 
 160:src/mcu_msg_parser.c ****     res.name = loc;
 490              		.loc 1 160 0
 491 003c 48890424 		movq	%rax, (%rsp)
 161:src/mcu_msg_parser.c ****     res.name_len = str_len(obj);
 492              		.loc 1 161 0
 493 0040 4C89FF   		movq	%r15, %rdi
 494 0043 E8000000 		call	str_len
 494      00
 495              	.LVL47:
 496 0048 66894424 		movw	%ax, 16(%rsp)
 496      10
 162:src/mcu_msg_parser.c ****     p = loc + res.name_len;
 497              		.loc 1 162 0
 498 004d 0FB7C0   		movzwl	%ax, %eax
 499 0050 4801D8   		addq	%rbx, %rax
 500              	.LVL48:
 163:src/mcu_msg_parser.c ****     if (*p != CTRL_START_OBJ) {
 501              		.loc 1 163 0
 502 0053 803828   		cmpb	$40, (%rax)
 503 0056 7551     		jne	.L47
 504              	.L48:
 164:src/mcu_msg_parser.c ****         while(((p - msg) < (len - 1)) && *p != CTRL_START_OBJ) p++;
 165:src/mcu_msg_parser.c ****     }
 166:src/mcu_msg_parser.c ****     res.content = ++p;
 505              		.loc 1 166 0
 506 0058 4883C001 		addq	$1, %rax
 507              	.LVL49:
 508 005c 48894424 		movq	%rax, 8(%rsp)
 508      08
 167:src/mcu_msg_parser.c ****     res.content_len = 0;
 509              		.loc 1 167 0
 510 0061 66C74424 		movw	$0, 18(%rsp)
 510      120000
 168:src/mcu_msg_parser.c ****     while((p - msg) < len && *p != CTRL_STOP_OBJ) {
 511              		.loc 1 168 0
 512 0068 EB69     		jmp	.L50
 513              	.LVL50:
 514              	.L54:
GAS LISTING /tmp/ccvnMFoE.s 			page 14


 153:src/mcu_msg_parser.c ****         res.content = NULL;
 515              		.loc 1 153 0
 516 006a 48C70424 		movq	$0, (%rsp)
 516      00000000 
 154:src/mcu_msg_parser.c ****         res.name_len = 0;
 517              		.loc 1 154 0
 518 0072 48C74424 		movq	$0, 8(%rsp)
 518      08000000 
 518      00
 155:src/mcu_msg_parser.c ****         res.content_len = 0;
 519              		.loc 1 155 0
 520 007b 66C74424 		movw	$0, 16(%rsp)
 520      100000
 156:src/mcu_msg_parser.c ****         return res;
 521              		.loc 1 156 0
 522 0082 66C74424 		movw	$0, 18(%rsp)
 522      120000
 157:src/mcu_msg_parser.c ****     }
 523              		.loc 1 157 0
 524 0089 488B0424 		movq	(%rsp), %rax
 525              	.LVL51:
 526 008d 488B5424 		movq	8(%rsp), %rdx
 526      08
 527 0092 49894500 		movq	%rax, 0(%r13)
 528 0096 49895508 		movq	%rdx, 8(%r13)
 529 009a 488B4424 		movq	16(%rsp), %rax
 529      10
 530 009f 49894510 		movq	%rax, 16(%r13)
 531 00a3 EB5C     		jmp	.L44
 532              	.LVL52:
 533              	.L49:
 164:src/mcu_msg_parser.c ****     }
 534              		.loc 1 164 0 discriminator 3
 535 00a5 4883C001 		addq	$1, %rax
 536              	.LVL53:
 537              	.L47:
 164:src/mcu_msg_parser.c ****     }
 538              		.loc 1 164 0 is_stmt 0 discriminator 1
 539 00a9 4889C1   		movq	%rax, %rcx
 540 00ac 4829E9   		subq	%rbp, %rcx
 541 00af 418D56FF 		leal	-1(%r14), %edx
 542 00b3 4863D2   		movslq	%edx, %rdx
 543 00b6 4839D1   		cmpq	%rdx, %rcx
 544 00b9 7D9D     		jge	.L48
 164:src/mcu_msg_parser.c ****     }
 545              		.loc 1 164 0 discriminator 2
 546 00bb 803828   		cmpb	$40, (%rax)
 547 00be 75E5     		jne	.L49
 548 00c0 EB96     		jmp	.L48
 549              	.L52:
 169:src/mcu_msg_parser.c ****         p++;
 550              		.loc 1 169 0 is_stmt 1
 551 00c2 4883C001 		addq	$1, %rax
 552              	.LVL54:
 170:src/mcu_msg_parser.c ****         res.content_len++;
 553              		.loc 1 170 0
 554 00c6 0FB77424 		movzwl	18(%rsp), %esi
GAS LISTING /tmp/ccvnMFoE.s 			page 15


 554      12
 555 00cb 8D5601   		leal	1(%rsi), %edx
 556 00ce 66895424 		movw	%dx, 18(%rsp)
 556      12
 557              	.L50:
 168:src/mcu_msg_parser.c ****         p++;
 558              		.loc 1 168 0
 559 00d3 4889C1   		movq	%rax, %rcx
 560 00d6 4829E9   		subq	%rbp, %rcx
 561 00d9 410FB7D4 		movzwl	%r12w, %edx
 562 00dd 4839D1   		cmpq	%rdx, %rcx
 563 00e0 7D05     		jge	.L51
 168:src/mcu_msg_parser.c ****         p++;
 564              		.loc 1 168 0 is_stmt 0 discriminator 1
 565 00e2 803829   		cmpb	$41, (%rax)
 566 00e5 75DB     		jne	.L52
 567              	.L51:
 171:src/mcu_msg_parser.c ****     }
 172:src/mcu_msg_parser.c ****     return res;
 568              		.loc 1 172 0 is_stmt 1
 569 00e7 488B0424 		movq	(%rsp), %rax
 570              	.LVL55:
 571 00eb 488B5424 		movq	8(%rsp), %rdx
 571      08
 572 00f0 49894500 		movq	%rax, 0(%r13)
 573 00f4 49895508 		movq	%rdx, 8(%r13)
 574 00f8 488B4424 		movq	16(%rsp), %rax
 574      10
 575 00fd 49894510 		movq	%rax, 16(%r13)
 576              	.LVL56:
 577              	.L44:
 173:src/mcu_msg_parser.c **** }
 578              		.loc 1 173 0
 579 0101 4C89E8   		movq	%r13, %rax
 580 0104 4883C428 		addq	$40, %rsp
 581              	.LCFI31:
 582              		.cfi_def_cfa_offset 56
 583 0108 5B       		popq	%rbx
 584              	.LCFI32:
 585              		.cfi_def_cfa_offset 48
 586 0109 5D       		popq	%rbp
 587              	.LCFI33:
 588              		.cfi_def_cfa_offset 40
 589              	.LVL57:
 590 010a 415C     		popq	%r12
 591              	.LCFI34:
 592              		.cfi_def_cfa_offset 32
 593              	.LVL58:
 594 010c 415D     		popq	%r13
 595              	.LCFI35:
 596              		.cfi_def_cfa_offset 24
 597              	.LVL59:
 598 010e 415E     		popq	%r14
 599              	.LCFI36:
 600              		.cfi_def_cfa_offset 16
 601              	.LVL60:
 602 0110 415F     		popq	%r15
GAS LISTING /tmp/ccvnMFoE.s 			page 16


 603              	.LCFI37:
 604              		.cfi_def_cfa_offset 8
 605              	.LVL61:
 606 0112 C3       		ret
 607              		.cfi_endproc
 608              	.LFE32:
 610              		.section	.text.mcu_msg_parser_get_int,"ax",@progbits
 611              		.globl	mcu_msg_parser_get_int
 613              	mcu_msg_parser_get_int:
 614              	.LFB33:
 174:src/mcu_msg_parser.c **** 
 175:src/mcu_msg_parser.c **** int8_t mcu_msg_parser_get_int(int *res_val, mcu_msg_obj_t obj, char *key)
 176:src/mcu_msg_parser.c **** {
 615              		.loc 1 176 0
 616              		.cfi_startproc
 617              	.LVL62:
 618 0000 53       		pushq	%rbx
 619              	.LCFI38:
 620              		.cfi_def_cfa_offset 16
 621              		.cfi_offset 3, -16
 622 0001 4889FB   		movq	%rdi, %rbx
 177:src/mcu_msg_parser.c ****     char *p = find_val(obj, key);
 623              		.loc 1 177 0
 624 0004 FF742420 		pushq	32(%rsp)
 625              	.LCFI39:
 626              		.cfi_def_cfa_offset 24
 627 0008 FF742420 		pushq	32(%rsp)
 628              	.LCFI40:
 629              		.cfi_def_cfa_offset 32
 630 000c FF742420 		pushq	32(%rsp)
 631              	.LCFI41:
 632              		.cfi_def_cfa_offset 40
 633 0010 4889F7   		movq	%rsi, %rdi
 634              	.LVL63:
 635 0013 E8000000 		call	find_val
 635      00
 636              	.LVL64:
 637 0018 4883C418 		addq	$24, %rsp
 638              	.LCFI42:
 639              		.cfi_def_cfa_offset 16
 640              	.LVL65:
 178:src/mcu_msg_parser.c ****     mcu_msg_size_t i;
 179:src/mcu_msg_parser.c ****     unsigned m = 1;
 180:src/mcu_msg_parser.c ****     int sign = 1;
 181:src/mcu_msg_parser.c ****     int8_t res = 0; // result of function
 182:src/mcu_msg_parser.c **** 
 183:src/mcu_msg_parser.c ****     if(p == NULL)  //key nout found
 641              		.loc 1 183 0
 642 001c 4885C0   		testq	%rax, %rax
 643 001f 0F849E00 		je	.L65
 643      0000
 184:src/mcu_msg_parser.c ****         return -1;
 185:src/mcu_msg_parser.c **** 
 186:src/mcu_msg_parser.c **** 
 187:src/mcu_msg_parser.c ****     switch(*p) { //if the sign is defined, set the sign variable and increment the pointer
 644              		.loc 1 187 0
 645 0025 0FB610   		movzbl	(%rax), %edx
GAS LISTING /tmp/ccvnMFoE.s 			page 17


 646 0028 80FA2B   		cmpb	$43, %dl
 647 002b 740C     		je	.L58
 648 002d 80FA2D   		cmpb	$45, %dl
 649 0030 7445     		je	.L59
 180:src/mcu_msg_parser.c ****     int8_t res = 0; // result of function
 650              		.loc 1 180 0
 651 0032 BF010000 		movl	$1, %edi
 651      00
 652 0037 EB09     		jmp	.L57
 653              	.L58:
 188:src/mcu_msg_parser.c ****         case '+':
 189:src/mcu_msg_parser.c ****             sign = 1;
 190:src/mcu_msg_parser.c ****             p++;
 654              		.loc 1 190 0
 655 0039 4883C001 		addq	$1, %rax
 656              	.LVL66:
 189:src/mcu_msg_parser.c ****             p++;
 657              		.loc 1 189 0
 658 003d BF010000 		movl	$1, %edi
 658      00
 659              	.LVL67:
 660              	.L57:
 191:src/mcu_msg_parser.c ****         break;
 192:src/mcu_msg_parser.c ****         
 193:src/mcu_msg_parser.c ****         case '-':
 194:src/mcu_msg_parser.c ****             sign = -1;
 195:src/mcu_msg_parser.c ****             p++;
 196:src/mcu_msg_parser.c ****         break;
 197:src/mcu_msg_parser.c ****         
 198:src/mcu_msg_parser.c ****         default:
 199:src/mcu_msg_parser.c ****         break;
 200:src/mcu_msg_parser.c ****     }
 201:src/mcu_msg_parser.c **** 
 202:src/mcu_msg_parser.c ****     for(i = 0; (p - obj.content) < obj.content_len && *p != ' ' && *p != CTRL_KEY_SEP; i++, p++) { 
 661              		.loc 1 202 0
 662 0042 BE000000 		movl	$0, %esi
 662      00
 663              	.LVL68:
 664              	.L60:
 665              		.loc 1 202 0 is_stmt 0 discriminator 1
 666 0047 4889C1   		movq	%rax, %rcx
 667 004a 482B4C24 		subq	24(%rsp), %rcx
 667      18
 668 004f 0FB75424 		movzwl	34(%rsp), %edx
 668      22
 669 0054 4839D1   		cmpq	%rdx, %rcx
 670 0057 7D29     		jge	.L61
 671              		.loc 1 202 0 discriminator 3
 672 0059 0FB610   		movzbl	(%rax), %edx
 673 005c 80FA20   		cmpb	$32, %dl
 674 005f 7421     		je	.L61
 675              		.loc 1 202 0 discriminator 4
 676 0061 80FA3B   		cmpb	$59, %dl
 677 0064 741C     		je	.L61
 203:src/mcu_msg_parser.c ****         if(*p < '0' || *p > '9') {    // if non valid number, return with error
 678              		.loc 1 203 0 is_stmt 1
 679 0066 83EA30   		subl	$48, %edx
GAS LISTING /tmp/ccvnMFoE.s 			page 18


 680 0069 80FA09   		cmpb	$9, %dl
 681 006c 775C     		ja	.L67
 202:src/mcu_msg_parser.c ****         if(*p < '0' || *p > '9') {    // if non valid number, return with error
 682              		.loc 1 202 0 discriminator 2
 683 006e 83C601   		addl	$1, %esi
 684              	.LVL69:
 685 0071 4883C001 		addq	$1, %rax
 686              	.LVL70:
 687 0075 EBD0     		jmp	.L60
 688              	.LVL71:
 689              	.L59:
 195:src/mcu_msg_parser.c ****         break;
 690              		.loc 1 195 0
 691 0077 4883C001 		addq	$1, %rax
 692              	.LVL72:
 194:src/mcu_msg_parser.c ****             p++;
 693              		.loc 1 194 0
 694 007b BFFFFFFF 		movl	$-1, %edi
 694      FF
 196:src/mcu_msg_parser.c ****         
 695              		.loc 1 196 0
 696 0080 EBC0     		jmp	.L57
 697              	.LVL73:
 698              	.L61:
 204:src/mcu_msg_parser.c ****             return -1;
 205:src/mcu_msg_parser.c ****         }
 206:src/mcu_msg_parser.c ****     }
 207:src/mcu_msg_parser.c **** 
 208:src/mcu_msg_parser.c ****     *res_val = 0;
 699              		.loc 1 208 0
 700 0082 C7030000 		movl	$0, (%rbx)
 700      0000
 209:src/mcu_msg_parser.c ****     --p;
 701              		.loc 1 209 0
 702 0088 488D50FF 		leaq	-1(%rax), %rdx
 703              	.LVL74:
 181:src/mcu_msg_parser.c **** 
 704              		.loc 1 181 0
 705 008c B8000000 		movl	$0, %eax
 705      00
 179:src/mcu_msg_parser.c ****     int sign = 1;
 706              		.loc 1 179 0
 707 0091 B9010000 		movl	$1, %ecx
 707      00
 210:src/mcu_msg_parser.c ****     while(i--) {
 708              		.loc 1 210 0
 709 0096 EB1B     		jmp	.L63
 710              	.LVL75:
 711              	.L64:
 211:src/mcu_msg_parser.c ****         *res_val += (*p-- - '0') * m;
 712              		.loc 1 211 0
 713 0098 0FBE32   		movsbl	(%rdx), %esi
 714 009b 83EE30   		subl	$48, %esi
 715 009e 0FAFF1   		imull	%ecx, %esi
 716 00a1 0133     		addl	%esi, (%rbx)
 212:src/mcu_msg_parser.c ****         m *= 10;
 717              		.loc 1 212 0
GAS LISTING /tmp/ccvnMFoE.s 			page 19


 718 00a3 8D3489   		leal	(%rcx,%rcx,4), %esi
 719 00a6 8D0C36   		leal	(%rsi,%rsi), %ecx
 720              	.LVL76:
 213:src/mcu_msg_parser.c ****         res++;
 721              		.loc 1 213 0
 722 00a9 83C001   		addl	$1, %eax
 723              	.LVL77:
 210:src/mcu_msg_parser.c ****         *res_val += (*p-- - '0') * m;
 724              		.loc 1 210 0
 725 00ac 4489C6   		movl	%r8d, %esi
 211:src/mcu_msg_parser.c ****         m *= 10;
 726              		.loc 1 211 0
 727 00af 488D52FF 		leaq	-1(%rdx), %rdx
 728              	.LVL78:
 729              	.L63:
 210:src/mcu_msg_parser.c ****         *res_val += (*p-- - '0') * m;
 730              		.loc 1 210 0
 731 00b3 448D46FF 		leal	-1(%rsi), %r8d
 732              	.LVL79:
 733 00b7 6685F6   		testw	%si, %si
 734 00ba 75DC     		jne	.L64
 214:src/mcu_msg_parser.c ****     }
 215:src/mcu_msg_parser.c ****     
 216:src/mcu_msg_parser.c ****     *res_val *= sign; //corrigate with the sign
 735              		.loc 1 216 0
 736 00bc 0FAF3B   		imull	(%rbx), %edi
 737              	.LVL80:
 738 00bf 893B     		movl	%edi, (%rbx)
 739              	.LVL81:
 740              	.L55:
 217:src/mcu_msg_parser.c **** 
 218:src/mcu_msg_parser.c ****     return res; // return with the digit count, if correct
 219:src/mcu_msg_parser.c **** }
 741              		.loc 1 219 0
 742 00c1 5B       		popq	%rbx
 743              	.LCFI43:
 744              		.cfi_remember_state
 745              		.cfi_def_cfa_offset 8
 746              	.LVL82:
 747 00c2 C3       		ret
 748              	.LVL83:
 749              	.L65:
 750              	.LCFI44:
 751              		.cfi_restore_state
 184:src/mcu_msg_parser.c **** 
 752              		.loc 1 184 0
 753 00c3 B8FFFFFF 		movl	$-1, %eax
 753      FF
 754              	.LVL84:
 755 00c8 EBF7     		jmp	.L55
 756              	.LVL85:
 757              	.L67:
 204:src/mcu_msg_parser.c ****         }
 758              		.loc 1 204 0
 759 00ca B8FFFFFF 		movl	$-1, %eax
 759      FF
 760              	.LVL86:
GAS LISTING /tmp/ccvnMFoE.s 			page 20


 761 00cf EBF0     		jmp	.L55
 762              		.cfi_endproc
 763              	.LFE33:
 765              		.section	.text.mcu_msg_parser_get_float,"ax",@progbits
 766              		.globl	mcu_msg_parser_get_float
 768              	mcu_msg_parser_get_float:
 769              	.LFB34:
 220:src/mcu_msg_parser.c **** 
 221:src/mcu_msg_parser.c **** 
 222:src/mcu_msg_parser.c **** int8_t mcu_msg_parser_get_float(float *res_val, mcu_msg_obj_t obj, char *key)
 223:src/mcu_msg_parser.c **** {
 770              		.loc 1 223 0
 771              		.cfi_startproc
 772              	.LVL87:
 773 0000 55       		pushq	%rbp
 774              	.LCFI45:
 775              		.cfi_def_cfa_offset 16
 776              		.cfi_offset 6, -16
 777 0001 53       		pushq	%rbx
 778              	.LCFI46:
 779              		.cfi_def_cfa_offset 24
 780              		.cfi_offset 3, -24
 781 0002 4889FB   		movq	%rdi, %rbx
 224:src/mcu_msg_parser.c ****     char *p = find_val(obj, key);
 782              		.loc 1 224 0
 783 0005 FF742428 		pushq	40(%rsp)
 784              	.LCFI47:
 785              		.cfi_def_cfa_offset 32
 786 0009 FF742428 		pushq	40(%rsp)
 787              	.LCFI48:
 788              		.cfi_def_cfa_offset 40
 789 000d FF742428 		pushq	40(%rsp)
 790              	.LCFI49:
 791              		.cfi_def_cfa_offset 48
 792 0011 4889F7   		movq	%rsi, %rdi
 793              	.LVL88:
 794 0014 E8000000 		call	find_val
 794      00
 795              	.LVL89:
 796 0019 4883C418 		addq	$24, %rsp
 797              	.LCFI50:
 798              		.cfi_def_cfa_offset 24
 799              	.LVL90:
 225:src/mcu_msg_parser.c ****     char *pf;
 226:src/mcu_msg_parser.c ****     mcu_msg_size_t i;
 227:src/mcu_msg_parser.c ****     unsigned m = 1;
 228:src/mcu_msg_parser.c ****     float mf = 0.1;
 229:src/mcu_msg_parser.c ****     int sign = 1;
 230:src/mcu_msg_parser.c ****     int8_t res = 0; // result of function
 231:src/mcu_msg_parser.c **** 
 232:src/mcu_msg_parser.c ****     if(p == NULL)  //key nout found
 800              		.loc 1 232 0
 801 001d 4885C0   		testq	%rax, %rax
 802 0020 0F843E01 		je	.L86
 802      0000
 803 0026 4989C2   		movq	%rax, %r10
 233:src/mcu_msg_parser.c ****         return -1;
GAS LISTING /tmp/ccvnMFoE.s 			page 21


 234:src/mcu_msg_parser.c **** 
 235:src/mcu_msg_parser.c **** 
 236:src/mcu_msg_parser.c ****     switch(*p) { //if the sign is defined, set the sign variable and increment the pointer
 804              		.loc 1 236 0
 805 0029 0FB600   		movzbl	(%rax), %eax
 806              	.LVL91:
 807 002c 3C2B     		cmpb	$43, %al
 808 002e 740C     		je	.L73
 809 0030 3C2D     		cmpb	$45, %al
 810 0032 7457     		je	.L74
 229:src/mcu_msg_parser.c ****     int8_t res = 0; // result of function
 811              		.loc 1 229 0
 812 0034 41B80100 		movl	$1, %r8d
 812      0000
 813 003a EB0A     		jmp	.L72
 814              	.L73:
 237:src/mcu_msg_parser.c ****         case '+':
 238:src/mcu_msg_parser.c ****             sign = 1;
 239:src/mcu_msg_parser.c ****             p++;
 815              		.loc 1 239 0
 816 003c 4983C201 		addq	$1, %r10
 817              	.LVL92:
 238:src/mcu_msg_parser.c ****             p++;
 818              		.loc 1 238 0
 819 0040 41B80100 		movl	$1, %r8d
 819      0000
 820              	.LVL93:
 821              	.L72:
 240:src/mcu_msg_parser.c ****         break;
 241:src/mcu_msg_parser.c ****         
 242:src/mcu_msg_parser.c ****         case '-':
 243:src/mcu_msg_parser.c ****             sign = -1;
 244:src/mcu_msg_parser.c ****             p++;
 245:src/mcu_msg_parser.c ****         break;
 246:src/mcu_msg_parser.c ****         
 247:src/mcu_msg_parser.c ****         default:
 248:src/mcu_msg_parser.c ****         break;
 249:src/mcu_msg_parser.c ****     }
 250:src/mcu_msg_parser.c **** 
 251:src/mcu_msg_parser.c ****     //move p to dec separator or end of the value
 252:src/mcu_msg_parser.c ****     for(i = 0; (p - obj.content) < obj.content_len && *p != ' ' && *p != CTRL_KEY_SEP && *p != '.';
 822              		.loc 1 252 0
 823 0046 41BB0000 		movl	$0, %r11d
 823      0000
 824              	.LVL94:
 825              	.L75:
 826              		.loc 1 252 0 is_stmt 0 discriminator 1
 827 004c 488B7C24 		movq	32(%rsp), %rdi
 827      20
 828 0051 4C89D0   		movq	%r10, %rax
 829 0054 4829F8   		subq	%rdi, %rax
 830 0057 440FB74C 		movzwl	42(%rsp), %r9d
 830      242A
 831 005d 4C39C8   		cmpq	%r9, %rax
 832 0060 7D35     		jge	.L76
 833              		.loc 1 252 0 discriminator 3
 834 0062 410FB612 		movzbl	(%r10), %edx
GAS LISTING /tmp/ccvnMFoE.s 			page 22


 835 0066 80FA20   		cmpb	$32, %dl
 836 0069 742C     		je	.L76
 837              		.loc 1 252 0 discriminator 4
 838 006b 80FA3B   		cmpb	$59, %dl
 839 006e 7427     		je	.L76
 840              		.loc 1 252 0 discriminator 5
 841 0070 80FA2E   		cmpb	$46, %dl
 842 0073 7422     		je	.L76
 253:src/mcu_msg_parser.c ****         if((*p < '0' || *p > '9')) {    // if non valid number, return with error
 843              		.loc 1 253 0 is_stmt 1
 844 0075 83EA30   		subl	$48, %edx
 845 0078 80FA09   		cmpb	$9, %dl
 846 007b 0F87EA00 		ja	.L88
 846      0000
 252:src/mcu_msg_parser.c ****         if((*p < '0' || *p > '9')) {    // if non valid number, return with error
 847              		.loc 1 252 0 discriminator 2
 848 0081 4183C301 		addl	$1, %r11d
 849              	.LVL95:
 850 0085 4983C201 		addq	$1, %r10
 851              	.LVL96:
 852 0089 EBC1     		jmp	.L75
 853              	.LVL97:
 854              	.L74:
 244:src/mcu_msg_parser.c ****         break;
 855              		.loc 1 244 0
 856 008b 4983C201 		addq	$1, %r10
 857              	.LVL98:
 243:src/mcu_msg_parser.c ****             p++;
 858              		.loc 1 243 0
 859 008f 41B8FFFF 		movl	$-1, %r8d
 859      FFFF
 245:src/mcu_msg_parser.c ****         
 860              		.loc 1 245 0
 861 0095 EBAF     		jmp	.L72
 862              	.LVL99:
 863              	.L76:
 254:src/mcu_msg_parser.c ****             return -1;
 255:src/mcu_msg_parser.c ****         }
 256:src/mcu_msg_parser.c ****     }
 257:src/mcu_msg_parser.c **** 
 258:src/mcu_msg_parser.c ****     *res_val = 0.0;
 864              		.loc 1 258 0
 865 0097 C7030000 		movl	$0x00000000, (%rbx)
 865      0000
 259:src/mcu_msg_parser.c ****     
 260:src/mcu_msg_parser.c ****     if(*p == '.') {
 866              		.loc 1 260 0
 867 009d 41803A2E 		cmpb	$46, (%r10)
 868 00a1 7415     		je	.L93
 230:src/mcu_msg_parser.c **** 
 869              		.loc 1 230 0
 870 00a3 B8000000 		movl	$0, %eax
 870      00
 261:src/mcu_msg_parser.c ****         pf = p + 1;
 262:src/mcu_msg_parser.c ****         res++;
 263:src/mcu_msg_parser.c ****     } else {
 264:src/mcu_msg_parser.c ****         pf = NULL;
GAS LISTING /tmp/ccvnMFoE.s 			page 23


 871              		.loc 1 264 0
 872 00a8 BE000000 		movl	$0, %esi
 872      00
 873              	.LVL100:
 874              	.L78:
 265:src/mcu_msg_parser.c ****     }
 266:src/mcu_msg_parser.c **** 
 267:src/mcu_msg_parser.c ****     --p;
 875              		.loc 1 267 0
 876 00ad 4983EA01 		subq	$1, %r10
 877              	.LVL101:
 227:src/mcu_msg_parser.c ****     float mf = 0.1;
 878              		.loc 1 227 0
 879 00b1 B9010000 		movl	$1, %ecx
 879      00
 268:src/mcu_msg_parser.c ****     while(i--) {
 880              		.loc 1 268 0
 881 00b6 EB36     		jmp	.L79
 882              	.LVL102:
 883              	.L93:
 261:src/mcu_msg_parser.c ****         res++;
 884              		.loc 1 261 0
 885 00b8 498D7201 		leaq	1(%r10), %rsi
 886              	.LVL103:
 262:src/mcu_msg_parser.c ****     } else {
 887              		.loc 1 262 0
 888 00bc B8010000 		movl	$1, %eax
 888      00
 889 00c1 EBEA     		jmp	.L78
 890              	.LVL104:
 891              	.L82:
 269:src/mcu_msg_parser.c ****         *res_val += (*p-- - '0') * m;
 892              		.loc 1 269 0
 893 00c3 410FBE12 		movsbl	(%r10), %edx
 894 00c7 83EA30   		subl	$48, %edx
 895 00ca 0FAFD1   		imull	%ecx, %edx
 896 00cd 660FEFC0 		pxor	%xmm0, %xmm0
 897 00d1 F3480F2A 		cvtsi2ssq	%rdx, %xmm0
 897      C2
 898 00d6 F30F5803 		addss	(%rbx), %xmm0
 899 00da F30F1103 		movss	%xmm0, (%rbx)
 270:src/mcu_msg_parser.c ****         m *= 10;
 900              		.loc 1 270 0
 901 00de 8D1489   		leal	(%rcx,%rcx,4), %edx
 902 00e1 8D0C12   		leal	(%rdx,%rdx), %ecx
 903              	.LVL105:
 271:src/mcu_msg_parser.c ****         res++;
 904              		.loc 1 271 0
 905 00e4 83C001   		addl	$1, %eax
 906              	.LVL106:
 268:src/mcu_msg_parser.c ****         *res_val += (*p-- - '0') * m;
 907              		.loc 1 268 0
 908 00e7 4189EB   		movl	%ebp, %r11d
 269:src/mcu_msg_parser.c ****         m *= 10;
 909              		.loc 1 269 0
 910 00ea 4D8D52FF 		leaq	-1(%r10), %r10
 911              	.LVL107:
GAS LISTING /tmp/ccvnMFoE.s 			page 24


 912              	.L79:
 268:src/mcu_msg_parser.c ****         *res_val += (*p-- - '0') * m;
 913              		.loc 1 268 0
 914 00ee 418D6BFF 		leal	-1(%r11), %ebp
 915              	.LVL108:
 916 00f2 664585DB 		testw	%r11w, %r11w
 917 00f6 75CB     		jne	.L82
 228:src/mcu_msg_parser.c ****     int sign = 1;
 918              		.loc 1 228 0
 919 00f8 F30F100D 		movss	.LC0(%rip), %xmm1
 919      00000000 
 920              	.LVL109:
 921              	.L83:
 272:src/mcu_msg_parser.c ****     }
 273:src/mcu_msg_parser.c ****     
 274:src/mcu_msg_parser.c ****     // calculate floating point section after '.' (if there is)
 275:src/mcu_msg_parser.c ****     for(; pf != NULL && (pf - obj.content) < obj.content_len && *pf != ' ' && *pf != CTRL_KEY_SEP; 
 922              		.loc 1 275 0 discriminator 1
 923 0100 4885F6   		testq	%rsi, %rsi
 924 0103 744B     		je	.L84
 925              		.loc 1 275 0 is_stmt 0 discriminator 2
 926 0105 4889F2   		movq	%rsi, %rdx
 927 0108 4829FA   		subq	%rdi, %rdx
 928 010b 4939D1   		cmpq	%rdx, %r9
 929 010e 7E40     		jle	.L84
 930              		.loc 1 275 0 discriminator 3
 931 0110 0FB616   		movzbl	(%rsi), %edx
 932 0113 80FA20   		cmpb	$32, %dl
 933 0116 7438     		je	.L84
 934              		.loc 1 275 0 discriminator 4
 935 0118 80FA3B   		cmpb	$59, %dl
 936 011b 7433     		je	.L84
 276:src/mcu_msg_parser.c ****         if(*pf < '0' || *pf > '9') {    // if non valid number, return with error
 937              		.loc 1 276 0 is_stmt 1
 938 011d 8D4AD0   		leal	-48(%rdx), %ecx
 939 0120 80F909   		cmpb	$9, %cl
 940 0123 774D     		ja	.L90
 277:src/mcu_msg_parser.c ****             return -1;
 278:src/mcu_msg_parser.c ****         }
 279:src/mcu_msg_parser.c ****         *res_val += (*pf - '0') * mf;
 941              		.loc 1 279 0
 942 0125 0FBED2   		movsbl	%dl, %edx
 943 0128 83EA30   		subl	$48, %edx
 944 012b 660FEFC0 		pxor	%xmm0, %xmm0
 945 012f F30F2AC2 		cvtsi2ss	%edx, %xmm0
 946 0133 F30F59C1 		mulss	%xmm1, %xmm0
 947 0137 F30F5803 		addss	(%rbx), %xmm0
 948 013b F30F1103 		movss	%xmm0, (%rbx)
 280:src/mcu_msg_parser.c ****         mf /= 10;
 949              		.loc 1 280 0
 950 013f F30F5E0D 		divss	.LC2(%rip), %xmm1
 950      00000000 
 951              	.LVL110:
 281:src/mcu_msg_parser.c ****         res++; 
 952              		.loc 1 281 0
 953 0147 83C001   		addl	$1, %eax
 954              	.LVL111:
GAS LISTING /tmp/ccvnMFoE.s 			page 25


 275:src/mcu_msg_parser.c ****         if(*pf < '0' || *pf > '9') {    // if non valid number, return with error
 955              		.loc 1 275 0
 956 014a 4883C601 		addq	$1, %rsi
 957              	.LVL112:
 958 014e EBB0     		jmp	.L83
 959              	.LVL113:
 960              	.L84:
 282:src/mcu_msg_parser.c ****     }
 283:src/mcu_msg_parser.c **** 
 284:src/mcu_msg_parser.c ****     *res_val *= sign; //corrigate with the sign
 961              		.loc 1 284 0
 962 0150 660FEFC0 		pxor	%xmm0, %xmm0
 963 0154 F3410F2A 		cvtsi2ss	%r8d, %xmm0
 963      C0
 964 0159 F30F5903 		mulss	(%rbx), %xmm0
 965 015d F30F1103 		movss	%xmm0, (%rbx)
 966              	.LVL114:
 967              	.L70:
 285:src/mcu_msg_parser.c **** 
 286:src/mcu_msg_parser.c ****     return res; // return with the digit count + '.' separator, if correct
 287:src/mcu_msg_parser.c **** }
 968              		.loc 1 287 0
 969 0161 5B       		popq	%rbx
 970              	.LCFI51:
 971              		.cfi_remember_state
 972              		.cfi_def_cfa_offset 16
 973              	.LVL115:
 974 0162 5D       		popq	%rbp
 975              	.LCFI52:
 976              		.cfi_def_cfa_offset 8
 977 0163 C3       		ret
 978              	.LVL116:
 979              	.L86:
 980              	.LCFI53:
 981              		.cfi_restore_state
 233:src/mcu_msg_parser.c **** 
 982              		.loc 1 233 0
 983 0164 B8FFFFFF 		movl	$-1, %eax
 983      FF
 984              	.LVL117:
 985 0169 EBF6     		jmp	.L70
 986              	.LVL118:
 987              	.L88:
 254:src/mcu_msg_parser.c ****         }
 988              		.loc 1 254 0
 989 016b B8FFFFFF 		movl	$-1, %eax
 989      FF
 990 0170 EBEF     		jmp	.L70
 991              	.LVL119:
 992              	.L90:
 277:src/mcu_msg_parser.c ****         }
 993              		.loc 1 277 0
 994 0172 B8FFFFFF 		movl	$-1, %eax
 994      FF
 995              	.LVL120:
 996 0177 EBE8     		jmp	.L70
 997              		.cfi_endproc
GAS LISTING /tmp/ccvnMFoE.s 			page 26


 998              	.LFE34:
 1000              		.section	.text.mcu_msg_parser_get_string,"ax",@progbits
 1001              		.globl	mcu_msg_parser_get_string
 1003              	mcu_msg_parser_get_string:
 1004              	.LFB35:
 288:src/mcu_msg_parser.c **** 
 289:src/mcu_msg_parser.c **** void mcu_msg_parser_get_string(char *dest, mcu_msg_obj_t obj, char *key)
 290:src/mcu_msg_parser.c **** {
 1005              		.loc 1 290 0
 1006              		.cfi_startproc
 1007              	.LVL121:
 291:src/mcu_msg_parser.c ****     
 292:src/mcu_msg_parser.c **** }
 1008              		.loc 1 292 0
 1009 0000 F3C3     		rep ret
 1010              		.cfi_endproc
 1011              	.LFE35:
 1013              		.section	.rodata.cst4,"aM",@progbits,4
 1014              		.align 4
 1015              	.LC0:
 1016 0000 CDCCCC3D 		.long	1036831949
 1017              		.align 4
 1018              	.LC2:
 1019 0004 00002041 		.long	1092616192
 1020              		.text
 1021              	.Letext0:
 1022              		.file 2 "/usr/lib/gcc/x86_64-linux-gnu/7/include/stddef.h"
 1023              		.file 3 "/usr/include/x86_64-linux-gnu/bits/types.h"
 1024              		.file 4 "/usr/include/x86_64-linux-gnu/bits/libio.h"
 1025              		.file 5 "/usr/include/stdio.h"
 1026              		.file 6 "/usr/include/x86_64-linux-gnu/bits/sys_errlist.h"
 1027              		.file 7 "/usr/include/x86_64-linux-gnu/bits/stdint-intn.h"
 1028              		.file 8 "/usr/include/x86_64-linux-gnu/bits/stdint-uintn.h"
 1029              		.file 9 "inc/mcu_msg_parser.h"
GAS LISTING /tmp/ccvnMFoE.s 			page 27


DEFINED SYMBOLS
                            *ABS*:0000000000000000 mcu_msg_parser.c
     /tmp/ccvnMFoE.s:6      .text.is_ctrl_char:0000000000000000 is_ctrl_char
     /tmp/ccvnMFoE.s:55     .text.is_valid_keyword_char:0000000000000000 is_valid_keyword_char
     /tmp/ccvnMFoE.s:99     .text.str_len:0000000000000000 str_len
     /tmp/ccvnMFoE.s:127    .text.find_keyword:0000000000000000 find_keyword
     /tmp/ccvnMFoE.s:323    .text.find_val:0000000000000000 find_val
     /tmp/ccvnMFoE.s:439    .text.mcu_msg_parser_get_obj:0000000000000000 mcu_msg_parser_get_obj
     /tmp/ccvnMFoE.s:613    .text.mcu_msg_parser_get_int:0000000000000000 mcu_msg_parser_get_int
     /tmp/ccvnMFoE.s:768    .text.mcu_msg_parser_get_float:0000000000000000 mcu_msg_parser_get_float
     /tmp/ccvnMFoE.s:1003   .text.mcu_msg_parser_get_string:0000000000000000 mcu_msg_parser_get_string
     /tmp/ccvnMFoE.s:1015   .rodata.cst4:0000000000000000 .LC0
     /tmp/ccvnMFoE.s:1018   .rodata.cst4:0000000000000004 .LC2

NO UNDEFINED SYMBOLS
