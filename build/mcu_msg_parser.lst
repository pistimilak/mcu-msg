GAS LISTING /tmp/ccdTSR3G.s 			page 1


   1              		.file	"mcu_msg_parser.c"
   2              		.text
   3              	.Ltext0:
   4              		.section	.text.is_ctrl_char,"ax",@progbits
   6              	is_ctrl_char:
   7              	.LFB30:
   8              		.file 1 "src/mcu_msg_parser.c"
   1:src/mcu_msg_parser.c **** /**
   2:src/mcu_msg_parser.c ****  * @file mcu_msg_parser.c
   3:src/mcu_msg_parser.c ****  * @author Istvan Milak (istvan.milak@gmail.com)
   4:src/mcu_msg_parser.c ****  * @brief Simple message parser for embedded applications, eg serial comm
   5:src/mcu_msg_parser.c ****  * @version 0.1
   6:src/mcu_msg_parser.c ****  * @date 2019-12-15
   7:src/mcu_msg_parser.c ****  * 
   8:src/mcu_msg_parser.c ****  * @copyright Copyright (c) 2019
   9:src/mcu_msg_parser.c ****  * 
  10:src/mcu_msg_parser.c ****  */
  11:src/mcu_msg_parser.c **** #include <stdio.h>
  12:src/mcu_msg_parser.c **** #include "mcu_msg_parser.h"
  13:src/mcu_msg_parser.c **** 
  14:src/mcu_msg_parser.c **** /*Control chars*/
  15:src/mcu_msg_parser.c **** #define CTRL_MSG_FLAG       '#'
  16:src/mcu_msg_parser.c **** #define CTRL_START_MSG      '{'
  17:src/mcu_msg_parser.c **** #define CTRL_STOP_MSG       '}'
  18:src/mcu_msg_parser.c **** #define CTRL_START_OBJ      '('
  19:src/mcu_msg_parser.c **** #define CTRL_STOP_OBJ       ')'
  20:src/mcu_msg_parser.c **** #define CTRL_OBJ_FLAG       '@'
  21:src/mcu_msg_parser.c **** #define CTRL_KEY_FLAG       '$'
  22:src/mcu_msg_parser.c **** #define CTRL_KEY_SEP        ';'
  23:src/mcu_msg_parser.c **** #define CTRL_KEY_EQU        '='
  24:src/mcu_msg_parser.c **** #define CTRL_CMD_FLAG       '!'
  25:src/mcu_msg_parser.c **** 
  26:src/mcu_msg_parser.c **** 
  27:src/mcu_msg_parser.c **** void mcu_msg_destroy_string(mcu_msg_string_t *str)
  28:src/mcu_msg_parser.c **** {
  29:src/mcu_msg_parser.c ****     str->s = NULL;
  30:src/mcu_msg_parser.c ****     str->len = 0;
  31:src/mcu_msg_parser.c **** }
  32:src/mcu_msg_parser.c **** 
  33:src/mcu_msg_parser.c **** void mcu_msg_destroy(mcu_msg_t *msg)
  34:src/mcu_msg_parser.c **** {
  35:src/mcu_msg_parser.c ****     mcu_msg_destroy_string(&msg->id);
  36:src/mcu_msg_parser.c ****     mcu_msg_destroy_string(&msg->content);
  37:src/mcu_msg_parser.c **** }
  38:src/mcu_msg_parser.c **** 
  39:src/mcu_msg_parser.c **** void mcu_msg_destroy_obj(mcu_msg_obj_t *obj)
  40:src/mcu_msg_parser.c **** {
  41:src/mcu_msg_parser.c ****     mcu_msg_destroy_string(&obj->id);
  42:src/mcu_msg_parser.c ****     mcu_msg_destroy_string(&obj->content);
  43:src/mcu_msg_parser.c **** }
  44:src/mcu_msg_parser.c **** 
  45:src/mcu_msg_parser.c **** 
  46:src/mcu_msg_parser.c **** 
  47:src/mcu_msg_parser.c **** /**
  48:src/mcu_msg_parser.c ****  * @brief Argument char is control char or not
  49:src/mcu_msg_parser.c ****  * 
  50:src/mcu_msg_parser.c ****  * @param c char
GAS LISTING /tmp/ccdTSR3G.s 			page 2


  51:src/mcu_msg_parser.c ****  * @return uint8_t comparison result
  52:src/mcu_msg_parser.c ****  */
  53:src/mcu_msg_parser.c **** static uint8_t is_ctrl_char(char c)
  54:src/mcu_msg_parser.c **** {
   9              		.loc 1 54 0
  10              		.cfi_startproc
  11              	.LVL0:
  55:src/mcu_msg_parser.c ****     switch(c) {
  12              		.loc 1 55 0
  13 0000 83EF21   		subl	$33, %edi
  14              	.LVL1:
  15 0003 4080FF5C 		cmpb	$92, %dil
  16 0007 771A     		ja	.L5
  17 0009 400FB6FF 		movzbl	%dil, %edi
  18 000d 488D1500 		leaq	.L4(%rip), %rdx
  18      000000
  19 0014 486304BA 		movslq	(%rdx,%rdi,4), %rax
  20 0018 4801D0   		addq	%rdx, %rax
  21 001b FFE0     		jmp	*%rax
  22              		.section	.rodata.is_ctrl_char,"a",@progbits
  23              		.align 4
  24              		.align 4
  25              	.L4:
  26 0000 00000000 		.long	.L3-.L4
  27 0004 00000000 		.long	.L5-.L4
  28 0008 00000000 		.long	.L3-.L4
  29 000c 00000000 		.long	.L3-.L4
  30 0010 00000000 		.long	.L5-.L4
  31 0014 00000000 		.long	.L5-.L4
  32 0018 00000000 		.long	.L5-.L4
  33 001c 00000000 		.long	.L3-.L4
  34 0020 00000000 		.long	.L3-.L4
  35 0024 00000000 		.long	.L5-.L4
  36 0028 00000000 		.long	.L5-.L4
  37 002c 00000000 		.long	.L5-.L4
  38 0030 00000000 		.long	.L5-.L4
  39 0034 00000000 		.long	.L5-.L4
  40 0038 00000000 		.long	.L5-.L4
  41 003c 00000000 		.long	.L5-.L4
  42 0040 00000000 		.long	.L5-.L4
  43 0044 00000000 		.long	.L5-.L4
  44 0048 00000000 		.long	.L5-.L4
  45 004c 00000000 		.long	.L5-.L4
  46 0050 00000000 		.long	.L5-.L4
  47 0054 00000000 		.long	.L5-.L4
  48 0058 00000000 		.long	.L5-.L4
  49 005c 00000000 		.long	.L5-.L4
  50 0060 00000000 		.long	.L5-.L4
  51 0064 00000000 		.long	.L5-.L4
  52 0068 00000000 		.long	.L3-.L4
  53 006c 00000000 		.long	.L5-.L4
  54 0070 00000000 		.long	.L3-.L4
  55 0074 00000000 		.long	.L5-.L4
  56 0078 00000000 		.long	.L5-.L4
  57 007c 00000000 		.long	.L3-.L4
  58 0080 00000000 		.long	.L5-.L4
  59 0084 00000000 		.long	.L5-.L4
GAS LISTING /tmp/ccdTSR3G.s 			page 3


  60 0088 00000000 		.long	.L5-.L4
  61 008c 00000000 		.long	.L5-.L4
  62 0090 00000000 		.long	.L5-.L4
  63 0094 00000000 		.long	.L5-.L4
  64 0098 00000000 		.long	.L5-.L4
  65 009c 00000000 		.long	.L5-.L4
  66 00a0 00000000 		.long	.L5-.L4
  67 00a4 00000000 		.long	.L5-.L4
  68 00a8 00000000 		.long	.L5-.L4
  69 00ac 00000000 		.long	.L5-.L4
  70 00b0 00000000 		.long	.L5-.L4
  71 00b4 00000000 		.long	.L5-.L4
  72 00b8 00000000 		.long	.L5-.L4
  73 00bc 00000000 		.long	.L5-.L4
  74 00c0 00000000 		.long	.L5-.L4
  75 00c4 00000000 		.long	.L5-.L4
  76 00c8 00000000 		.long	.L5-.L4
  77 00cc 00000000 		.long	.L5-.L4
  78 00d0 00000000 		.long	.L5-.L4
  79 00d4 00000000 		.long	.L5-.L4
  80 00d8 00000000 		.long	.L5-.L4
  81 00dc 00000000 		.long	.L5-.L4
  82 00e0 00000000 		.long	.L5-.L4
  83 00e4 00000000 		.long	.L5-.L4
  84 00e8 00000000 		.long	.L5-.L4
  85 00ec 00000000 		.long	.L5-.L4
  86 00f0 00000000 		.long	.L5-.L4
  87 00f4 00000000 		.long	.L5-.L4
  88 00f8 00000000 		.long	.L5-.L4
  89 00fc 00000000 		.long	.L5-.L4
  90 0100 00000000 		.long	.L5-.L4
  91 0104 00000000 		.long	.L5-.L4
  92 0108 00000000 		.long	.L5-.L4
  93 010c 00000000 		.long	.L5-.L4
  94 0110 00000000 		.long	.L5-.L4
  95 0114 00000000 		.long	.L5-.L4
  96 0118 00000000 		.long	.L5-.L4
  97 011c 00000000 		.long	.L5-.L4
  98 0120 00000000 		.long	.L5-.L4
  99 0124 00000000 		.long	.L5-.L4
 100 0128 00000000 		.long	.L5-.L4
 101 012c 00000000 		.long	.L5-.L4
 102 0130 00000000 		.long	.L5-.L4
 103 0134 00000000 		.long	.L5-.L4
 104 0138 00000000 		.long	.L5-.L4
 105 013c 00000000 		.long	.L5-.L4
 106 0140 00000000 		.long	.L5-.L4
 107 0144 00000000 		.long	.L5-.L4
 108 0148 00000000 		.long	.L5-.L4
 109 014c 00000000 		.long	.L5-.L4
 110 0150 00000000 		.long	.L5-.L4
 111 0154 00000000 		.long	.L5-.L4
 112 0158 00000000 		.long	.L5-.L4
 113 015c 00000000 		.long	.L5-.L4
 114 0160 00000000 		.long	.L5-.L4
 115 0164 00000000 		.long	.L5-.L4
 116 0168 00000000 		.long	.L3-.L4
GAS LISTING /tmp/ccdTSR3G.s 			page 4


 117 016c 00000000 		.long	.L5-.L4
 118 0170 00000000 		.long	.L3-.L4
 119              		.section	.text.is_ctrl_char
 120              	.L3:
  56:src/mcu_msg_parser.c ****         case CTRL_MSG_FLAG:
  57:src/mcu_msg_parser.c ****         case CTRL_START_MSG:
  58:src/mcu_msg_parser.c ****         case CTRL_STOP_MSG:
  59:src/mcu_msg_parser.c ****         case CTRL_START_OBJ:
  60:src/mcu_msg_parser.c ****         case CTRL_STOP_OBJ:
  61:src/mcu_msg_parser.c ****         case CTRL_OBJ_FLAG:
  62:src/mcu_msg_parser.c ****         case CTRL_KEY_FLAG:
  63:src/mcu_msg_parser.c ****         case CTRL_KEY_SEP:
  64:src/mcu_msg_parser.c ****         case CTRL_KEY_EQU:
  65:src/mcu_msg_parser.c ****         case CTRL_CMD_FLAG:
  66:src/mcu_msg_parser.c ****             return 1;
 121              		.loc 1 66 0
 122 001d B8010000 		movl	$1, %eax
 122      00
 123 0022 C3       		ret
 124              	.L5:
  67:src/mcu_msg_parser.c ****         default:
  68:src/mcu_msg_parser.c ****             return 0;
 125              		.loc 1 68 0
 126 0023 B8000000 		movl	$0, %eax
 126      00
  69:src/mcu_msg_parser.c ****     }
  70:src/mcu_msg_parser.c **** }
 127              		.loc 1 70 0
 128 0028 C3       		ret
 129              		.cfi_endproc
 130              	.LFE30:
 132              		.section	.text.is_whitespace,"ax",@progbits
 134              	is_whitespace:
 135              	.LFB31:
  71:src/mcu_msg_parser.c **** 
  72:src/mcu_msg_parser.c **** 
  73:src/mcu_msg_parser.c **** 
  74:src/mcu_msg_parser.c **** static uint8_t is_whitespace(char c)
  75:src/mcu_msg_parser.c **** {
 136              		.loc 1 75 0
 137              		.cfi_startproc
 138              	.LVL2:
  76:src/mcu_msg_parser.c ****     switch(c) {
 139              		.loc 1 76 0
 140 0000 4080FF09 		cmpb	$9, %dil
 141 0004 7C0C     		jl	.L9
 142 0006 4080FF0D 		cmpb	$13, %dil
 143 000a 7E0C     		jle	.L8
 144 000c 4080FF20 		cmpb	$32, %dil
 145 0010 7406     		je	.L8
 146              	.L9:
  77:src/mcu_msg_parser.c ****         case  ' ':
  78:src/mcu_msg_parser.c ****         case '\t':
  79:src/mcu_msg_parser.c ****         case '\n':
  80:src/mcu_msg_parser.c ****         case '\v':
  81:src/mcu_msg_parser.c ****         case '\f':
  82:src/mcu_msg_parser.c ****         case '\r':
GAS LISTING /tmp/ccdTSR3G.s 			page 5


  83:src/mcu_msg_parser.c ****             return 1;
  84:src/mcu_msg_parser.c ****         default:
  85:src/mcu_msg_parser.c ****             return 0;
 147              		.loc 1 85 0
 148 0012 B8000000 		movl	$0, %eax
 148      00
  86:src/mcu_msg_parser.c ****     }
  87:src/mcu_msg_parser.c **** }
 149              		.loc 1 87 0
 150 0017 C3       		ret
 151              	.L8:
  83:src/mcu_msg_parser.c ****         default:
 152              		.loc 1 83 0
 153 0018 B8010000 		movl	$1, %eax
 153      00
 154 001d C3       		ret
 155              		.cfi_endproc
 156              	.LFE31:
 158              		.section	.text.is_valid_keyword_char,"ax",@progbits
 160              	is_valid_keyword_char:
 161              	.LFB32:
  88:src/mcu_msg_parser.c **** 
  89:src/mcu_msg_parser.c **** /**
  90:src/mcu_msg_parser.c ****  * @brief Argument char is valid keyword char or not
  91:src/mcu_msg_parser.c ****  * 
  92:src/mcu_msg_parser.c ****  * @param c char
  93:src/mcu_msg_parser.c ****  * @return uint8_t comparison result
  94:src/mcu_msg_parser.c ****  */
  95:src/mcu_msg_parser.c **** static uint8_t is_valid_keyword_char(char c)
  96:src/mcu_msg_parser.c **** {
 162              		.loc 1 96 0
 163              		.cfi_startproc
 164              	.LVL3:
  97:src/mcu_msg_parser.c ****     return (c == '_') || (c >= 'a' && c <= 'z') || 
 165              		.loc 1 97 0
 166 0000 4080FF5F 		cmpb	$95, %dil
 167 0004 0F94C2   		sete	%dl
 168 0007 8D479F   		leal	-97(%rdi), %eax
 169 000a 3C19     		cmpb	$25, %al
 170 000c 0F96C0   		setbe	%al
  98:src/mcu_msg_parser.c ****                     (c >= 'A' && c <= 'Z') || 
  99:src/mcu_msg_parser.c ****                     (c >= '0' && c <= '9') ? 1 : 0;
 171              		.loc 1 99 0
 172 000f 08C2     		orb	%al, %dl
 173 0011 751C     		jne	.L12
  98:src/mcu_msg_parser.c ****                     (c >= 'A' && c <= 'Z') || 
 174              		.loc 1 98 0
 175 0013 8D47BF   		leal	-65(%rdi), %eax
  97:src/mcu_msg_parser.c ****     return (c == '_') || (c >= 'a' && c <= 'z') || 
 176              		.loc 1 97 0
 177 0016 3C19     		cmpb	$25, %al
 178 0018 761B     		jbe	.L13
 179              		.loc 1 99 0 discriminator 2
 180 001a 83EF30   		subl	$48, %edi
 181              	.LVL4:
 182 001d 4080FF09 		cmpb	$9, %dil
 183 0021 7606     		jbe	.L15
GAS LISTING /tmp/ccdTSR3G.s 			page 6


 184              		.loc 1 99 0 is_stmt 0
 185 0023 B8000000 		movl	$0, %eax
 185      00
 100:src/mcu_msg_parser.c **** }
 186              		.loc 1 100 0 is_stmt 1
 187 0028 C3       		ret
 188              	.L15:
  99:src/mcu_msg_parser.c **** }
 189              		.loc 1 99 0
 190 0029 B8010000 		movl	$1, %eax
 190      00
 191 002e C3       		ret
 192              	.LVL5:
 193              	.L12:
 194 002f B8010000 		movl	$1, %eax
 194      00
 195 0034 C3       		ret
 196              	.L13:
 197 0035 B8010000 		movl	$1, %eax
 197      00
 198 003a C3       		ret
 199              		.cfi_endproc
 200              	.LFE32:
 202              		.section	.text.str_len,"ax",@progbits
 204              	str_len:
 205              	.LFB33:
 101:src/mcu_msg_parser.c **** 
 102:src/mcu_msg_parser.c **** 
 103:src/mcu_msg_parser.c **** /**
 104:src/mcu_msg_parser.c ****  * @brief strlen implementation for internal usage
 105:src/mcu_msg_parser.c ****  * 
 106:src/mcu_msg_parser.c ****  * @param str string 
 107:src/mcu_msg_parser.c ****  * @return mcu_msg_size_t length of string 
 108:src/mcu_msg_parser.c ****  */
 109:src/mcu_msg_parser.c **** static mcu_msg_size_t str_len(char *str)
 110:src/mcu_msg_parser.c **** {
 206              		.loc 1 110 0
 207              		.cfi_startproc
 208              	.LVL6:
 111:src/mcu_msg_parser.c ****     mcu_msg_size_t res = 0;
 209              		.loc 1 111 0
 210 0000 B8000000 		movl	$0, %eax
 210      00
 112:src/mcu_msg_parser.c ****     char *p = str;
 113:src/mcu_msg_parser.c ****     while(*p) {
 211              		.loc 1 113 0
 212 0005 EB07     		jmp	.L17
 213              	.LVL7:
 214              	.L18:
 114:src/mcu_msg_parser.c ****         res++;
 215              		.loc 1 114 0
 216 0007 83C001   		addl	$1, %eax
 217              	.LVL8:
 115:src/mcu_msg_parser.c ****         p++;
 218              		.loc 1 115 0
 219 000a 4883C701 		addq	$1, %rdi
 220              	.LVL9:
GAS LISTING /tmp/ccdTSR3G.s 			page 7


 221              	.L17:
 113:src/mcu_msg_parser.c ****         res++;
 222              		.loc 1 113 0
 223 000e 803F00   		cmpb	$0, (%rdi)
 224 0011 75F4     		jne	.L18
 116:src/mcu_msg_parser.c ****     }
 117:src/mcu_msg_parser.c ****     return res;
 118:src/mcu_msg_parser.c **** }
 225              		.loc 1 118 0
 226 0013 F3C3     		rep ret
 227              		.cfi_endproc
 228              	.LFE33:
 230              		.section	.text.skip_internal_str,"ax",@progbits
 232              	skip_internal_str:
 233              	.LFB34:
 119:src/mcu_msg_parser.c **** 
 120:src/mcu_msg_parser.c **** 
 121:src/mcu_msg_parser.c **** static char *skip_internal_str(char *start)
 122:src/mcu_msg_parser.c **** {
 234              		.loc 1 122 0
 235              		.cfi_startproc
 236              	.LVL10:
 123:src/mcu_msg_parser.c ****     char *p = start;
 124:src/mcu_msg_parser.c ****     char qmark = *start;
 237              		.loc 1 124 0
 238 0000 0FB60F   		movzbl	(%rdi), %ecx
 239              	.LVL11:
 125:src/mcu_msg_parser.c ****     if((qmark != '\'' && qmark != '"')) return NULL;
 240              		.loc 1 125 0
 241 0003 80F927   		cmpb	$39, %cl
 242 0006 0F95C2   		setne	%dl
 243 0009 80F922   		cmpb	$34, %cl
 244 000c 0F95C0   		setne	%al
 245 000f 84C2     		testb	%al, %dl
 246 0011 751E     		jne	.L24
 126:src/mcu_msg_parser.c ****     ++p;
 247              		.loc 1 126 0
 248 0013 488D4701 		leaq	1(%rdi), %rax
 249              	.LVL12:
 127:src/mcu_msg_parser.c ****     while(*p && (*p != qmark)) {
 250              		.loc 1 127 0
 251 0017 EB04     		jmp	.L21
 252              	.L23:
 128:src/mcu_msg_parser.c ****         p++;
 253              		.loc 1 128 0
 254 0019 4883C001 		addq	$1, %rax
 255              	.LVL13:
 256              	.L21:
 127:src/mcu_msg_parser.c ****     while(*p && (*p != qmark)) {
 257              		.loc 1 127 0
 258 001d 0FB610   		movzbl	(%rax), %edx
 259 0020 84D2     		testb	%dl, %dl
 260 0022 7404     		je	.L22
 127:src/mcu_msg_parser.c ****     while(*p && (*p != qmark)) {
 261              		.loc 1 127 0 is_stmt 0 discriminator 1
 262 0024 38CA     		cmpb	%cl, %dl
 263 0026 75F1     		jne	.L23
GAS LISTING /tmp/ccdTSR3G.s 			page 8


 264              	.L22:
 129:src/mcu_msg_parser.c ****     }
 130:src/mcu_msg_parser.c ****     
 131:src/mcu_msg_parser.c ****     return *p ? ++p : NULL;
 265              		.loc 1 131 0 is_stmt 1
 266 0028 84D2     		testb	%dl, %dl
 267 002a 740B     		je	.L25
 268              		.loc 1 131 0 is_stmt 0 discriminator 1
 269 002c 4883C001 		addq	$1, %rax
 270              	.LVL14:
 271 0030 C3       		ret
 272              	.LVL15:
 273              	.L24:
 125:src/mcu_msg_parser.c ****     ++p;
 274              		.loc 1 125 0 is_stmt 1
 275 0031 B8000000 		movl	$0, %eax
 275      00
 276 0036 C3       		ret
 277              	.LVL16:
 278              	.L25:
 279              		.loc 1 131 0
 280 0037 B8000000 		movl	$0, %eax
 280      00
 281              	.LVL17:
 132:src/mcu_msg_parser.c **** }
 282              		.loc 1 132 0
 283 003c C3       		ret
 284              		.cfi_endproc
 285              	.LFE34:
 287              		.section	.text.find_keyword,"ax",@progbits
 289              	find_keyword:
 290              	.LFB35:
 133:src/mcu_msg_parser.c **** 
 134:src/mcu_msg_parser.c **** 
 135:src/mcu_msg_parser.c **** /**
 136:src/mcu_msg_parser.c ****  * @brief find the position of the keyword int message string (first occurance)
 137:src/mcu_msg_parser.c ****  * if the keyword found in the message string, the next (none space) char must be stopc
 138:src/mcu_msg_parser.c ****  * @param msg message
 139:src/mcu_msg_parser.c ****  * @param len message length
 140:src/mcu_msg_parser.c ****  * @param keyword keword has to be found
 141:src/mcu_msg_parser.c ****  * @param flagc flag, eg. '@', '$'
 142:src/mcu_msg_parser.c ****  * @param stopc stop character eg. '(', '='
 143:src/mcu_msg_parser.c ****  * @return char* location of the keyword (whitout flag) or NULL if keyword not found
 144:src/mcu_msg_parser.c ****  */
 145:src/mcu_msg_parser.c **** static char *find_keyword(char *msg, mcu_msg_size_t len, char *keyword, char flagc, char stopc)
 146:src/mcu_msg_parser.c **** {
 291              		.loc 1 146 0
 292              		.cfi_startproc
 293              	.LVL18:
 294 0000 4157     		pushq	%r15
 295              	.LCFI0:
 296              		.cfi_def_cfa_offset 16
 297              		.cfi_offset 15, -16
 298 0002 4156     		pushq	%r14
 299              	.LCFI1:
 300              		.cfi_def_cfa_offset 24
 301              		.cfi_offset 14, -24
GAS LISTING /tmp/ccdTSR3G.s 			page 9


 302 0004 4155     		pushq	%r13
 303              	.LCFI2:
 304              		.cfi_def_cfa_offset 32
 305              		.cfi_offset 13, -32
 306 0006 4154     		pushq	%r12
 307              	.LCFI3:
 308              		.cfi_def_cfa_offset 40
 309              		.cfi_offset 12, -40
 310 0008 55       		pushq	%rbp
 311              	.LCFI4:
 312              		.cfi_def_cfa_offset 48
 313              		.cfi_offset 6, -48
 314 0009 53       		pushq	%rbx
 315              	.LCFI5:
 316              		.cfi_def_cfa_offset 56
 317              		.cfi_offset 3, -56
 318 000a 4883EC18 		subq	$24, %rsp
 319              	.LCFI6:
 320              		.cfi_def_cfa_offset 80
 321 000e 4989FD   		movq	%rdi, %r13
 322 0011 4889D7   		movq	%rdx, %rdi
 323              	.LVL19:
 324 0014 48895424 		movq	%rdx, 8(%rsp)
 324      08
 325 0019 4189F6   		movl	%esi, %r14d
 326 001c 884C2416 		movb	%cl, 22(%rsp)
 327 0020 44884424 		movb	%r8b, 23(%rsp)
 327      17
 328              	.LVL20:
 147:src/mcu_msg_parser.c ****     char *p = msg;
 148:src/mcu_msg_parser.c ****     char *loc;
 149:src/mcu_msg_parser.c ****     uint8_t equal;
 150:src/mcu_msg_parser.c ****     mcu_msg_size_t i;
 151:src/mcu_msg_parser.c ****     mcu_msg_size_t key_len = str_len(keyword);
 329              		.loc 1 151 0
 330 0025 E8000000 		call	str_len
 330      00
 331              	.LVL21:
 332 002a 66894424 		movw	%ax, 20(%rsp)
 332      14
 333              	.LVL22:
 147:src/mcu_msg_parser.c ****     char *p = msg;
 334              		.loc 1 147 0
 335 002f 4C89EB   		movq	%r13, %rbx
 152:src/mcu_msg_parser.c ****     while((p - msg) < len && *p) {
 336              		.loc 1 152 0
 337 0032 EB4D     		jmp	.L27
 338              	.LVL23:
 339              	.L44:
 153:src/mcu_msg_parser.c ****         if(*p == '\'' || *p == '"') { //skip internal strings
 154:src/mcu_msg_parser.c ****             p = skip_internal_str(p);
 340              		.loc 1 154 0
 341 0034 4889DF   		movq	%rbx, %rdi
 342 0037 E8000000 		call	skip_internal_str
 342      00
 343              	.LVL24:
 344 003c 4889C3   		movq	%rax, %rbx
GAS LISTING /tmp/ccdTSR3G.s 			page 10


 345              	.LVL25:
 346 003f EB70     		jmp	.L28
 347              	.LVL26:
 348              	.L45:
 155:src/mcu_msg_parser.c ****         }
 156:src/mcu_msg_parser.c ****         if(((p - msg) < len - 1) && *p == flagc) {
 157:src/mcu_msg_parser.c ****             loc = p + 1;
 158:src/mcu_msg_parser.c ****             // exp_key = keyword;
 159:src/mcu_msg_parser.c ****             equal = 1;
 349              		.loc 1 159 0
 350 0041 C6442413 		movb	$1, 19(%rsp)
 350      01
 351 0046 EB03     		jmp	.L33
 352              	.LVL27:
 353              	.L35:
 160:src/mcu_msg_parser.c ****             for(i = 0; (loc + i - msg) < len && i < key_len; i++) {
 161:src/mcu_msg_parser.c ****                 if((*(loc + i) != *(keyword + i)) || is_ctrl_char(*(loc + i)) || 
 162:src/mcu_msg_parser.c ****                                     !is_valid_keyword_char(*(loc + i))) {
 163:src/mcu_msg_parser.c ****                     equal = 0;
 164:src/mcu_msg_parser.c ****                     break;
 165:src/mcu_msg_parser.c ****                 }
 166:src/mcu_msg_parser.c ****             }
 167:src/mcu_msg_parser.c ****             while((loc + i - msg) < len && is_whitespace(*(loc + i))) i++; //skip spaces
 354              		.loc 1 167 0 discriminator 3
 355 0048 83C501   		addl	$1, %ebp
 356              	.LVL28:
 357              	.L33:
 358              		.loc 1 167 0 is_stmt 0 discriminator 1
 359 004b 0FB7DD   		movzwl	%bp, %ebx
 360 004e 4C01FB   		addq	%r15, %rbx
 361 0051 4889D8   		movq	%rbx, %rax
 362 0054 482B0424 		subq	(%rsp), %rax
 363 0058 4C39E0   		cmpq	%r12, %rax
 364 005b 7D0C     		jge	.L34
 365              		.loc 1 167 0 discriminator 2
 366 005d 0FBE3B   		movsbl	(%rbx), %edi
 367 0060 E8000000 		call	is_whitespace
 367      00
 368              	.LVL29:
 369 0065 84C0     		testb	%al, %al
 370 0067 75DF     		jne	.L35
 371              	.L34:
 168:src/mcu_msg_parser.c ****             if(equal && *(loc + i) == stopc) {
 372              		.loc 1 168 0 is_stmt 1
 373 0069 807C2413 		cmpb	$0, 19(%rsp)
 373      00
 374 006e 740D     		je	.L29
 375              		.loc 1 168 0 is_stmt 0 discriminator 1
 376 0070 0FB64424 		movzbl	23(%rsp), %eax
 376      17
 377 0075 3803     		cmpb	%al, (%rbx)
 378 0077 0F84D700 		je	.L26
 378      0000
 379              	.LVL30:
 380              	.L29:
 169:src/mcu_msg_parser.c ****                 return loc;
 170:src/mcu_msg_parser.c ****             } else {
GAS LISTING /tmp/ccdTSR3G.s 			page 11


 171:src/mcu_msg_parser.c ****                 p = loc + i;
 172:src/mcu_msg_parser.c ****             }
 173:src/mcu_msg_parser.c ****         }
 174:src/mcu_msg_parser.c ****         p++;
 381              		.loc 1 174 0 is_stmt 1
 382 007d 4883C301 		addq	$1, %rbx
 383              	.LVL31:
 384              	.L27:
 152:src/mcu_msg_parser.c ****         if(*p == '\'' || *p == '"') { //skip internal strings
 385              		.loc 1 152 0
 386 0081 4C892C24 		movq	%r13, (%rsp)
 387 0085 4889D8   		movq	%rbx, %rax
 388 0088 4C29E8   		subq	%r13, %rax
 389 008b 450FB7E6 		movzwl	%r14w, %r12d
 390 008f 4C39E0   		cmpq	%r12, %rax
 391 0092 0F8DB600 		jge	.L41
 391      0000
 152:src/mcu_msg_parser.c ****         if(*p == '\'' || *p == '"') { //skip internal strings
 392              		.loc 1 152 0 is_stmt 0 discriminator 1
 393 0098 0FB603   		movzbl	(%rbx), %eax
 394 009b 84C0     		testb	%al, %al
 395 009d 0F84A300 		je	.L43
 395      0000
 153:src/mcu_msg_parser.c ****             p = skip_internal_str(p);
 396              		.loc 1 153 0 is_stmt 1
 397 00a3 3C27     		cmpb	$39, %al
 398 00a5 0F94C2   		sete	%dl
 399 00a8 3C22     		cmpb	$34, %al
 400 00aa 0F94C0   		sete	%al
 401 00ad 08C2     		orb	%al, %dl
 402 00af 7583     		jne	.L44
 403              	.L28:
 156:src/mcu_msg_parser.c ****             loc = p + 1;
 404              		.loc 1 156 0
 405 00b1 4889DA   		movq	%rbx, %rdx
 406 00b4 4C29EA   		subq	%r13, %rdx
 407 00b7 410FB7C6 		movzwl	%r14w, %eax
 408 00bb 83E801   		subl	$1, %eax
 409 00be 4898     		cltq
 410 00c0 4839C2   		cmpq	%rax, %rdx
 411 00c3 7DB8     		jge	.L29
 156:src/mcu_msg_parser.c ****             loc = p + 1;
 412              		.loc 1 156 0 is_stmt 0 discriminator 1
 413 00c5 0FB64424 		movzbl	22(%rsp), %eax
 413      16
 414 00ca 3803     		cmpb	%al, (%rbx)
 415 00cc 75AF     		jne	.L29
 157:src/mcu_msg_parser.c ****             // exp_key = keyword;
 416              		.loc 1 157 0 is_stmt 1
 417 00ce 4C8D7B01 		leaq	1(%rbx), %r15
 418              	.LVL32:
 160:src/mcu_msg_parser.c ****                 if((*(loc + i) != *(keyword + i)) || is_ctrl_char(*(loc + i)) || 
 419              		.loc 1 160 0
 420 00d2 BD000000 		movl	$0, %ebp
 420      00
 421              	.LVL33:
 422              	.L30:
GAS LISTING /tmp/ccdTSR3G.s 			page 12


 160:src/mcu_msg_parser.c ****                 if((*(loc + i) != *(keyword + i)) || is_ctrl_char(*(loc + i)) || 
 423              		.loc 1 160 0 is_stmt 0 discriminator 1
 424 00d7 0FB7C5   		movzwl	%bp, %eax
 425 00da 498D1407 		leaq	(%r15,%rax), %rdx
 426 00de 4889D1   		movq	%rdx, %rcx
 427 00e1 482B0C24 		subq	(%rsp), %rcx
 428 00e5 4C39E1   		cmpq	%r12, %rcx
 429 00e8 7D52     		jge	.L40
 160:src/mcu_msg_parser.c ****                 if((*(loc + i) != *(keyword + i)) || is_ctrl_char(*(loc + i)) || 
 430              		.loc 1 160 0 discriminator 3
 431 00ea 663B6C24 		cmpw	20(%rsp), %bp
 431      14
 432 00ef 0F834CFF 		jnb	.L45
 432      FFFF
 161:src/mcu_msg_parser.c ****                                     !is_valid_keyword_char(*(loc + i))) {
 433              		.loc 1 161 0 is_stmt 1
 434 00f5 0FB61A   		movzbl	(%rdx), %ebx
 435 00f8 488B7C24 		movq	8(%rsp), %rdi
 435      08
 436 00fd 3A1C07   		cmpb	(%rdi,%rax), %bl
 437 0100 7526     		jne	.L38
 161:src/mcu_msg_parser.c ****                                     !is_valid_keyword_char(*(loc + i))) {
 438              		.loc 1 161 0 is_stmt 0 discriminator 1
 439 0102 0FBEDB   		movsbl	%bl, %ebx
 440 0105 89DF     		movl	%ebx, %edi
 441 0107 E8000000 		call	is_ctrl_char
 441      00
 442              	.LVL34:
 443 010c 84C0     		testb	%al, %al
 444 010e 7522     		jne	.L39
 162:src/mcu_msg_parser.c ****                     equal = 0;
 445              		.loc 1 162 0 is_stmt 1 discriminator 2
 446 0110 89DF     		movl	%ebx, %edi
 447 0112 E8000000 		call	is_valid_keyword_char
 447      00
 448              	.LVL35:
 449 0117 88442413 		movb	%al, 19(%rsp)
 161:src/mcu_msg_parser.c ****                                     !is_valid_keyword_char(*(loc + i))) {
 450              		.loc 1 161 0 discriminator 2
 451 011b 84C0     		testb	%al, %al
 452 011d 0F8428FF 		je	.L33
 452      FFFF
 160:src/mcu_msg_parser.c ****                 if((*(loc + i) != *(keyword + i)) || is_ctrl_char(*(loc + i)) || 
 453              		.loc 1 160 0 discriminator 2
 454 0123 83C501   		addl	$1, %ebp
 455              	.LVL36:
 456 0126 EBAF     		jmp	.L30
 457              	.L38:
 163:src/mcu_msg_parser.c ****                     break;
 458              		.loc 1 163 0
 459 0128 C6442413 		movb	$0, 19(%rsp)
 459      00
 460 012d E919FFFF 		jmp	.L33
 460      FF
 461              	.L39:
 462 0132 C6442413 		movb	$0, 19(%rsp)
 462      00
GAS LISTING /tmp/ccdTSR3G.s 			page 13


 463 0137 E90FFFFF 		jmp	.L33
 463      FF
 464              	.L40:
 159:src/mcu_msg_parser.c ****             for(i = 0; (loc + i - msg) < len && i < key_len; i++) {
 465              		.loc 1 159 0
 466 013c C6442413 		movb	$1, 19(%rsp)
 466      01
 467 0141 E905FFFF 		jmp	.L33
 467      FF
 468              	.LVL37:
 469              	.L43:
 175:src/mcu_msg_parser.c ****     }
 176:src/mcu_msg_parser.c ****     return NULL;
 470              		.loc 1 176 0
 471 0146 41BF0000 		movl	$0, %r15d
 471      0000
 472 014c EB06     		jmp	.L26
 473              	.L41:
 474 014e 41BF0000 		movl	$0, %r15d
 474      0000
 475              	.LVL38:
 476              	.L26:
 177:src/mcu_msg_parser.c **** }
 477              		.loc 1 177 0
 478 0154 4C89F8   		movq	%r15, %rax
 479 0157 4883C418 		addq	$24, %rsp
 480              	.LCFI7:
 481              		.cfi_def_cfa_offset 56
 482 015b 5B       		popq	%rbx
 483              	.LCFI8:
 484              		.cfi_def_cfa_offset 48
 485 015c 5D       		popq	%rbp
 486              	.LCFI9:
 487              		.cfi_def_cfa_offset 40
 488 015d 415C     		popq	%r12
 489              	.LCFI10:
 490              		.cfi_def_cfa_offset 32
 491 015f 415D     		popq	%r13
 492              	.LCFI11:
 493              		.cfi_def_cfa_offset 24
 494              	.LVL39:
 495 0161 415E     		popq	%r14
 496              	.LCFI12:
 497              		.cfi_def_cfa_offset 16
 498              	.LVL40:
 499 0163 415F     		popq	%r15
 500              	.LCFI13:
 501              		.cfi_def_cfa_offset 8
 502 0165 C3       		ret
 503              		.cfi_endproc
 504              	.LFE35:
 506              		.section	.text.find_val,"ax",@progbits
 508              	find_val:
 509              	.LFB36:
 178:src/mcu_msg_parser.c **** 
 179:src/mcu_msg_parser.c **** 
 180:src/mcu_msg_parser.c **** /**
GAS LISTING /tmp/ccdTSR3G.s 			page 14


 181:src/mcu_msg_parser.c ****  * @brief Getting the value start position for particular key in message object
 182:src/mcu_msg_parser.c ****  * 
 183:src/mcu_msg_parser.c ****  * @param obj message object
 184:src/mcu_msg_parser.c ****  * @param key key for search
 185:src/mcu_msg_parser.c ****  * @return char* location of the value start point or NULL if the key was not found
 186:src/mcu_msg_parser.c ****  */
 187:src/mcu_msg_parser.c **** static char *find_val(mcu_msg_obj_t obj, char *key)
 188:src/mcu_msg_parser.c **** {
 510              		.loc 1 188 0
 511              		.cfi_startproc
 512              	.LVL41:
 513 0000 4156     		pushq	%r14
 514              	.LCFI14:
 515              		.cfi_def_cfa_offset 16
 516              		.cfi_offset 14, -16
 517 0002 4155     		pushq	%r13
 518              	.LCFI15:
 519              		.cfi_def_cfa_offset 24
 520              		.cfi_offset 13, -24
 521 0004 4154     		pushq	%r12
 522              	.LCFI16:
 523              		.cfi_def_cfa_offset 32
 524              		.cfi_offset 12, -32
 525 0006 55       		pushq	%rbp
 526              	.LCFI17:
 527              		.cfi_def_cfa_offset 40
 528              		.cfi_offset 6, -40
 529 0007 53       		pushq	%rbx
 530              	.LCFI18:
 531              		.cfi_def_cfa_offset 48
 532              		.cfi_offset 3, -48
 533 0008 4989FE   		movq	%rdi, %r14
 189:src/mcu_msg_parser.c ****     char *loc = find_keyword(obj.content.s, obj.content.len, key, CTRL_KEY_FLAG, CTRL_KEY_EQU); //o
 534              		.loc 1 189 0
 535 000b 440FB764 		movzwl	72(%rsp), %r12d
 535      2448
 536 0011 450FB7EC 		movzwl	%r12w, %r13d
 537 0015 488B6C24 		movq	64(%rsp), %rbp
 537      40
 538 001a 41B83D00 		movl	$61, %r8d
 538      0000
 539 0020 B9240000 		movl	$36, %ecx
 539      00
 540 0025 4889FA   		movq	%rdi, %rdx
 541 0028 4489EE   		movl	%r13d, %esi
 542 002b 4889EF   		movq	%rbp, %rdi
 543              	.LVL42:
 544 002e E8000000 		call	find_keyword
 544      00
 545              	.LVL43:
 546 0033 4889C3   		movq	%rax, %rbx
 547              	.LVL44:
 190:src/mcu_msg_parser.c ****     char *p;
 191:src/mcu_msg_parser.c ****     if(loc == NULL) { //if keyword not found, return with NULLs and 0 lengths
 548              		.loc 1 191 0
 549 0036 4885C0   		testq	%rax, %rax
 550 0039 7454     		je	.L46
GAS LISTING /tmp/ccdTSR3G.s 			page 15


 192:src/mcu_msg_parser.c ****         return NULL;
 193:src/mcu_msg_parser.c ****     }
 194:src/mcu_msg_parser.c ****     p = loc + str_len(key);
 551              		.loc 1 194 0
 552 003b 4C89F7   		movq	%r14, %rdi
 553 003e E8000000 		call	str_len
 553      00
 554              	.LVL45:
 555 0043 0FB7C0   		movzwl	%ax, %eax
 556 0046 4801C3   		addq	%rax, %rbx
 557              	.LVL46:
 195:src/mcu_msg_parser.c ****     if(*p != CTRL_KEY_EQU) {
 558              		.loc 1 195 0
 559 0049 803B3D   		cmpb	$61, (%rbx)
 560 004c 750A     		jne	.L48
 561              	.L49:
 196:src/mcu_msg_parser.c ****         while(((p - obj.content.s) < (obj.content.len - 1)) && *p != CTRL_KEY_EQU) p++;
 197:src/mcu_msg_parser.c ****     }
 198:src/mcu_msg_parser.c ****     p++;
 562              		.loc 1 198 0
 563 004e 4883C301 		addq	$1, %rbx
 564              	.LVL47:
 199:src/mcu_msg_parser.c ****     while((p - obj.content.s) < obj.content.len && is_whitespace(*p)) p++; //skip spaces after equa
 565              		.loc 1 199 0
 566 0052 EB20     		jmp	.L51
 567              	.L50:
 196:src/mcu_msg_parser.c ****         while(((p - obj.content.s) < (obj.content.len - 1)) && *p != CTRL_KEY_EQU) p++;
 568              		.loc 1 196 0 discriminator 3
 569 0054 4883C301 		addq	$1, %rbx
 570              	.LVL48:
 571              	.L48:
 196:src/mcu_msg_parser.c ****         while(((p - obj.content.s) < (obj.content.len - 1)) && *p != CTRL_KEY_EQU) p++;
 572              		.loc 1 196 0 is_stmt 0 discriminator 1
 573 0058 4889DA   		movq	%rbx, %rdx
 574 005b 4829EA   		subq	%rbp, %rdx
 575 005e 418D45FF 		leal	-1(%r13), %eax
 576 0062 4898     		cltq
 577 0064 4839C2   		cmpq	%rax, %rdx
 578 0067 7DE5     		jge	.L49
 196:src/mcu_msg_parser.c ****         while(((p - obj.content.s) < (obj.content.len - 1)) && *p != CTRL_KEY_EQU) p++;
 579              		.loc 1 196 0 discriminator 2
 580 0069 803B3D   		cmpb	$61, (%rbx)
 581 006c 75E6     		jne	.L50
 582 006e EBDE     		jmp	.L49
 583              	.L52:
 584              		.loc 1 199 0 is_stmt 1 discriminator 3
 585 0070 4883C301 		addq	$1, %rbx
 586              	.LVL49:
 587              	.L51:
 588              		.loc 1 199 0 is_stmt 0 discriminator 1
 589 0074 4889DA   		movq	%rbx, %rdx
 590 0077 4829EA   		subq	%rbp, %rdx
 591 007a 410FB7C4 		movzwl	%r12w, %eax
 592 007e 4839C2   		cmpq	%rax, %rdx
 593 0081 7D0C     		jge	.L46
 594              		.loc 1 199 0 discriminator 2
 595 0083 0FBE3B   		movsbl	(%rbx), %edi
GAS LISTING /tmp/ccdTSR3G.s 			page 16


 596 0086 E8000000 		call	is_whitespace
 596      00
 597              	.LVL50:
 598 008b 84C0     		testb	%al, %al
 599 008d 75E1     		jne	.L52
 600              	.LVL51:
 601              	.L46:
 200:src/mcu_msg_parser.c ****     return p;
 201:src/mcu_msg_parser.c **** }
 602              		.loc 1 201 0 is_stmt 1
 603 008f 4889D8   		movq	%rbx, %rax
 604 0092 5B       		popq	%rbx
 605              	.LCFI19:
 606              		.cfi_def_cfa_offset 40
 607 0093 5D       		popq	%rbp
 608              	.LCFI20:
 609              		.cfi_def_cfa_offset 32
 610 0094 415C     		popq	%r12
 611              	.LCFI21:
 612              		.cfi_def_cfa_offset 24
 613 0096 415D     		popq	%r13
 614              	.LCFI22:
 615              		.cfi_def_cfa_offset 16
 616 0098 415E     		popq	%r14
 617              	.LCFI23:
 618              		.cfi_def_cfa_offset 8
 619              	.LVL52:
 620 009a C3       		ret
 621              		.cfi_endproc
 622              	.LFE36:
 624              		.section	.text.mcu_msg_str_copy,"ax",@progbits
 626              	mcu_msg_str_copy:
 627              	.LFB42:
 202:src/mcu_msg_parser.c **** 
 203:src/mcu_msg_parser.c **** 
 204:src/mcu_msg_parser.c **** mcu_msg_t mcu_msg_get(char *raw_str, char *id, mcu_msg_size_t len)
 205:src/mcu_msg_parser.c **** {
 206:src/mcu_msg_parser.c ****     mcu_msg_t res;
 207:src/mcu_msg_parser.c ****     char *loc = find_keyword(raw_str, len, id, CTRL_MSG_FLAG, CTRL_START_MSG); //object start with 
 208:src/mcu_msg_parser.c ****     char *p;
 209:src/mcu_msg_parser.c ****     if(loc == NULL) { //if keyword not found, return with NULLs and 0 lengths
 210:src/mcu_msg_parser.c ****         mcu_msg_destroy(&res);
 211:src/mcu_msg_parser.c ****         return res;
 212:src/mcu_msg_parser.c ****     }
 213:src/mcu_msg_parser.c ****     res.id.s = loc;
 214:src/mcu_msg_parser.c ****     res.id.len = str_len(id);
 215:src/mcu_msg_parser.c ****     p = loc + res.id.len;
 216:src/mcu_msg_parser.c ****     if (*p != CTRL_START_MSG) {
 217:src/mcu_msg_parser.c ****         while(((p - raw_str) < (len - 1)) && *p != CTRL_START_MSG) p++;
 218:src/mcu_msg_parser.c ****     }
 219:src/mcu_msg_parser.c ****     res.content.s = ++p;
 220:src/mcu_msg_parser.c ****     res.content.len = 0;
 221:src/mcu_msg_parser.c ****     while((p - raw_str) < len && *p != CTRL_STOP_MSG) {
 222:src/mcu_msg_parser.c ****         p++;
 223:src/mcu_msg_parser.c ****         res.content.len++;
 224:src/mcu_msg_parser.c ****     }
 225:src/mcu_msg_parser.c ****     return res;
GAS LISTING /tmp/ccdTSR3G.s 			page 17


 226:src/mcu_msg_parser.c **** }
 227:src/mcu_msg_parser.c **** 
 228:src/mcu_msg_parser.c **** 
 229:src/mcu_msg_parser.c **** 
 230:src/mcu_msg_parser.c **** mcu_msg_obj_t mcu_msg_parser_get_obj(mcu_msg_t msg, char *id)
 231:src/mcu_msg_parser.c **** {
 232:src/mcu_msg_parser.c ****     mcu_msg_obj_t res;
 233:src/mcu_msg_parser.c ****     char *loc = find_keyword(msg.content.s, msg.content.len, id, CTRL_OBJ_FLAG, CTRL_START_OBJ); //
 234:src/mcu_msg_parser.c ****     char *p;
 235:src/mcu_msg_parser.c ****     if(loc == NULL) { //if keyword not found, return with NULLs and 0 lengths
 236:src/mcu_msg_parser.c ****         mcu_msg_destroy_obj(&res);
 237:src/mcu_msg_parser.c ****         return res;
 238:src/mcu_msg_parser.c ****     }
 239:src/mcu_msg_parser.c **** 
 240:src/mcu_msg_parser.c ****     res.id.s = loc;
 241:src/mcu_msg_parser.c ****     res.id.len = str_len(id);
 242:src/mcu_msg_parser.c ****     p = loc + res.id.len;
 243:src/mcu_msg_parser.c ****     if (*p != CTRL_START_OBJ) {
 244:src/mcu_msg_parser.c ****         while(((p - msg.content.s) < (msg.content.len - 1)) && *p != CTRL_START_OBJ) p++;
 245:src/mcu_msg_parser.c ****     }
 246:src/mcu_msg_parser.c ****     res.content.s = ++p;
 247:src/mcu_msg_parser.c ****     res.content.len = 0;
 248:src/mcu_msg_parser.c ****     while((p - msg.content.s) < msg.content.len && *p != CTRL_STOP_OBJ) {
 249:src/mcu_msg_parser.c ****         p++;
 250:src/mcu_msg_parser.c ****         res.content.len++;
 251:src/mcu_msg_parser.c ****     }
 252:src/mcu_msg_parser.c ****     return res;
 253:src/mcu_msg_parser.c **** }
 254:src/mcu_msg_parser.c **** 
 255:src/mcu_msg_parser.c **** int8_t mcu_msg_parser_get_int(int *res_val, mcu_msg_obj_t obj, char *key)
 256:src/mcu_msg_parser.c **** {
 257:src/mcu_msg_parser.c ****     char *p = find_val(obj, key);
 258:src/mcu_msg_parser.c ****     mcu_msg_size_t i;
 259:src/mcu_msg_parser.c ****     unsigned m = 1;
 260:src/mcu_msg_parser.c ****     int sign = 1;
 261:src/mcu_msg_parser.c ****     int8_t res = 0; // result of function
 262:src/mcu_msg_parser.c **** 
 263:src/mcu_msg_parser.c ****     if(p == NULL)  //key nout found
 264:src/mcu_msg_parser.c ****         return -1;
 265:src/mcu_msg_parser.c **** 
 266:src/mcu_msg_parser.c **** 
 267:src/mcu_msg_parser.c ****     switch(*p) { //if the sign is defined, set the sign variable and increment the pointer
 268:src/mcu_msg_parser.c ****         case '+':
 269:src/mcu_msg_parser.c ****             sign = 1;
 270:src/mcu_msg_parser.c ****             p++;
 271:src/mcu_msg_parser.c ****         break;
 272:src/mcu_msg_parser.c ****         
 273:src/mcu_msg_parser.c ****         case '-':
 274:src/mcu_msg_parser.c ****             sign = -1;
 275:src/mcu_msg_parser.c ****             p++;
 276:src/mcu_msg_parser.c ****         break;
 277:src/mcu_msg_parser.c ****         
 278:src/mcu_msg_parser.c ****         default:
 279:src/mcu_msg_parser.c ****         break;
 280:src/mcu_msg_parser.c ****     }
 281:src/mcu_msg_parser.c **** 
 282:src/mcu_msg_parser.c ****     for(i = 0; (p - obj.content.s) < obj.content.len && !is_whitespace(*p) && *p != CTRL_KEY_SEP; i
GAS LISTING /tmp/ccdTSR3G.s 			page 18


 283:src/mcu_msg_parser.c ****         if(*p < '0' || *p > '9') {    // if non valid number, return with error
 284:src/mcu_msg_parser.c ****             return -1;
 285:src/mcu_msg_parser.c ****         }
 286:src/mcu_msg_parser.c ****     }
 287:src/mcu_msg_parser.c **** 
 288:src/mcu_msg_parser.c ****     *res_val = 0;
 289:src/mcu_msg_parser.c ****     --p;
 290:src/mcu_msg_parser.c ****     while(i--) {
 291:src/mcu_msg_parser.c ****         *res_val += (*p-- - '0') * m;
 292:src/mcu_msg_parser.c ****         m *= 10;
 293:src/mcu_msg_parser.c ****         res++;
 294:src/mcu_msg_parser.c ****     }
 295:src/mcu_msg_parser.c ****     
 296:src/mcu_msg_parser.c ****     *res_val *= sign; //corrigate with the sign
 297:src/mcu_msg_parser.c **** 
 298:src/mcu_msg_parser.c ****     return res; // return with the digit count, if correct
 299:src/mcu_msg_parser.c **** }
 300:src/mcu_msg_parser.c **** 
 301:src/mcu_msg_parser.c **** 
 302:src/mcu_msg_parser.c **** int8_t mcu_msg_parser_get_float(float *res_val, mcu_msg_obj_t obj, char *key)
 303:src/mcu_msg_parser.c **** {
 304:src/mcu_msg_parser.c ****     char *p = find_val(obj, key);
 305:src/mcu_msg_parser.c ****     char *pf;
 306:src/mcu_msg_parser.c ****     mcu_msg_size_t i;
 307:src/mcu_msg_parser.c ****     unsigned m = 1;
 308:src/mcu_msg_parser.c ****     float mf = 0.1;
 309:src/mcu_msg_parser.c ****     int sign = 1;
 310:src/mcu_msg_parser.c ****     int8_t res = 0; // result of function
 311:src/mcu_msg_parser.c **** 
 312:src/mcu_msg_parser.c ****     if(p == NULL)  //key nout found
 313:src/mcu_msg_parser.c ****         return -1;
 314:src/mcu_msg_parser.c **** 
 315:src/mcu_msg_parser.c **** 
 316:src/mcu_msg_parser.c ****     switch(*p) { //if the sign is defined, set the sign variable and increment the pointer
 317:src/mcu_msg_parser.c ****         case '+':
 318:src/mcu_msg_parser.c ****             sign = 1;
 319:src/mcu_msg_parser.c ****             p++;
 320:src/mcu_msg_parser.c ****         break;
 321:src/mcu_msg_parser.c ****         
 322:src/mcu_msg_parser.c ****         case '-':
 323:src/mcu_msg_parser.c ****             sign = -1;
 324:src/mcu_msg_parser.c ****             p++;
 325:src/mcu_msg_parser.c ****         break;
 326:src/mcu_msg_parser.c ****         
 327:src/mcu_msg_parser.c ****         default:
 328:src/mcu_msg_parser.c ****         break;
 329:src/mcu_msg_parser.c ****     }
 330:src/mcu_msg_parser.c **** 
 331:src/mcu_msg_parser.c ****     //move p to dec separator or end of the value
 332:src/mcu_msg_parser.c ****     for(i = 0; (p - obj.content.s) < obj.content.len && !is_whitespace(*p) && *p != CTRL_KEY_SEP &&
 333:src/mcu_msg_parser.c ****         if((*p < '0' || *p > '9')) {    // if non valid number, return with error
 334:src/mcu_msg_parser.c ****             return -1;
 335:src/mcu_msg_parser.c ****         }
 336:src/mcu_msg_parser.c ****     }
 337:src/mcu_msg_parser.c **** 
 338:src/mcu_msg_parser.c ****     *res_val = 0.0;
 339:src/mcu_msg_parser.c ****     
GAS LISTING /tmp/ccdTSR3G.s 			page 19


 340:src/mcu_msg_parser.c ****     if(*p == '.') {
 341:src/mcu_msg_parser.c ****         pf = p + 1;
 342:src/mcu_msg_parser.c ****         res++;
 343:src/mcu_msg_parser.c ****     } else {
 344:src/mcu_msg_parser.c ****         pf = NULL;
 345:src/mcu_msg_parser.c ****     }
 346:src/mcu_msg_parser.c **** 
 347:src/mcu_msg_parser.c ****     --p;
 348:src/mcu_msg_parser.c ****     while(i--) {
 349:src/mcu_msg_parser.c ****         *res_val += (*p-- - '0') * m;
 350:src/mcu_msg_parser.c ****         m *= 10;
 351:src/mcu_msg_parser.c ****         res++;
 352:src/mcu_msg_parser.c ****     }
 353:src/mcu_msg_parser.c ****     
 354:src/mcu_msg_parser.c ****     // calculate floating point section after '.' (if there is)
 355:src/mcu_msg_parser.c ****     for(; pf != NULL && (pf - obj.content.s) < obj.content.len && !is_whitespace(*pf) && *pf != CTR
 356:src/mcu_msg_parser.c ****         if(*pf < '0' || *pf > '9') {    // if non valid number, return with error
 357:src/mcu_msg_parser.c ****             return -1;
 358:src/mcu_msg_parser.c ****         }
 359:src/mcu_msg_parser.c ****         *res_val += (*pf - '0') * mf;
 360:src/mcu_msg_parser.c ****         mf /= 10;
 361:src/mcu_msg_parser.c ****         res++; 
 362:src/mcu_msg_parser.c ****     }
 363:src/mcu_msg_parser.c **** 
 364:src/mcu_msg_parser.c ****     *res_val *= sign; //corrigate with the sign
 365:src/mcu_msg_parser.c **** 
 366:src/mcu_msg_parser.c ****     return res; // return with the digit count + '.' separator, if correct
 367:src/mcu_msg_parser.c **** }
 368:src/mcu_msg_parser.c **** 
 369:src/mcu_msg_parser.c **** 
 370:src/mcu_msg_parser.c **** 
 371:src/mcu_msg_parser.c **** mcu_msg_string_t mcu_msg_parser_get_string(mcu_msg_obj_t obj, char *key)
 372:src/mcu_msg_parser.c **** {
 373:src/mcu_msg_parser.c ****     char *p = find_val(obj, key);
 374:src/mcu_msg_parser.c ****     char qmark;
 375:src/mcu_msg_parser.c ****     mcu_msg_string_t res;
 376:src/mcu_msg_parser.c **** 
 377:src/mcu_msg_parser.c ****     if(p == NULL) {
 378:src/mcu_msg_parser.c ****         mcu_msg_destroy_string(&res);
 379:src/mcu_msg_parser.c ****         return res;
 380:src/mcu_msg_parser.c ****     }
 381:src/mcu_msg_parser.c ****         
 382:src/mcu_msg_parser.c ****     qmark = *p;
 383:src/mcu_msg_parser.c **** 
 384:src/mcu_msg_parser.c ****     if(qmark != '\'' && qmark != '"') { // qmark not found, this is not a string
 385:src/mcu_msg_parser.c ****         mcu_msg_destroy_string(&res);
 386:src/mcu_msg_parser.c ****         return res;
 387:src/mcu_msg_parser.c ****     }
 388:src/mcu_msg_parser.c **** 
 389:src/mcu_msg_parser.c ****     res.s = ++p;
 390:src/mcu_msg_parser.c ****     res.len = 0;
 391:src/mcu_msg_parser.c ****     while((p - obj.content.s) < obj.content.len && *p != qmark) {
 392:src/mcu_msg_parser.c ****         res.len++;
 393:src/mcu_msg_parser.c ****         p++;
 394:src/mcu_msg_parser.c ****     }
 395:src/mcu_msg_parser.c ****     return res;
 396:src/mcu_msg_parser.c **** }
GAS LISTING /tmp/ccdTSR3G.s 			page 20


 397:src/mcu_msg_parser.c **** 
 398:src/mcu_msg_parser.c **** /**
 399:src/mcu_msg_parser.c ****  * @brief Default string copy
 400:src/mcu_msg_parser.c ****  * 
 401:src/mcu_msg_parser.c ****  * @param dest 
 402:src/mcu_msg_parser.c ****  * @param source 
 403:src/mcu_msg_parser.c ****  */
 404:src/mcu_msg_parser.c **** static void mcu_msg_str_copy(char *dest, mcu_msg_string_t source)
 405:src/mcu_msg_parser.c **** {
 628              		.loc 1 405 0
 629              		.cfi_startproc
 630              	.LVL53:
 406:src/mcu_msg_parser.c ****     mcu_msg_size_t i;
 407:src/mcu_msg_parser.c ****     for(i = 0; i < source.len; *(dest + i) = *(source.s + i), i++);
 631              		.loc 1 407 0
 632 0000 B8000000 		movl	$0, %eax
 632      00
 633 0005 EB0F     		jmp	.L55
 634              	.LVL54:
 635              	.L56:
 636              		.loc 1 407 0 is_stmt 0 discriminator 3
 637 0007 0FB7C8   		movzwl	%ax, %ecx
 638 000a 440FB604 		movzbl	(%rsi,%rcx), %r8d
 638      0E
 639 000f 4488040F 		movb	%r8b, (%rdi,%rcx)
 640 0013 83C001   		addl	$1, %eax
 641              	.LVL55:
 642              	.L55:
 643              		.loc 1 407 0 discriminator 1
 644 0016 6639C2   		cmpw	%ax, %dx
 645 0019 77EC     		ja	.L56
 408:src/mcu_msg_parser.c **** }
 646              		.loc 1 408 0 is_stmt 1
 647 001b F3C3     		rep ret
 648              		.cfi_endproc
 649              	.LFE42:
 651              		.section	.text.mcu_msg_destroy_string,"ax",@progbits
 652              		.globl	mcu_msg_destroy_string
 654              	mcu_msg_destroy_string:
 655              	.LFB27:
  28:src/mcu_msg_parser.c ****     str->s = NULL;
 656              		.loc 1 28 0
 657              		.cfi_startproc
 658              	.LVL56:
  29:src/mcu_msg_parser.c ****     str->len = 0;
 659              		.loc 1 29 0
 660 0000 48C70700 		movq	$0, (%rdi)
 660      000000
  30:src/mcu_msg_parser.c **** }
 661              		.loc 1 30 0
 662 0007 66C74708 		movw	$0, 8(%rdi)
 662      0000
  31:src/mcu_msg_parser.c **** 
 663              		.loc 1 31 0
 664 000d C3       		ret
 665              		.cfi_endproc
 666              	.LFE27:
GAS LISTING /tmp/ccdTSR3G.s 			page 21


 668              		.section	.text.mcu_msg_destroy,"ax",@progbits
 669              		.globl	mcu_msg_destroy
 671              	mcu_msg_destroy:
 672              	.LFB28:
  34:src/mcu_msg_parser.c ****     mcu_msg_destroy_string(&msg->id);
 673              		.loc 1 34 0
 674              		.cfi_startproc
 675              	.LVL57:
 676 0000 53       		pushq	%rbx
 677              	.LCFI24:
 678              		.cfi_def_cfa_offset 16
 679              		.cfi_offset 3, -16
 680 0001 4889FB   		movq	%rdi, %rbx
  35:src/mcu_msg_parser.c ****     mcu_msg_destroy_string(&msg->content);
 681              		.loc 1 35 0
 682 0004 E8000000 		call	mcu_msg_destroy_string
 682      00
 683              	.LVL58:
  36:src/mcu_msg_parser.c **** }
 684              		.loc 1 36 0
 685 0009 488D7B10 		leaq	16(%rbx), %rdi
 686 000d E8000000 		call	mcu_msg_destroy_string
 686      00
 687              	.LVL59:
  37:src/mcu_msg_parser.c **** 
 688              		.loc 1 37 0
 689 0012 5B       		popq	%rbx
 690              	.LCFI25:
 691              		.cfi_def_cfa_offset 8
 692              	.LVL60:
 693 0013 C3       		ret
 694              		.cfi_endproc
 695              	.LFE28:
 697              		.section	.text.mcu_msg_destroy_obj,"ax",@progbits
 698              		.globl	mcu_msg_destroy_obj
 700              	mcu_msg_destroy_obj:
 701              	.LFB29:
  40:src/mcu_msg_parser.c ****     mcu_msg_destroy_string(&obj->id);
 702              		.loc 1 40 0
 703              		.cfi_startproc
 704              	.LVL61:
 705 0000 53       		pushq	%rbx
 706              	.LCFI26:
 707              		.cfi_def_cfa_offset 16
 708              		.cfi_offset 3, -16
 709 0001 4889FB   		movq	%rdi, %rbx
  41:src/mcu_msg_parser.c ****     mcu_msg_destroy_string(&obj->content);
 710              		.loc 1 41 0
 711 0004 E8000000 		call	mcu_msg_destroy_string
 711      00
 712              	.LVL62:
  42:src/mcu_msg_parser.c **** }
 713              		.loc 1 42 0
 714 0009 488D7B10 		leaq	16(%rbx), %rdi
 715 000d E8000000 		call	mcu_msg_destroy_string
 715      00
 716              	.LVL63:
GAS LISTING /tmp/ccdTSR3G.s 			page 22


  43:src/mcu_msg_parser.c **** 
 717              		.loc 1 43 0
 718 0012 5B       		popq	%rbx
 719              	.LCFI27:
 720              		.cfi_def_cfa_offset 8
 721              	.LVL64:
 722 0013 C3       		ret
 723              		.cfi_endproc
 724              	.LFE29:
 726              		.section	.text.mcu_msg_get,"ax",@progbits
 727              		.globl	mcu_msg_get
 729              	mcu_msg_get:
 730              	.LFB37:
 205:src/mcu_msg_parser.c ****     mcu_msg_t res;
 731              		.loc 1 205 0
 732              		.cfi_startproc
 733              	.LVL65:
 734 0000 4157     		pushq	%r15
 735              	.LCFI28:
 736              		.cfi_def_cfa_offset 16
 737              		.cfi_offset 15, -16
 738 0002 4156     		pushq	%r14
 739              	.LCFI29:
 740              		.cfi_def_cfa_offset 24
 741              		.cfi_offset 14, -24
 742 0004 4155     		pushq	%r13
 743              	.LCFI30:
 744              		.cfi_def_cfa_offset 32
 745              		.cfi_offset 13, -32
 746 0006 4154     		pushq	%r12
 747              	.LCFI31:
 748              		.cfi_def_cfa_offset 40
 749              		.cfi_offset 12, -40
 750 0008 55       		pushq	%rbp
 751              	.LCFI32:
 752              		.cfi_def_cfa_offset 48
 753              		.cfi_offset 6, -48
 754 0009 53       		pushq	%rbx
 755              	.LCFI33:
 756              		.cfi_def_cfa_offset 56
 757              		.cfi_offset 3, -56
 758 000a 4883EC38 		subq	$56, %rsp
 759              	.LCFI34:
 760              		.cfi_def_cfa_offset 112
 761 000e 4989FD   		movq	%rdi, %r13
 762 0011 4889F5   		movq	%rsi, %rbp
 763 0014 4989D7   		movq	%rdx, %r15
 764 0017 4189CC   		movl	%ecx, %r12d
 205:src/mcu_msg_parser.c ****     mcu_msg_t res;
 765              		.loc 1 205 0
 766 001a 64488B04 		movq	%fs:40, %rax
 766      25280000 
 766      00
 767 0023 48894424 		movq	%rax, 40(%rsp)
 767      28
 768 0028 31C0     		xorl	%eax, %eax
 207:src/mcu_msg_parser.c ****     char *p;
GAS LISTING /tmp/ccdTSR3G.s 			page 23


 769              		.loc 1 207 0
 770 002a 440FB7F1 		movzwl	%cx, %r14d
 771 002e 41B87B00 		movl	$123, %r8d
 771      0000
 772 0034 B9230000 		movl	$35, %ecx
 772      00
 773              	.LVL66:
 774 0039 4489F6   		movl	%r14d, %esi
 775              	.LVL67:
 776 003c 4889EF   		movq	%rbp, %rdi
 777              	.LVL68:
 778 003f E8000000 		call	find_keyword
 778      00
 779              	.LVL69:
 209:src/mcu_msg_parser.c ****         mcu_msg_destroy(&res);
 780              		.loc 1 209 0
 781 0044 4885C0   		testq	%rax, %rax
 782 0047 7431     		je	.L73
 783 0049 4889C3   		movq	%rax, %rbx
 213:src/mcu_msg_parser.c ****     res.id.len = str_len(id);
 784              		.loc 1 213 0
 785 004c 48890424 		movq	%rax, (%rsp)
 214:src/mcu_msg_parser.c ****     p = loc + res.id.len;
 786              		.loc 1 214 0
 787 0050 4C89FF   		movq	%r15, %rdi
 788 0053 E8000000 		call	str_len
 788      00
 789              	.LVL70:
 790 0058 66894424 		movw	%ax, 8(%rsp)
 790      08
 215:src/mcu_msg_parser.c ****     if (*p != CTRL_START_MSG) {
 791              		.loc 1 215 0
 792 005d 0FB7C0   		movzwl	%ax, %eax
 793 0060 4801D8   		addq	%rbx, %rax
 794              	.LVL71:
 216:src/mcu_msg_parser.c ****         while(((p - raw_str) < (len - 1)) && *p != CTRL_START_MSG) p++;
 795              		.loc 1 216 0
 796 0063 80387B   		cmpb	$123, (%rax)
 797 0066 7543     		jne	.L65
 798              	.L66:
 219:src/mcu_msg_parser.c ****     res.content.len = 0;
 799              		.loc 1 219 0
 800 0068 4883C001 		addq	$1, %rax
 801              	.LVL72:
 802 006c 48894424 		movq	%rax, 16(%rsp)
 802      10
 220:src/mcu_msg_parser.c ****     while((p - raw_str) < len && *p != CTRL_STOP_MSG) {
 803              		.loc 1 220 0
 804 0071 66C74424 		movw	$0, 24(%rsp)
 804      180000
 221:src/mcu_msg_parser.c ****         p++;
 805              		.loc 1 221 0
 806 0078 EB5B     		jmp	.L68
 807              	.LVL73:
 808              	.L73:
 210:src/mcu_msg_parser.c ****         return res;
 809              		.loc 1 210 0
GAS LISTING /tmp/ccdTSR3G.s 			page 24


 810 007a 4889E7   		movq	%rsp, %rdi
 811 007d E8000000 		call	mcu_msg_destroy
 811      00
 812              	.LVL74:
 211:src/mcu_msg_parser.c ****     }
 813              		.loc 1 211 0
 814 0082 488B0424 		movq	(%rsp), %rax
 815 0086 488B5424 		movq	8(%rsp), %rdx
 815      08
 816 008b 49894500 		movq	%rax, 0(%r13)
 817 008f 49895508 		movq	%rdx, 8(%r13)
 818 0093 488B4424 		movq	16(%rsp), %rax
 818      10
 819 0098 488B5424 		movq	24(%rsp), %rdx
 819      18
 820 009d 49894510 		movq	%rax, 16(%r13)
 821 00a1 49895518 		movq	%rdx, 24(%r13)
 822 00a5 EB65     		jmp	.L62
 823              	.LVL75:
 824              	.L67:
 217:src/mcu_msg_parser.c ****     }
 825              		.loc 1 217 0 discriminator 3
 826 00a7 4883C001 		addq	$1, %rax
 827              	.LVL76:
 828              	.L65:
 217:src/mcu_msg_parser.c ****     }
 829              		.loc 1 217 0 is_stmt 0 discriminator 1
 830 00ab 4889C1   		movq	%rax, %rcx
 831 00ae 4829E9   		subq	%rbp, %rcx
 832 00b1 418D56FF 		leal	-1(%r14), %edx
 833 00b5 4863D2   		movslq	%edx, %rdx
 834 00b8 4839D1   		cmpq	%rdx, %rcx
 835 00bb 7DAB     		jge	.L66
 217:src/mcu_msg_parser.c ****     }
 836              		.loc 1 217 0 discriminator 2
 837 00bd 80387B   		cmpb	$123, (%rax)
 838 00c0 75E5     		jne	.L67
 839 00c2 EBA4     		jmp	.L66
 840              	.L70:
 222:src/mcu_msg_parser.c ****         res.content.len++;
 841              		.loc 1 222 0 is_stmt 1
 842 00c4 4883C001 		addq	$1, %rax
 843              	.LVL77:
 223:src/mcu_msg_parser.c ****     }
 844              		.loc 1 223 0
 845 00c8 0FB77424 		movzwl	24(%rsp), %esi
 845      18
 846 00cd 8D5601   		leal	1(%rsi), %edx
 847 00d0 66895424 		movw	%dx, 24(%rsp)
 847      18
 848              	.L68:
 221:src/mcu_msg_parser.c ****         p++;
 849              		.loc 1 221 0
 850 00d5 4889C1   		movq	%rax, %rcx
 851 00d8 4829E9   		subq	%rbp, %rcx
 852 00db 410FB7D4 		movzwl	%r12w, %edx
 853 00df 4839D1   		cmpq	%rdx, %rcx
GAS LISTING /tmp/ccdTSR3G.s 			page 25


 854 00e2 7D05     		jge	.L69
 221:src/mcu_msg_parser.c ****         p++;
 855              		.loc 1 221 0 is_stmt 0 discriminator 1
 856 00e4 80387D   		cmpb	$125, (%rax)
 857 00e7 75DB     		jne	.L70
 858              	.L69:
 225:src/mcu_msg_parser.c **** }
 859              		.loc 1 225 0 is_stmt 1
 860 00e9 488B0424 		movq	(%rsp), %rax
 861              	.LVL78:
 862 00ed 488B5424 		movq	8(%rsp), %rdx
 862      08
 863 00f2 49894500 		movq	%rax, 0(%r13)
 864 00f6 49895508 		movq	%rdx, 8(%r13)
 865 00fa 488B4424 		movq	16(%rsp), %rax
 865      10
 866 00ff 488B5424 		movq	24(%rsp), %rdx
 866      18
 867 0104 49894510 		movq	%rax, 16(%r13)
 868 0108 49895518 		movq	%rdx, 24(%r13)
 869              	.LVL79:
 870              	.L62:
 226:src/mcu_msg_parser.c **** 
 871              		.loc 1 226 0
 872 010c 4C89E8   		movq	%r13, %rax
 873 010f 488B5C24 		movq	40(%rsp), %rbx
 873      28
 874 0114 6448331C 		xorq	%fs:40, %rbx
 874      25280000 
 874      00
 875 011d 750F     		jne	.L74
 876              	.LVL80:
 877 011f 4883C438 		addq	$56, %rsp
 878              	.LCFI35:
 879              		.cfi_remember_state
 880              		.cfi_def_cfa_offset 56
 881 0123 5B       		popq	%rbx
 882              	.LCFI36:
 883              		.cfi_def_cfa_offset 48
 884 0124 5D       		popq	%rbp
 885              	.LCFI37:
 886              		.cfi_def_cfa_offset 40
 887              	.LVL81:
 888 0125 415C     		popq	%r12
 889              	.LCFI38:
 890              		.cfi_def_cfa_offset 32
 891              	.LVL82:
 892 0127 415D     		popq	%r13
 893              	.LCFI39:
 894              		.cfi_def_cfa_offset 24
 895 0129 415E     		popq	%r14
 896              	.LCFI40:
 897              		.cfi_def_cfa_offset 16
 898              	.LVL83:
 899 012b 415F     		popq	%r15
 900              	.LCFI41:
 901              		.cfi_def_cfa_offset 8
GAS LISTING /tmp/ccdTSR3G.s 			page 26


 902              	.LVL84:
 903 012d C3       		ret
 904              	.LVL85:
 905              	.L74:
 906              	.LCFI42:
 907              		.cfi_restore_state
 908 012e E8000000 		call	__stack_chk_fail@PLT
 908      00
 909              	.LVL86:
 910              		.cfi_endproc
 911              	.LFE37:
 913              		.section	.text.mcu_msg_parser_get_obj,"ax",@progbits
 914              		.globl	mcu_msg_parser_get_obj
 916              	mcu_msg_parser_get_obj:
 917              	.LFB38:
 231:src/mcu_msg_parser.c ****     mcu_msg_obj_t res;
 918              		.loc 1 231 0
 919              		.cfi_startproc
 920              	.LVL87:
 921 0000 4157     		pushq	%r15
 922              	.LCFI43:
 923              		.cfi_def_cfa_offset 16
 924              		.cfi_offset 15, -16
 925 0002 4156     		pushq	%r14
 926              	.LCFI44:
 927              		.cfi_def_cfa_offset 24
 928              		.cfi_offset 14, -24
 929 0004 4155     		pushq	%r13
 930              	.LCFI45:
 931              		.cfi_def_cfa_offset 32
 932              		.cfi_offset 13, -32
 933 0006 4154     		pushq	%r12
 934              	.LCFI46:
 935              		.cfi_def_cfa_offset 40
 936              		.cfi_offset 12, -40
 937 0008 55       		pushq	%rbp
 938              	.LCFI47:
 939              		.cfi_def_cfa_offset 48
 940              		.cfi_offset 6, -48
 941 0009 53       		pushq	%rbx
 942              	.LCFI48:
 943              		.cfi_def_cfa_offset 56
 944              		.cfi_offset 3, -56
 945 000a 4883EC38 		subq	$56, %rsp
 946              	.LCFI49:
 947              		.cfi_def_cfa_offset 112
 948 000e 4989FD   		movq	%rdi, %r13
 949 0011 4989F7   		movq	%rsi, %r15
 231:src/mcu_msg_parser.c ****     mcu_msg_obj_t res;
 950              		.loc 1 231 0
 951 0014 64488B04 		movq	%fs:40, %rax
 951      25280000 
 951      00
 952 001d 48894424 		movq	%rax, 40(%rsp)
 952      28
 953 0022 31C0     		xorl	%eax, %eax
 233:src/mcu_msg_parser.c ****     char *p;
GAS LISTING /tmp/ccdTSR3G.s 			page 27


 954              		.loc 1 233 0
 955 0024 440FB7A4 		movzwl	136(%rsp), %r12d
 955      24880000 
 955      00
 956 002d 450FB7F4 		movzwl	%r12w, %r14d
 957 0031 488BAC24 		movq	128(%rsp), %rbp
 957      80000000 
 958 0039 41B82800 		movl	$40, %r8d
 958      0000
 959 003f B9400000 		movl	$64, %ecx
 959      00
 960 0044 4889F2   		movq	%rsi, %rdx
 961 0047 4489F6   		movl	%r14d, %esi
 962              	.LVL88:
 963 004a 4889EF   		movq	%rbp, %rdi
 964              	.LVL89:
 965 004d E8000000 		call	find_keyword
 965      00
 966              	.LVL90:
 235:src/mcu_msg_parser.c ****         mcu_msg_destroy_obj(&res);
 967              		.loc 1 235 0
 968 0052 4885C0   		testq	%rax, %rax
 969 0055 7431     		je	.L86
 970 0057 4889C3   		movq	%rax, %rbx
 240:src/mcu_msg_parser.c ****     res.id.len = str_len(id);
 971              		.loc 1 240 0
 972 005a 48890424 		movq	%rax, (%rsp)
 241:src/mcu_msg_parser.c ****     p = loc + res.id.len;
 973              		.loc 1 241 0
 974 005e 4C89FF   		movq	%r15, %rdi
 975 0061 E8000000 		call	str_len
 975      00
 976              	.LVL91:
 977 0066 66894424 		movw	%ax, 8(%rsp)
 977      08
 242:src/mcu_msg_parser.c ****     if (*p != CTRL_START_OBJ) {
 978              		.loc 1 242 0
 979 006b 0FB7C0   		movzwl	%ax, %eax
 980 006e 4801D8   		addq	%rbx, %rax
 981              	.LVL92:
 243:src/mcu_msg_parser.c ****         while(((p - msg.content.s) < (msg.content.len - 1)) && *p != CTRL_START_OBJ) p++;
 982              		.loc 1 243 0
 983 0071 803828   		cmpb	$40, (%rax)
 984 0074 7543     		jne	.L78
 985              	.L79:
 246:src/mcu_msg_parser.c ****     res.content.len = 0;
 986              		.loc 1 246 0
 987 0076 4883C001 		addq	$1, %rax
 988              	.LVL93:
 989 007a 48894424 		movq	%rax, 16(%rsp)
 989      10
 247:src/mcu_msg_parser.c ****     while((p - msg.content.s) < msg.content.len && *p != CTRL_STOP_OBJ) {
 990              		.loc 1 247 0
 991 007f 66C74424 		movw	$0, 24(%rsp)
 991      180000
 248:src/mcu_msg_parser.c ****         p++;
 992              		.loc 1 248 0
GAS LISTING /tmp/ccdTSR3G.s 			page 28


 993 0086 EB5B     		jmp	.L81
 994              	.LVL94:
 995              	.L86:
 236:src/mcu_msg_parser.c ****         return res;
 996              		.loc 1 236 0
 997 0088 4889E7   		movq	%rsp, %rdi
 998 008b E8000000 		call	mcu_msg_destroy_obj
 998      00
 999              	.LVL95:
 237:src/mcu_msg_parser.c ****     }
 1000              		.loc 1 237 0
 1001 0090 488B0424 		movq	(%rsp), %rax
 1002 0094 488B5424 		movq	8(%rsp), %rdx
 1002      08
 1003 0099 49894500 		movq	%rax, 0(%r13)
 1004 009d 49895508 		movq	%rdx, 8(%r13)
 1005 00a1 488B4424 		movq	16(%rsp), %rax
 1005      10
 1006 00a6 488B5424 		movq	24(%rsp), %rdx
 1006      18
 1007 00ab 49894510 		movq	%rax, 16(%r13)
 1008 00af 49895518 		movq	%rdx, 24(%r13)
 1009 00b3 EB65     		jmp	.L75
 1010              	.LVL96:
 1011              	.L80:
 244:src/mcu_msg_parser.c ****     }
 1012              		.loc 1 244 0 discriminator 3
 1013 00b5 4883C001 		addq	$1, %rax
 1014              	.LVL97:
 1015              	.L78:
 244:src/mcu_msg_parser.c ****     }
 1016              		.loc 1 244 0 is_stmt 0 discriminator 1
 1017 00b9 4889C1   		movq	%rax, %rcx
 1018 00bc 4829E9   		subq	%rbp, %rcx
 1019 00bf 418D56FF 		leal	-1(%r14), %edx
 1020 00c3 4863D2   		movslq	%edx, %rdx
 1021 00c6 4839D1   		cmpq	%rdx, %rcx
 1022 00c9 7DAB     		jge	.L79
 244:src/mcu_msg_parser.c ****     }
 1023              		.loc 1 244 0 discriminator 2
 1024 00cb 803828   		cmpb	$40, (%rax)
 1025 00ce 75E5     		jne	.L80
 1026 00d0 EBA4     		jmp	.L79
 1027              	.L83:
 249:src/mcu_msg_parser.c ****         res.content.len++;
 1028              		.loc 1 249 0 is_stmt 1
 1029 00d2 4883C001 		addq	$1, %rax
 1030              	.LVL98:
 250:src/mcu_msg_parser.c ****     }
 1031              		.loc 1 250 0
 1032 00d6 0FB77424 		movzwl	24(%rsp), %esi
 1032      18
 1033 00db 8D5601   		leal	1(%rsi), %edx
 1034 00de 66895424 		movw	%dx, 24(%rsp)
 1034      18
 1035              	.L81:
 248:src/mcu_msg_parser.c ****         p++;
GAS LISTING /tmp/ccdTSR3G.s 			page 29


 1036              		.loc 1 248 0
 1037 00e3 4889C1   		movq	%rax, %rcx
 1038 00e6 4829E9   		subq	%rbp, %rcx
 1039 00e9 410FB7D4 		movzwl	%r12w, %edx
 1040 00ed 4839D1   		cmpq	%rdx, %rcx
 1041 00f0 7D05     		jge	.L82
 248:src/mcu_msg_parser.c ****         p++;
 1042              		.loc 1 248 0 is_stmt 0 discriminator 1
 1043 00f2 803829   		cmpb	$41, (%rax)
 1044 00f5 75DB     		jne	.L83
 1045              	.L82:
 252:src/mcu_msg_parser.c **** }
 1046              		.loc 1 252 0 is_stmt 1
 1047 00f7 488B0424 		movq	(%rsp), %rax
 1048              	.LVL99:
 1049 00fb 488B5424 		movq	8(%rsp), %rdx
 1049      08
 1050 0100 49894500 		movq	%rax, 0(%r13)
 1051 0104 49895508 		movq	%rdx, 8(%r13)
 1052 0108 488B4424 		movq	16(%rsp), %rax
 1052      10
 1053 010d 488B5424 		movq	24(%rsp), %rdx
 1053      18
 1054 0112 49894510 		movq	%rax, 16(%r13)
 1055 0116 49895518 		movq	%rdx, 24(%r13)
 1056              	.LVL100:
 1057              	.L75:
 253:src/mcu_msg_parser.c **** 
 1058              		.loc 1 253 0
 1059 011a 4C89E8   		movq	%r13, %rax
 1060 011d 488B5C24 		movq	40(%rsp), %rbx
 1060      28
 1061 0122 6448331C 		xorq	%fs:40, %rbx
 1061      25280000 
 1061      00
 1062 012b 750F     		jne	.L87
 1063              	.LVL101:
 1064 012d 4883C438 		addq	$56, %rsp
 1065              	.LCFI50:
 1066              		.cfi_remember_state
 1067              		.cfi_def_cfa_offset 56
 1068 0131 5B       		popq	%rbx
 1069              	.LCFI51:
 1070              		.cfi_def_cfa_offset 48
 1071 0132 5D       		popq	%rbp
 1072              	.LCFI52:
 1073              		.cfi_def_cfa_offset 40
 1074 0133 415C     		popq	%r12
 1075              	.LCFI53:
 1076              		.cfi_def_cfa_offset 32
 1077 0135 415D     		popq	%r13
 1078              	.LCFI54:
 1079              		.cfi_def_cfa_offset 24
 1080 0137 415E     		popq	%r14
 1081              	.LCFI55:
 1082              		.cfi_def_cfa_offset 16
 1083 0139 415F     		popq	%r15
GAS LISTING /tmp/ccdTSR3G.s 			page 30


 1084              	.LCFI56:
 1085              		.cfi_def_cfa_offset 8
 1086              	.LVL102:
 1087 013b C3       		ret
 1088              	.LVL103:
 1089              	.L87:
 1090              	.LCFI57:
 1091              		.cfi_restore_state
 1092 013c E8000000 		call	__stack_chk_fail@PLT
 1092      00
 1093              	.LVL104:
 1094              		.cfi_endproc
 1095              	.LFE38:
 1097              		.section	.text.mcu_msg_parser_get_int,"ax",@progbits
 1098              		.globl	mcu_msg_parser_get_int
 1100              	mcu_msg_parser_get_int:
 1101              	.LFB39:
 256:src/mcu_msg_parser.c ****     char *p = find_val(obj, key);
 1102              		.loc 1 256 0
 1103              		.cfi_startproc
 1104              	.LVL105:
 1105 0000 4156     		pushq	%r14
 1106              	.LCFI58:
 1107              		.cfi_def_cfa_offset 16
 1108              		.cfi_offset 14, -16
 1109 0002 4155     		pushq	%r13
 1110              	.LCFI59:
 1111              		.cfi_def_cfa_offset 24
 1112              		.cfi_offset 13, -24
 1113 0004 4154     		pushq	%r12
 1114              	.LCFI60:
 1115              		.cfi_def_cfa_offset 32
 1116              		.cfi_offset 12, -32
 1117 0006 55       		pushq	%rbp
 1118              	.LCFI61:
 1119              		.cfi_def_cfa_offset 40
 1120              		.cfi_offset 6, -40
 1121 0007 53       		pushq	%rbx
 1122              	.LCFI62:
 1123              		.cfi_def_cfa_offset 48
 1124              		.cfi_offset 3, -48
 1125 0008 4989FD   		movq	%rdi, %r13
 257:src/mcu_msg_parser.c ****     mcu_msg_size_t i;
 1126              		.loc 1 257 0
 1127 000b FF742448 		pushq	72(%rsp)
 1128              	.LCFI63:
 1129              		.cfi_def_cfa_offset 56
 1130 000f FF742448 		pushq	72(%rsp)
 1131              	.LCFI64:
 1132              		.cfi_def_cfa_offset 64
 1133 0013 FF742448 		pushq	72(%rsp)
 1134              	.LCFI65:
 1135              		.cfi_def_cfa_offset 72
 1136 0017 FF742448 		pushq	72(%rsp)
 1137              	.LCFI66:
 1138              		.cfi_def_cfa_offset 80
 1139 001b 4889F7   		movq	%rsi, %rdi
GAS LISTING /tmp/ccdTSR3G.s 			page 31


 1140              	.LVL106:
 1141 001e E8000000 		call	find_val
 1141      00
 1142              	.LVL107:
 1143 0023 4883C420 		addq	$32, %rsp
 1144              	.LCFI67:
 1145              		.cfi_def_cfa_offset 48
 1146              	.LVL108:
 263:src/mcu_msg_parser.c ****         return -1;
 1147              		.loc 1 263 0
 1148 0027 4885C0   		testq	%rax, %rax
 1149 002a 0F84BF00 		je	.L98
 1149      0000
 1150 0030 4889C3   		movq	%rax, %rbx
 267:src/mcu_msg_parser.c ****         case '+':
 1151              		.loc 1 267 0
 1152 0033 0FB600   		movzbl	(%rax), %eax
 1153              	.LVL109:
 1154 0036 3C2B     		cmpb	$43, %al
 1155 0038 740C     		je	.L91
 1156 003a 3C2D     		cmpb	$45, %al
 1157 003c 7453     		je	.L92
 260:src/mcu_msg_parser.c ****     int8_t res = 0; // result of function
 1158              		.loc 1 260 0
 1159 003e 41BE0100 		movl	$1, %r14d
 1159      0000
 1160 0044 EB0A     		jmp	.L90
 1161              	.L91:
 270:src/mcu_msg_parser.c ****         break;
 1162              		.loc 1 270 0
 1163 0046 4883C301 		addq	$1, %rbx
 1164              	.LVL110:
 269:src/mcu_msg_parser.c ****             p++;
 1165              		.loc 1 269 0
 1166 004a 41BE0100 		movl	$1, %r14d
 1166      0000
 1167              	.LVL111:
 1168              	.L90:
 282:src/mcu_msg_parser.c ****         if(*p < '0' || *p > '9') {    // if non valid number, return with error
 1169              		.loc 1 282 0
 1170 0050 41BC0000 		movl	$0, %r12d
 1170      0000
 1171              	.LVL112:
 1172              	.L93:
 282:src/mcu_msg_parser.c ****         if(*p < '0' || *p > '9') {    // if non valid number, return with error
 1173              		.loc 1 282 0 is_stmt 0 discriminator 1
 1174 0056 4889DA   		movq	%rbx, %rdx
 1175 0059 482B5424 		subq	64(%rsp), %rdx
 1175      40
 1176 005e 0FB74424 		movzwl	72(%rsp), %eax
 1176      48
 1177 0063 4839C2   		cmpq	%rax, %rdx
 1178 0066 7D35     		jge	.L94
 282:src/mcu_msg_parser.c ****         if(*p < '0' || *p > '9') {    // if non valid number, return with error
 1179              		.loc 1 282 0 discriminator 3
 1180 0068 0FB62B   		movzbl	(%rbx), %ebp
 1181 006b 400FBEFD 		movsbl	%bpl, %edi
GAS LISTING /tmp/ccdTSR3G.s 			page 32


 1182 006f E8000000 		call	is_whitespace
 1182      00
 1183              	.LVL113:
 1184 0074 84C0     		testb	%al, %al
 1185 0076 7525     		jne	.L94
 282:src/mcu_msg_parser.c ****         if(*p < '0' || *p > '9') {    // if non valid number, return with error
 1186              		.loc 1 282 0 discriminator 4
 1187 0078 4080FD3B 		cmpb	$59, %bpl
 1188 007c 741F     		je	.L94
 283:src/mcu_msg_parser.c ****             return -1;
 1189              		.loc 1 283 0 is_stmt 1
 1190 007e 83ED30   		subl	$48, %ebp
 1191 0081 4080FD09 		cmpb	$9, %bpl
 1192 0085 776F     		ja	.L100
 282:src/mcu_msg_parser.c ****         if(*p < '0' || *p > '9') {    // if non valid number, return with error
 1193              		.loc 1 282 0 discriminator 2
 1194 0087 4183C401 		addl	$1, %r12d
 1195              	.LVL114:
 1196 008b 4883C301 		addq	$1, %rbx
 1197              	.LVL115:
 1198 008f EBC5     		jmp	.L93
 1199              	.LVL116:
 1200              	.L92:
 275:src/mcu_msg_parser.c ****         break;
 1201              		.loc 1 275 0
 1202 0091 4883C301 		addq	$1, %rbx
 1203              	.LVL117:
 274:src/mcu_msg_parser.c ****             p++;
 1204              		.loc 1 274 0
 1205 0095 41BEFFFF 		movl	$-1, %r14d
 1205      FFFF
 276:src/mcu_msg_parser.c ****         
 1206              		.loc 1 276 0
 1207 009b EBB3     		jmp	.L90
 1208              	.LVL118:
 1209              	.L94:
 288:src/mcu_msg_parser.c ****     --p;
 1210              		.loc 1 288 0
 1211 009d 41C74500 		movl	$0, 0(%r13)
 1211      00000000 
 289:src/mcu_msg_parser.c ****     while(i--) {
 1212              		.loc 1 289 0
 1213 00a5 4883EB01 		subq	$1, %rbx
 1214              	.LVL119:
 261:src/mcu_msg_parser.c **** 
 1215              		.loc 1 261 0
 1216 00a9 B8000000 		movl	$0, %eax
 1216      00
 259:src/mcu_msg_parser.c ****     int sign = 1;
 1217              		.loc 1 259 0
 1218 00ae BA010000 		movl	$1, %edx
 1218      00
 290:src/mcu_msg_parser.c ****         *res_val += (*p-- - '0') * m;
 1219              		.loc 1 290 0
 1220 00b3 EB1D     		jmp	.L96
 1221              	.LVL120:
 1222              	.L97:
GAS LISTING /tmp/ccdTSR3G.s 			page 33


 291:src/mcu_msg_parser.c ****         m *= 10;
 1223              		.loc 1 291 0
 1224 00b5 0FBE0B   		movsbl	(%rbx), %ecx
 1225 00b8 83E930   		subl	$48, %ecx
 1226 00bb 0FAFCA   		imull	%edx, %ecx
 1227 00be 41014D00 		addl	%ecx, 0(%r13)
 292:src/mcu_msg_parser.c ****         res++;
 1228              		.loc 1 292 0
 1229 00c2 8D0C92   		leal	(%rdx,%rdx,4), %ecx
 1230 00c5 8D1409   		leal	(%rcx,%rcx), %edx
 1231              	.LVL121:
 293:src/mcu_msg_parser.c ****     }
 1232              		.loc 1 293 0
 1233 00c8 83C001   		addl	$1, %eax
 1234              	.LVL122:
 290:src/mcu_msg_parser.c ****         *res_val += (*p-- - '0') * m;
 1235              		.loc 1 290 0
 1236 00cb 4189F4   		movl	%esi, %r12d
 291:src/mcu_msg_parser.c ****         m *= 10;
 1237              		.loc 1 291 0
 1238 00ce 488D5BFF 		leaq	-1(%rbx), %rbx
 1239              	.LVL123:
 1240              	.L96:
 290:src/mcu_msg_parser.c ****         *res_val += (*p-- - '0') * m;
 1241              		.loc 1 290 0
 1242 00d2 418D7424 		leal	-1(%r12), %esi
 1242      FF
 1243              	.LVL124:
 1244 00d7 664585E4 		testw	%r12w, %r12w
 1245 00db 75D8     		jne	.L97
 296:src/mcu_msg_parser.c **** 
 1246              		.loc 1 296 0
 1247 00dd 450FAF75 		imull	0(%r13), %r14d
 1247      00
 1248              	.LVL125:
 1249 00e2 45897500 		movl	%r14d, 0(%r13)
 1250              	.LVL126:
 1251              	.L88:
 299:src/mcu_msg_parser.c **** 
 1252              		.loc 1 299 0
 1253 00e6 5B       		popq	%rbx
 1254              	.LCFI68:
 1255              		.cfi_remember_state
 1256              		.cfi_def_cfa_offset 40
 1257 00e7 5D       		popq	%rbp
 1258              	.LCFI69:
 1259              		.cfi_def_cfa_offset 32
 1260 00e8 415C     		popq	%r12
 1261              	.LCFI70:
 1262              		.cfi_def_cfa_offset 24
 1263 00ea 415D     		popq	%r13
 1264              	.LCFI71:
 1265              		.cfi_def_cfa_offset 16
 1266              	.LVL127:
 1267 00ec 415E     		popq	%r14
 1268              	.LCFI72:
 1269              		.cfi_def_cfa_offset 8
GAS LISTING /tmp/ccdTSR3G.s 			page 34


 1270 00ee C3       		ret
 1271              	.LVL128:
 1272              	.L98:
 1273              	.LCFI73:
 1274              		.cfi_restore_state
 264:src/mcu_msg_parser.c **** 
 1275              		.loc 1 264 0
 1276 00ef B8FFFFFF 		movl	$-1, %eax
 1276      FF
 1277              	.LVL129:
 1278 00f4 EBF0     		jmp	.L88
 1279              	.LVL130:
 1280              	.L100:
 284:src/mcu_msg_parser.c ****         }
 1281              		.loc 1 284 0
 1282 00f6 B8FFFFFF 		movl	$-1, %eax
 1282      FF
 1283 00fb EBE9     		jmp	.L88
 1284              		.cfi_endproc
 1285              	.LFE39:
 1287              		.section	.text.mcu_msg_parser_get_float,"ax",@progbits
 1288              		.globl	mcu_msg_parser_get_float
 1290              	mcu_msg_parser_get_float:
 1291              	.LFB40:
 303:src/mcu_msg_parser.c ****     char *p = find_val(obj, key);
 1292              		.loc 1 303 0
 1293              		.cfi_startproc
 1294              	.LVL131:
 1295 0000 4157     		pushq	%r15
 1296              	.LCFI74:
 1297              		.cfi_def_cfa_offset 16
 1298              		.cfi_offset 15, -16
 1299 0002 4156     		pushq	%r14
 1300              	.LCFI75:
 1301              		.cfi_def_cfa_offset 24
 1302              		.cfi_offset 14, -24
 1303 0004 4155     		pushq	%r13
 1304              	.LCFI76:
 1305              		.cfi_def_cfa_offset 32
 1306              		.cfi_offset 13, -32
 1307 0006 4154     		pushq	%r12
 1308              	.LCFI77:
 1309              		.cfi_def_cfa_offset 40
 1310              		.cfi_offset 12, -40
 1311 0008 55       		pushq	%rbp
 1312              	.LCFI78:
 1313              		.cfi_def_cfa_offset 48
 1314              		.cfi_offset 6, -48
 1315 0009 53       		pushq	%rbx
 1316              	.LCFI79:
 1317              		.cfi_def_cfa_offset 56
 1318              		.cfi_offset 3, -56
 1319 000a 4883EC10 		subq	$16, %rsp
 1320              	.LCFI80:
 1321              		.cfi_def_cfa_offset 72
 1322 000e 4989FD   		movq	%rdi, %r13
 304:src/mcu_msg_parser.c ****     char *pf;
GAS LISTING /tmp/ccdTSR3G.s 			page 35


 1323              		.loc 1 304 0
 1324 0011 FF742460 		pushq	96(%rsp)
 1325              	.LCFI81:
 1326              		.cfi_def_cfa_offset 80
 1327 0015 FF742460 		pushq	96(%rsp)
 1328              	.LCFI82:
 1329              		.cfi_def_cfa_offset 88
 1330 0019 FF742460 		pushq	96(%rsp)
 1331              	.LCFI83:
 1332              		.cfi_def_cfa_offset 96
 1333 001d FF742460 		pushq	96(%rsp)
 1334              	.LCFI84:
 1335              		.cfi_def_cfa_offset 104
 1336 0021 4889F7   		movq	%rsi, %rdi
 1337              	.LVL132:
 1338 0024 E8000000 		call	find_val
 1338      00
 1339              	.LVL133:
 1340 0029 4883C420 		addq	$32, %rsp
 1341              	.LCFI85:
 1342              		.cfi_def_cfa_offset 72
 1343              	.LVL134:
 312:src/mcu_msg_parser.c ****         return -1;
 1344              		.loc 1 312 0
 1345 002d 4885C0   		testq	%rax, %rax
 1346 0030 0F848801 		je	.L119
 1346      0000
 1347 0036 4889C3   		movq	%rax, %rbx
 316:src/mcu_msg_parser.c ****         case '+':
 1348              		.loc 1 316 0
 1349 0039 0FB600   		movzbl	(%rax), %eax
 1350              	.LVL135:
 1351 003c 3C2B     		cmpb	$43, %al
 1352 003e 740E     		je	.L106
 1353 0040 3C2D     		cmpb	$45, %al
 1354 0042 7465     		je	.L107
 309:src/mcu_msg_parser.c ****     int8_t res = 0; // result of function
 1355              		.loc 1 309 0
 1356 0044 C744240C 		movl	$1, 12(%rsp)
 1356      01000000 
 1357 004c EB0C     		jmp	.L105
 1358              	.L106:
 319:src/mcu_msg_parser.c ****         break;
 1359              		.loc 1 319 0
 1360 004e 4883C301 		addq	$1, %rbx
 1361              	.LVL136:
 318:src/mcu_msg_parser.c ****             p++;
 1362              		.loc 1 318 0
 1363 0052 C744240C 		movl	$1, 12(%rsp)
 1363      01000000 
 1364              	.LVL137:
 1365              	.L105:
 332:src/mcu_msg_parser.c ****         if((*p < '0' || *p > '9')) {    // if non valid number, return with error
 1366              		.loc 1 332 0
 1367 005a BD000000 		movl	$0, %ebp
 1367      00
 1368              	.LVL138:
GAS LISTING /tmp/ccdTSR3G.s 			page 36


 1369              	.L108:
 332:src/mcu_msg_parser.c ****         if((*p < '0' || *p > '9')) {    // if non valid number, return with error
 1370              		.loc 1 332 0 is_stmt 0 discriminator 1
 1371 005f 4C8B7424 		movq	88(%rsp), %r14
 1371      58
 1372 0064 4889D8   		movq	%rbx, %rax
 1373 0067 4C29F0   		subq	%r14, %rax
 1374 006a 440FB77C 		movzwl	96(%rsp), %r15d
 1374      2460
 1375 0070 4C39F8   		cmpq	%r15, %rax
 1376 0073 7D42     		jge	.L109
 332:src/mcu_msg_parser.c ****         if((*p < '0' || *p > '9')) {    // if non valid number, return with error
 1377              		.loc 1 332 0 discriminator 3
 1378 0075 440FB623 		movzbl	(%rbx), %r12d
 1379 0079 410FBEFC 		movsbl	%r12b, %edi
 1380 007d E8000000 		call	is_whitespace
 1380      00
 1381              	.LVL139:
 1382 0082 84C0     		testb	%al, %al
 1383 0084 7531     		jne	.L109
 332:src/mcu_msg_parser.c ****         if((*p < '0' || *p > '9')) {    // if non valid number, return with error
 1384              		.loc 1 332 0 discriminator 4
 1385 0086 4180FC3B 		cmpb	$59, %r12b
 1386 008a 742B     		je	.L109
 332:src/mcu_msg_parser.c ****         if((*p < '0' || *p > '9')) {    // if non valid number, return with error
 1387              		.loc 1 332 0 discriminator 5
 1388 008c 4180FC2E 		cmpb	$46, %r12b
 1389 0090 7425     		je	.L109
 333:src/mcu_msg_parser.c ****             return -1;
 1390              		.loc 1 333 0 is_stmt 1
 1391 0092 4183EC30 		subl	$48, %r12d
 1392 0096 4180FC09 		cmpb	$9, %r12b
 1393 009a 0F872501 		ja	.L121
 1393      0000
 332:src/mcu_msg_parser.c ****         if((*p < '0' || *p > '9')) {    // if non valid number, return with error
 1394              		.loc 1 332 0 discriminator 2
 1395 00a0 83C501   		addl	$1, %ebp
 1396              	.LVL140:
 1397 00a3 4883C301 		addq	$1, %rbx
 1398              	.LVL141:
 1399 00a7 EBB6     		jmp	.L108
 1400              	.LVL142:
 1401              	.L107:
 324:src/mcu_msg_parser.c ****         break;
 1402              		.loc 1 324 0
 1403 00a9 4883C301 		addq	$1, %rbx
 1404              	.LVL143:
 323:src/mcu_msg_parser.c ****             p++;
 1405              		.loc 1 323 0
 1406 00ad C744240C 		movl	$-1, 12(%rsp)
 1406      FFFFFFFF 
 325:src/mcu_msg_parser.c ****         
 1407              		.loc 1 325 0
 1408 00b5 EBA3     		jmp	.L105
 1409              	.LVL144:
 1410              	.L109:
 338:src/mcu_msg_parser.c ****     
GAS LISTING /tmp/ccdTSR3G.s 			page 37


 1411              		.loc 1 338 0
 1412 00b7 41C74500 		movl	$0x00000000, 0(%r13)
 1412      00000000 
 340:src/mcu_msg_parser.c ****         pf = p + 1;
 1413              		.loc 1 340 0
 1414 00bf 803B2E   		cmpb	$46, (%rbx)
 1415 00c2 7416     		je	.L126
 310:src/mcu_msg_parser.c **** 
 1416              		.loc 1 310 0
 1417 00c4 C6442407 		movb	$0, 7(%rsp)
 1417      00
 344:src/mcu_msg_parser.c ****     }
 1418              		.loc 1 344 0
 1419 00c9 41BC0000 		movl	$0, %r12d
 1419      0000
 1420              	.LVL145:
 1421              	.L111:
 347:src/mcu_msg_parser.c ****     while(i--) {
 1422              		.loc 1 347 0
 1423 00cf 4883EB01 		subq	$1, %rbx
 1424              	.LVL146:
 307:src/mcu_msg_parser.c ****     float mf = 0.1;
 1425              		.loc 1 307 0
 1426 00d3 BA010000 		movl	$1, %edx
 1426      00
 348:src/mcu_msg_parser.c ****         *res_val += (*p-- - '0') * m;
 1427              		.loc 1 348 0
 1428 00d8 EB3A     		jmp	.L112
 1429              	.LVL147:
 1430              	.L126:
 341:src/mcu_msg_parser.c ****         res++;
 1431              		.loc 1 341 0
 1432 00da 4C8D6301 		leaq	1(%rbx), %r12
 1433              	.LVL148:
 342:src/mcu_msg_parser.c ****     } else {
 1434              		.loc 1 342 0
 1435 00de C6442407 		movb	$1, 7(%rsp)
 1435      01
 1436 00e3 EBEA     		jmp	.L111
 1437              	.LVL149:
 1438              	.L115:
 349:src/mcu_msg_parser.c ****         m *= 10;
 1439              		.loc 1 349 0
 1440 00e5 0FBE03   		movsbl	(%rbx), %eax
 1441 00e8 83E830   		subl	$48, %eax
 1442 00eb 0FAFC2   		imull	%edx, %eax
 1443 00ee 660FEFC0 		pxor	%xmm0, %xmm0
 1444 00f2 F3480F2A 		cvtsi2ssq	%rax, %xmm0
 1444      C0
 1445 00f7 F3410F58 		addss	0(%r13), %xmm0
 1445      4500
 1446 00fd F3410F11 		movss	%xmm0, 0(%r13)
 1446      4500
 350:src/mcu_msg_parser.c ****         res++;
 1447              		.loc 1 350 0
 1448 0103 8D0492   		leal	(%rdx,%rdx,4), %eax
 1449 0106 8D1400   		leal	(%rax,%rax), %edx
GAS LISTING /tmp/ccdTSR3G.s 			page 38


 1450              	.LVL150:
 351:src/mcu_msg_parser.c ****     }
 1451              		.loc 1 351 0
 1452 0109 80442407 		addb	$1, 7(%rsp)
 1452      01
 1453              	.LVL151:
 348:src/mcu_msg_parser.c ****         *res_val += (*p-- - '0') * m;
 1454              		.loc 1 348 0
 1455 010e 89CD     		movl	%ecx, %ebp
 349:src/mcu_msg_parser.c ****         m *= 10;
 1456              		.loc 1 349 0
 1457 0110 488D5BFF 		leaq	-1(%rbx), %rbx
 1458              	.LVL152:
 1459              	.L112:
 348:src/mcu_msg_parser.c ****         *res_val += (*p-- - '0') * m;
 1460              		.loc 1 348 0
 1461 0114 8D4DFF   		leal	-1(%rbp), %ecx
 1462              	.LVL153:
 1463 0117 6685ED   		testw	%bp, %bp
 1464 011a 75C9     		jne	.L115
 308:src/mcu_msg_parser.c ****     int sign = 1;
 1465              		.loc 1 308 0
 1466 011c F30F1015 		movss	.LC0(%rip), %xmm2
 1466      00000000 
 1467 0124 F30F1154 		movss	%xmm2, 8(%rsp)
 1467      2408
 1468              	.LVL154:
 1469              	.L116:
 355:src/mcu_msg_parser.c ****         if(*pf < '0' || *pf > '9') {    // if non valid number, return with error
 1470              		.loc 1 355 0 discriminator 1
 1471 012a 4D85E4   		testq	%r12, %r12
 1472 012d 7465     		je	.L117
 355:src/mcu_msg_parser.c ****         if(*pf < '0' || *pf > '9') {    // if non valid number, return with error
 1473              		.loc 1 355 0 is_stmt 0 discriminator 2
 1474 012f 4C89E0   		movq	%r12, %rax
 1475 0132 4C29F0   		subq	%r14, %rax
 1476 0135 4939C7   		cmpq	%rax, %r15
 1477 0138 7E5A     		jle	.L117
 355:src/mcu_msg_parser.c ****         if(*pf < '0' || *pf > '9') {    // if non valid number, return with error
 1478              		.loc 1 355 0 discriminator 3
 1479 013a 410FB61C 		movzbl	(%r12), %ebx
 1479      24
 1480 013f 0FBEEB   		movsbl	%bl, %ebp
 1481 0142 89EF     		movl	%ebp, %edi
 1482 0144 E8000000 		call	is_whitespace
 1482      00
 1483              	.LVL155:
 1484 0149 84C0     		testb	%al, %al
 1485 014b 7547     		jne	.L117
 355:src/mcu_msg_parser.c ****         if(*pf < '0' || *pf > '9') {    // if non valid number, return with error
 1486              		.loc 1 355 0 discriminator 4
 1487 014d 80FB3B   		cmpb	$59, %bl
 1488 0150 7442     		je	.L117
 356:src/mcu_msg_parser.c ****             return -1;
 1489              		.loc 1 356 0 is_stmt 1
 1490 0152 83EB30   		subl	$48, %ebx
 1491 0155 80FB09   		cmpb	$9, %bl
GAS LISTING /tmp/ccdTSR3G.s 			page 39


 1492 0158 7772     		ja	.L123
 359:src/mcu_msg_parser.c ****         mf /= 10;
 1493              		.loc 1 359 0
 1494 015a 83ED30   		subl	$48, %ebp
 1495 015d 660FEFC0 		pxor	%xmm0, %xmm0
 1496 0161 F30F2AC5 		cvtsi2ss	%ebp, %xmm0
 1497 0165 F30F104C 		movss	8(%rsp), %xmm1
 1497      2408
 1498 016b F30F59C1 		mulss	%xmm1, %xmm0
 1499 016f F3410F58 		addss	0(%r13), %xmm0
 1499      4500
 1500 0175 F3410F11 		movss	%xmm0, 0(%r13)
 1500      4500
 360:src/mcu_msg_parser.c ****         res++; 
 1501              		.loc 1 360 0
 1502 017b F30F5E0D 		divss	.LC2(%rip), %xmm1
 1502      00000000 
 1503 0183 F30F114C 		movss	%xmm1, 8(%rsp)
 1503      2408
 1504              	.LVL156:
 361:src/mcu_msg_parser.c ****     }
 1505              		.loc 1 361 0
 1506 0189 80442407 		addb	$1, 7(%rsp)
 1506      01
 1507              	.LVL157:
 355:src/mcu_msg_parser.c ****         if(*pf < '0' || *pf > '9') {    // if non valid number, return with error
 1508              		.loc 1 355 0
 1509 018e 4983C401 		addq	$1, %r12
 1510              	.LVL158:
 1511 0192 EB96     		jmp	.L116
 1512              	.LVL159:
 1513              	.L117:
 364:src/mcu_msg_parser.c **** 
 1514              		.loc 1 364 0
 1515 0194 660FEFC0 		pxor	%xmm0, %xmm0
 1516 0198 F30F2A44 		cvtsi2ss	12(%rsp), %xmm0
 1516      240C
 1517 019e F3410F59 		mulss	0(%r13), %xmm0
 1517      4500
 1518 01a4 F3410F11 		movss	%xmm0, 0(%r13)
 1518      4500
 1519              	.LVL160:
 1520              	.L103:
 367:src/mcu_msg_parser.c **** 
 1521              		.loc 1 367 0
 1522 01aa 0FB64424 		movzbl	7(%rsp), %eax
 1522      07
 1523 01af 4883C410 		addq	$16, %rsp
 1524              	.LCFI86:
 1525              		.cfi_remember_state
 1526              		.cfi_def_cfa_offset 56
 1527 01b3 5B       		popq	%rbx
 1528              	.LCFI87:
 1529              		.cfi_def_cfa_offset 48
 1530 01b4 5D       		popq	%rbp
 1531              	.LCFI88:
 1532              		.cfi_def_cfa_offset 40
GAS LISTING /tmp/ccdTSR3G.s 			page 40


 1533 01b5 415C     		popq	%r12
 1534              	.LCFI89:
 1535              		.cfi_def_cfa_offset 32
 1536 01b7 415D     		popq	%r13
 1537              	.LCFI90:
 1538              		.cfi_def_cfa_offset 24
 1539              	.LVL161:
 1540 01b9 415E     		popq	%r14
 1541              	.LCFI91:
 1542              		.cfi_def_cfa_offset 16
 1543 01bb 415F     		popq	%r15
 1544              	.LCFI92:
 1545              		.cfi_def_cfa_offset 8
 1546 01bd C3       		ret
 1547              	.LVL162:
 1548              	.L119:
 1549              	.LCFI93:
 1550              		.cfi_restore_state
 313:src/mcu_msg_parser.c **** 
 1551              		.loc 1 313 0
 1552 01be C6442407 		movb	$-1, 7(%rsp)
 1552      FF
 1553 01c3 EBE5     		jmp	.L103
 1554              	.LVL163:
 1555              	.L121:
 334:src/mcu_msg_parser.c ****         }
 1556              		.loc 1 334 0
 1557 01c5 C6442407 		movb	$-1, 7(%rsp)
 1557      FF
 1558 01ca EBDE     		jmp	.L103
 1559              	.LVL164:
 1560              	.L123:
 357:src/mcu_msg_parser.c ****         }
 1561              		.loc 1 357 0
 1562 01cc C6442407 		movb	$-1, 7(%rsp)
 1562      FF
 1563              	.LVL165:
 1564 01d1 EBD7     		jmp	.L103
 1565              		.cfi_endproc
 1566              	.LFE40:
 1568              		.section	.text.mcu_msg_parser_get_string,"ax",@progbits
 1569              		.globl	mcu_msg_parser_get_string
 1571              	mcu_msg_parser_get_string:
 1572              	.LFB41:
 372:src/mcu_msg_parser.c ****     char *p = find_val(obj, key);
 1573              		.loc 1 372 0
 1574              		.cfi_startproc
 1575              	.LVL166:
 1576 0000 4883EC28 		subq	$40, %rsp
 1577              	.LCFI94:
 1578              		.cfi_def_cfa_offset 48
 372:src/mcu_msg_parser.c ****     char *p = find_val(obj, key);
 1579              		.loc 1 372 0
 1580 0004 64488B04 		movq	%fs:40, %rax
 1580      25280000 
 1580      00
 1581 000d 48894424 		movq	%rax, 24(%rsp)
GAS LISTING /tmp/ccdTSR3G.s 			page 41


 1581      18
 1582 0012 31C0     		xorl	%eax, %eax
 373:src/mcu_msg_parser.c ****     char qmark;
 1583              		.loc 1 373 0
 1584 0014 FF742448 		pushq	72(%rsp)
 1585              	.LCFI95:
 1586              		.cfi_def_cfa_offset 56
 1587 0018 FF742448 		pushq	72(%rsp)
 1588              	.LCFI96:
 1589              		.cfi_def_cfa_offset 64
 1590 001c FF742448 		pushq	72(%rsp)
 1591              	.LCFI97:
 1592              		.cfi_def_cfa_offset 72
 1593 0020 FF742448 		pushq	72(%rsp)
 1594              	.LCFI98:
 1595              		.cfi_def_cfa_offset 80
 1596 0024 E8000000 		call	find_val
 1596      00
 1597              	.LVL167:
 1598 0029 4883C420 		addq	$32, %rsp
 1599              	.LCFI99:
 1600              		.cfi_def_cfa_offset 48
 1601              	.LVL168:
 377:src/mcu_msg_parser.c ****         mcu_msg_destroy_string(&res);
 1602              		.loc 1 377 0
 1603 002d 4885C0   		testq	%rax, %rax
 1604 0030 7426     		je	.L136
 382:src/mcu_msg_parser.c **** 
 1605              		.loc 1 382 0
 1606 0032 0FB630   		movzbl	(%rax), %esi
 1607              	.LVL169:
 384:src/mcu_msg_parser.c ****         mcu_msg_destroy_string(&res);
 1608              		.loc 1 384 0
 1609 0035 4080FE27 		cmpb	$39, %sil
 1610 0039 0F95C1   		setne	%cl
 1611 003c 4080FE22 		cmpb	$34, %sil
 1612 0040 0F95C2   		setne	%dl
 1613 0043 84D1     		testb	%dl, %cl
 1614 0045 7524     		jne	.L137
 389:src/mcu_msg_parser.c ****     res.len = 0;
 1615              		.loc 1 389 0
 1616 0047 4883C001 		addq	$1, %rax
 1617              	.LVL170:
 1618 004b 48890424 		movq	%rax, (%rsp)
 390:src/mcu_msg_parser.c ****     while((p - obj.content.s) < obj.content.len && *p != qmark) {
 1619              		.loc 1 390 0
 1620 004f 66C74424 		movw	$0, 8(%rsp)
 1620      080000
 391:src/mcu_msg_parser.c ****         res.len++;
 1621              		.loc 1 391 0
 1622 0056 EB37     		jmp	.L131
 1623              	.LVL171:
 1624              	.L136:
 378:src/mcu_msg_parser.c ****         return res;
 1625              		.loc 1 378 0
 1626 0058 4889E7   		movq	%rsp, %rdi
 1627 005b E8000000 		call	mcu_msg_destroy_string
GAS LISTING /tmp/ccdTSR3G.s 			page 42


 1627      00
 1628              	.LVL172:
 379:src/mcu_msg_parser.c ****     }
 1629              		.loc 1 379 0
 1630 0060 488B0424 		movq	(%rsp), %rax
 1631 0064 488B5424 		movq	8(%rsp), %rdx
 1631      08
 1632 0069 EB44     		jmp	.L129
 1633              	.LVL173:
 1634              	.L137:
 385:src/mcu_msg_parser.c ****         return res;
 1635              		.loc 1 385 0
 1636 006b 4889E7   		movq	%rsp, %rdi
 1637 006e E8000000 		call	mcu_msg_destroy_string
 1637      00
 1638              	.LVL174:
 386:src/mcu_msg_parser.c ****     }
 1639              		.loc 1 386 0
 1640 0073 488B0424 		movq	(%rsp), %rax
 1641 0077 488B5424 		movq	8(%rsp), %rdx
 1641      08
 1642 007c EB31     		jmp	.L129
 1643              	.LVL175:
 1644              	.L133:
 392:src/mcu_msg_parser.c ****         p++;
 1645              		.loc 1 392 0
 1646 007e 0FB77C24 		movzwl	8(%rsp), %edi
 1646      08
 1647 0083 8D5701   		leal	1(%rdi), %edx
 1648 0086 66895424 		movw	%dx, 8(%rsp)
 1648      08
 393:src/mcu_msg_parser.c ****     }
 1649              		.loc 1 393 0
 1650 008b 4883C001 		addq	$1, %rax
 1651              	.LVL176:
 1652              	.L131:
 391:src/mcu_msg_parser.c ****         res.len++;
 1653              		.loc 1 391 0
 1654 008f 4889C1   		movq	%rax, %rcx
 1655 0092 482B4C24 		subq	64(%rsp), %rcx
 1655      40
 1656 0097 0FB75424 		movzwl	72(%rsp), %edx
 1656      48
 1657 009c 4839D1   		cmpq	%rdx, %rcx
 1658 009f 7D05     		jge	.L132
 391:src/mcu_msg_parser.c ****         res.len++;
 1659              		.loc 1 391 0 is_stmt 0 discriminator 1
 1660 00a1 403830   		cmpb	%sil, (%rax)
 1661 00a4 75D8     		jne	.L133
 1662              	.L132:
 395:src/mcu_msg_parser.c **** }
 1663              		.loc 1 395 0 is_stmt 1
 1664 00a6 488B0424 		movq	(%rsp), %rax
 1665              	.LVL177:
 1666 00aa 488B5424 		movq	8(%rsp), %rdx
 1666      08
 1667              	.LVL178:
GAS LISTING /tmp/ccdTSR3G.s 			page 43


 1668              	.L129:
 396:src/mcu_msg_parser.c **** 
 1669              		.loc 1 396 0
 1670 00af 488B7424 		movq	24(%rsp), %rsi
 1670      18
 1671 00b4 64483334 		xorq	%fs:40, %rsi
 1671      25280000 
 1671      00
 1672 00bd 7505     		jne	.L138
 1673 00bf 4883C428 		addq	$40, %rsp
 1674              	.LCFI100:
 1675              		.cfi_remember_state
 1676              		.cfi_def_cfa_offset 8
 1677 00c3 C3       		ret
 1678              	.L138:
 1679              	.LCFI101:
 1680              		.cfi_restore_state
 1681 00c4 E8000000 		call	__stack_chk_fail@PLT
 1681      00
 1682              	.LVL179:
 1683              		.cfi_endproc
 1684              	.LFE41:
 1686              		.section	.text.mcu_msg_string_hnd_create,"ax",@progbits
 1687              		.globl	mcu_msg_string_hnd_create
 1689              	mcu_msg_string_hnd_create:
 1690              	.LFB43:
 409:src/mcu_msg_parser.c **** 
 410:src/mcu_msg_parser.c **** 
 411:src/mcu_msg_parser.c **** mcu_msg_string_hnd_t mcu_msg_string_hnd_create(void (*print)(mcu_msg_string_t))
 412:src/mcu_msg_parser.c **** {
 1691              		.loc 1 412 0
 1692              		.cfi_startproc
 1693              	.LVL180:
 1694 0000 4889FA   		movq	%rdi, %rdx
 413:src/mcu_msg_parser.c ****     mcu_msg_string_hnd_t hnd;
 414:src/mcu_msg_parser.c ****     hnd.copy = mcu_msg_str_copy;
 415:src/mcu_msg_parser.c ****     hnd.print = print;
 416:src/mcu_msg_parser.c ****     return hnd;
 417:src/mcu_msg_parser.c **** }...
 1695              		.loc 1 417 0
 1696 0003 488D0500 		leaq	mcu_msg_str_copy(%rip), %rax
 1696      000000
 1697 000a C3       		ret
 1698              		.cfi_endproc
 1699              	.LFE43:
 1701              		.section	.rodata.cst4,"aM",@progbits,4
 1702              		.align 4
 1703              	.LC0:
 1704 0000 CDCCCC3D 		.long	1036831949
 1705              		.align 4
 1706              	.LC2:
 1707 0004 00002041 		.long	1092616192
 1708              		.text
 1709              	.Letext0:
 1710              		.file 2 "/usr/lib/gcc/x86_64-linux-gnu/7/include/stddef.h"
 1711              		.file 3 "/usr/include/x86_64-linux-gnu/bits/types.h"
 1712              		.file 4 "/usr/include/x86_64-linux-gnu/bits/libio.h"
GAS LISTING /tmp/ccdTSR3G.s 			page 44


 1713              		.file 5 "/usr/include/stdio.h"
 1714              		.file 6 "/usr/include/x86_64-linux-gnu/bits/sys_errlist.h"
 1715              		.file 7 "/usr/include/x86_64-linux-gnu/bits/stdint-intn.h"
 1716              		.file 8 "/usr/include/x86_64-linux-gnu/bits/stdint-uintn.h"
 1717              		.file 9 "inc/mcu_msg_parser.h"
GAS LISTING /tmp/ccdTSR3G.s 			page 45


DEFINED SYMBOLS
                            *ABS*:0000000000000000 mcu_msg_parser.c
     /tmp/ccdTSR3G.s:6      .text.is_ctrl_char:0000000000000000 is_ctrl_char
     /tmp/ccdTSR3G.s:134    .text.is_whitespace:0000000000000000 is_whitespace
     /tmp/ccdTSR3G.s:160    .text.is_valid_keyword_char:0000000000000000 is_valid_keyword_char
     /tmp/ccdTSR3G.s:204    .text.str_len:0000000000000000 str_len
     /tmp/ccdTSR3G.s:232    .text.skip_internal_str:0000000000000000 skip_internal_str
     /tmp/ccdTSR3G.s:289    .text.find_keyword:0000000000000000 find_keyword
     /tmp/ccdTSR3G.s:508    .text.find_val:0000000000000000 find_val
     /tmp/ccdTSR3G.s:626    .text.mcu_msg_str_copy:0000000000000000 mcu_msg_str_copy
     /tmp/ccdTSR3G.s:654    .text.mcu_msg_destroy_string:0000000000000000 mcu_msg_destroy_string
     /tmp/ccdTSR3G.s:671    .text.mcu_msg_destroy:0000000000000000 mcu_msg_destroy
     /tmp/ccdTSR3G.s:700    .text.mcu_msg_destroy_obj:0000000000000000 mcu_msg_destroy_obj
     /tmp/ccdTSR3G.s:729    .text.mcu_msg_get:0000000000000000 mcu_msg_get
     /tmp/ccdTSR3G.s:916    .text.mcu_msg_parser_get_obj:0000000000000000 mcu_msg_parser_get_obj
     /tmp/ccdTSR3G.s:1100   .text.mcu_msg_parser_get_int:0000000000000000 mcu_msg_parser_get_int
     /tmp/ccdTSR3G.s:1290   .text.mcu_msg_parser_get_float:0000000000000000 mcu_msg_parser_get_float
     /tmp/ccdTSR3G.s:1571   .text.mcu_msg_parser_get_string:0000000000000000 mcu_msg_parser_get_string
     /tmp/ccdTSR3G.s:1689   .text.mcu_msg_string_hnd_create:0000000000000000 mcu_msg_string_hnd_create
     /tmp/ccdTSR3G.s:1703   .rodata.cst4:0000000000000000 .LC0
     /tmp/ccdTSR3G.s:1706   .rodata.cst4:0000000000000004 .LC2

UNDEFINED SYMBOLS
_GLOBAL_OFFSET_TABLE_
__stack_chk_fail
